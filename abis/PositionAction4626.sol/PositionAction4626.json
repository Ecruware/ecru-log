{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "flashlender_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "swapActions_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "PoolAction_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Action__revertBytes_emptyRevertBytes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toInt256_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__borrow_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidResidualRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__deposit_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onCreditFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onlyDelegatecall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__repay_InvalidAuxSwap",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "debug_log",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS_CREDIT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cdm",
      "outputs": [
        {
          "internalType": "contract ICDM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Protocol",
                  "name": "protocol",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "minOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct PoolActionParams",
              "name": "auxAction",
              "type": "tuple"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "subCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "residualRecipient",
          "type": "address"
        }
      ],
      "name": "decreaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "depositAndBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flashlender",
      "outputs": [
        {
          "internalType": "contract IFlashlender",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Protocol",
                  "name": "protocol",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "minOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct PoolActionParams",
              "name": "auxAction",
              "type": "tuple"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "upFrontToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "upFrontAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "increaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "contract IMinter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        },
        {
          "internalType": "bool[]",
          "name": "delegateCall",
          "type": "bool[]"
        }
      ],
      "name": "multisend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onCreditFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolAction",
      "outputs": [
        {
          "internalType": "contract PoolAction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "self",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IStablecoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapAction",
      "outputs": [
        {
          "internalType": "contract SwapAction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "withdrawAndRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "529:6576:125:-:0;;;978:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1070:12;1084;1098:11;5236:12:123;-1:-1:-1;;;;;5209:40:123;;;-1:-1:-1;;;;;5209:40:123;;;;;5272:11;;-1:-1:-1;;;;;5272:22:123;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5259:37:123;;;-1:-1:-1;;;;;5259:37:123;;;;;5315:11;;-1:-1:-1;;;;;5315:18:123;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5306:29:123;;;-1:-1:-1;;;;;5306:29:123;;;;;5351:11;;-1:-1:-1;;;;;5351:15:123;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5345:23:123;;;;;;;5393:4;5378:20;;5408:36;;;;;5454;;;;;5529:6;;5500:43;;-1:-1:-1;;;5500:43:123;;1680:32:194;;5500:43:123;;;1662:51:194;5538:4:123;1729:18:194;;;1722:50;5345:23:123;5500:20;;1635:18:194;;5500:43:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5553:3:123;;:40;;-1:-1:-1;;;5553:40:123;;-1:-1:-1;;;;;1680:32:194;;;5553:40:123;;;1662:51:194;5588:4:123;1729:18:194;;;1722:50;5553:20:123;;;;-1:-1:-1;5553:20:123;;-1:-1:-1;1635:18:194;;5553:40:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5123:477;;;978:135:125;;;529:6576;;14:131:194;-1:-1:-1;;;;;89:31:194;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:519::-;238:6;246;254;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;355:9;349:16;374:31;399:5;374:31;:::i;:::-;474:2;459:18;;453:25;424:5;;-1:-1:-1;487:33:194;453:25;487:33;:::i;:::-;591:2;576:18;;570:25;539:7;;-1:-1:-1;604:33:194;570:25;604:33;:::i;:::-;656:7;646:17;;;150:519;;;;;:::o;674:272::-;765:6;818:2;806:9;797:7;793:23;789:32;786:52;;;834:1;831;824:12;786:52;866:9;860:16;885:31;910:5;885:31;:::i;:::-;935:5;674:272;-1:-1:-1;;;674:272:194:o;1494:284::-;529:6576:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "529:6576:125:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8595:464:123;;;;;;:::i;:::-;;:::i;:::-;;3783:31;;;;;;;;;;;;:::i;:::-;;;;;;;;3416:100;;3466:50;3416:100;;;;;1790:25:194;;;1778:2;1763:18;3416:100:123;1644:177:194;1101:76:130;;1135:42;1101:76;;21155:2727:123;;;;;;:::i;:::-;;:::i;18852:2128::-;;;;;;:::i;:::-;;:::i;14784:1737::-;;;;;;:::i;:::-;;:::i;11492:659::-;;;;;;:::i;:::-;;:::i;9915:426::-;;;;;;:::i;:::-;;:::i;9257:401::-;;;;;;:::i;:::-;;:::i;3865:29::-;;;;;3322:88;;3365:45;3322:88;;12458:738;;;;;;:::i;:::-;;:::i;3940:38::-;;;;;3556:25;;;;;4024:38;;;;;3706:39;;;;;17196:1310;;;;;;:::i;:::-;;:::i;3626:41::-;;;;;13488:554;;;;;;:::i;:::-;;:::i;10642:598::-;;;;;;:::i;:::-;;:::i;8595:464::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;8799:18:::1;8820:47;8829:5;8836:16;8854:12;8820:8;:47::i;:::-;8799:68;;8887:5;-1:-1:-1::0;;;;;8877:40:123::1;;8931:8;8961:4;8988;9007:20;9016:10;9007:8;:20::i;:::-;9041:1;8877:175;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8789:270;8595:464:::0;;;;:::o;21155:2727::-;21319:7;21342:10;-1:-1:-1;;;;;21364:11:123;21342:34;;21338:97;;21385:50;;-1:-1:-1;;;21385:50:123;;;;;;;;;;;21338:97;21459:30;;;21576:48;;;;21587:4;21576:48;:::i;:::-;21445:179;;;;;;21732:21;21756:136;21787:11;:17;;;21818:11;:20;;;21852:11;:23;;;:30;;;21756:17;:136::i;:::-;21959:17;;;;21938:45;;-1:-1:-1;;;21938:45:123;;-1:-1:-1;;;;;17508:32:194;;;21938:45:123;;;17490:51:194;21978:4:123;17557:18:194;;;17550:50;21732:160:123;;-1:-1:-1;21938:3:123;:20;;;;17463:18:194;;21938:45:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22003:11;:17;;;-1:-1:-1;;;;;21993:52:123;;22059:11;:20;;;22101:4;22128;22148:23;22157:13;22148:8;:23::i;:::-;22147:24;;;:::i;:::-;22186:23;22195:13;22186:8;:23::i;:::-;22185:24;;;:::i;:::-;21993:226;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;22250:17:123;;;;22229:46;;-1:-1:-1;;;22229:46:123;;-1:-1:-1;;;;;17508:32:194;;;22229:46:123;;;17490:51:194;22269:5:123;17557:18:194;;;17550:50;22229:3:123;:20;;;;;;17463:18:194;;22229:46:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22353:27;22383:44;22400:11;22413:13;22383:16;:44::i;:::-;22353:74;;22438:21;22462:189;22497:10;22562:24;;;22604:11;:23;;;22522:119;;;;;;;;:::i;:::-;;;;-1:-1:-1;;22522:119:123;;;;;;;;;;;;;;-1:-1:-1;;;;;22522:119:123;-1:-1:-1;;;;;;22522:119:123;;;;;;;;;;22462:13;:189::i;:::-;22438:213;;22661:20;22695:8;22684:31;;;;;;;;;;;;:::i;:::-;22661:54;-1:-1:-1;22801:22:123;22826:34;22661:54;22826:19;:34;:::i;:::-;22977:23;;;;;:30;;22941:67;;-1:-1:-1;;;22941:67:123;;22801:59;;-1:-1:-1;;;;;;22941:10:123;:18;;;;:67;;22968:6;;22977:30;22941:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23046:23:123;;;;;:30;;23018:59;;-1:-1:-1;;;23018:59:123;;-1:-1:-1;;;;;23018:6:123;:12;;;;:59;;23039:4;;23018:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23215:1;23198:14;:18;23194:641;;;23313:19;;;;:27;;;-1:-1:-1;;;;;23313:41:123;;23309:516;;23374:233;23417:10;23498:24;;;23548:11;:19;;;23450:139;;;;;;;;:::i;23374:233::-;;23309:516;;;23730:23;;;;:31;;;23723:87;;-1:-1:-1;;;;;23723:52:123;23776:17;23795:14;23723:52;:87::i;:::-;-1:-1:-1;3466:50:123;;21155:2727;-1:-1:-1;;;;;;;;;;;;;21155:2727:123:o;18852:2128::-;19037:7;19060:10;-1:-1:-1;;;;;19082:11:123;19060:34;;19056:91;;19103:44;;-1:-1:-1;;;19103:44:123;;;;;;;;;;;19056:91;19171:30;;;19283:49;;;;19294:4;19283:49;:::i;:::-;19431:19;;;;:27;;;19157:175;;-1:-1:-1;19157:175:123;;-1:-1:-1;19157:175:123;-1:-1:-1;;;;;;19431:41:123;;19427:298;;19488:24;19515:135;19554:10;19590:24;;;19616:11;:19;;;19567:69;;;;;;;;:::i;19515:135::-;19488:162;;19691:11;19680:34;;;;;;;;;;;;:::i;:::-;19664:50;;19474:251;19427:298;19776:21;19800:131;19835:10;19871:24;;;19897:11;:23;;;19848:73;;;;;;;;:::i;19800:131::-;19776:155;;19941:21;19976:8;19965:31;;;;;;;;;;;;:::i;:::-;19941:55;;20073:18;20094:73;20111:11;20124:12;20138:13;20153;20094:16;:73::i;:::-;20073:94;;20260:21;20284:112;20315:11;:17;;;20334:11;:20;;;20356:11;:23;;;:30;;;20284:17;:112::i;:::-;20260:136;;20452:11;:17;;;-1:-1:-1;;;;;20442:52:123;;20508:11;:20;;;20550:4;20577;20596:20;20605:10;20596:8;:20::i;:::-;20630:23;20639:13;20630:8;:23::i;:::-;20442:221;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;20756:23:123;;;;;:30;;20729:58;;-1:-1:-1;;;20729:58:123;;:6;-1:-1:-1;;;;;20729:11:123;;;;:58;;20749:4;;20729:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;20908:23:123;;;;;:30;;20867:72;;-1:-1:-1;;;20867:72:123;;:10;-1:-1:-1;;;;;20867:18:123;;;;:72;;20894:11;;20867:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3365:45:123;;18852:2128;-1:-1:-1;;;;;;;;;;;;;;18852:2128:123:o;14784:1737::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;15105:17:::1;15069:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:53;;;;;;;;:::i;:::-;;;:123;;;-1:-1:-1::0;;;;;;15181:10:123::1;15138:54;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:31;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15138:54:123::1;;;15069:123;:180;;;-1:-1:-1::0;;;;;;15245:4:123::1;15208:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15208:41:123::1;;;15069:180;15065:252;;;15267:50;;-1:-1:-1::0;;;15267:50:123::1;;;;;;;;;;;15065:252;15413:1;15374:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15374:41:123::1;;;:230;;;;-1:-1:-1::0;15465:17:123::1;15433:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;:108;;;-1:-1:-1::0;;;;;;15498:43:123;::::1;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15498:43:123::1;;;15433:108;:161;;;-1:-1:-1::0;;;;;;15590:4:123::1;15557:37;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:29;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15557:37:123::1;;;15433:161;15370:289;;;15613:46;;-1:-1:-1::0;;;15613:46:123::1;;;;;;;;;;;15370:289;15742:17:::0;;15738:337:::1;;15805:4;-1:-1:-1::0;;;;;15779:31:123;::::1;::::0;15775:290:::1;;15830:54;-1:-1:-1::0;;;;;15830:33:123;::::1;15864:4;15870:13:::0;15830:33:::1;:54::i;:::-;15775:290;;;15972:78;15986:12:::0;16000:14;16016:4:::1;16022:13:::0;15972:78:::1;;::::0;;::::1;::::0;::::1;16037:12:::0;15972:78:::1;:::i;:::-;:13;:78::i;:::-;16128:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16116:47:123::1;;16164:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;16186:4;16192;16116:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;16207:11:123::1;:21;::::0;-1:-1:-1;16207:21:123::1;::::0;-1:-1:-1;16264:4:123::1;16291:10;16316:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;16371:11;16384:12;16398:13;16360:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16207:215;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;16444:17:123::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16432:47:123::1;;16480:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;16502:4;16508:5;16432:82;;;;;;;;;;;;;;;;;:::i;11492:659::-:0;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;11749:18:::1;11770:47;11779:5;11786:16;11804:12;11770:8;:47::i;:::-;11749:68:::0;-1:-1:-1;11827:21:123::1;11851:55;11869:5:::0;11876:8;11886:19;::::1;11851:17;:55::i;:::-;11827:79;;11926:5;-1:-1:-1::0;;;;;11916:40:123::1;;11970:8;12000:4;12027;12046:20;12055:10;12046:8;:20::i;:::-;12080:23;12089:13;12080:8;:23::i;:::-;11916:197;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12123:21;12131:12;12123:7;:21::i;:::-;11739:412;;11492:659:::0;;;;;:::o;9915:426::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;10036:21:::1;10060:55;10078:5:::0;10085:8;10095:19;::::1;10060:17;:55::i;:::-;10036:79;;10135:5;-1:-1:-1::0;;;;;10125:40:123::1;;10179:8;10209:4;10236;10255:1;10270:23;10279:13;10270:8;:23::i;:::-;10125:178;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10313:21;10321:12;10313:7;:21::i;:::-;10026:315;9915:426:::0;;;:::o;9257:401::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;9428:5:::1;-1:-1:-1::0;;;;;9418:40:123::1;;9472:8;9502:4;9529;9549:33;9558:16;:23;;;9549:8;:33::i;:::-;9548:34;;;:::i;:::-;9596:1;9418:189;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9617:34;9627:5;9634:16;9617:9;:34::i;12458:738::-:0;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;12715:51:::1;12722:8;12732:5;12739:12;12753;12715:6;:51::i;:::-;12776:65;::::0;-1:-1:-1;;;12776:65:123;;-1:-1:-1;;;;;12796:3:123::1;12776:42;::::0;::::1;::::0;:65:::1;::::0;12819:8;;12829:5;;12836:4:::1;::::0;12776:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12861:5;-1:-1:-1::0;;;;;12851:40:123::1;;12905:8;12935:4;12962;12982:33;12991:16;:23;;;12982:8;:33::i;:::-;12981:34;;;:::i;:::-;13030:29;13039:19:::0;::::1;13030:8;:29::i;:::-;13029:30;;;:::i;:::-;12851:218;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13079:66:123::1;::::0;-1:-1:-1;;;13079:66:123;;-1:-1:-1;;;;;13099:3:123::1;13079:42;::::0;-1:-1:-1;13079:42:123::1;::::0;-1:-1:-1;13079:66:123::1;::::0;13122:8;;13132:5;;13139::::1;::::0;13079:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13155:34;13165:5;13172:16;13155:9;:34::i;:::-;;12458:738:::0;;;;;:::o;17196:1310::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;17446:18:::1;17410:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:54;;;;;;;;:::i;:::-;;;:111;;;-1:-1:-1::0;;;;;;17517:4:123::1;17480:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17480:41:123::1;;;17410:111;17406:183;;;17539:50;;-1:-1:-1::0;;;17539:50:123::1;;;;;;;;;;;17406:183;17685:1;17646:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17646:41:123::1;;;:118;;;;-1:-1:-1::0;17737:17:123::1;17705:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;17646:118;17642:177;;;17773:46;;-1:-1:-1::0;;;17773:46:123::1;;;;;;;;;;;17642:177;17952:1;17913:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17913:41:123::1;;:88;;;;-1:-1:-1::0;;;;;;17970:31:123;::::1;::::0;17913:88:::1;17909:166;;;18019:56;;-1:-1:-1::0;;;18019:56:123::1;;;;;;;;;;;17909:166;18136:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;18124:47:123::1;;18172:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;18194:4;18200;18124:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;18215:11:123::1;:27;::::0;-1:-1:-1;18215:27:123::1;::::0;-1:-1:-1;18277:4:123::1;18296:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;18351:11;18364:13;18379:17;18340:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18215:192;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;18429:17:123::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;18417:47:123::1;;18465:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;18487:4;18493:5;18417:82;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;13488:554:::0;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;13677:7;13654:20:::1;13701:335;13721:12;13717:1;:16;13701:335;;;13754:12;;13767:1;13754:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13750:245;;;13789:34;13803:7;;13811:1;13803:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13815:4;;13820:1;13815:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13789:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;13789:13:123::1;::::0;-1:-1:-1;;;13789:34:123:i:1;:::-;;13750:245;;;13863:12;13877:21:::0;13902:7:::1;;13910:1;13902:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13902:15:123::1;13918:4;;13923:1;13918:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13902:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13862:64;;;;13949:7;13944:36;;13958:22;13971:8;13958:12;:22::i;:::-;13844:151;;13750:245;14020:3;;13701:335;;;;13644:398;13488:554:::0;;;;;;:::o;10642:598::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;10836:51:::1;10843:8;10853:5;10860:12;10874;10836:6;:51::i;:::-;10897:65;::::0;-1:-1:-1;;;10897:65:123;;-1:-1:-1;;;;;10917:3:123::1;10897:42;::::0;::::1;::::0;:65:::1;::::0;10940:8;;10950:5;;10957:4:::1;::::0;10897:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10982:5;-1:-1:-1::0;;;;;10972:40:123::1;;11026:8;11056:4;11083;11102:1;11118:29;11127:12;:19;;;11118:8;:29::i;:::-;11117:30;;;:::i;:::-;10972:185;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11167:66:123::1;::::0;-1:-1:-1;;;11167:66:123;;-1:-1:-1;;;;;11187:3:123::1;11167:42;::::0;-1:-1:-1;11167:42:123::1;::::0;-1:-1:-1;11167:66:123::1;::::0;11210:8;;11220:5;;11227::::1;::::0;11167:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;24331:992:::0;24492:7;24528:23;;;;24492:7;24566:24;;;;24528:16;24566:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24566:46:123;;24562:682;;24668:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;24632:64:123;:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24632:64:123;;;:135;;;-1:-1:-1;24762:4:123;24716:24;;;;:16;:24;:::i;:::-;:34;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24716:51:123;;;24632:135;24628:201;;;24789:40;;-1:-1:-1;;;24789:40:123;;;;;;;;;;;24628:201;24852:89;24869:31;;;;;;;;:::i;:::-;24902:24;;;;:16;:24;:::i;:::-;24928:12;24852:16;:89::i;:::-;24843:98;;24562:682;;;25005:4;24962:31;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24962:48:123;;24958:286;;25026:207;25057:28;;;;:16;:28;:::i;:::-;25103:31;;;;;;;;:::i;:::-;25160:4;25183:6;25026:207;;;;;;;25207:12;25026:207;:::i;:::-;25261:55;25272:5;25279:28;;;;:16;:28;:::i;:::-;25309:6;25261:10;:55::i;:::-;25254:62;;;24331:992;;;;;;:::o;509:133:182:-;552:6;-1:-1:-1;;;570:1:182;:13;566:51;;592:25;;-1:-1:-1;;;592:25:182;;;;;;;;;;;566:51;-1:-1:-1;637:1:182;509:133::o;30552:332:123:-;30679:18;30710:22;30734:21;30770:5;-1:-1:-1;;;;;30760:27:123;;30788:8;30760:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30709:88;;;;;30820:57;30840:4;30846:15;30863:13;30820:19;:57::i;:::-;30807:70;30552:332;-1:-1:-1;;;;;;30552:332:123:o;6247:856:125:-;6377:16;6448:27;6488:11;:17;;;-1:-1:-1;;;;;6478:37:125;;6524:4;6531:13;6478:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6448:97;;6561:39;6580:19;6561:39;;;;;32711:2:194;32693:21;;;32750:1;32730:18;;;32723:29;-1:-1:-1;;;32783:2:194;32768:18;;32761:36;32864:4;32849:20;;32842:36;;;;32829:3;32814:19;;32481:403;6561:39:125;;;;;;;;6713:11;:27;;;-1:-1:-1;;;;;6704:44:125;;6749:19;6778:4;6793;6704:95;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6693:106;;6814:11;:21;;;:26;;;:33;6851:1;6814:38;6810:287;;6868:21;6892:137;6931:10;6967:24;;;6993:11;:21;;;6944:71;;;;;;;;:::i;6892:137::-;6868:161;;7066:8;7055:31;;;;;;;;;;;;:::i;:::-;7044:42;;6854:243;6810:287;6395:708;6247:856;;;;:::o;767:241:120:-;839:12;864;878:23;905:2;-1:-1:-1;;;;;905:15:120;921:4;905:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:63;;;;941:7;936:38;;950:24;963:10;950:12;:24::i;:::-;991:10;-1:-1:-1;;767:241:120;;;;;:::o;941:175:62:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1050:58:62;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:62;-1:-1:-1;;;;;;1050:58:62;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;3553:2301:125:-;3744:7;3763:25;3798:27;3828:13;3798:43;;3886:12;-1:-1:-1;;;;;3855:43:125;:11;:27;;;-1:-1:-1;;;;;3855:43:125;;:88;;;;-1:-1:-1;3902:19:125;;;;:27;;;-1:-1:-1;;;;;3902:41:125;;3855:88;3851:360;;;4063:13;4043:33;;3851:360;;;4164:36;4187:13;4164:36;;:::i;:::-;;;3851:360;4221:23;4256:11;:27;;;-1:-1:-1;;;;;4247:43:125;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4221:71;;4346:11;:21;;;:26;;;:33;4383:1;4346:38;4342:1008;;4444:23;;;;4420:48;;-1:-1:-1;;;4420:48:125;;4400:17;;-1:-1:-1;;;;;4420:10:125;:23;;;;:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4540:19;;;;:27;;;4400:68;;-1:-1:-1;4509:12:125;;-1:-1:-1;;;;;4540:41:125;;4536:142;;4643:19;;;;4619:44;;-1:-1:-1;;;4619:44:125;;-1:-1:-1;;;;;4619:10:125;:23;;;;:44;;4643:19;4619:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4600:63;;4536:142;4755:40;4798:10;-1:-1:-1;;;;;4798:26:125;;4842:11;:21;;;4882:9;4910:16;4945:13;4977;5008:15;4798:239;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4798:239:125;;;;;;;;;;;;:::i;:::-;4755:282;;5052:132;5091:10;5127:24;;;5153:16;5104:66;;;;;;;;:::i;5052:132::-;-1:-1:-1;5291:48:125;;-1:-1:-1;;;5291:48:125;;-1:-1:-1;;;;;5291:33:125;;;;;:48;;5333:4;;5291:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5269:70;;4386:964;;;4342:1008;5439:27;;;;5402:86;;-1:-1:-1;;;;;5402:36:125;;;5468:19;5402:36;:86::i;:::-;5529:27;;;;;5520:81;;-1:-1:-1;;;5520:81:125;;;;;36872:25:194;;;5595:4:125;36913:18:194;;;36906:60;5604:17:125;;-1:-1:-1;;;;;5520:45:125;;;;36845:18:194;;5520:81:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:101;;;;:::i;:::-;5719:17;;;;5677:27;;;;5498:123;;-1:-1:-1;5670:88:125;;-1:-1:-1;;;;;5670:48:125;;5498:123;5670:48;:88::i;:::-;5785:11;:17;;;-1:-1:-1;;;;;5775:36:125;;5820:4;5827:19;5775:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5768:79;;;;;3553:2301;;;;;;;:::o;1455:1279:130:-;1623:20;1600:19;;:43;;;;;;;;:::i;:::-;;1596:1132;;1135:42;-1:-1:-1;;;;;1721:46:130;;1785:262;;;;;;;;1856:84;;;;;;;;1901:5;-1:-1:-1;;;;;1856:84:130;;;;;1916:6;:21;;;1856:84;;;1785:262;;;;1969:6;:12;;;1785:262;;;;2013:6;:15;;;1785:262;;;2065:80;;;;;;;;2115:2;-1:-1:-1;;;;;2065:80:130;;;;;2136:6;2065:80;;;2163:4;2198:6;:8;;;2208:6;:8;;;2225:6;:8;;;2218:16;;2185:50;;;;;;;;;37160:19:194;;;37204:2;37195:12;;37188:28;;;;-1:-1:-1;;;;;;37246:26:194;37241:2;37232:12;;37225:48;37298:2;37289:12;;36977:330;2185:50:130;;;;;;;;;;;;;1721:551;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:1132;;;2316:19;2293;;:42;;;;;;;;:::i;:::-;;2289:439;;2406:110;2437:4;2443:2;2447:6;:21;;;2470:6;:15;;;2487:6;:8;;;2497:6;:8;;;2507:6;:8;;;2419:5;-1:-1:-1;;;;;2406:30:130;;;:110;;;;;;;;;;:::i;:::-;2530:48;-1:-1:-1;;;;;2530:30:130;;2561:4;2567:2;2571:6;2530:30;:48::i;:::-;2289:439;;;2669:48;-1:-1:-1;;;;;2669:30:130;;2700:4;2706:2;2710:6;2669:30;:48::i;:::-;1455:1279;;;;;:::o;26536:940:123:-;26609:80;;-1:-1:-1;;;26609:80:123;;-1:-1:-1;;;;;26629:3:123;26609:42;;;;:80;;26660:4;;26675:6;;26684:4;;26609:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26743:1:123;;-1:-1:-1;26703:20:123;;-1:-1:-1;;26703:20:123;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26703:42:123;;26699:771;;-1:-1:-1;;;;;26761:6:123;:11;;26773:21;;;;;;;;:::i;:::-;26761:55;;-1:-1:-1;;;;;;26761:55:123;;;;;;;;;;26796:19;;;26761:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26830:81:123;;-1:-1:-1;;;26830:81:123;;-1:-1:-1;;;;;26850:3:123;26830:42;;-1:-1:-1;26830:42:123;;-1:-1:-1;26830:81:123;;26881:4;;26896:6;;26905:5;;26830:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26699:771;26943:47;;-1:-1:-1;;;26943:47:123;;-1:-1:-1;;;;;26943:6:123;:11;;;;:47;;26963:4;;26970:19;;;26943:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27004:81:123;;-1:-1:-1;;;27004:81:123;;-1:-1:-1;;;;;27024:3:123;27004:42;;-1:-1:-1;27004:42:123;;-1:-1:-1;27004:81:123;;27055:4;;27070:6;;27079:5;;27004:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;27176:10:123;27136:51;;-1:-1:-1;27136:20:123;;-1:-1:-1;27136:20:123;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;27136:51:123;;27132:103;;27196:39;;-1:-1:-1;;;27196:39:123;;;;;;;;;;;27132:103;27249:210;27288:10;-1:-1:-1;;;27407:20:123;;;;:12;:20;:::i;:::-;27317:128;;;;;;;;:::i;27249:210::-;;26699:771;26536:940;:::o;25595:798::-;25691:7;;25731:73;25743:5;25750:28;;;;:16;:28;:::i;:::-;25780:16;:23;;;25731:11;:73::i;:::-;25710:94;-1:-1:-1;25922:1:123;25878:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25878:46:123;;25874:486;;25940:214;25979:10;-1:-1:-1;;;26098:24:123;;;;:16;:24;:::i;25940:214::-;;25874:486;;;26255:94;26305:31;;;;;;;;:::i;:::-;26338:10;26262:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;26255:49:123;;:94;:49;:94::i;27770:1319::-;28007:14;;28035:20;;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28035:42:123;;28031:896;;28140:4;28098:20;;;;:12;:20;:::i;:::-;:30;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28098:47:123;;28094:98;;28154:38;;-1:-1:-1;;;28154:38:123;;;;;;;;;;;28094:98;28216:75;28233:21;;;;;;;;:::i;:::-;28256:20;;;;:12;:20;:::i;:::-;28278:12;28216:16;:75::i;:::-;28207:84;;28031:896;;;28383:22;28407:21;28443:5;-1:-1:-1;;;;;28433:27:123;;28461:8;28433:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28382:88:123;;-1:-1:-1;28382:88:123;-1:-1:-1;28382:88:123;28493:42;-1:-1:-1;;;;;28493:42:123;;28515:19;;28493:4;:42::i;:::-;:58;;;;:::i;:::-;28484:67;-1:-1:-1;28603:4:123;28570:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28570:38:123;;28566:351;;28690:212;28733:10;28766:21;;;;;;;;:::i;:::-;28817:4;28844:6;28690:212;;;;;;;28872:12;28690:212;:::i;:::-;28309:618;;28031:896;28994:43;;-1:-1:-1;;;28994:43:123;;-1:-1:-1;;;;;28994:10:123;:18;;;;:43;;29021:6;;29030;;28994:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;29047:35:123;;-1:-1:-1;;;29047:35:123;;-1:-1:-1;;;;;29047:6:123;:12;;;;:35;;29068:4;;29075:6;;29047:35;;;:::i;1192:255:120:-;1263:13;;:18;1259:127;;1354:6;1348:13;1339:6;1335:2;1331:15;1324:38;1259:127;1402:38;;-1:-1:-1;;;1402:38:120;;;;;;;;;;;29185:952:123;29343:17;29372:21;29396:241;29431:10;29496:35;;;29549:6;29573:12;29603:10;29456:171;;;;;;;;;;:::i;29396:241::-;29372:265;;29647:17;29678:8;29667:31;;;;;;;;;;;;:::i;:::-;29647:51;-1:-1:-1;29820:18:123;29797:19;;;;;;;;:::i;:::-;:41;;;;;;;;:::i;:::-;;29793:338;;29854:17;29874:28;29893:9;29874:16;;;;:28;:::i;:::-;29854:48;-1:-1:-1;29920:13:123;;29916:110;;29953:58;29993:6;30001:9;29960:18;;;;;;;;:::i;29953:58::-;30051:10;:17;;;30039:29;;29840:239;29793:338;;;30111:9;30099:21;;29793:338;29362:775;;29185:952;;;;;:::o;1578:645:125:-;1669:7;1688:18;1727:5;-1:-1:-1;;;;;1717:22:125;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1688:54;;1871:10;-1:-1:-1;;;;;1864:17:125;:3;-1:-1:-1;;;;;1864:17:125;;1860:236;;1897:18;1927:10;-1:-1:-1;;;;;1918:26:125;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1897:49;-1:-1:-1;1960:51:125;-1:-1:-1;;;;;1960:31:125;;1992:10;2004:6;1960:31;:51::i;:::-;2034;;-1:-1:-1;;;2034:51:125;;;;;36872:25:194;;;2079:4:125;36913:18:194;;;36906:60;-1:-1:-1;;;;;2034:28:125;;;;;36845:18:194;;2034:51:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2025:60;;1883:213;1860:236;2106:46;-1:-1:-1;;;;;2106:31:125;;2138:5;2145:6;2106:31;:46::i;:::-;2169:47;;-1:-1:-1;;;2169:47:125;;-1:-1:-1;;;;;2169:24:125;;;;;:47;;2202:4;;2209:6;;2169:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1940:373:88:-;2058:18;2097:43;2102:20;2109:13;2102:4;:20;:::i;:::-;2124:15;-1:-1:-1;;;;;2097:43:88;:4;:43::i;:::-;2084:56;;2262:4;2202:57;2216:10;2228:15;2245:13;2202;:57::i;:::-;:64;2198:113;;;2290:12;;1940:373;;;;;:::o;5173:642:62:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:62;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:62;;40155:2:194;5697:111:62;;;40137:21:194;40194:2;40174:18;;;40167:30;40233:34;40213:18;;;40206:62;-1:-1:-1;;;40284:18:194;;;40277:40;40334:19;;5697:111:62;;;;;;;;3756:410;3843:25;3894:22;;;3918:7;3927:5;3871:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3871:62:62;;;;;;;;;;;;;;-1:-1:-1;;;;;3871:62:62;-1:-1:-1;;;;;;3871:62:62;;;;;;;;;;;-1:-1:-1;3949:44:62;3973:5;3871:62;3949:23;:44::i;:::-;3944:216;;4036:58;;-1:-1:-1;;;;;40562:32:194;;4036:58:62;;;40544:51:194;4092:1:62;40611:18:194;;;40604:45;4009:86:62;;4029:5;;-1:-1:-1;;;4059:22:62;40517:18:194;;4036:58:62;40364:291:194;4009:86:62;4109:40;4129:5;4136:12;4109:19;:40::i;4318:472::-;4565:19;;-1:-1:-1;;;4565:19:62;;4543;;-1:-1:-1;;;;;4565:12:62;;;;;:19;;4578:5;;4565:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4594:54;;-1:-1:-1;;;4594:54:62;;-1:-1:-1;;;;;41027:15:194;;;4594:54:62;;;41009:34:194;41079:15;;;41059:18;;;41052:43;41111:18;;;41104:34;;;41154:18;;;41147:34;;;41230:4;41218:17;;41197:19;;;41190:46;41252:19;;;41245:35;;;41296:19;;;41289:35;;;4543:41:62;;-1:-1:-1;4594:12:62;;;;;;40943:19:194;;4594:54:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4679:19:62;;-1:-1:-1;;;4679:19:62;;4658:18;;-1:-1:-1;;;;;;4679:12:62;;;-1:-1:-1;4679:12:62;;:19;;4692:5;;4679:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4658:40;-1:-1:-1;4730:15:62;:11;4744:1;4730:15;:::i;:::-;4716:10;:29;4708:75;;;;-1:-1:-1;;;4708:75:62;;41537:2:194;4708:75:62;;;41519:21:194;41576:2;41556:18;;;41549:30;41615:34;41595:18;;;41588:62;-1:-1:-1;;;41666:18:194;;;41659:31;41707:19;;4708:75:62;41335:397:194;4708:75:62;4533:257;;4318:472;;;;;;;;:::o;1355:203::-;1482:68;;-1:-1:-1;;;;;41995:15:194;;;1482:68:62;;;41977:34:194;42047:15;;42027:18;;;42020:43;42079:18;;;42072:34;;;1455:96:62;;1475:5;;-1:-1:-1;;;1505:27:62;41912:18:194;;1482:68:62;41737:375:194;2509:560:125;2601:7;2620:27;2660:5;-1:-1:-1;;;;;2650:25:125;;2684:4;2691:6;2650:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2620:78;;2814:18;2853:5;-1:-1:-1;;;;;2843:22:125;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2814:54;;2889:10;-1:-1:-1;;;;;2882:17:125;:3;-1:-1:-1;;;;;2882:17:125;;2878:148;;2937:78;;-1:-1:-1;;;2937:78:125;;-1:-1:-1;;;;;2937:27:125;;;;;:78;;2965:19;;2994:4;;;;2937:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2915:100;;2878:148;-1:-1:-1;3043:19:125;2509:560;-1:-1:-1;;;;2509:560:125:o;3233:443:182:-;3283:9;3436:1;3432;3428:6;3424:14;3421:1;3418:21;3415:1;3411:29;3408:227;;;3539:10;3533:4;3526:24;3620:4;3614;3607:18;3408:227;-1:-1:-1;3664:3:182;3653:9;;3649:19;;3233:443::o;4704:487::-;4754:9;4934:16;4928:23;;4946:3;4919:33;4912:41;4905:49;;4895:255;;5054:10;5048:4;5041:24;5135:4;5129;5122:18;4895:255;-1:-1:-1;5175:3:182;5168:11;;;;5164:19;;4704:487::o;1466:197:88:-;1584:12;1647:13;1611:33;1616:10;1628:15;-1:-1:-1;;;;;1611:33:88;:4;:33::i;:::-;:49;;;;:::i;4109:223:65:-;4242:12;4273:52;4295:6;4303:4;4309:1;4312:12;4273:21;:52::i;6316:594:62:-;6399:4;6701:12;6715:23;6750:5;-1:-1:-1;;;;;6742:19:62;6762:4;6742:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6700:67;;;;6796:7;:69;;;;-1:-1:-1;6808:17:62;;:22;;:56;;;6845:10;6834:30;;;;;;;;;;;;:::i;:::-;6796:107;;;;-1:-1:-1;;;;;;1702:19:65;;;:23;;6869:34:62;1412:320:65;5166:446;5331:12;5388:5;5363:21;:30;;5355:81;;;;-1:-1:-1;;;5355:81:65;;42319:2:194;5355:81:65;;;42301:21:194;42358:2;42338:18;;;42331:30;42397:34;42377:18;;;42370:62;-1:-1:-1;;;42448:18:194;;;42441:36;42494:19;;5355:81:65;42117:402:194;5355:81:65;5447:12;5461:23;5488:6;-1:-1:-1;;;;;5488:11:65;5507:5;5514:4;5488:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:73;;;;5536:69;5563:6;5571:7;5580:10;5592:12;5536:26;:69::i;:::-;5529:76;5166:446;-1:-1:-1;;;;;;;5166:446:65:o;7672:628::-;7852:12;7880:7;7876:418;;;7907:10;:17;7928:1;7907:22;7903:286;;-1:-1:-1;;;;;1702:19:65;;;8114:60;;;;-1:-1:-1;;;8114:60:65;;42726:2:194;8114:60:65;;;42708:21:194;42765:2;42745:18;;;42738:30;42804:31;42784:18;;;42777:59;42853:18;;8114:60:65;42524:353:194;8114:60:65;-1:-1:-1;8209:10:65;8202:17;;7876:418;8250:33;8258:10;8270:12;8981:17;;:21;8977:379;;9209:10;9203:17;9265:15;9252:10;9248:2;9244:19;9237:44;8977:379;9332:12;9325:20;;-1:-1:-1;;;9325:20:65;;;;;;;;:::i;14:131:194:-;-1:-1:-1;;;;;89:31:194;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:165::-;358:5;403:3;394:6;389:3;385:16;381:26;378:46;;;420:1;417;410:12;378:46;-1:-1:-1;442:6:194;289:165;-1:-1:-1;289:165:194:o;459:161::-;524:5;569:3;560:6;555:3;551:16;547:26;544:46;;;586:1;583;576:12;625:789;781:6;789;797;805;858:3;846:9;837:7;833:23;829:33;826:53;;;875:1;872;865:12;826:53;914:9;901:23;933:31;958:5;933:31;:::i;:::-;983:5;-1:-1:-1;1040:2:194;1025:18;;1012:32;1053:33;1012:32;1053:33;:::i;:::-;1105:7;-1:-1:-1;1163:2:194;1148:18;;1135:32;-1:-1:-1;;;;;1179:30:194;;1176:50;;;1222:1;1219;1212:12;1176:50;1245:76;1313:7;1304:6;1293:9;1289:22;1245:76;:::i;:::-;1235:86;;;1340:68;1400:7;1395:2;1384:9;1380:18;1340:68;:::i;:::-;1330:78;;625:789;;;;;;;:::o;1419:220::-;-1:-1:-1;;;;;1600:32:194;;;;1582:51;;1570:2;1555:18;;1419:220::o;2143:347::-;2194:8;2204:6;2258:3;2251:4;2243:6;2239:17;2235:27;2225:55;;2276:1;2273;2266:12;2225:55;-1:-1:-1;2299:20:194;;-1:-1:-1;;;;;2331:30:194;;2328:50;;;2374:1;2371;2364:12;2328:50;2411:4;2403:6;2399:17;2387:29;;2463:3;2456:4;2447:6;2439;2435:19;2431:30;2428:39;2425:59;;;2480:1;2477;2470:12;2425:59;2143:347;;;;;:::o;2495:681::-;2592:6;2600;2608;2616;2624;2677:3;2665:9;2656:7;2652:23;2648:33;2645:53;;;2694:1;2691;2684:12;2645:53;2733:9;2720:23;2752:31;2777:5;2752:31;:::i;:::-;2802:5;-1:-1:-1;2854:2:194;2839:18;;2826:32;;-1:-1:-1;2905:2:194;2890:18;;2877:32;;-1:-1:-1;2960:2:194;2945:18;;2932:32;-1:-1:-1;;;;;2976:30:194;;2973:50;;;3019:1;3016;3009:12;2973:50;3058:58;3108:7;3099:6;3088:9;3084:22;3058:58;:::i;:::-;2495:681;;;;-1:-1:-1;2495:681:194;;-1:-1:-1;3135:8:194;;3032:84;2495:681;-1:-1:-1;;;2495:681:194:o;3181:823::-;3287:6;3295;3303;3311;3319;3327;3380:3;3368:9;3359:7;3355:23;3351:33;3348:53;;;3397:1;3394;3387:12;3348:53;3436:9;3423:23;3455:31;3480:5;3455:31;:::i;:::-;3505:5;-1:-1:-1;3562:2:194;3547:18;;3534:32;3575:33;3534:32;3575:33;:::i;:::-;3627:7;-1:-1:-1;3681:2:194;3666:18;;3653:32;;-1:-1:-1;3732:2:194;3717:18;;3704:32;;-1:-1:-1;3787:3:194;3772:19;;3759:33;-1:-1:-1;;;;;3804:30:194;;3801:50;;;3847:1;3844;3837:12;3801:50;3886:58;3936:7;3927:6;3916:9;3912:22;3886:58;:::i;:::-;3181:823;;;;-1:-1:-1;3181:823:194;;-1:-1:-1;3181:823:194;;3963:8;;3181:823;-1:-1:-1;;;3181:823:194:o;4009:160::-;4073:5;4118:3;4109:6;4104:3;4100:16;4096:26;4093:46;;;4135:1;4132;4125:12;4174:848;4334:6;4342;4350;4358;4366;4419:3;4407:9;4398:7;4394:23;4390:33;4387:53;;;4436:1;4433;4426:12;4387:53;4476:9;4463:23;-1:-1:-1;;;;;4501:6:194;4498:30;4495:50;;;4541:1;4538;4531:12;4495:50;4564:71;4627:7;4618:6;4607:9;4603:22;4564:71;:::i;:::-;4554:81;;;4685:2;4674:9;4670:18;4657:32;4698:31;4723:5;4698:31;:::i;:::-;4748:5;-1:-1:-1;4800:2:194;4785:18;;4772:32;;-1:-1:-1;4856:2:194;4841:18;;4828:32;4869:33;4828:32;4869:33;:::i;:::-;4921:7;-1:-1:-1;4947:69:194;5008:7;5002:3;4987:19;;4947:69;:::i;:::-;4937:79;;4174:848;;;;;;;;:::o;5027:160::-;5092:5;5137:2;5128:6;5123:3;5119:16;5115:25;5112:45;;;5153:1;5150;5143:12;5192:1056;5390:6;5398;5406;5414;5422;5475:3;5463:9;5454:7;5450:23;5446:33;5443:53;;;5492:1;5489;5482:12;5443:53;5531:9;5518:23;5550:31;5575:5;5550:31;:::i;:::-;5600:5;-1:-1:-1;5657:2:194;5642:18;;5629:32;5670:33;5629:32;5670:33;:::i;:::-;5722:7;-1:-1:-1;5780:2:194;5765:18;;5752:32;-1:-1:-1;;;;;5833:14:194;;;5830:34;;;5860:1;5857;5850:12;5830:34;5883:76;5951:7;5942:6;5931:9;5927:22;5883:76;:::i;:::-;5873:86;;6012:2;6001:9;5997:18;5984:32;5968:48;;6041:2;6031:8;6028:16;6025:36;;;6057:1;6054;6047:12;6025:36;;6080:74;6146:7;6135:8;6124:9;6120:24;6080:74;:::i;:::-;6070:84;;;6173:69;6234:7;6228:3;6217:9;6213:19;6173:69;:::i;6253:643::-;6363:6;6371;6379;6432:2;6420:9;6411:7;6407:23;6403:32;6400:52;;;6448:1;6445;6438:12;6400:52;6487:9;6474:23;6506:31;6531:5;6506:31;:::i;:::-;6556:5;-1:-1:-1;6613:2:194;6598:18;;6585:32;6626:33;6585:32;6626:33;:::i;:::-;6678:7;-1:-1:-1;6736:2:194;6721:18;;6708:32;-1:-1:-1;;;;;6752:30:194;;6749:50;;;6795:1;6792;6785:12;6749:50;6818:72;6882:7;6873:6;6862:9;6858:22;6818:72;:::i;:::-;6808:82;;;6253:643;;;;;:::o;6901:651::-;7015:6;7023;7031;7084:2;7072:9;7063:7;7059:23;7055:32;7052:52;;;7100:1;7097;7090:12;7052:52;7139:9;7126:23;7158:31;7183:5;7158:31;:::i;:::-;7208:5;-1:-1:-1;7265:2:194;7250:18;;7237:32;7278:33;7237:32;7278:33;:::i;:::-;7330:7;-1:-1:-1;7388:2:194;7373:18;;7360:32;-1:-1:-1;;;;;7404:30:194;;7401:50;;;7447:1;7444;7437:12;7401:50;7470:76;7538:7;7529:6;7518:9;7514:22;7470:76;:::i;8464:568::-;8573:6;8581;8589;8642:2;8630:9;8621:7;8617:23;8613:32;8610:52;;;8658:1;8655;8648:12;8610:52;8698:9;8685:23;-1:-1:-1;;;;;8723:6:194;8720:30;8717:50;;;8763:1;8760;8753:12;8717:50;8786:71;8849:7;8840:6;8829:9;8825:22;8786:71;:::i;:::-;8776:81;;;8904:2;8893:9;8889:18;8876:32;8866:42;;8958:2;8947:9;8943:18;8930:32;8971:31;8996:5;8971:31;:::i;:::-;9021:5;9011:15;;;8464:568;;;;;:::o;9267:367::-;9330:8;9340:6;9394:3;9387:4;9379:6;9375:17;9371:27;9361:55;;9412:1;9409;9402:12;9361:55;-1:-1:-1;9435:20:194;;-1:-1:-1;;;;;9467:30:194;;9464:50;;;9510:1;9507;9500:12;9464:50;9547:4;9539:6;9535:17;9523:29;;9607:3;9600:4;9590:6;9587:1;9583:14;9575:6;9571:27;9567:38;9564:47;9561:67;;;9624:1;9621;9614:12;9639:1096;9805:6;9813;9821;9829;9837;9845;9898:2;9886:9;9877:7;9873:23;9869:32;9866:52;;;9914:1;9911;9904:12;9866:52;9954:9;9941:23;-1:-1:-1;;;;;10024:2:194;10016:6;10013:14;10010:34;;;10040:1;10037;10030:12;10010:34;10079:70;10141:7;10132:6;10121:9;10117:22;10079:70;:::i;:::-;10168:8;;-1:-1:-1;10053:96:194;-1:-1:-1;10256:2:194;10241:18;;10228:32;;-1:-1:-1;10272:16:194;;;10269:36;;;10301:1;10298;10291:12;10269:36;10340:72;10404:7;10393:8;10382:9;10378:24;10340:72;:::i;:::-;10431:8;;-1:-1:-1;10314:98:194;-1:-1:-1;10519:2:194;10504:18;;10491:32;;-1:-1:-1;10535:16:194;;;10532:36;;;10564:1;10561;10554:12;10532:36;;10603:72;10667:7;10656:8;10645:9;10641:24;10603:72;:::i;10740:781::-;10892:6;10900;10908;10916;10969:3;10957:9;10948:7;10944:23;10940:33;10937:53;;;10986:1;10983;10976:12;10937:53;11025:9;11012:23;11044:31;11069:5;11044:31;:::i;:::-;11094:5;-1:-1:-1;11151:2:194;11136:18;;11123:32;11164:33;11123:32;11164:33;:::i;:::-;11216:7;-1:-1:-1;11274:2:194;11259:18;;11246:32;-1:-1:-1;;;;;11290:30:194;;11287:50;;;11333:1;11330;11323:12;11287:50;11356:72;11420:7;11411:6;11400:9;11396:22;11356:72;:::i;11526:533::-;-1:-1:-1;;;;;11846:15:194;;;11828:34;;11898:15;;;11893:2;11878:18;;11871:43;11950:15;;;;11945:2;11930:18;;11923:43;11997:2;11982:18;;11975:34;;;;12040:3;12025:19;;12018:35;;;;11777:3;11762:19;;11526:533::o;12064:127::-;12125:10;12120:3;12116:20;12113:1;12106:31;12156:4;12153:1;12146:15;12180:4;12177:1;12170:15;12196:255;12268:2;12262:9;12310:6;12298:19;;-1:-1:-1;;;;;12332:34:194;;12368:22;;;12329:62;12326:88;;;12394:18;;:::i;:::-;12430:2;12423:22;12196:255;:::o;12456:253::-;12528:2;12522:9;12570:4;12558:17;;-1:-1:-1;;;;;12590:34:194;;12626:22;;;12587:62;12584:88;;;12652:18;;:::i;12714:253::-;12786:2;12780:9;12828:4;12816:17;;-1:-1:-1;;;;;12848:34:194;;12884:22;;;12845:62;12842:88;;;12910:18;;:::i;12972:275::-;13043:2;13037:9;13108:2;13089:13;;-1:-1:-1;;13085:27:194;13073:40;;-1:-1:-1;;;;;13128:34:194;;13164:22;;;13125:62;13122:88;;;13190:18;;:::i;:::-;13226:2;13219:22;12972:275;;-1:-1:-1;12972:275:194:o;13252:111::-;13337:1;13330:5;13327:12;13317:40;;13353:1;13350;13343:12;13368:154;13446:20;;13475:41;13446:20;13475:41;:::i;13527:186::-;13575:4;-1:-1:-1;;;;;13600:6:194;13597:30;13594:56;;;13630:18;;:::i;:::-;-1:-1:-1;13696:2:194;13675:15;-1:-1:-1;;13671:29:194;13702:4;13667:40;;13527:186::o;13718:462::-;13760:5;13813:3;13806:4;13798:6;13794:17;13790:27;13780:55;;13831:1;13828;13821:12;13780:55;13867:6;13854:20;13898:48;13914:31;13942:2;13914:31;:::i;:::-;13898:48;:::i;:::-;13971:2;13962:7;13955:19;14017:3;14010:4;14005:2;13997:6;13993:15;13989:26;13986:35;13983:55;;;14034:1;14031;14024:12;13983:55;14099:2;14092:4;14084:6;14080:17;14073:4;14064:7;14060:18;14047:55;14147:1;14122:16;;;14140:4;14118:27;14111:38;;;;14126:7;13718:462;-1:-1:-1;;;13718:462:194:o;14185:856::-;14242:5;14290:6;14278:9;14273:3;14269:19;14265:32;14262:52;;;14310:1;14307;14300:12;14262:52;14332:22;;:::i;:::-;14323:31;;14377:39;14406:9;14377:39;:::i;:::-;14370:5;14363:54;14449:48;14493:2;14482:9;14478:18;14449:48;:::i;:::-;14444:2;14437:5;14433:14;14426:72;14530:38;14564:2;14553:9;14549:18;14530:38;:::i;:::-;14525:2;14518:5;14514:14;14507:62;14629:2;14618:9;14614:18;14601:32;14596:2;14589:5;14585:14;14578:56;14695:3;14684:9;14680:19;14667:33;14661:3;14654:5;14650:15;14643:58;14734:39;14768:3;14757:9;14753:19;14734:39;:::i;:::-;14728:3;14721:5;14717:15;14710:64;14835:3;14824:9;14820:19;14807:33;14801:3;14794:5;14790:15;14783:58;14892:3;14881:9;14877:19;14864:33;-1:-1:-1;;;;;14912:6:194;14909:30;14906:50;;;14952:1;14949;14942:12;14906:50;14989:45;15030:3;15021:6;15010:9;15006:22;14989:45;:::i;:::-;14983:3;14976:5;14972:15;14965:70;;14185:856;;;;:::o;15046:704::-;15109:5;15157:4;15145:9;15140:3;15136:19;15132:30;15129:50;;;15175:1;15172;15165:12;15129:50;15197:22;;:::i;:::-;15188:31;;15256:9;15243:23;15275:43;15310:7;15275:43;:::i;:::-;15327:22;;15409:2;15394:18;;;15381:32;15365:14;;;15358:56;15466:2;15451:18;;15438:32;15479:33;15438:32;15479:33;:::i;:::-;15539:2;15528:14;;15521:31;15603:2;15588:18;;15575:32;-1:-1:-1;;;;;15619:30:194;;15616:50;;;15662:1;15659;15652:12;15616:50;15698:45;15739:3;15730:6;15719:9;15715:22;15698:45;:::i;:::-;15693:2;15686:5;15682:14;15675:69;;15046:704;;;;:::o;15755:992::-;15813:5;15861:4;15849:9;15844:3;15840:19;15836:30;15833:50;;;15879:1;15876;15869:12;15833:50;15901:22;;:::i;:::-;15892:31;;15946:29;15965:9;15946:29;:::i;:::-;15939:5;15932:44;16008:38;16042:2;16031:9;16027:18;16008:38;:::i;:::-;16003:2;15996:5;15992:14;15985:62;16079:38;16113:2;16102:9;16098:18;16079:38;:::i;:::-;16074:2;16067:5;16063:14;16056:62;16169:2;16158:9;16154:18;16141:32;-1:-1:-1;;;;;16233:2:194;16225:6;16222:14;16219:34;;;16249:1;16246;16239:12;16219:34;16285:57;16338:3;16329:6;16318:9;16314:22;16285:57;:::i;:::-;16280:2;16273:5;16269:14;16262:81;16396:3;16385:9;16381:19;16368:33;16352:49;;16426:2;16416:8;16413:16;16410:36;;;16442:1;16439;16432:12;16410:36;16479:59;16534:3;16523:8;16512:9;16508:24;16479:59;:::i;:::-;16473:3;16466:5;16462:15;16455:84;16592:3;16581:9;16577:19;16564:33;16548:49;;16622:2;16612:8;16609:16;16606:36;;;16638:1;16635;16628:12;16606:36;;16675:65;16736:3;16725:8;16714:9;16710:24;16675:65;:::i;:::-;16669:3;16662:5;16658:15;16651:90;;15755:992;;;;:::o;16752:565::-;16867:6;16875;16883;16936:2;16924:9;16915:7;16911:23;16907:32;16904:52;;;16952:1;16949;16942:12;16904:52;16992:9;16979:23;-1:-1:-1;;;;;17017:6:194;17014:30;17011:50;;;17057:1;17054;17047:12;17011:50;17080:62;17134:7;17125:6;17114:9;17110:22;17080:62;:::i;17611:127::-;17672:10;17667:3;17663:20;17660:1;17653:31;17703:4;17700:1;17693:15;17727:4;17724:1;17717:15;17743:136;17778:3;-1:-1:-1;;;17799:22:194;;17796:48;;17824:18;;:::i;:::-;-1:-1:-1;17864:1:194;17860:13;;17743:136::o;18413:127::-;18474:10;18469:3;18465:20;18462:1;18455:31;18505:4;18502:1;18495:15;18529:4;18526:1;18519:15;18545:117;18630:1;18623:5;18620:12;18610:46;;18636:18;;:::i;18667:250::-;18752:1;18762:113;18776:6;18773:1;18770:13;18762:113;;;18852:11;;;18846:18;18833:11;;;18826:39;18798:2;18791:10;18762:113;;;-1:-1:-1;;18909:1:194;18891:16;;18884:27;18667:250::o;18922:270::-;18963:3;19001:5;18995:12;19028:6;19023:3;19016:19;19044:76;19113:6;19106:4;19101:3;19097:14;19090:4;19083:5;19079:16;19044:76;:::i;:::-;19174:2;19153:15;-1:-1:-1;;19149:29:194;19140:39;;;;19181:4;19136:50;;18922:270;-1:-1:-1;;18922:270:194:o;19197:1044::-;19384:2;19373:9;19366:21;19347:4;19412:6;19406:13;19428:38;19463:2;19428:38;:::i;:::-;19502:2;19497;19486:9;19482:18;19475:30;;19552:2;19544:6;19540:15;19534:22;19565:48;19600:12;19565:48;:::i;:::-;19649:12;19644:2;19633:9;19629:18;19622:40;;19743:1;19739;19734:3;19730:11;19726:19;19720:2;19712:6;19708:15;19702:22;19698:48;19693:2;19682:9;19678:18;19671:76;19802:2;19794:6;19790:15;19784:22;19778:3;19767:9;19763:19;19756:51;19862:3;19854:6;19850:16;19844:23;19838:3;19827:9;19823:19;19816:52;19917:3;19909:6;19905:16;19899:23;19931:55;19981:3;19970:9;19966:19;19950:14;-1:-1:-1;;;;;1892:31:194;1880:44;;1826:104;19931:55;;20041:3;20033:6;20029:16;20023:23;20017:3;20006:9;20002:19;19995:52;20096:3;20088:6;20084:16;20078:23;20120:6;20162:2;20157;20146:9;20142:18;20135:30;;20182:53;20230:3;20219:9;20215:19;20199:14;20182:53;:::i;20246:184::-;20316:6;20369:2;20357:9;20348:7;20344:23;20340:32;20337:52;;;20385:1;20382;20375:12;20337:52;-1:-1:-1;20408:16:194;;20246:184;-1:-1:-1;20246:184:194:o;20435:128::-;20502:9;;;20523:11;;;20520:37;;;20537:18;;:::i;20568:274::-;-1:-1:-1;;;;;20760:32:194;;;;20742:51;;20824:2;20809:18;;20802:34;20730:2;20715:18;;20568:274::o;20847:118::-;20933:5;20926:13;20919:21;20912:5;20909:32;20899:60;;20955:1;20952;20945:12;20970:245;21037:6;21090:2;21078:9;21069:7;21065:23;21061:32;21058:52;;;21106:1;21103;21096:12;21058:52;21138:9;21132:16;21157:28;21179:5;21157:28;:::i;21220:565::-;21335:6;21343;21351;21404:2;21392:9;21383:7;21379:23;21375:32;21372:52;;;21420:1;21417;21410:12;21372:52;21460:9;21447:23;-1:-1:-1;;;;;21485:6:194;21482:30;21479:50;;;21525:1;21522;21515:12;21479:50;21548:62;21602:7;21593:6;21582:9;21578:22;21548:62;:::i;:::-;21538:72;;;21660:2;21649:9;21645:18;21632:32;21673:31;21698:5;21673:31;:::i;:::-;21220:565;;21723:5;;-1:-1:-1;;;21775:2:194;21760:18;;;;21747:32;;21220:565::o;21790:329::-;21887:4;21945:11;21932:25;22039:3;22035:8;22024;22008:14;22004:29;22000:44;21980:18;21976:69;21966:97;;22059:1;22056;22049:12;21966:97;22080:33;;;;;21790:329;-1:-1:-1;;21790:329:194:o;22124:271::-;22197:6;22250:2;22238:9;22229:7;22225:23;22221:32;22218:52;;;22266:1;22263;22256:12;22218:52;22305:9;22292:23;22324:41;22359:5;22324:41;:::i;22400:247::-;22459:6;22512:2;22500:9;22491:7;22487:23;22483:32;22480:52;;;22528:1;22525;22518:12;22480:52;22567:9;22554:23;22586:31;22611:5;22586:31;:::i;22652:153::-;22730:20;;22779:1;22769:12;;22759:40;;22795:1;22792;22785:12;22810:156;22876:20;;22936:4;22925:16;;22915:27;;22905:55;;22956:1;22953;22946:12;22971:868;23061:6;23114:3;23102:9;23093:7;23089:23;23085:33;23082:53;;;23131:1;23128;23121:12;23082:53;23164:2;23158:9;23206:3;23198:6;23194:16;23276:6;23264:10;23261:22;-1:-1:-1;;;;;23228:10:194;23225:34;23222:62;23219:88;;;23287:18;;:::i;:::-;23323:2;23316:22;23362:39;23391:9;23362:39;:::i;:::-;23354:6;23347:55;23463:2;23452:9;23448:18;23435:32;23430:2;23422:6;23418:15;23411:57;23529:2;23518:9;23514:18;23501:32;23496:2;23488:6;23484:15;23477:57;23595:2;23584:9;23580:18;23567:32;23562:2;23554:6;23550:15;23543:57;23634:37;23666:3;23655:9;23651:19;23634:37;:::i;:::-;23628:3;23620:6;23616:16;23609:63;23734:3;23723:9;23719:19;23706:33;23700:3;23692:6;23688:16;23681:59;23802:3;23791:9;23787:19;23774:33;23768:3;23760:6;23756:16;23749:59;23827:6;23817:16;;;22971:868;;;;:::o;23844:385::-;-1:-1:-1;;;;;24096:15:194;;;24078:34;;24148:15;;;;24143:2;24128:18;;24121:43;24207:14;;24200:22;24195:2;24180:18;;24173:50;24028:2;24013:18;;23844:385::o;24234:296::-;24304:5;24363:3;24350:17;24449:3;24445:8;24434;24418:14;24414:29;24410:44;24390:18;24386:69;24376:97;;24469:1;24466;24459:12;24376:97;24491:33;;;;24234:296;-1:-1:-1;;24234:296:194:o;24535:500::-;24593:5;24600:6;24660:3;24647:17;24746:2;24742:7;24731:8;24715:14;24711:29;24707:43;24687:18;24683:68;24673:96;;24765:1;24762;24755:12;24673:96;24793:33;;24897:4;24884:18;;;-1:-1:-1;24845:21:194;;-1:-1:-1;;;;;;24914:30:194;;24911:50;;;24957:1;24954;24947:12;24911:50;25004:6;24988:14;24984:27;24977:5;24973:39;24970:59;;;25025:1;25022;25015:12;25040:266;25128:6;25123:3;25116:19;25180:6;25173:5;25166:4;25161:3;25157:14;25144:43;-1:-1:-1;25232:1:194;25207:16;;;25225:4;25203:27;;;25196:38;;;;25288:2;25267:15;;;-1:-1:-1;;25263:29:194;25254:39;;;25250:50;;25040:266::o;25311:1169::-;25373:3;25401:6;25444:5;25431:19;25459:43;25494:7;25459:43;:::i;:::-;25511;25546:7;25511:43;:::i;:::-;25563:20;;25631:4;25620:16;;25607:30;25646:43;25607:30;25646:43;:::i;:::-;25698;25733:7;25698:43;:::i;:::-;25766:4;25757:14;;25750:31;25829:4;25818:16;;25805:30;25844:33;25805:30;25844:33;:::i;:::-;-1:-1:-1;;;;;25909:33:194;25902:4;25893:14;;25886:57;25999:4;25988:16;;;25975:30;25959:14;;;25952:54;26062:4;26051:16;;;26038:30;26022:14;;;26015:54;26098:36;25930:3;26117:16;;26098:36;:::i;:::-;-1:-1:-1;;;;;1892:31:194;26185:4;26176:14;;1880:44;26247:4;26236:16;;;26223:30;26207:14;;;26200:54;26299:55;26348:4;26337:16;;26240:5;26299:55;:::i;:::-;26386:2;26379:4;26374:3;26370:14;26363:26;26405:69;26470:2;26465:3;26461:12;26447;26431:14;26405:69;:::i;26485:704::-;26553:3;26599:5;26586:19;26614:43;26649:7;26614:43;:::i;:::-;26666;26701:7;26666:43;:::i;:::-;26718:20;;26794:4;26783:16;;;26770:30;26754:14;;;26747:54;26849:4;26838:16;;26825:30;26864:33;26825:30;26864:33;:::i;:::-;-1:-1:-1;;;;;26929:33:194;26922:4;26913:14;;26906:57;27006:55;27055:4;27044:16;;27048:5;27006:55;:::i;:::-;27093:4;27086;27081:3;27077:14;27070:28;27114:69;27177:4;27172:3;27168:14;27154:12;27140;27114:69;:::i;27194:1293::-;27257:3;27303:5;27290:19;27318:33;27343:7;27318:33;:::i;:::-;-1:-1:-1;;;;;27410:16:194;;;27398:29;;27475:4;27464:16;;27451:30;;27490:33;27451:30;27490:33;:::i;:::-;27555:16;;;27548:4;27539:14;;27532:40;27620:4;27609:16;;27596:30;;27635:33;27596:30;27635:33;:::i;:::-;27700:16;27693:4;27684:14;;27677:40;27746:67;27807:4;27796:16;;27800:5;27746:67;:::i;:::-;27845:4;27838;27833:3;27829:14;27822:28;27871:67;27932:4;27927:3;27923:14;27909:12;27871:67;:::i;:::-;27859:79;;27969:67;28030:4;28023:5;28019:16;28012:5;27969:67;:::i;:::-;28078:3;28072:4;28068:14;28061:4;28056:3;28052:14;28045:38;28106:59;28160:4;28144:14;28106:59;:::i;:::-;28092:73;;;28224:4;28217:5;28213:16;28200:30;28309:3;28305:8;28297:5;28281:14;28277:26;28273:41;28253:18;28249:66;28239:94;;28329:1;28326;28319:12;28239:94;28377:3;28369:6;28365:16;28358:4;28353:3;28349:14;28342:40;28398:83;28474:6;28466:5;28446:18;28442:30;28398:83;:::i;28492:451::-;28739:2;28728:9;28721:21;28702:4;28759:66;28821:2;28810:9;28806:18;28798:6;28759:66;:::i;:::-;-1:-1:-1;;;;;28861:32:194;;;;28856:2;28841:18;;28834:60;-1:-1:-1;28925:2:194;28910:18;28903:34;28751:74;28492:451;-1:-1:-1;28492:451:194:o;28948:519::-;-1:-1:-1;;;;;29248:15:194;;;29230:34;;29300:15;;29295:2;29280:18;;29273:43;29347:2;29332:18;;29325:34;;;29395:3;29390:2;29375:18;;29368:31;;;29173:4;;29416:45;;29441:19;;29433:6;29416:45;:::i;30010:451::-;30257:2;30246:9;30239:21;30220:4;30277:66;30339:2;30328:9;30324:18;30316:6;30277:66;:::i;:::-;30374:2;30359:18;;30352:34;;;;-1:-1:-1;;;;;;30422:32:194;;;;30417:2;30402:18;;;30395:60;30269:74;30010:451;-1:-1:-1;30010:451:194:o;30466:415::-;30728:1;30724;30719:3;30715:11;30711:19;30703:6;30699:32;30688:9;30681:51;30768:6;30763:2;30752:9;30748:18;30741:34;30811:2;30806;30795:9;30791:18;30784:30;30662:4;30831:44;30871:2;30860:9;30856:18;30848:6;30831:44;:::i;:::-;30823:52;30466:415;-1:-1:-1;;;;;30466:415:194:o;30886:127::-;30947:10;30942:3;30938:20;30935:1;30928:31;30978:4;30975:1;30968:15;31002:4;30999:1;30992:15;31018:241;31074:6;31127:2;31115:9;31106:7;31102:23;31098:32;31095:52;;;31143:1;31140;31133:12;31095:52;31182:9;31169:23;31201:28;31223:5;31201:28;:::i;31264:521::-;31341:4;31347:6;31407:11;31394:25;31501:2;31497:7;31486:8;31470:14;31466:29;31462:43;31442:18;31438:68;31428:96;;31520:1;31517;31510:12;31428:96;31547:33;;31599:20;;;-1:-1:-1;;;;;;31631:30:194;;31628:50;;;31674:1;31671;31664:12;31628:50;31707:4;31695:17;;-1:-1:-1;31738:14:194;31734:27;;;31724:38;;31721:58;;;31775:1;31772;31765:12;31790:271;31973:6;31965;31960:3;31947:33;31929:3;31999:16;;32024:13;;;31999:16;31790:271;-1:-1:-1;31790:271:194:o;32066:410::-;32153:6;32161;32169;32222:2;32210:9;32201:7;32197:23;32193:32;32190:52;;;32238:1;32235;32228:12;32190:52;32270:9;32264:16;-1:-1:-1;;;;;32313:5:194;32309:30;32302:5;32299:41;32289:69;;32354:1;32351;32344:12;32289:69;32422:2;32407:18;;32401:25;32466:2;32451:18;;;32445:25;32377:5;;32401:25;;-1:-1:-1;32445:25:194;32066:410;-1:-1:-1;;;32066:410:194:o;32889:375::-;33091:25;;;-1:-1:-1;;;;;33190:15:194;;;33185:2;33170:18;;33163:43;33242:15;33237:2;33222:18;;33215:43;33079:2;33064:18;;32889:375::o;33269:465::-;33328:3;33362:5;33356:12;33377:38;33412:2;33377:38;:::i;:::-;33436:2;33431:3;33424:15;;33488:4;33481:5;33477:16;33471:23;33464:4;33459:3;33455:14;33448:47;33573:1;33569;33564:3;33560:11;33556:19;33548:4;33541:5;33537:16;33531:23;33527:49;33520:4;33515:3;33511:14;33504:73;33623:4;33616:5;33612:16;33606:23;33661:4;33654;33649:3;33645:14;33638:28;33682:46;33722:4;33717:3;33713:14;33699:12;33682:46;:::i;33739:287::-;33938:2;33927:9;33920:21;33901:4;33958:62;34016:2;34005:9;34001:18;33993:6;33958:62;:::i;34031:287::-;34160:3;34198:6;34192:13;34214:66;34273:6;34268:3;34261:4;34253:6;34249:17;34214:66;:::i;34323:125::-;34388:9;;;34409:10;;;34406:36;;;34422:18;;:::i;34453:251::-;34523:6;34576:2;34564:9;34555:7;34551:23;34547:32;34544:52;;;34592:1;34589;34582:12;34544:52;34624:9;34618:16;34643:31;34668:5;34643:31;:::i;34709:711::-;35048:3;35037:9;35030:22;35011:4;35069:63;35127:3;35116:9;35112:19;35104:6;35069:63;:::i;:::-;-1:-1:-1;;;;;35206:15:194;;;35201:2;35186:18;;35179:43;35258:15;;;35253:2;35238:18;;35231:43;-1:-1:-1;35305:2:194;35290:18;;35283:34;;;;35348:3;35333:19;;35326:35;;;;35398:15;;;35159:3;35377:19;;;35370:44;;;;35258:15;35061:71;-1:-1:-1;34709:711:194:o;35425:1268::-;35530:6;35561:2;35604;35592:9;35583:7;35579:23;35575:32;35572:52;;;35620:1;35617;35610:12;35572:52;35653:9;35647:16;-1:-1:-1;;;;;35723:2:194;35715:6;35712:14;35709:34;;;35739:1;35736;35729:12;35709:34;35762:22;;;;35818:4;35800:16;;;35796:27;35793:47;;;35836:1;35833;35826:12;35793:47;35862:22;;:::i;:::-;35914:2;35908:9;35926:43;35961:7;35926:43;:::i;:::-;35978:22;;36038:11;;;36032:18;36016:14;;;36009:42;36089:2;36081:11;;36075:18;36102:33;36075:18;36102:33;:::i;:::-;36162:2;36151:14;;36144:31;36214:2;36206:11;;36200:18;36230:16;;;36227:36;;;36259:1;36256;36249:12;36227:36;36290:8;36286:2;36282:17;36272:27;;;36337:7;36330:4;36326:2;36322:13;36318:27;36308:55;;36359:1;36356;36349:12;36308:55;36388:2;36382:9;36372:19;;36413:48;36429:31;36457:2;36429:31;:::i;36413:48::-;36484:2;36477:5;36470:17;36524:7;36519:2;36514;36510;36506:11;36502:20;36499:33;36496:53;;;36545:1;36542;36535:12;36496:53;36558:67;36622:2;36617;36610:5;36606:14;36601:2;36597;36593:11;36558:67;:::i;:::-;36652:2;36641:14;;36634:29;36645:5;35425:1268;-1:-1:-1;;;;;;35425:1268:194:o;37500:830::-;37854:4;37883:3;37895:60;37945:9;37936:6;37930:13;37398:12;;-1:-1:-1;;;;;37394:38:194;37382:51;;37482:4;37471:16;;;37465:23;37449:14;;37442:47;37312:183;37895:60;38011:4;38003:6;37999:17;37993:24;37986:4;37975:9;37971:20;37964:54;38074:4;38066:6;38062:17;38056:24;38049:4;38038:9;38034:20;38027:54;38090:63;38148:3;38137:9;38133:19;38125:6;37398:12;;-1:-1:-1;;;;;37394:38:194;37382:51;;37482:4;37471:16;;;37465:23;37449:14;;37442:47;37312:183;38090:63;-1:-1:-1;;;;;38190:32:194;;38184:3;38169:19;;38162:61;38254:3;38239:19;;38232:31;;;38280:44;38305:18;;;38297:6;38280:44;:::i;38335:280::-;38524:2;38513:9;38506:21;38487:4;38544:65;38605:2;38594:9;38590:18;38582:6;38544:65;:::i;38620:1056::-;-1:-1:-1;;;;;38951:32:194;;38933:51;;38892:4;38921:3;39003:36;39032:6;39003:36;:::i;:::-;39065:1;39061:2;39058:9;39048:43;;39071:18;;:::i;:::-;39127:2;39122;39111:9;39107:18;39100:30;;39191:2;39183:6;39179:15;39166:29;39161:2;39150:9;39146:18;39139:57;39257:2;39249:6;39245:15;39232:29;39227:2;39216:9;39212:18;39205:57;39324:2;39316:6;39312:15;39299:29;39293:3;39282:9;39278:19;39271:58;39406:4;39370:34;39399:3;39391:6;39387:16;39370:34;:::i;:::-;39366:45;39360:3;39349:9;39345:19;39338:74;39474:3;39466:6;39462:16;39449:30;39443:3;39432:9;39428:19;39421:59;39542:3;39534:6;39530:16;39517:30;39511:3;39500:9;39496:19;39489:59;39585:2;39579:3;39568:9;39564:19;39557:31;39605:65;39666:2;39655:9;39651:18;39643:6;39605:65;:::i;42882:219::-;43031:2;43020:9;43013:21;42994:4;43051:44;43091:2;43080:9;43076:18;43068:6;43051:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "52027": [
        {
          "start": 728,
          "length": 32
        },
        {
          "start": 1314,
          "length": 32
        },
        {
          "start": 1593,
          "length": 32
        },
        {
          "start": 5270,
          "length": 32
        },
        {
          "start": 5540,
          "length": 32
        },
        {
          "start": 7266,
          "length": 32
        },
        {
          "start": 7519,
          "length": 32
        },
        {
          "start": 10496,
          "length": 32
        },
        {
          "start": 10854,
          "length": 32
        },
        {
          "start": 11142,
          "length": 32
        }
      ],
      "52031": [
        {
          "start": 864,
          "length": 32
        },
        {
          "start": 1155,
          "length": 32
        },
        {
          "start": 2379,
          "length": 32
        },
        {
          "start": 3057,
          "length": 32
        },
        {
          "start": 4133,
          "length": 32
        },
        {
          "start": 6301,
          "length": 32
        }
      ],
      "52035": [
        {
          "start": 806,
          "length": 32
        },
        {
          "start": 1895,
          "length": 32
        },
        {
          "start": 3004,
          "length": 32
        },
        {
          "start": 3356,
          "length": 32
        },
        {
          "start": 4209,
          "length": 32
        },
        {
          "start": 11292,
          "length": 32
        },
        {
          "start": 12014,
          "length": 32
        },
        {
          "start": 12104,
          "length": 32
        }
      ],
      "52039": [
        {
          "start": 342,
          "length": 32
        },
        {
          "start": 1940,
          "length": 32
        },
        {
          "start": 2080,
          "length": 32
        },
        {
          "start": 2870,
          "length": 32
        },
        {
          "start": 10543,
          "length": 32
        },
        {
          "start": 10694,
          "length": 32
        },
        {
          "start": 10903,
          "length": 32
        },
        {
          "start": 11015,
          "length": 32
        },
        {
          "start": 11191,
          "length": 32
        },
        {
          "start": 12149,
          "length": 32
        },
        {
          "start": 12282,
          "length": 32
        }
      ],
      "52042": [
        {
          "start": 592,
          "length": 32
        },
        {
          "start": 946,
          "length": 32
        },
        {
          "start": 3226,
          "length": 32
        },
        {
          "start": 3446,
          "length": 32
        },
        {
          "start": 3725,
          "length": 32
        },
        {
          "start": 3866,
          "length": 32
        },
        {
          "start": 3915,
          "length": 32
        },
        {
          "start": 4012,
          "length": 32
        },
        {
          "start": 4176,
          "length": 32
        },
        {
          "start": 4437,
          "length": 32
        },
        {
          "start": 4510,
          "length": 32
        },
        {
          "start": 4750,
          "length": 32
        },
        {
          "start": 4965,
          "length": 32
        },
        {
          "start": 5172,
          "length": 32
        },
        {
          "start": 5678,
          "length": 32
        },
        {
          "start": 5808,
          "length": 32
        },
        {
          "start": 6180,
          "length": 32
        },
        {
          "start": 6344,
          "length": 32
        },
        {
          "start": 6571,
          "length": 32
        },
        {
          "start": 6690,
          "length": 32
        },
        {
          "start": 7168,
          "length": 32
        }
      ],
      "52046": [
        {
          "start": 689,
          "length": 32
        },
        {
          "start": 1708,
          "length": 32
        },
        {
          "start": 2220,
          "length": 32
        },
        {
          "start": 2495,
          "length": 32
        },
        {
          "start": 2588,
          "length": 32
        },
        {
          "start": 9063,
          "length": 32
        },
        {
          "start": 9235,
          "length": 32
        },
        {
          "start": 11402,
          "length": 32
        },
        {
          "start": 11558,
          "length": 32
        },
        {
          "start": 12385,
          "length": 32
        }
      ],
      "52050": [
        {
          "start": 767,
          "length": 32
        },
        {
          "start": 8517,
          "length": 32
        },
        {
          "start": 9359,
          "length": 32
        },
        {
          "start": 9523,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CALLBACK_SUCCESS()": "8237e538",
    "CALLBACK_SUCCESS_CREDIT()": "0f13be2a",
    "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "56415a90",
    "cdm()": "e2dfb317",
    "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),uint256,address)": "ede2bf5f",
    "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "0567d4b1",
    "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "4ad4d4ad",
    "flashlender()": "ee58918a",
    "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "301a1131",
    "minter()": "07546172",
    "multisend(address[],bytes[],bool[])": "f38584e0",
    "onCreditFlashLoan(address,uint256,uint256,bytes)": "16d8f165",
    "onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b",
    "permit2()": "12261ee7",
    "poolAction()": "e3008e5a",
    "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "faa99405",
    "self()": "7104ddb2",
    "stablecoin()": "e9cbd822",
    "swapAction()": "a888828b",
    "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "6c747057",
    "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "96c2c408"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flashlender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapActions_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"PoolAction_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Action__revertBytes_emptyRevertBytes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toInt256_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__borrow_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidResidualRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__delegateViaStablecoin_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__deposit_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onCreditFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__repay_InvalidAuxSwap\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"debug_log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS_CREDIT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cdm\",\"outputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolActionParams\",\"name\":\"auxAction\",\"type\":\"tuple\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"subCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"residualRecipient\",\"type\":\"address\"}],\"name\":\"decreaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"depositAndBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashlender\",\"outputs\":[{\"internalType\":\"contract IFlashlender\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolActionParams\",\"name\":\"auxAction\",\"type\":\"tuple\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"upFrontToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"upFrontAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"increaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"contract IMinter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"bool[]\",\"name\":\"delegateCall\",\"type\":\"bool[]\"}],\"name\":\"multisend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onCreditFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolAction\",\"outputs\":[{\"internalType\":\"contract PoolAction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"self\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IStablecoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAction\",\"outputs\":[{\"internalType\":\"contract SwapAction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"withdrawAndRepay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"creditParams\":\"The borrow parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),uint256,address)\":{\"params\":{\"leverParams\":\"The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan\",\"residualRecipient\":\"Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to\",\"subCollateral\":\"The amount of collateral to withdraw from the position [wad]\"}},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralizer\":\"The address to transfer `upFrontToken` from\",\"leverParams\":\"The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token\",\"permitParams\":\"The permit parameters for the `collateralizer` to transfer `upFrontToken`\",\"upFrontAmount\":\"The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]\",\"upFrontToken\":\"The token to transfer up front to the LeverAction contract\"}},\"multisend(address[],bytes[],bool[])\":{\"params\":{\"data\":\"The encoded data to call each address with\",\"delegateCall\":\"Whether or not to use delegatecall or call\",\"targets\":\"The addresses to call\"}},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the credit flash loan\"}},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the flash loan\"}},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}}},\"title\":\"PositionAction4626\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)\"},\"cdm()\":{\"notice\":\"The CDM contract\"},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),uint256,address)\":{\"notice\":\"Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral\"},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral to a CDP Vault\"},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral and debt to a CDP Vault\"},\"flashlender()\":{\"notice\":\"The flashloan contract\"},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Increase the leverage of a position by taking out a flash loan and buying Stablecoin\"},\"minter()\":{\"notice\":\"Stablecoin mint\"},\"multisend(address[],bytes[],bool[])\":{\"notice\":\"Allows for multiple calls to be made to cover use cases not covered by the other functions\"},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the credit flash loan taken out in decreaseLever\"},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the flash loan taken out in increaseLever\"},\"permit2()\":{\"notice\":\"Permit2\"},\"poolAction()\":{\"notice\":\"The PoolAction contract\"},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)\"},\"self()\":{\"notice\":\"The address of this contract\"},\"stablecoin()\":{\"notice\":\"Stablecoin token\"},\"swapAction()\":{\"notice\":\"The SwapAction contract\"},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Removes collateral from a CDP Vault\"},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Removes collateral and debt from a CDP Vault\"}},\"notice\":\"Generic ERC4626 implementation of PositionAction base contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxy/PositionAction4626.sol\":\"PositionAction4626\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0xeb51c812325c4b4e6a68116241dde8c889ae3fd4a7aecd49adbd07660c1fe6e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7e6e9105a3c49eb9955790d2b0c28580ab280915d929656c89dcc29ce9a64c3\",\"dweb:/ipfs/QmVgZTPRgfGm7rbEYCx9AM3YyaHwyepqwbAgWfpkkASaTC\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d\",\"dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"src/CDM.sol\":{\"keccak256\":\"0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99\",\"dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L\"]},\"src/CDPVault.sol\":{\"keccak256\":\"0xf2f5dbf0b94224a4aed520fb1d1b09b377470827c6da8dba1760ac0ea4efa0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e97a36351d85c0c1c4ac44ec99e16b8b15e548db6272a1ef0ef1256800c38009\",\"dweb:/ipfs/QmNnxqR2xse22M741qAeXBDcsQkLbC5MzhmieLsan3Ehz5\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e\",\"dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT\"]},\"src/interfaces/IBuffer.sol\":{\"keccak256\":\"0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff\",\"dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/ICDPVault.sol\":{\"keccak256\":\"0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f\",\"dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE\"]},\"src/interfaces/ICDPVault_FactoryBase.sol\":{\"keccak256\":\"0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e\",\"dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD\"]},\"src/interfaces/IFlashlender.sol\":{\"keccak256\":\"0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2\",\"dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3\"]},\"src/interfaces/IInterestRateModel.sol\":{\"keccak256\":\"0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599\",\"dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA\"]},\"src/interfaces/IMinter.sol\":{\"keccak256\":\"0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54\",\"dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x23103163e03628c0e8291b368b27cf831c3e55ebe544745b833b6df9a9acada2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58cc66f58fca72fd73c240dca9501165e083d248ff085ee4dc6a7719c224926c\",\"dweb:/ipfs/QmWqhtXoXTfYTkAao3a3F34XVjFsyxVqPCf2StG6udS617\"]},\"src/interfaces/IPause.sol\":{\"keccak256\":\"0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec\",\"dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]},\"src/interfaces/IStablecoin.sol\":{\"keccak256\":\"0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461\",\"dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS\"]},\"src/proxy/BaseAction.sol\":{\"keccak256\":\"0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24\",\"dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR\"]},\"src/proxy/PoolAction.sol\":{\"keccak256\":\"0xeca63a0fcc305e800df0977306fa9bcdeaa7dd010805a032534245546b454f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7af4b5c7297c209bfb299505b2d76f9ec1e76fc6d5c4eee68246cb3824c33fd\",\"dweb:/ipfs/QmXkDfVsrGvyEu3Hp8gaCdEKqraGP1RvrPNkfxwPRGgYdT\"]},\"src/proxy/PositionAction.sol\":{\"keccak256\":\"0xe2f6f2e77524df3e7a3a8cccdcf21aeb4e5285d5d4760233313d9146dff97d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edf8d7642aab8d6341476c82f881fac4c80c35be25dcd22b22f6b09c66174db5\",\"dweb:/ipfs/Qmc89SFb9PSgAkXvb8LSiVhctRAPyt8GoWKwavQFw5uybX\"]},\"src/proxy/PositionAction4626.sol\":{\"keccak256\":\"0xd48efe052047d0291f4a8445815d7e03350bd19770b4222f6119db3b9d44924a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c299b7da7ec09780498d8428999bb85d3ef6954a9860aa7da8a4bf9ea868fe3e\",\"dweb:/ipfs/QmeHBaDs5Ntgt88CDx7yhmFFZMtxpUPEj4Wu6UFsQwhtVu\"]},\"src/proxy/SwapAction.sol\":{\"keccak256\":\"0x2e0bb71458c787799f9f11c2882886cf68a47e3424b81e6f058ebcdc78f4e6e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e682d7d5df6325b21649bd790156b6a6e21884647f0a25edc3b9454a5f60c6c\",\"dweb:/ipfs/QmNNVDMsBC4nf8VeJkt8nYEKFZPsDy6ASnTSFKr3Cs6pc1\"]},\"src/proxy/TransferAction.sol\":{\"keccak256\":\"0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756\",\"dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt\"]},\"src/utils/DoubleLinkedList.sol\":{\"keccak256\":\"0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb\",\"dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/utils/Pause.sol\":{\"keccak256\":\"0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1\",\"dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL\"]},\"src/utils/Permission.sol\":{\"keccak256\":\"0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb\",\"dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p\"]},\"src/vendor/IBalancerVault.sol\":{\"keccak256\":\"0x17c849f6c03184ce5d965ec375d8768857b2b755b8d699bd4a25ef36fff374af\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://82c4bd8c48367dd81f009e17320618d40fdabf602ac0e9e5690e9b63180ad176\",\"dweb:/ipfs/QmRMrxFFXpLCVmSfCndn6MnZkRn4CfWSiXLfQyxwbXJjXm\"]},\"src/vendor/IUniswapV3Router.sol\":{\"keccak256\":\"0x86e4b40c08b0afe97a2c8a8bfb344f7e1c90dc3c1ae0d5809fc8157c2496ab1a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://b41f836677a11b8d3c063ddc7da67362a0ec4521417f5e6a2fa9ccc1484de9d9\",\"dweb:/ipfs/QmP3przMtYQ3BxTz3pxDtFpg1CorXTqatdHAfAMJzTsqzz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flashlender_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "swapActions_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "PoolAction_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Action__revertBytes_emptyRevertBytes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toInt256_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__borrow_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidResidualRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__deposit_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onCreditFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onlyDelegatecall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__repay_InvalidAuxSwap"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "debug_log",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS_CREDIT",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cdm",
          "outputs": [
            {
              "internalType": "contract ICDM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct PoolActionParams",
                  "name": "auxAction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum Protocol",
                      "name": "protocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minOut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "subCollateral",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "residualRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseLever"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndBorrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flashlender",
          "outputs": [
            {
              "internalType": "contract IFlashlender",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct PoolActionParams",
                  "name": "auxAction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum Protocol",
                      "name": "protocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minOut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "upFrontToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "upFrontAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseLever"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "contract IMinter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            },
            {
              "internalType": "bool[]",
              "name": "delegateCall",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multisend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCreditFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permit2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolAction",
          "outputs": [
            {
              "internalType": "contract PoolAction",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "self",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stablecoin",
          "outputs": [
            {
              "internalType": "contract IStablecoin",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapAction",
          "outputs": [
            {
              "internalType": "contract SwapAction",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAndRepay"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "creditParams": "The borrow parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),uint256,address)": {
            "params": {
              "leverParams": "The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan",
              "residualRecipient": "Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to",
              "subCollateral": "The amount of collateral to withdraw from the position [wad]"
            }
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralizer": "The address to transfer `upFrontToken` from",
              "leverParams": "The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token",
              "permitParams": "The permit parameters for the `collateralizer` to transfer `upFrontToken`",
              "upFrontAmount": "The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]",
              "upFrontToken": "The token to transfer up front to the LeverAction contract"
            }
          },
          "multisend(address[],bytes[],bool[])": {
            "params": {
              "data": "The encoded data to call each address with",
              "delegateCall": "Whether or not to use delegatecall or call",
              "targets": "The addresses to call"
            }
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the credit flash loan"
            }
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the flash loan"
            }
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)"
          },
          "cdm()": {
            "notice": "The CDM contract"
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),uint256,address)": {
            "notice": "Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral"
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral to a CDP Vault"
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral and debt to a CDP Vault"
          },
          "flashlender()": {
            "notice": "The flashloan contract"
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Increase the leverage of a position by taking out a flash loan and buying Stablecoin"
          },
          "minter()": {
            "notice": "Stablecoin mint"
          },
          "multisend(address[],bytes[],bool[])": {
            "notice": "Allows for multiple calls to be made to cover use cases not covered by the other functions"
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "notice": "Callback function for the credit flash loan taken out in decreaseLever"
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "notice": "Callback function for the flash loan taken out in increaseLever"
          },
          "permit2()": {
            "notice": "Permit2"
          },
          "poolAction()": {
            "notice": "The PoolAction contract"
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)"
          },
          "self()": {
            "notice": "The address of this contract"
          },
          "stablecoin()": {
            "notice": "Stablecoin token"
          },
          "swapAction()": {
            "notice": "The SwapAction contract"
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Removes collateral from a CDP Vault"
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Removes collateral and debt from a CDP Vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/proxy/PositionAction4626.sol": "PositionAction4626"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0xeb51c812325c4b4e6a68116241dde8c889ae3fd4a7aecd49adbd07660c1fe6e4",
        "urls": [
          "bzz-raw://d7e6e9105a3c49eb9955790d2b0c28580ab280915d929656c89dcc29ce9a64c3",
          "dweb:/ipfs/QmVgZTPRgfGm7rbEYCx9AM3YyaHwyepqwbAgWfpkkASaTC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319",
        "urls": [
          "bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d",
          "dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "src/CDM.sol": {
        "keccak256": "0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5",
        "urls": [
          "bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99",
          "dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L"
        ],
        "license": "MIT"
      },
      "src/CDPVault.sol": {
        "keccak256": "0xf2f5dbf0b94224a4aed520fb1d1b09b377470827c6da8dba1760ac0ea4efa0b4",
        "urls": [
          "bzz-raw://e97a36351d85c0c1c4ac44ec99e16b8b15e548db6272a1ef0ef1256800c38009",
          "dweb:/ipfs/QmNnxqR2xse22M741qAeXBDcsQkLbC5MzhmieLsan3Ehz5"
        ],
        "license": "MIT"
      },
      "src/InterestRateModel.sol": {
        "keccak256": "0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb",
        "urls": [
          "bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e",
          "dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBuffer.sol": {
        "keccak256": "0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f",
        "urls": [
          "bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff",
          "dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault.sol": {
        "keccak256": "0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d",
        "urls": [
          "bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f",
          "dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_FactoryBase.sol": {
        "keccak256": "0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717",
        "urls": [
          "bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e",
          "dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFlashlender.sol": {
        "keccak256": "0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d",
        "urls": [
          "bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2",
          "dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IInterestRateModel.sol": {
        "keccak256": "0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055",
        "urls": [
          "bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599",
          "dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IMinter.sol": {
        "keccak256": "0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3",
        "urls": [
          "bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54",
          "dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x23103163e03628c0e8291b368b27cf831c3e55ebe544745b833b6df9a9acada2",
        "urls": [
          "bzz-raw://58cc66f58fca72fd73c240dca9501165e083d248ff085ee4dc6a7719c224926c",
          "dweb:/ipfs/QmWqhtXoXTfYTkAao3a3F34XVjFsyxVqPCf2StG6udS617"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPause.sol": {
        "keccak256": "0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d",
        "urls": [
          "bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec",
          "dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IStablecoin.sol": {
        "keccak256": "0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239",
        "urls": [
          "bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461",
          "dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/proxy/BaseAction.sol": {
        "keccak256": "0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab",
        "urls": [
          "bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24",
          "dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR"
        ],
        "license": "MIT"
      },
      "src/proxy/PoolAction.sol": {
        "keccak256": "0xeca63a0fcc305e800df0977306fa9bcdeaa7dd010805a032534245546b454f74",
        "urls": [
          "bzz-raw://e7af4b5c7297c209bfb299505b2d76f9ec1e76fc6d5c4eee68246cb3824c33fd",
          "dweb:/ipfs/QmXkDfVsrGvyEu3Hp8gaCdEKqraGP1RvrPNkfxwPRGgYdT"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction.sol": {
        "keccak256": "0xe2f6f2e77524df3e7a3a8cccdcf21aeb4e5285d5d4760233313d9146dff97d7a",
        "urls": [
          "bzz-raw://edf8d7642aab8d6341476c82f881fac4c80c35be25dcd22b22f6b09c66174db5",
          "dweb:/ipfs/Qmc89SFb9PSgAkXvb8LSiVhctRAPyt8GoWKwavQFw5uybX"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction4626.sol": {
        "keccak256": "0xd48efe052047d0291f4a8445815d7e03350bd19770b4222f6119db3b9d44924a",
        "urls": [
          "bzz-raw://c299b7da7ec09780498d8428999bb85d3ef6954a9860aa7da8a4bf9ea868fe3e",
          "dweb:/ipfs/QmeHBaDs5Ntgt88CDx7yhmFFZMtxpUPEj4Wu6UFsQwhtVu"
        ],
        "license": "MIT"
      },
      "src/proxy/SwapAction.sol": {
        "keccak256": "0x2e0bb71458c787799f9f11c2882886cf68a47e3424b81e6f058ebcdc78f4e6e6",
        "urls": [
          "bzz-raw://6e682d7d5df6325b21649bd790156b6a6e21884647f0a25edc3b9454a5f60c6c",
          "dweb:/ipfs/QmNNVDMsBC4nf8VeJkt8nYEKFZPsDy6ASnTSFKr3Cs6pc1"
        ],
        "license": "MIT"
      },
      "src/proxy/TransferAction.sol": {
        "keccak256": "0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e",
        "urls": [
          "bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756",
          "dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt"
        ],
        "license": "MIT"
      },
      "src/utils/DoubleLinkedList.sol": {
        "keccak256": "0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691",
        "urls": [
          "bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb",
          "dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/utils/Pause.sol": {
        "keccak256": "0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19",
        "urls": [
          "bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1",
          "dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL"
        ],
        "license": "MIT"
      },
      "src/utils/Permission.sol": {
        "keccak256": "0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1",
        "urls": [
          "bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb",
          "dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p"
        ],
        "license": "MIT"
      },
      "src/vendor/IBalancerVault.sol": {
        "keccak256": "0x17c849f6c03184ce5d965ec375d8768857b2b755b8d699bd4a25ef36fff374af",
        "urls": [
          "bzz-raw://82c4bd8c48367dd81f009e17320618d40fdabf602ac0e9e5690e9b63180ad176",
          "dweb:/ipfs/QmRMrxFFXpLCVmSfCndn6MnZkRn4CfWSiXLfQyxwbXJjXm"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/vendor/IUniswapV3Router.sol": {
        "keccak256": "0x86e4b40c08b0afe97a2c8a8bfb344f7e1c90dc3c1ae0d5809fc8157c2496ab1a",
        "urls": [
          "bzz-raw://b41f836677a11b8d3c063ddc7da67362a0ec4521417f5e6a2fa9ccc1484de9d9",
          "dweb:/ipfs/QmP3przMtYQ3BxTz3pxDtFpg1CorXTqatdHAfAMJzTsqzz"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/proxy/PositionAction4626.sol",
    "id": 54380,
    "exportedSymbols": {
      "ICDPVault": [
        49449
      ],
      "IERC20": [
        34464
      ],
      "IERC4626": [
        32740
      ],
      "LeverParams": [
        52000
      ],
      "PoolActionParams": [
        51367
      ],
      "PositionAction": [
        53758
      ],
      "PositionAction4626": [
        54379
      ],
      "SafeERC20": [
        35920
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:7074:125",
    "nodes": [
      {
        "id": 53931,
        "nodeType": "PragmaDirective",
        "src": "32:24:125",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 53933,
        "nodeType": "ImportDirective",
        "src": "58:68:125",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "file": "openzeppelin/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54380,
        "sourceUnit": 32570,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53932,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34464,
              "src": "66:6:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53935,
        "nodeType": "ImportDirective",
        "src": "127:72:125",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol",
        "file": "openzeppelin/contracts/interfaces/IERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54380,
        "sourceUnit": 32741,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53934,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32740,
              "src": "135:8:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53937,
        "nodeType": "ImportDirective",
        "src": "200:81:125",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54380,
        "sourceUnit": 35921,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53936,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35920,
              "src": "208:9:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53939,
        "nodeType": "ImportDirective",
        "src": "283:54:125",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDPVault.sol",
        "file": "../interfaces/ICDPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54380,
        "sourceUnit": 49450,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53938,
              "name": "ICDPVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49449,
              "src": "291:9:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53943,
        "nodeType": "ImportDirective",
        "src": "339:83:125",
        "nodes": [],
        "absolutePath": "src/proxy/PositionAction.sol",
        "file": "./PositionAction.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54380,
        "sourceUnit": 53759,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53940,
              "name": "PositionAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53758,
              "src": "347:14:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53941,
              "name": "LeverParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52000,
              "src": "363:11:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53942,
              "name": "PoolActionParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51367,
              "src": "376:16:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54379,
        "nodeType": "ContractDefinition",
        "src": "529:6576:125",
        "nodes": [
          {
            "id": 53950,
            "nodeType": "UsingForDirective",
            "src": "762:27:125",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53947,
              "name": "SafeERC20",
              "nameLocations": [
                "768:9:125"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35920,
              "src": "768:9:125"
            },
            "typeName": {
              "id": 53949,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53948,
                "name": "IERC20",
                "nameLocations": [
                  "782:6:125"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34464,
                "src": "782:6:125"
              },
              "referencedDeclaration": 34464,
              "src": "782:6:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$34464",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 53965,
            "nodeType": "FunctionDefinition",
            "src": "978:135:125",
            "nodes": [],
            "body": {
              "id": 53964,
              "nodeType": "Block",
              "src": "1111:2:125",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 53959,
                    "name": "flashlender_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53952,
                    "src": "1070:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 53960,
                    "name": "swapActions_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53954,
                    "src": "1084:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 53961,
                    "name": "PoolAction_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53956,
                    "src": "1098:11:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 53962,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 53958,
                  "name": "PositionAction",
                  "nameLocations": [
                    "1055:14:125"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53758,
                  "src": "1055:14:125"
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:55:125"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53952,
                  "mutability": "mutable",
                  "name": "flashlender_",
                  "nameLocation": "998:12:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53965,
                  "src": "990:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53954,
                  "mutability": "mutable",
                  "name": "swapActions_",
                  "nameLocation": "1020:12:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53965,
                  "src": "1012:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53956,
                  "mutability": "mutable",
                  "name": "PoolAction_",
                  "nameLocation": "1042:11:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53965,
                  "src": "1034:19:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "989:65:125"
            },
            "returnParameters": {
              "id": 53963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1111:0:125"
            },
            "scope": 54379,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54043,
            "nodeType": "FunctionDefinition",
            "src": "1578:645:125",
            "nodes": [],
            "body": {
              "id": 54042,
              "nodeType": "Block",
              "src": "1678:545:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53979,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "1696:10:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 54042,
                      "src": "1688:18:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53978,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1688:7:125",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53988,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 53983,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53968,
                                "src": "1727:5:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 53982,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49449,
                              "src": "1717:9:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 53984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1717:16:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$49449",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 53985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1734:5:125",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49270,
                          "src": "1717:22:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 53986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1717:24:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 53981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1709:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 53980,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1709:7:125",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 53987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1709:33:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1688:54:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 53991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53989,
                      "name": "src",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53970,
                      "src": "1864:3:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 53990,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53979,
                      "src": "1871:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1864:17:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54022,
                  "nodeType": "IfStatement",
                  "src": "1860:236:125",
                  "trueBody": {
                    "id": 54021,
                    "nodeType": "Block",
                    "src": "1883:213:125",
                    "statements": [
                      {
                        "assignments": [
                          53993
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 53993,
                            "mutability": "mutable",
                            "name": "underlying",
                            "nameLocation": "1905:10:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 54021,
                            "src": "1897:18:125",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 53992,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1897:7:125",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 53999,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 53995,
                                  "name": "collateral",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53979,
                                  "src": "1927:10:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 53994,
                                "name": "IERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32740,
                                "src": "1918:8:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                  "typeString": "type(contract IERC4626)"
                                }
                              },
                              "id": 53996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1918:20:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC4626_$32740",
                                "typeString": "contract IERC4626"
                              }
                            },
                            "id": 53997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1939:5:125",
                            "memberName": "asset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32609,
                            "src": "1918:26:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 53998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1918:28:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1897:49:125"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54004,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53979,
                              "src": "1992:10:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 54005,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53972,
                              "src": "2004:6:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 54001,
                                  "name": "underlying",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53993,
                                  "src": "1967:10:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 54000,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34464,
                                "src": "1960:6:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 54002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1960:18:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$34464",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 54003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1979:12:125",
                            "memberName": "forceApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35777,
                            "src": "1960:31:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 54006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1960:51:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54007,
                        "nodeType": "ExpressionStatement",
                        "src": "1960:51:125"
                      },
                      {
                        "expression": {
                          "id": 54019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54008,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53972,
                            "src": "2025:6:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 54013,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53972,
                                "src": "2063:6:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 54016,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2079:4:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  ],
                                  "id": 54015,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2071:7:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 54014,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2071:7:125",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 54017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2071:13:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 54010,
                                    "name": "collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53979,
                                    "src": "2043:10:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 54009,
                                  "name": "IERC4626",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32740,
                                  "src": "2034:8:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                    "typeString": "type(contract IERC4626)"
                                  }
                                },
                                "id": 54011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2034:20:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC4626_$32740",
                                  "typeString": "contract IERC4626"
                                }
                              },
                              "id": 54012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2055:7:125",
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32657,
                              "src": "2034:28:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 54018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2034:51:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2025:60:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54020,
                        "nodeType": "ExpressionStatement",
                        "src": "2025:60:125"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54027,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53968,
                        "src": "2138:5:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54028,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53972,
                        "src": "2145:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54024,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53979,
                            "src": "2113:10:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54023,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "2106:6:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2106:18:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 54026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2125:12:125",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "2106:31:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 54029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2106:46:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54030,
                  "nodeType": "ExpressionStatement",
                  "src": "2106:46:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54037,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2202:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 54036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2194:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54035,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2194:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2194:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54039,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53972,
                        "src": "2209:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54032,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53968,
                            "src": "2179:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54031,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "2169:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 54033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2169:16:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 54034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2186:7:125",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49343,
                      "src": "2169:24:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 54040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2169:47:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53977,
                  "id": 54041,
                  "nodeType": "Return",
                  "src": "2162:54:125"
                }
              ]
            },
            "baseFunctions": [
              52171
            ],
            "documentation": {
              "id": 53966,
              "nodeType": "StructuredDocumentation",
              "src": "1306:267:125",
              "text": "@notice Deposit collateral into the vault\n @param vault Address of the vault\n @param src Token passed in by the caller\n @param amount Amount of collateral to deposit [CDPVault.tokenScale()]\n @return Amount of collateral deposited [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDeposit",
            "nameLocation": "1587:10:125",
            "overrides": {
              "id": 53974,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1651:8:125"
            },
            "parameters": {
              "id": 53973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53968,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1606:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54043,
                  "src": "1598:13:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53970,
                  "mutability": "mutable",
                  "name": "src",
                  "nameLocation": "1621:3:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54043,
                  "src": "1613:11:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53972,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1634:6:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54043,
                  "src": "1626:14:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:44:125"
            },
            "returnParameters": {
              "id": 53977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54043,
                  "src": "1669:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1668:9:125"
            },
            "scope": 54379,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54105,
            "nodeType": "FunctionDefinition",
            "src": "2509:560:125",
            "nodes": [],
            "body": {
              "id": 54104,
              "nodeType": "Block",
              "src": "2610:459:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54057
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54057,
                      "mutability": "mutable",
                      "name": "collateralWithdrawn",
                      "nameLocation": "2628:19:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 54104,
                      "src": "2620:27:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54056,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2620:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54068,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54064,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2684:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 54063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2676:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54062,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2676:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2676:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54066,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54050,
                        "src": "2691:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54059,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54046,
                            "src": "2660:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54058,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "2650:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 54060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2650:16:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 54061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2667:8:125",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49352,
                      "src": "2650:25:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 54067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2650:48:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2620:78:125"
                },
                {
                  "assignments": [
                    54070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54070,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "2822:10:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 54104,
                      "src": "2814:18:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 54069,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2814:7:125",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54079,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 54074,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54046,
                                "src": "2853:5:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 54073,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49449,
                              "src": "2843:9:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 54075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2843:16:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$49449",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 54076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2860:5:125",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49270,
                          "src": "2843:22:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 54077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2843:24:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 54072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2835:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 54071,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2835:7:125",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 54078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2835:33:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2814:54:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 54082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 54080,
                      "name": "dst",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54048,
                      "src": "2882:3:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 54081,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54070,
                      "src": "2889:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2882:17:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54101,
                  "nodeType": "IfStatement",
                  "src": "2878:148:125",
                  "trueBody": {
                    "id": 54100,
                    "nodeType": "Block",
                    "src": "2901:125:125",
                    "statements": [
                      {
                        "expression": {
                          "id": 54098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54083,
                            "name": "collateralWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54057,
                            "src": "2915:19:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 54088,
                                "name": "collateralWithdrawn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54057,
                                "src": "2965:19:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 54091,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2994:4:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  ],
                                  "id": 54090,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2986:7:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 54089,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2986:7:125",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 54092,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2986:13:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 54095,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3009:4:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  ],
                                  "id": 54094,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3001:7:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 54093,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3001:7:125",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 54096,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3001:13:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 54085,
                                    "name": "collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54070,
                                    "src": "2946:10:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 54084,
                                  "name": "IERC4626",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32740,
                                  "src": "2937:8:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                    "typeString": "type(contract IERC4626)"
                                  }
                                },
                                "id": 54086,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2937:20:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC4626_$32740",
                                  "typeString": "contract IERC4626"
                                }
                              },
                              "id": 54087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2958:6:125",
                              "memberName": "redeem",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32739,
                              "src": "2937:27:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address,address) external returns (uint256)"
                              }
                            },
                            "id": 54097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2937:78:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2915:100:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54099,
                        "nodeType": "ExpressionStatement",
                        "src": "2915:100:125"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 54102,
                    "name": "collateralWithdrawn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54057,
                    "src": "3043:19:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 54055,
                  "id": 54103,
                  "nodeType": "Return",
                  "src": "3036:26:125"
                }
              ]
            },
            "baseFunctions": [
              52183
            ],
            "documentation": {
              "id": 54044,
              "nodeType": "StructuredDocumentation",
              "src": "2229:275:125",
              "text": "@notice Withdraw collateral from the vault\n @param vault Address of the vault\n @param dst Token the caller expects to receive\n @param amount Amount of collateral to withdraw [wad]\n @return Amount of collateral withdrawn [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onWithdraw",
            "nameLocation": "2518:11:125",
            "overrides": {
              "id": 54052,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2583:8:125"
            },
            "parameters": {
              "id": 54051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54046,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2538:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54105,
                  "src": "2530:13:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2530:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54048,
                  "mutability": "mutable",
                  "name": "dst",
                  "nameLocation": "2553:3:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54105,
                  "src": "2545:11:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2545:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54050,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2566:6:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54105,
                  "src": "2558:14:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2558:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2529:44:125"
            },
            "returnParameters": {
              "id": 54055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54054,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54105,
                  "src": "2601:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2601:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2600:9:125"
            },
            "scope": 54379,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54287,
            "nodeType": "FunctionDefinition",
            "src": "3553:2301:125",
            "nodes": [],
            "body": {
              "id": 54286,
              "nodeType": "Block",
              "src": "3753:2101:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54122,
                      "mutability": "mutable",
                      "name": "upFrontCollateral",
                      "nameLocation": "3771:17:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 54286,
                      "src": "3763:25:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54121,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3763:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54123,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3763:25:125"
                },
                {
                  "assignments": [
                    54125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54125,
                      "mutability": "mutable",
                      "name": "addCollateralAmount",
                      "nameLocation": "3806:19:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 54286,
                      "src": "3798:27:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54124,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3798:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54127,
                  "initialValue": {
                    "id": 54126,
                    "name": "swapAmountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54115,
                    "src": "3828:13:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3798:43:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 54140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 54131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 54128,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54109,
                          "src": "3855:11:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 54129,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3867:15:125",
                        "memberName": "collateralToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51990,
                        "src": "3855:27:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 54130,
                        "name": "upFrontToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54111,
                        "src": "3886:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3855:43:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 54139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 54132,
                            "name": "leverParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54109,
                            "src": "3902:11:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                              "typeString": "struct LeverParams memory"
                            }
                          },
                          "id": 54133,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3914:7:125",
                          "memberName": "auxSwap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51996,
                          "src": "3902:19:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapParams_$55496_memory_ptr",
                            "typeString": "struct SwapParams memory"
                          }
                        },
                        "id": 54134,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3922:7:125",
                        "memberName": "assetIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55484,
                        "src": "3902:27:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 54137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3941:1:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 54136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3933:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54135,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3933:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3933:10:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3902:41:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3855:88:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 54150,
                    "nodeType": "Block",
                    "src": "4093:118:125",
                    "statements": [
                      {
                        "expression": {
                          "id": 54148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54146,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54125,
                            "src": "4164:19:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 54147,
                            "name": "upFrontAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54113,
                            "src": "4187:13:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4164:36:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54149,
                        "nodeType": "ExpressionStatement",
                        "src": "4164:36:125"
                      }
                    ]
                  },
                  "id": 54151,
                  "nodeType": "IfStatement",
                  "src": "3851:360:125",
                  "trueBody": {
                    "id": 54145,
                    "nodeType": "Block",
                    "src": "3945:142:125",
                    "statements": [
                      {
                        "expression": {
                          "id": 54143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54141,
                            "name": "upFrontCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54122,
                            "src": "4043:17:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 54142,
                            "name": "upFrontAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54113,
                            "src": "4063:13:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4043:33:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54144,
                        "nodeType": "ExpressionStatement",
                        "src": "4043:33:125"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    54153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54153,
                      "mutability": "mutable",
                      "name": "underlyingToken",
                      "nameLocation": "4229:15:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 54286,
                      "src": "4221:23:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 54152,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4221:7:125",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54160,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54155,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54109,
                              "src": "4256:11:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54156,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4268:15:125",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51990,
                            "src": "4256:27:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54154,
                          "name": "IERC4626",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32740,
                          "src": "4247:8:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                            "typeString": "type(contract IERC4626)"
                          }
                        },
                        "id": 54157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4247:37:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$32740",
                          "typeString": "contract IERC4626"
                        }
                      },
                      "id": 54158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4285:5:125",
                      "memberName": "asset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32609,
                      "src": "4247:43:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 54159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4247:45:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4221:71:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "expression": {
                            "id": 54161,
                            "name": "leverParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54109,
                            "src": "4346:11:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                              "typeString": "struct LeverParams memory"
                            }
                          },
                          "id": 54162,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4358:9:125",
                          "memberName": "auxAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51999,
                          "src": "4346:21:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolActionParams_$51367_memory_ptr",
                            "typeString": "struct PoolActionParams memory"
                          }
                        },
                        "id": 54163,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4368:4:125",
                        "memberName": "args",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51366,
                        "src": "4346:26:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 54164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4373:6:125",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4346:33:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 54165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4383:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4346:38:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54238,
                  "nodeType": "IfStatement",
                  "src": "4342:1008:125",
                  "trueBody": {
                    "id": 54237,
                    "nodeType": "Block",
                    "src": "4386:964:125",
                    "statements": [
                      {
                        "assignments": [
                          54168
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54168,
                            "mutability": "mutable",
                            "name": "joinToken",
                            "nameLocation": "4408:9:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 54237,
                            "src": "4400:17:125",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 54167,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4400:7:125",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54174,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54171,
                                "name": "leverParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54109,
                                "src": "4444:11:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                  "typeString": "struct LeverParams memory"
                                }
                              },
                              "id": 54172,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4456:11:125",
                              "memberName": "primarySwap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51993,
                              "src": "4444:23:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapParams_$55496_memory_ptr",
                                "typeString": "struct SwapParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_SwapParams_$55496_memory_ptr",
                                "typeString": "struct SwapParams memory"
                              }
                            ],
                            "expression": {
                              "id": 54169,
                              "name": "swapAction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52046,
                              "src": "4420:10:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapAction_$56071",
                                "typeString": "contract SwapAction"
                              }
                            },
                            "id": 54170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4431:12:125",
                            "memberName": "getSwapToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56053,
                            "src": "4420:23:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_struct$_SwapParams_$55496_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (struct SwapParams memory) pure external returns (address)"
                            }
                          },
                          "id": 54173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4420:48:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4400:68:125"
                      },
                      {
                        "assignments": [
                          54176
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54176,
                            "mutability": "mutable",
                            "name": "joinUpfrontToken",
                            "nameLocation": "4490:16:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 54237,
                            "src": "4482:24:125",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 54175,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4482:7:125",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54178,
                        "initialValue": {
                          "id": 54177,
                          "name": "upFrontToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54111,
                          "src": "4509:12:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4482:39:125"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 54186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 54179,
                                "name": "leverParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54109,
                                "src": "4540:11:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                  "typeString": "struct LeverParams memory"
                                }
                              },
                              "id": 54180,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4552:7:125",
                              "memberName": "auxSwap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51996,
                              "src": "4540:19:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapParams_$55496_memory_ptr",
                                "typeString": "struct SwapParams memory"
                              }
                            },
                            "id": 54181,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4560:7:125",
                            "memberName": "assetIn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55484,
                            "src": "4540:27:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 54184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4579:1:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 54183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4571:7:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 54182,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4571:7:125",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4571:10:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4540:41:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 54196,
                        "nodeType": "IfStatement",
                        "src": "4536:142:125",
                        "trueBody": {
                          "id": 54195,
                          "nodeType": "Block",
                          "src": "4582:96:125",
                          "statements": [
                            {
                              "expression": {
                                "id": 54193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 54187,
                                  "name": "joinUpfrontToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54176,
                                  "src": "4600:16:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 54190,
                                        "name": "leverParams",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 54109,
                                        "src": "4643:11:125",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                          "typeString": "struct LeverParams memory"
                                        }
                                      },
                                      "id": 54191,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4655:7:125",
                                      "memberName": "auxSwap",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 51996,
                                      "src": "4643:19:125",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SwapParams_$55496_memory_ptr",
                                        "typeString": "struct SwapParams memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_SwapParams_$55496_memory_ptr",
                                        "typeString": "struct SwapParams memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 54188,
                                      "name": "swapAction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 52046,
                                      "src": "4619:10:125",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SwapAction_$56071",
                                        "typeString": "contract SwapAction"
                                      }
                                    },
                                    "id": 54189,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4630:12:125",
                                    "memberName": "getSwapToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 56053,
                                    "src": "4619:23:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$_t_struct$_SwapParams_$55496_memory_ptr_$returns$_t_address_$",
                                      "typeString": "function (struct SwapParams memory) pure external returns (address)"
                                    }
                                  },
                                  "id": 54192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4619:44:125",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4600:63:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 54194,
                              "nodeType": "ExpressionStatement",
                              "src": "4600:63:125"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          54199
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54199,
                            "mutability": "mutable",
                            "name": "poolActionParams",
                            "nameLocation": "4779:16:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 54237,
                            "src": "4755:40:125",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolActionParams_$51367_memory_ptr",
                              "typeString": "struct PoolActionParams"
                            },
                            "typeName": {
                              "id": 54198,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 54197,
                                "name": "PoolActionParams",
                                "nameLocations": [
                                  "4755:16:125"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51367,
                                "src": "4755:16:125"
                              },
                              "referencedDeclaration": 51367,
                              "src": "4755:16:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolActionParams_$51367_storage_ptr",
                                "typeString": "struct PoolActionParams"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54210,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54202,
                                "name": "leverParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54109,
                                "src": "4842:11:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                  "typeString": "struct LeverParams memory"
                                }
                              },
                              "id": 54203,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4854:9:125",
                              "memberName": "auxAction",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51999,
                              "src": "4842:21:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolActionParams_$51367_memory_ptr",
                                "typeString": "struct PoolActionParams memory"
                              }
                            },
                            {
                              "id": 54204,
                              "name": "joinToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54168,
                              "src": "4882:9:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 54205,
                              "name": "joinUpfrontToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54176,
                              "src": "4910:16:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 54206,
                              "name": "swapAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54115,
                              "src": "4945:13:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 54207,
                              "name": "upFrontAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54113,
                              "src": "4977:13:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 54208,
                              "name": "underlyingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54153,
                              "src": "5008:15:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PoolActionParams_$51367_memory_ptr",
                                "typeString": "struct PoolActionParams memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 54200,
                              "name": "poolAction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52050,
                              "src": "4798:10:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PoolAction_$51929",
                                "typeString": "contract PoolAction"
                              }
                            },
                            "id": 54201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4809:15:125",
                            "memberName": "updateLeverJoin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51802,
                            "src": "4798:26:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_struct$_PoolActionParams_$51367_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_struct$_PoolActionParams_$51367_memory_ptr_$",
                              "typeString": "function (struct PoolActionParams memory,address,address,uint256,uint256,address) pure external returns (struct PoolActionParams memory)"
                            }
                          },
                          "id": 54209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4798:239:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolActionParams_$51367_memory_ptr",
                            "typeString": "struct PoolActionParams memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4755:282:125"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 54214,
                                  "name": "poolAction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52050,
                                  "src": "5091:10:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PoolAction_$51929",
                                    "typeString": "contract PoolAction"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PoolAction_$51929",
                                    "typeString": "contract PoolAction"
                                  }
                                ],
                                "id": 54213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5083:7:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 54212,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5083:7:125",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 54215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5083:19:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 54218,
                                      "name": "poolAction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 52050,
                                      "src": "5127:10:125",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PoolAction_$51929",
                                        "typeString": "contract PoolAction"
                                      }
                                    },
                                    "id": 54219,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5138:4:125",
                                    "memberName": "join",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 51531,
                                    "src": "5127:15:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PoolActionParams_$51367_memory_ptr_$returns$__$",
                                      "typeString": "function (struct PoolActionParams memory) external"
                                    }
                                  },
                                  "id": 54220,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5143:8:125",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "5127:24:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 54221,
                                  "name": "poolActionParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54199,
                                  "src": "5153:16:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolActionParams_$51367_memory_ptr",
                                    "typeString": "struct PoolActionParams memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_struct$_PoolActionParams_$51367_memory_ptr",
                                    "typeString": "struct PoolActionParams memory"
                                  }
                                ],
                                "expression": {
                                  "id": 54216,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5104:3:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 54217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5108:18:125",
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "5104:22:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 54222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5104:66:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 54211,
                            "name": "_delegateCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51264,
                            "src": "5052:13:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 54223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5052:132:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 54224,
                        "nodeType": "ExpressionStatement",
                        "src": "5052:132:125"
                      },
                      {
                        "expression": {
                          "id": 54235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54225,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54125,
                            "src": "5269:19:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 54232,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5333:4:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  ],
                                  "id": 54231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5325:7:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 54230,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5325:7:125",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 54233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5325:13:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 54227,
                                    "name": "underlyingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54153,
                                    "src": "5298:15:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 54226,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34464,
                                  "src": "5291:6:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 54228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5291:23:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$34464",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 54229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5315:9:125",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34421,
                              "src": "5291:33:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 54234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5291:48:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5269:70:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54236,
                        "nodeType": "ExpressionStatement",
                        "src": "5269:70:125"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54243,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54109,
                          "src": "5439:11:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 54244,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5451:15:125",
                        "memberName": "collateralToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51990,
                        "src": "5439:27:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54245,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54125,
                        "src": "5468:19:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54240,
                            "name": "underlyingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54153,
                            "src": "5409:15:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54239,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "5402:6:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5402:23:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 54242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5426:12:125",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "5402:36:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 54246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5402:86:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54247,
                  "nodeType": "ExpressionStatement",
                  "src": "5402:86:125"
                },
                {
                  "expression": {
                    "id": 54262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54248,
                      "name": "addCollateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54125,
                      "src": "5498:19:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 54261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 54254,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54125,
                            "src": "5566:19:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 54257,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5595:4:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                  "typeString": "contract PositionAction4626"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                  "typeString": "contract PositionAction4626"
                                }
                              ],
                              "id": 54256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5587:7:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 54255,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5587:7:125",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5587:13:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 54250,
                                  "name": "leverParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54109,
                                  "src": "5529:11:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                    "typeString": "struct LeverParams memory"
                                  }
                                },
                                "id": 54251,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5541:15:125",
                                "memberName": "collateralToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 51990,
                                "src": "5529:27:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 54249,
                              "name": "IERC4626",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32740,
                              "src": "5520:8:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                "typeString": "type(contract IERC4626)"
                              }
                            },
                            "id": 54252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5520:37:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC4626_$32740",
                              "typeString": "contract IERC4626"
                            }
                          },
                          "id": 54253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5558:7:125",
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32657,
                          "src": "5520:45:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,address) external returns (uint256)"
                          }
                        },
                        "id": 54259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5520:81:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 54260,
                        "name": "upFrontCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54122,
                        "src": "5604:17:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5520:101:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5498:123:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54263,
                  "nodeType": "ExpressionStatement",
                  "src": "5498:123:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54269,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54109,
                          "src": "5719:11:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 54270,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5731:5:125",
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51988,
                        "src": "5719:17:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54271,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54125,
                        "src": "5738:19:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54265,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54109,
                              "src": "5677:11:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54266,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5689:15:125",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51990,
                            "src": "5677:27:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54264,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "5670:6:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5670:35:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 54268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5706:12:125",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "5670:48:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 54272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5670:88:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54273,
                  "nodeType": "ExpressionStatement",
                  "src": "5670:88:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54281,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5820:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 54280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5812:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54279,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5812:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5812:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54283,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54125,
                        "src": "5827:19:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54275,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54109,
                              "src": "5785:11:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54276,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5797:5:125",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51988,
                            "src": "5785:17:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54274,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "5775:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 54277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5775:28:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 54278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5804:7:125",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49343,
                      "src": "5775:36:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 54284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5775:72:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 54120,
                  "id": 54285,
                  "nodeType": "Return",
                  "src": "5768:79:125"
                }
              ]
            },
            "baseFunctions": [
              52198
            ],
            "documentation": {
              "id": 54106,
              "nodeType": "StructuredDocumentation",
              "src": "3075:473:125",
              "text": "@notice Hook to decrease lever by depositing collateral into the Yearn Vault and the Yearn Vault\n @param leverParams LeverParams struct\n @param upFrontToken the token passed up front\n @param upFrontAmount the amount of tokens passed up front [IYVault.decimals()]\n @param swapAmountOut the amount of tokens received from the stablecoin flash loan swap [IYVault.decimals()]\n @return Amount of collateral added to CDPVault position [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onIncreaseLever",
            "nameLocation": "3562:16:125",
            "overrides": {
              "id": 54117,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3726:8:125"
            },
            "parameters": {
              "id": 54116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54109,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "3607:11:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54287,
                  "src": "3588:30:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 54108,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54107,
                      "name": "LeverParams",
                      "nameLocations": [
                        "3588:11:125"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52000,
                      "src": "3588:11:125"
                    },
                    "referencedDeclaration": 52000,
                    "src": "3588:11:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$52000_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54111,
                  "mutability": "mutable",
                  "name": "upFrontToken",
                  "nameLocation": "3636:12:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54287,
                  "src": "3628:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3628:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54113,
                  "mutability": "mutable",
                  "name": "upFrontAmount",
                  "nameLocation": "3666:13:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54287,
                  "src": "3658:21:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3658:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54115,
                  "mutability": "mutable",
                  "name": "swapAmountOut",
                  "nameLocation": "3697:13:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54287,
                  "src": "3689:21:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3689:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3578:138:125"
            },
            "returnParameters": {
              "id": 54120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54287,
                  "src": "3744:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3743:9:125"
            },
            "scope": 54379,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54293,
            "nodeType": "EventDefinition",
            "src": "5860:33:125",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8c777f032c1559db5b779797a3c40b902c13da3021783ff84fe93b9261a3ffbf",
            "name": "debug_log",
            "nameLocation": "5866:9:125",
            "parameters": {
              "id": 54292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54289,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54293,
                  "src": "5876:6:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54288,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5876:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54291,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54293,
                  "src": "5884:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5884:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5875:17:125"
            }
          },
          {
            "id": 54378,
            "nodeType": "FunctionDefinition",
            "src": "6247:856:125",
            "nodes": [],
            "body": {
              "id": 54377,
              "nodeType": "Block",
              "src": "6395:708:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54306,
                      "mutability": "mutable",
                      "name": "withdrawnCollateral",
                      "nameLocation": "6456:19:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 54377,
                      "src": "6448:27:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54305,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6448:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54318,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54314,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6524:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 54313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6516:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6516:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6516:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54316,
                        "name": "subCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54299,
                        "src": "6531:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54308,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54297,
                              "src": "6488:11:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54309,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6500:5:125",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51988,
                            "src": "6488:17:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54307,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "6478:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 54310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6478:28:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 54311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6507:8:125",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49352,
                      "src": "6478:37:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 54317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6478:67:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6448:97:125"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "52454445454d",
                        "id": 54320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6571:8:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eba135a74248c737f901cbd8d0f53e729a3f212e734748c2e0d8d39096125e5c",
                          "typeString": "literal_string \"REDEEM\""
                        },
                        "value": "REDEEM"
                      },
                      {
                        "id": 54321,
                        "name": "withdrawnCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54306,
                        "src": "6580:19:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_eba135a74248c737f901cbd8d0f53e729a3f212e734748c2e0d8d39096125e5c",
                          "typeString": "literal_string \"REDEEM\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54319,
                      "name": "debug_log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54293,
                      "src": "6561:9:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 54322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6561:39:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54323,
                  "nodeType": "EmitStatement",
                  "src": "6556:44:125"
                },
                {
                  "expression": {
                    "id": 54340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54324,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54303,
                      "src": "6693:8:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 54330,
                          "name": "withdrawnCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54306,
                          "src": "6749:19:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 54333,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6778:4:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                "typeString": "contract PositionAction4626"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                "typeString": "contract PositionAction4626"
                              }
                            ],
                            "id": 54332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6770:7:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 54331,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6770:7:125",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 54334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6770:13:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 54337,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6793:4:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                "typeString": "contract PositionAction4626"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PositionAction4626_$54379",
                                "typeString": "contract PositionAction4626"
                              }
                            ],
                            "id": 54336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6785:7:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 54335,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6785:7:125",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 54338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6785:13:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54326,
                                "name": "leverParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54297,
                                "src": "6713:11:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                  "typeString": "struct LeverParams memory"
                                }
                              },
                              "id": 54327,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6725:15:125",
                              "memberName": "collateralToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51990,
                              "src": "6713:27:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 54325,
                            "name": "IERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32740,
                            "src": "6704:8:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                              "typeString": "type(contract IERC4626)"
                            }
                          },
                          "id": 54328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6704:37:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$32740",
                            "typeString": "contract IERC4626"
                          }
                        },
                        "id": 54329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6742:6:125",
                        "memberName": "redeem",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32739,
                        "src": "6704:44:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address,address) external returns (uint256)"
                        }
                      },
                      "id": 54339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6704:95:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6693:106:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54341,
                  "nodeType": "ExpressionStatement",
                  "src": "6693:106:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "expression": {
                            "id": 54342,
                            "name": "leverParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54297,
                            "src": "6814:11:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                              "typeString": "struct LeverParams memory"
                            }
                          },
                          "id": 54343,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6826:9:125",
                          "memberName": "auxAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51999,
                          "src": "6814:21:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolActionParams_$51367_memory_ptr",
                            "typeString": "struct PoolActionParams memory"
                          }
                        },
                        "id": 54344,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6836:4:125",
                        "memberName": "args",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51366,
                        "src": "6814:26:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 54345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6841:6:125",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6814:33:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 54346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6851:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6814:38:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54376,
                  "nodeType": "IfStatement",
                  "src": "6810:287:125",
                  "trueBody": {
                    "id": 54375,
                    "nodeType": "Block",
                    "src": "6854:243:125",
                    "statements": [
                      {
                        "assignments": [
                          54349
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54349,
                            "mutability": "mutable",
                            "name": "exitData",
                            "nameLocation": "6881:8:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 54375,
                            "src": "6868:21:125",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 54348,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6868:5:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54364,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 54353,
                                  "name": "poolAction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52050,
                                  "src": "6931:10:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PoolAction_$51929",
                                    "typeString": "contract PoolAction"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PoolAction_$51929",
                                    "typeString": "contract PoolAction"
                                  }
                                ],
                                "id": 54352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6923:7:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 54351,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6923:7:125",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 54354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6923:19:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 54357,
                                      "name": "poolAction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 52050,
                                      "src": "6967:10:125",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PoolAction_$51929",
                                        "typeString": "contract PoolAction"
                                      }
                                    },
                                    "id": 54358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6978:4:125",
                                    "memberName": "exit",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 51829,
                                    "src": "6967:15:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PoolActionParams_$51367_memory_ptr_$returns$_t_uint256_$",
                                      "typeString": "function (struct PoolActionParams memory) external returns (uint256)"
                                    }
                                  },
                                  "id": 54359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6983:8:125",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "6967:24:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 54360,
                                    "name": "leverParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54297,
                                    "src": "6993:11:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                      "typeString": "struct LeverParams memory"
                                    }
                                  },
                                  "id": 54361,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7005:9:125",
                                  "memberName": "auxAction",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51999,
                                  "src": "6993:21:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolActionParams_$51367_memory_ptr",
                                    "typeString": "struct PoolActionParams memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_struct$_PoolActionParams_$51367_memory_ptr",
                                    "typeString": "struct PoolActionParams memory"
                                  }
                                ],
                                "expression": {
                                  "id": 54355,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6944:3:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 54356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6948:18:125",
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "6944:22:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 54362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6944:71:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 54350,
                            "name": "_delegateCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51264,
                            "src": "6892:13:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 54363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6892:137:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6868:161:125"
                      },
                      {
                        "expression": {
                          "id": 54373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54365,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54303,
                            "src": "7044:8:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 54368,
                                "name": "exitData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54349,
                                "src": "7066:8:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 54370,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7077:7:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 54369,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7077:7:125",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 54371,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7076:9:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "expression": {
                                "id": 54366,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "7055:3:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 54367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7059:6:125",
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "7055:10:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 54372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7055:31:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7044:42:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54374,
                        "nodeType": "ExpressionStatement",
                        "src": "7044:42:125"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              52209
            ],
            "documentation": {
              "id": 54294,
              "nodeType": "StructuredDocumentation",
              "src": "5898:344:125",
              "text": "@notice Hook to decrease lever by withdrawing collateral from the CDPVault and the ERC4626 Vault\n @param leverParams LeverParams struct\n @param subCollateral Amount of collateral to withdraw in CDPVault decimals [wad]\n @return tokenOut Amount of underlying token withdrawn from the ERC4626 vault [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDecreaseLever",
            "nameLocation": "6256:16:125",
            "overrides": {
              "id": 54301,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6359:8:125"
            },
            "parameters": {
              "id": 54300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54297,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "6301:11:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54378,
                  "src": "6282:30:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 54296,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54295,
                      "name": "LeverParams",
                      "nameLocations": [
                        "6282:11:125"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52000,
                      "src": "6282:11:125"
                    },
                    "referencedDeclaration": 52000,
                    "src": "6282:11:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$52000_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54299,
                  "mutability": "mutable",
                  "name": "subCollateral",
                  "nameLocation": "6330:13:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54378,
                  "src": "6322:21:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6322:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6272:77:125"
            },
            "returnParameters": {
              "id": 54304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54303,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "6385:8:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54378,
                  "src": "6377:16:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6377:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6376:18:125"
            },
            "scope": 54379,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53945,
              "name": "PositionAction",
              "nameLocations": [
                "560:14:125"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53758,
              "src": "560:14:125"
            },
            "id": 53946,
            "nodeType": "InheritanceSpecifier",
            "src": "560:14:125"
          }
        ],
        "canonicalName": "PositionAction4626",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 53944,
          "nodeType": "StructuredDocumentation",
          "src": "424:105:125",
          "text": "@title PositionAction4626\n @notice Generic ERC4626 implementation of PositionAction base contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54379,
          53758,
          51282,
          56219,
          50021,
          49972
        ],
        "name": "PositionAction4626",
        "nameLocation": "538:18:125",
        "scope": 54380,
        "usedErrors": [
          51235,
          52052,
          52054,
          52056,
          52058,
          52060,
          52062,
          52064,
          52066,
          52068,
          52070,
          52072,
          52074,
          134735
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 125
}