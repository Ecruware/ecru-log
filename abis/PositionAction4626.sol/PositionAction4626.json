{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "flashlender_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "swapActions_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Action__revertBytes_emptyRevertBytes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toInt256_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__borrow_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidResidualRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__deposit_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onCreditFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onlyDelegatecall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__repay_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS_CREDIT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cdm",
      "outputs": [
        {
          "internalType": "contract ICDM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimForEpoch",
          "type": "uint256"
        }
      ],
      "name": "claimUndelegatedCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "subCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "residualRecipient",
          "type": "address"
        }
      ],
      "name": "decreaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "creditAmount",
          "type": "uint256"
        }
      ],
      "name": "delegate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sharesAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "credit",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "enum SwapProtocol",
              "name": "swapProtocol",
              "type": "uint8"
            },
            {
              "internalType": "enum SwapType",
              "name": "swapType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "args",
              "type": "bytes"
            }
          ],
          "internalType": "struct SwapParams",
          "name": "swapParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "delegateViaStablecoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "depositAndBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "depositVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegateVault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "credit",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "depositAndDelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flashlender",
      "outputs": [
        {
          "internalType": "contract IFlashlender",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "upFrontToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "upFrontAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "increaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "contract IMinter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        },
        {
          "internalType": "bool[]",
          "name": "delegateCall",
          "type": "bool[]"
        }
      ],
      "name": "multisend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onCreditFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimForEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "subNormalDebt",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "repayAndClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "self",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IStablecoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapAction",
      "outputs": [
        {
          "internalType": "contract SwapAction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "prevQueuedEpochs",
          "type": "uint256[]"
        }
      ],
      "name": "undelegate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "estimatedClaim",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimableAtEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fixableUntilEpoch",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "withdrawVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegateVault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimForEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "subNormalDebt",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        }
      ],
      "name": "withdrawAndClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "withdrawAndRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b5060405162005b5738038062005b578339810160408190526200003591620002bb565b8181816001600160a01b031660a0816001600160a01b03168152505060a0516001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000092573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b89190620002fa565b6001600160a01b031660c0816001600160a01b03168152505060a0516001600160a01b031663075461726040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000112573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001389190620002fa565b6001600160a01b031660e0816001600160a01b03168152505060a0516001600160a01b031663e2dfb3176040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000192573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b89190620002fa565b6001600160a01b03908116608081905230610100528282166101205260e05160405163d9c70f5760e01b815292166004830152600160248301529063d9c70f5790604401600060405180830381600087803b1580156200021757600080fd5b505af11580156200022c573d6000803e3d6000fd5b505060805160405163d9c70f5760e01b81526001600160a01b03868116600483015260016024830152909116925063d9c70f579150604401600060405180830381600087803b1580156200027f57600080fd5b505af115801562000294573d6000803e3d6000fd5b505050505050505062000321565b6001600160a01b0381168114620002b857600080fd5b50565b60008060408385031215620002cf57600080fd5b8251620002dc81620002a2565b6020840151909250620002ef81620002a2565b809150509250929050565b6000602082840312156200030d57600080fd5b81516200031a81620002a2565b9392505050565b60805160a05160c05160e05161010051610120516155ee620005696000396000818161035b01528181610dbd01528181610fbd015281816110d00152818161112d015281816132380152818161357401526137ab0152600081816102c7015281816105e7015281816106d90152818161079c0152818161081e0152818161099201528181610a3601528181610b19015281816113ab0152818161149201528181611569015281816117bb0152818161191501528181611b0f01528181611beb01528181611d0201528181611d8f01528181611dc001528181611e2101528181611ec501528181611fca01528181612013015281816122bd0152818161250e01526126ec0152600081816101d101528181610ea501528181610f310152818161124701528181612146015281816121cb01528181612ed601528181612f6d0152818161303e015281816130b5015281816131650152818161346501526134ea0152600081816103e201528181610e78015281816112cd01528181611b9101528181611ee6015281816120d101528181612119015281816131ca015281816133de015261343801526000818161041c01528181610a0b01528181610b9c0152818161105c015281816113020152611e9a0152600081816103bb0152818161047e0152818161056d01528181610c2c01528181610d3f015281816116370152818161173b0152818161197701528181611a850152818161237f0152818161248c0152818161274e0152818161284b01528181612ea70152818161300d015261313401526155ee6000f3fe608060405234801561001057600080fd5b50600436106101795760003560e01c80637104ddb2116100d9578063dfad9c3711610087578063dfad9c37146103a3578063e2dfb317146103b6578063e9cbd822146103dd578063ecec164114610404578063ee58918a14610417578063f38584e01461043e578063faa994051461045157600080fd5b80637104ddb2146102c25780637810436a146102e95780638237e5381461031c57806396c2c40814610343578063a888828b14610356578063aad598ae1461037d578063df3df7731461039057600080fd5b806312261ee71161013657806312261ee71461023a57806316d8f1651461025057806323e30c8b146102635780634ad4d4ad1461027657806356415a901461028957806365b57a741461029c5780636c747057146102af57600080fd5b8063026e402b1461017e57806303ccc7d0146101a45780630567d4b1146101b957806307546172146101cc5780630b839bf2146102005780630f13be2a14610213575b600080fd5b61019161018c3660046142a3565b610464565b6040519081526020015b60405180910390f35b6101b76101b23660046142f9565b6105dd565b005b6101b76101c7366004614388565b6106cf565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b60405161019b91906143fc565b6101b761020e366004614422565b610792565b6101917f24ea9631d6c6b69006fd9fa411bb9c8909638fd1d178dd2f1d231dca3e3e4d7981565b6101f36e22d473030f116ddee9f6b43ac78ba381565b61019161025e3660046144c4565b610b8f565b61019161027136600461452d565b61104f565b6101b76102843660046145ba565b6113a1565b6101b7610297366004614655565b611488565b6101b76102aa3660046146b6565b61155f565b6101b76102bd366004614720565b6117b1565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6102fc6102f73660046147bb565b611880565b60408051948552602085019390935291830152606082015260800161019b565b6101917f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd981565b6101b76103513660046145ba565b61190b565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6101b761038b366004614816565b611b05565b6101b761039e366004614888565b612009565b6101916103b13660046142a3565b61223e565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6101b76104123660046148f1565b6122b3565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6101b761044c366004614977565b612504565b6101b761045f3660046149fe565b6126e2565b60405163d9c70f5760e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d9c70f57906104b6908690600190600401614a57565b600060405180830381600087803b1580156104d057600080fd5b505af11580156104e4573d6000803e3d6000fd5b50506040516393f9eb3560e01b8152600481018590526001600160a01b03861692506393f9eb3591506024016020604051808303816000875af115801561052f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105539190614a72565b60405163d9c70f5760e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d9c70f57906105a5908690600090600401614a57565b600060405180830381600087803b1580156105bf57600080fd5b505af11580156105d3573d6000803e3d6000fd5b5050505092915050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106265760405163f46a288f60e01b815260040160405180910390fd5b60006106338684846128b5565b90506000610642878987612a14565b9050866001600160a01b031663c75a4b5e89303061065f87612aa0565b61066887612aa0565b6040518663ffffffff1660e01b8152600401610688959493929190614a8b565b600060405180830381600087803b1580156106a257600080fd5b505af11580156106b6573d6000803e3d6000fd5b505050506106c48686610464565b505050505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107185760405163f46a288f60e01b815260040160405180910390fd5b60006107258484846128b5565b9050836001600160a01b031663c75a4b5e86303061074286612aa0565b60006040518663ffffffff1660e01b8152600401610764959493929190614a8b565b600060405180830381600087803b15801561077e57600080fd5b505af11580156106c4573d6000803e3d6000fd5b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107db5760405163f46a288f60e01b815260040160405180910390fd5b60016107ea6060850185614ad5565b6107fb906040810190602001614b04565b600181111561080c5761080c614abf565b14158061086857506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661084b6060850185614ad5565b61085c9060c081019060a001614b1f565b6001600160a01b031614155b15610886576040516338ef377d60e01b815260040160405180910390fd5b60006108956080850185614ad5565b6108a6906060810190604001614b1f565b6001600160a01b0316141580156108ec575060006108c76080850185614ad5565b6108d8906040810190602001614b04565b60018111156108e9576108e9614abf565b14155b1561090a57604051630e6c295f60e11b815260040160405180910390fd5b60006109196080850185614ad5565b61092a906060810190604001614b1f565b6001600160a01b031614801561094757506001600160a01b038116155b156109655760405163163a7c2d60e01b815260040160405180910390fd5b6109756040840160208501614b1f565b6001600160a01b0316638309dbdd6109906020860186614b1f565b7f000000000000000000000000000000000000000000000000000000000000000060016040518463ffffffff1660e01b81526004016109d193929190614b3c565b600060405180830381600087803b1580156109eb57600080fd5b505af11580156109ff573d6000803e3d6000fd5b50506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150637b644bad90507f0000000000000000000000000000000000000000000000000000000000000000610a626060870187614ad5565b60600135868686604051602001610a7b93929190614d5c565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610aa893929190614ddf565b6020604051808303816000875af1158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb9190614e14565b50610afc6040840160208501614b1f565b6001600160a01b0316638309dbdd610b176020860186614b1f565b7f000000000000000000000000000000000000000000000000000000000000000060006040518463ffffffff1660e01b8152600401610b5893929190614b3c565b600060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b50505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bda576040516351b8314560e11b815260040160405180910390fd5b60008080610bea8587018761506b565b9250925092506000610c0d84602001518560000151866060015160600151612a14565b602085015160405163d9c70f5760e01b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163d9c70f5791610c6291600190600401614a57565b600060405180830381600087803b158015610c7c57600080fd5b505af1158015610c90573d6000803e3d6000fd5b5050505083602001516001600160a01b031663c75a4b5e85600001513030610cb788612aa0565b610cc0906150b8565b610cc987612aa0565b610cd2906150b8565b6040518663ffffffff1660e01b8152600401610cf2959493929190614a8b565b600060405180830381600087803b158015610d0c57600080fd5b505af1158015610d20573d6000803e3d6000fd5b505050602085015160405163d9c70f5760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016925063d9c70f5791610d7691600090600401614a57565b600060405180830381600087803b158015610d9057600080fd5b505af1158015610da4573d6000803e3d6000fd5b505050506000610db48585612aca565b90506000610e307f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8860600151604051602401610df991906150d4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612bc5565b9050600081806020019051810190610e489190614a72565b90506000610e568285615166565b6060808a0151015160405163095ea7b360e01b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163095ea7b391610ece917f00000000000000000000000000000000000000000000000000000000000000009190600401615179565b6020604051808303816000875af1158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f119190614e14565b506060808901510151604051637e348b7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691637e348b7d91610f66913091600401615179565b600060405180830381600087803b158015610f8057600080fd5b505af1158015610f94573d6000803e3d6000fd5b50505050600081111561101c576080880151604001516001600160a01b031615610fff57610ff97f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8a60800151604051602401610df991906150d4565b5061101c565b60608801516040015161101c906001600160a01b03168783612c35565b507f24ea9631d6c6b69006fd9fa411bb9c8909638fd1d178dd2f1d231dca3e3e4d799d9c50505050505050505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461109a576040516309436d0560e01b815260040160405180910390fd5b600080806110aa85870187615192565b60808301516040015192955090935091506001600160a01b03161561112657600061110c7f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8660800151604051602401610df991906150d4565b9050808060200190518101906111229190614a72565b9150505b60006111697f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8660600151604051602401610df991906150d4565b90506000818060200190518101906111819190614a72565b9050600061119186868685612c90565b905060006111b087602001518860000151896060015160600151612a14565b905086602001516001600160a01b031663c75a4b5e886000015130306111d587612aa0565b6111de87612aa0565b6040518663ffffffff1660e01b81526004016111fe959493929190614a8b565b600060405180830381600087803b15801561121857600080fd5b505af115801561122c573d6000803e3d6000fd5b50505050606087810151015160405163ef693bed60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163ef693bed91611284913091600401615179565b600060405180830381600087803b15801561129e57600080fd5b505af11580156112b2573d6000803e3d6000fd5b50505050606087810151015160405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163095ea7b39161132a917f000000000000000000000000000000000000000000000000000000000000000091600401615179565b6020604051808303816000875af1158015611349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136d9190614e14565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99e9d5050505050505050505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113ea5760405163f46a288f60e01b815260040160405180910390fd5b60006113f78585846128b5565b9050600061140786888635612a14565b9050856001600160a01b031663c75a4b5e88303061142487612aa0565b61142d87612aa0565b6040518663ffffffff1660e01b815260040161144d959493929190614a8b565b600060405180830381600087803b15801561146757600080fd5b505af115801561147b573d6000803e3d6000fd5b50505050610b8684612e90565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036114d15760405163f46a288f60e01b815260040160405180910390fd5b60006114df83858435612a14565b9050826001600160a01b031663c75a4b5e85303060006114fe87612aa0565b6040518663ffffffff1660e01b815260040161151e959493929190614a8b565b600060405180830381600087803b15801561153857600080fd5b505af115801561154c573d6000803e3d6000fd5b5050505061155982612e90565b50505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036115a85760405163f46a288f60e01b815260040160405180910390fd5b6115b486868484613281565b604051631591b45160e11b8152600481018590526001600160a01b03861690632b2368a2906024016020604051808303816000875af11580156115fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161f9190614a72565b50604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd906116719089908990600190600401614b3c565b600060405180830381600087803b15801561168b57600080fd5b505af115801561169f573d6000803e3d6000fd5b5050506001600160a01b038616905063c75a4b5e87308060006116cb6116c68a8a356151eb565b612aa0565b6116d4906150b8565b6040518663ffffffff1660e01b81526004016116f4959493929190614a8b565b600060405180830381600087803b15801561170e57600080fd5b505af1158015611722573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506117779089908990600090600401614b3c565b600060405180830381600087803b15801561179157600080fd5b505af11580156117a5573d6000803e3d6000fd5b50505050505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036117fa5760405163f46a288f60e01b815260040160405180910390fd5b816001600160a01b031663c75a4b5e8430306118198660200135612aa0565b611822906150b8565b60006040518663ffffffff1660e01b8152600401611844959493929190614a8b565b600060405180830381600087803b15801561185e57600080fd5b505af1158015611872573d6000803e3d6000fd5b505050506115598282613521565b600080600080876001600160a01b0316636e5e741e8888886040518463ffffffff1660e01b81526004016118b6939291906151fe565b6080604051808303816000875af11580156118d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f9919061523f565b929b919a509850909650945050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036119545760405163f46a288f60e01b815260040160405180910390fd5b61196085858484613281565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd906119b19088908890600190600401614b3c565b600060405180830381600087803b1580156119cb57600080fd5b505af11580156119df573d6000803e3d6000fd5b50505050836001600160a01b031663c75a4b5e863030611a028860200135612aa0565b611a0b906150b8565b611a158835612aa0565b611a1e906150b8565b6040518663ffffffff1660e01b8152600401611a3e959493929190614a8b565b600060405180830381600087803b158015611a5857600080fd5b505af1158015611a6c573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd9150611ac19088908890600090600401614b3c565b600060405180830381600087803b158015611adb57600080fd5b505af1158015611aef573d6000803e3d6000fd5b50505050611afd8484613521565b505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611b4e5760405163f46a288f60e01b815260040160405180910390fd5b6000611b5d6060870187614ad5565b611b6e906040810190602001614b04565b6001811115611b7f57611b7f614abf565b141580611bdb57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611bbe6060870187614ad5565b611bcf906060810190604001614b1f565b6001600160a01b031614155b80611c3557506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611c186060870187614ad5565b611c299060c081019060a001614b1f565b6001600160a01b031614155b15611c53576040516304286a2760e01b815260040160405180910390fd5b6000611c626080870187614ad5565b611c73906060810190604001614b1f565b6001600160a01b031614158015611d4c57506000611c946080870187614ad5565b611ca5906040810190602001614b04565b6001811115611cb657611cb6614abf565b141580611cf257506001600160a01b038416611cd56080870187614ad5565b611ce6906060810190604001614b1f565b6001600160a01b031614155b80611d4c57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611d2f6080870187614ad5565b611d409060c081019060a001614b1f565b6001600160a01b031614155b15611d6a57604051630655da1360e41b815260040160405180910390fd5b8215611df457306001600160a01b03831603611db957611db46001600160a01b0385167f000000000000000000000000000000000000000000000000000000000000000085612c35565b611df4565b611df484837f000000000000000000000000000000000000000000000000000000000000000086611def36879003870187615286565b6135df565b611e046040860160208701614b1f565b6001600160a01b0316638309dbdd611e1f6020880188614b1f565b7f000000000000000000000000000000000000000000000000000000000000000060016040518463ffffffff1660e01b8152600401611e6093929190614b3c565b600060405180830381600087803b158015611e7a57600080fd5b505af1158015611e8e573d6000803e3d6000fd5b50506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150635cffe9de90507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611f1260608a018a614ad5565b60600135898989604051602001611f2b93929190615319565b6040516020818303038152906040526040518563ffffffff1660e01b8152600401611f599493929190615347565b6020604051808303816000875af1158015611f78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9c9190614e14565b50611fad6040860160208701614b1f565b6001600160a01b0316638309dbdd611fc86020880188614b1f565b7f000000000000000000000000000000000000000000000000000000000000000060006040518463ffffffff1660e01b815260040161076493929190614b3c565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036120525760405163f46a288f60e01b815260040160405180910390fd5b60006120646060840160408501614b1f565b6001600160a01b0316146120bc573061208360c0840160a08501614b1f565b6001600160a01b0316146120aa57604051634d6d22c560e11b815260040160405180910390fd5b6120b58583836137a3565b9250612102565b6001600160a01b0385163014612102576121027f0000000000000000000000000000000000000000000000000000000000000000863086611def36879003870187615286565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390612170907f0000000000000000000000000000000000000000000000000000000000000000908790600401615179565b6020604051808303816000875af115801561218f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b39190614e14565b50604051637e348b7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637e348b7d906122029030908790600401615179565b600060405180830381600087803b15801561221c57600080fd5b505af1158015612230573d6000803e3d6000fd5b50505050611afd8484610464565b604051631591b45160e11b8152600481018290526000906001600160a01b03841690632b2368a2906024016020604051808303816000875af1158015612288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ac9190614a72565b9392505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036122fc5760405163f46a288f60e01b815260040160405180910390fd5b604051631591b45160e11b8152600481018490526001600160a01b03851690632b2368a2906024016020604051808303816000875af1158015612343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123679190614a72565b50604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd906123b99089908990600190600401614b3c565b600060405180830381600087803b1580156123d357600080fd5b505af11580156123e7573d6000803e3d6000fd5b50505050846001600160a01b031663c75a4b5e87303061240a8660200135612aa0565b612413906150b8565b61241c88612aa0565b612425906150b8565b6040518663ffffffff1660e01b8152600401612445959493929190614a8b565b600060405180830381600087803b15801561245f57600080fd5b505af1158015612473573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506124c89089908990600090600401614b3c565b600060405180830381600087803b1580156124e257600080fd5b505af11580156124f6573d6000803e3d6000fd5b50505050610b868582613521565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361254d5760405163f46a288f60e01b815260040160405180910390fd5b8460005b818110156126d85783838281811061256b5761256b61537a565b90506020020160208101906125809190615390565b156126135761260d88888381811061259a5761259a61537a565b90506020020160208101906125af9190614b1f565b8787848181106125c1576125c161537a565b90506020028101906125d391906153ad565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612bc592505050565b506126d0565b6000808989848181106126285761262861537a565b905060200201602081019061263d9190614b1f565b6001600160a01b03168888858181106126585761265861537a565b905060200281019061266a91906153ad565b6040516126789291906153f3565b6000604051808303816000865af19150503d80600081146126b5576040519150601f19603f3d011682016040523d82523d6000602084013e6126ba565b606091505b5091509150816126cd576126cd81613870565b50505b600101612551565b5050505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361272b5760405163f46a288f60e01b815260040160405180910390fd5b61273784848484613281565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd906127889087908790600190600401614b3c565b600060405180830381600087803b1580156127a257600080fd5b505af11580156127b6573d6000803e3d6000fd5b50505050826001600160a01b031663c75a4b5e85303060006127db8860000135612aa0565b6127e4906150b8565b6040518663ffffffff1660e01b8152600401612804959493929190614a8b565b600060405180830381600087803b15801561281e57600080fd5b505af1158015612832573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506128879087908790600090600401614b3c565b600060405180830381600087803b1580156128a157600080fd5b505af11580156126d8573d6000803e3d6000fd5b60006020830135816128ca6060860186614ad5565b6128db906060810190604001614b1f565b6001600160a01b0316146129a4576128f66020850185614b1f565b6001600160a01b031661290c6060860186614ad5565b61291d906060810190604001614b1f565b6001600160a01b031614158061295957503061293c6060860186614ad5565b61294d9060c081019060a001614b1f565b6001600160a01b031614155b156129775760405163469498c560e11b815260040160405180910390fd5b61299d61298a6060860160408701614b1f565b6129976060870187614ad5565b856137a3565b90506129f4565b306129b56060860160408701614b1f565b6001600160a01b0316146129f4576129f46129d36020860186614b1f565b6129e36060870160408801614b1f565b3084611def36899003890189615286565b612a0b85612a056020870187614b1f565b83613898565b95945050505050565b6000806000856001600160a01b0316638051ba75866040518263ffffffff1660e01b8152600401612a4591906143fc565b606060405180830381865afa158015612a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a869190615403565b5091509150612a96848383613a8c565b9695505050505050565b6000600160ff1b8210612ac657604051632db27c5360e01b815260040160405180910390fd5b5090565b60008083602001516001600160a01b031663f3fef3a330856040518363ffffffff1660e01b8152600401612aff929190615179565b6020604051808303816000875af1158015612b1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b429190614a72565b905083604001516001600160a01b031663ba0876528230306040518463ffffffff1660e01b8152600401612b7893929190615446565b6020604051808303816000875af1158015612b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bbb9190614a72565b9150505b92915050565b6060600080846001600160a01b031684604051612be29190615465565b600060405180830381855af49150503d8060008114612c1d576040519150601f19603f3d011682016040523d82523d6000602084013e612c22565b606091505b509150915081612bbb57612bbb81613870565b612c8b8363a9059cbb60e01b8484604051602401612c54929190615179565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613ac8565b505050565b6000806000839050856001600160a01b031687604001516001600160a01b0316148015612ccc57506080870151604001516001600160a01b0316155b15612cd957849150612ce6565b612ce385826151eb565b90505b600087604001516001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d4e9190615477565b6040890151909150612d6b906001600160a01b0383169084613ba2565b6040808901519051636e553f6560e01b81526004810184905230602482015284916001600160a01b031690636e553f65906044016020604051808303816000875af1158015612dbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612de29190614a72565b612dec91906151eb565b602089015160408a0151919350612e0d916001600160a01b03169084613ba2565b87602001516001600160a01b03166347e7ef2430846040518363ffffffff1660e01b8152600401612e3f929190615179565b6020604051808303816000875af1158015612e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e829190614a72565b93505050505b949350505050565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd90612f019030907f000000000000000000000000000000000000000000000000000000000000000090600190600401614b3c565b600060405180830381600087803b158015612f1b57600080fd5b505af1158015612f2f573d6000803e3d6000fd5b5060009250612f449150506040830183614ad5565b612f55906060810190604001614b1f565b6001600160a01b03160361309e576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ef693bed612fa26040840160208501614b1f565b6040516001600160e01b031960e084901b168152612fc69190853590600401615179565b600060405180830381600087803b158015612fe057600080fd5b505af1158015612ff4573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506130699030907f000000000000000000000000000000000000000000000000000000000000000090600090600401614b3c565b600060405180830381600087803b15801561308357600080fd5b505af1158015613097573d6000803e3d6000fd5b5050505050565b60405163ef693bed60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef693bed906130ed903090853590600401615179565b600060405180830381600087803b15801561310757600080fd5b505af115801561311b573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506131909030907f000000000000000000000000000000000000000000000000000000000000000090600090600401614b3c565b600060405180830381600087803b1580156131aa57600080fd5b505af11580156131be573d6000803e3d6000fd5b50506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506131fb90506040830183614ad5565b61320c906060810190604001614b1f565b6001600160a01b0316146132335760405163051b33b760e51b815260040160405180910390fd5b61327c7f00000000000000000000000000000000000000000000000000000000000000006311b2aacd60e21b61326c6040850185614ad5565b604051602401610df99190615494565b505b50565b6000806132916040850185614ad5565b6132a2906060810190604001614b1f565b6001600160a01b03161461332357306132be6040850185614ad5565b6132cf9060c081019060a001614b1f565b6001600160a01b0316146132f657604051633300ff5360e21b815260040160405180910390fd5b61331c6133096040850160208601614b1f565b6133166040860186614ad5565b846137a3565b9050613421565b600080856001600160a01b0316638051ba75886040518263ffffffff1660e01b815260040161335291906143fc565b606060405180830381865afa15801561336f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133939190615403565b509092509050806133ae6001600160401b0384168735613c3b565b6133b89190615166565b9250306133cb6040870160208801614b1f565b6001600160a01b03161461341e5761341e7f000000000000000000000000000000000000000000000000000000000000000061340d6040880160208901614b1f565b3086611def368a90038a018a615286565b50505b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b39061348f907f0000000000000000000000000000000000000000000000000000000000000000908590600401615179565b6020604051808303816000875af11580156134ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134d29190614e14565b50604051637e348b7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637e348b7d906107649030908590600401615179565b60008061353f846135356020860186614b1f565b8560200135613c69565b905060006135506060850185614ad5565b613561906060810190604001614b1f565b6001600160a01b0316146135ae576135a87f00000000000000000000000000000000000000000000000000000000000000006311b2aacd60e21b61326c6060870187614ad5565b506122ac565b6122ac6135c16060850160408601614b1f565b826135cf6020870187614b1f565b6001600160a01b03169190612c35565b6002815160028111156135f4576135f4614abf565b0361371e576e22d473030f116ddee9f6b43ac78ba36001600160a01b03166330f28b7a604051806060016040528060405180604001604052808a6001600160a01b03168152602001866020015181525081526020018460400151815260200184606001518152506040518060400160405280876001600160a01b0316815260200186815250878560a001518660c00151876080015160f81b6040516020016136b99392919092835260208301919091526001600160f81b031916604082015260410190565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016136e794939291906154a7565b600060405180830381600087803b15801561370157600080fd5b505af1158015613715573d6000803e3d6000fd5b50505050613097565b60018151600281111561373357613733614abf565b0361378e5761377484848360200151846060015185608001518660a001518760c001518c6001600160a01b0316613ddd90979695949392919063ffffffff16565b6137896001600160a01b038616858585613fac565b613097565b6130976001600160a01b038616858585613fac565b6000806137e77f0000000000000000000000000000000000000000000000000000000000000000630147931c60e01b878688604051602401610df993929190615520565b90506000818060200190518101906137ff9190614a72565b905060016138136040870160208801614b04565b600181111561382457613824614abf565b03613863576000613839826080880135615166565b905080156138565761385687826135cf60608a0160408b01614b1f565b8560600135935050613867565b8092505b50509392505050565b80511561387f57805181602001fd5b60405163491182fb60e01b815260040160405180910390fd5b600080846001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138fd9190615477565b9050806001600160a01b0316846001600160a01b031614613a07576000816001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061397c9190615477565b90506139926001600160a01b0382168386613ba2565b604051636e553f6560e01b8152600481018590523060248201526001600160a01b03831690636e553f65906044016020604051808303816000875af11580156139df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a039190614a72565b9350505b613a1b6001600160a01b0382168685613ba2565b6040516311f9fbc960e21b81526001600160a01b038616906347e7ef2490613a499030908790600401615179565b6020604051808303816000875af1158015613a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a0b9190614a72565b6000613aaa613a9b83866151eb565b846001600160401b0316613fe4565b905083613ab8828585614033565b10156122ac576001019392505050565b6000613b1d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166140539092919063ffffffff16565b9050805160001480613b3e575080806020019051810190613b3e9190614e14565b612c8b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b600063095ea7b360e01b8383604051602401613bbf929190615179565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050613bfd8482614062565b611559576040516001600160a01b038416602482015260006044820152613c3190859063095ea7b360e01b90606401612c54565b6115598482613ac8565b600081600019048311820215613c595763c4c5d7f56000526004601cfd5b50670de0b6b3a764000091020490565b600080846001600160a01b031663f3fef3a330856040518363ffffffff1660e01b8152600401613c9a929190615179565b6020604051808303816000875af1158015613cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cdd9190614a72565b90506000856001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d439190615477565b9050806001600160a01b0316856001600160a01b031614613dd457604051635d043b2960e11b81526001600160a01b0382169063ba08765290613d8e90859030908190600401615446565b6020604051808303816000875af1158015613dad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613dd19190614a72565b91505b50949350505050565b604051623f675f60e91b81526000906001600160a01b038a1690637ecebe0090613e0b908b906004016143fc565b602060405180830381865afa158015613e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e4c9190614a72565b60405163d505accf60e01b81526001600160a01b038a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e401600060405180830381600087803b158015613ec057600080fd5b505af1158015613ed4573d6000803e3d6000fd5b5050604051623f675f60e91b8152600092506001600160a01b038c169150637ecebe0090613f06908c906004016143fc565b602060405180830381865afa158015613f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f479190614a72565b9050613f548260016151eb565b81146117a55760405162461bcd60e51b815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f74207375636365656044820152601960fa1b6064820152608401613b99565b6040516001600160a01b03808516602483015283166044820152606481018290526115599085906323b872dd60e01b90608401612c54565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a7640000021582026140215763bcbede656000526004601cfd5b50670de0b6b3a7640000919091020490565b60008161404985856001600160401b0316613c3b565b612e889190615166565b6060612e888484600085614105565b6000806000846001600160a01b03168460405161407f9190615465565b6000604051808303816000865af19150503d80600081146140bc576040519150601f19603f3d011682016040523d82523d6000602084013e6140c1565b606091505b50915091508180156140eb5750805115806140eb5750808060200190518101906140eb9190614e14565b8015612a0b5750505050506001600160a01b03163b151590565b6060824710156141665760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401613b99565b600080866001600160a01b031685876040516141829190615465565b60006040518083038185875af1925050503d80600081146141bf576040519150601f19603f3d011682016040523d82523d6000602084013e6141c4565b606091505b50915091506141d5878383876141e0565b979650505050505050565b6060831561424f578251600003614248576001600160a01b0385163b6142485760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401613b99565b5081612e88565b612e8883838151156142645781518083602001fd5b8060405162461bcd60e51b8152600401613b9991906155a5565b6001600160a01b038116811461327e57600080fd5b803561429e8161427e565b919050565b600080604083850312156142b657600080fd5b82356142c18161427e565b946020939093013593505050565b6000608082840312156142e157600080fd5b50919050565b600060e082840312156142e157600080fd5b600080600080600080610180878903121561431357600080fd5b863561431e8161427e565b9550602087013561432e8161427e565b9450604087013561433e8161427e565b93506060870135925060808701356001600160401b0381111561436057600080fd5b61436c89828a016142cf565b92505061437c8860a089016142e7565b90509295509295509295565b600080600080610140858703121561439f57600080fd5b84356143aa8161427e565b935060208501356143ba8161427e565b925060408501356001600160401b038111156143d557600080fd5b6143e1878288016142cf565b9250506143f186606087016142e7565b905092959194509250565b6001600160a01b0391909116815260200190565b600060a082840312156142e157600080fd5b60008060006060848603121561443757600080fd5b83356001600160401b0381111561444d57600080fd5b61445986828701614410565b9350506020840135915060408401356144718161427e565b809150509250925092565b60008083601f84011261448e57600080fd5b5081356001600160401b038111156144a557600080fd5b6020830191508360208285010111156144bd57600080fd5b9250929050565b6000806000806000608086880312156144dc57600080fd5b85356144e78161427e565b9450602086013593506040860135925060608601356001600160401b0381111561451057600080fd5b61451c8882890161447c565b969995985093965092949392505050565b60008060008060008060a0878903121561454657600080fd5b86356145518161427e565b955060208701356145618161427e565b9450604087013593506060870135925060808701356001600160401b0381111561458a57600080fd5b61459689828a0161447c565b979a9699509497509295939492505050565b6000606082840312156142e157600080fd5b600080600080600061016086880312156145d357600080fd5b85356145de8161427e565b945060208601356145ee8161427e565b935060408601356001600160401b038082111561460a57600080fd5b61461689838a016142cf565b9450606088013591508082111561462c57600080fd5b50614639888289016145a8565b92505061464987608088016142e7565b90509295509295909350565b60008060006060848603121561466a57600080fd5b83356146758161427e565b925060208401356146858161427e565b915060408401356001600160401b038111156146a057600080fd5b6146ac868287016145a8565b9150509250925092565b60008060008060008061018087890312156146d057600080fd5b86356146db8161427e565b955060208701356146eb8161427e565b9450604087013593506060870135925060808701356001600160401b0381111561471457600080fd5b61436c89828a016145a8565b60008060006060848603121561473557600080fd5b83356147408161427e565b925060208401356147508161427e565b915060408401356001600160401b0381111561476b57600080fd5b6146ac868287016142cf565b60008083601f84011261478957600080fd5b5081356001600160401b038111156147a057600080fd5b6020830191508360208260051b85010111156144bd57600080fd5b600080600080606085870312156147d157600080fd5b84356147dc8161427e565b93506020850135925060408501356001600160401b038111156147fe57600080fd5b61480a87828801614777565b95989497509550505050565b6000806000806000610160868803121561482f57600080fd5b85356001600160401b0381111561484557600080fd5b61485188828901614410565b95505060208601356148628161427e565b93506040860135925060608601356148798161427e565b915061464987608088016142e7565b600080600080600061016086880312156148a157600080fd5b85356148ac8161427e565b945060208601356148bc8161427e565b93506040860135925060608601356001600160401b038111156148de57600080fd5b8601610100818903121561487957600080fd5b60008060008060008060c0878903121561490a57600080fd5b86356149158161427e565b955060208701356149258161427e565b945060408701356149358161427e565b9350606087013592506080870135915060a08701356001600160401b0381111561495e57600080fd5b61496a89828a016142cf565b9150509295509295509295565b6000806000806000806060878903121561499057600080fd5b86356001600160401b03808211156149a757600080fd5b6149b38a838b01614777565b909850965060208901359150808211156149cc57600080fd5b6149d88a838b01614777565b909650945060408901359150808211156149f157600080fd5b5061459689828a01614777565b6000806000806101408587031215614a1557600080fd5b8435614a208161427e565b93506020850135614a308161427e565b925060408501356001600160401b03811115614a4b57600080fd5b6143e1878288016145a8565b6001600160a01b039290921682521515602082015260400190565b600060208284031215614a8457600080fd5b5051919050565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260a00190565b634e487b7160e01b600052602160045260246000fd5b6000823560fe19833603018112614aeb57600080fd5b9190910192915050565b80356002811061429e57600080fd5b600060208284031215614b1657600080fd5b6122ac82614af5565b600060208284031215614b3157600080fd5b81356122ac8161427e565b6001600160a01b039384168152919092166020820152901515604082015260600190565b6000823560fe19833603018112614b7657600080fd5b90910192915050565b6003811061327e57600080fd5b803561429e81614b7f565b6003811061327e5761327e614abf565b60028110614bb757614bb7614abf565b9052565b6000808335601e19843603018112614bd257600080fd5b83016020810192503590506001600160401b03811115614bf157600080fd5b8036038213156144bd57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006101008235614c3981614b7f565b614c4281614b97565b8452614c5060208401614af5565b614c5d6020860182614ba7565b506040830135614c6c8161427e565b6001600160a01b03166040850152606083810135908501526080808401359085015260a0830135614c9c8161427e565b6001600160a01b031660a085015260c08381013590850152614cc160e0840184614bbb565b8260e0870152612a968387018284614c00565b60008135614ce18161427e565b6001600160a01b039081168452602083013590614cfd8261427e565b9081166020850152604083013590614d148261427e565b166040840152614d276060830183614b60565b60a06060850152614d3b60a0850182614c29565b9050614d4a6080840184614b60565b8482036080860152612a0b8282614c29565b606081526000614d6f6060830186614cd4565b6020830194909452506001600160a01b0391909116604090910152919050565b60005b83811015614daa578181015183820152602001614d92565b50506000910152565b60008151808452614dcb816020860160208601614d8f565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000612a0b6060830184614db3565b801515811461327e57600080fd5b600060208284031215614e2657600080fd5b81516122ac81614e06565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715614e6a57614e6a614e31565b60405290565b600082601f830112614e8157600080fd5b81356001600160401b0380821115614e9b57614e9b614e31565b604051601f8301601f19908116603f01168101908282118183101715614ec357614ec3614e31565b81604052838152866020858801011115614edc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006101008284031215614f0f57600080fd5b614f17614e47565b9050614f2282614b8c565b8152614f3060208301614af5565b6020820152614f4160408301614293565b60408201526060820135606082015260808201356080820152614f6660a08301614293565b60a082015260c082013560c082015260e08201356001600160401b03811115614f8e57600080fd5b614f9a84828501614e70565b60e08301525092915050565b600060a08284031215614fb857600080fd5b60405160a081016001600160401b038282108183111715614fdb57614fdb614e31565b8160405282935084359150614fef8261427e565b9082526020840135906150018261427e565b81602084015261501360408601614293565b6040840152606085013591508082111561502c57600080fd5b61503886838701614efc565b6060840152608085013591508082111561505157600080fd5b5061505e85828601614efc565b6080830152505092915050565b60008060006060848603121561508057600080fd5b83356001600160401b0381111561509657600080fd5b61445986828701614fa6565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82016150cd576150cd6150a2565b5060000390565b60208152600082516150e581614b97565b8060208401525060208301516150fe6040840182614ba7565b5060018060a01b03604084015116606083015260608301516080830152608083015160a083015260a083015161513f60c08401826001600160a01b03169052565b5060c083015160e083015260e0830151610100808185015250612bbb610120840182614db3565b81810381811115612bbf57612bbf6150a2565b6001600160a01b03929092168252602082015260400190565b6000806000606084860312156151a757600080fd5b83356001600160401b038111156151bd57600080fd5b6151c986828701614fa6565b93505060208401356151da8161427e565b929592945050506040919091013590565b80820180821115612bbf57612bbf6150a2565b838152604060208201819052810182905260006001600160fb1b0383111561522557600080fd5b8260051b8085606085013791909101606001949350505050565b6000806000806080858703121561525557600080fd5b505082516020840151604085015160609095015191969095509092509050565b803560ff8116811461429e57600080fd5b600060e0828403121561529857600080fd5b60405160e081018181106001600160401b03821117156152ba576152ba614e31565b60405282356152c881614b7f565b808252506020830135602082015260408301356040820152606083013560608201526152f660808401615275565b608082015260a083013560a082015260c083013560c08201528091505092915050565b60608152600061532c6060830186614cd4565b6001600160a01b039490941660208301525060400152919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a9690830184614db3565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156153a257600080fd5b81356122ac81614e06565b6000808335601e198436030181126153c457600080fd5b8301803591506001600160401b038211156153de57600080fd5b6020019150368190038213156144bd57600080fd5b8183823760009101908152919050565b60008060006060848603121561541857600080fd5b83516001600160401b038116811461542f57600080fd5b602085015160409095015190969495509392505050565b9283526001600160a01b03918216602084015216604082015260600190565b60008251614aeb818460208701614d8f565b60006020828403121561548957600080fd5b81516122ac8161427e565b6020815260006122ac6020830184614c29565b60006101006154ca83885180516001600160a01b03168252602090810151910152565b60208701516040840152604087015160608401526154fe608084018780516001600160a01b03168252602090810151910152565b6001600160a01b03851660c084015260e083018190526141d581840185614db3565b6001600160a01b03841681526000610120843561553c81614b7f565b61554581614b97565b8060208501525060208501356040840152604085013560608401526060850135608084015260ff61557860808701615275565b1660a084015260a085013560c084015260c085013560e084015280610100840152612a9681840185614c29565b6020815260006122ac6020830184614db356fea2646970667358221220d5a7383ad4658c1e838dc265461342b6c18c14a12ec9cd7857a7db3a75631ef264736f6c63430008130033",
    "sourceMap": "511:5076:119:-:0;;;960:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1031:12;1045;5001::117;-1:-1:-1;;;;;4974:40:117;;;-1:-1:-1;;;;;4974:40:117;;;;;5037:11;;-1:-1:-1;;;;;5037:22:117;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5024:37:117;;;-1:-1:-1;;;;;5024:37:117;;;;;5080:11;;-1:-1:-1;;;;;5080:18:117;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5071:29:117;;;-1:-1:-1;;;;;5071:29:117;;;;;5116:11;;-1:-1:-1;;;;;5116:15:117;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5110:23:117;;;;;;;5158:4;5143:20;;5173:36;;;;;5248:6;;5219:43;;-1:-1:-1;;;5219:43:117;;1546:32:181;;5219:43:117;;;1528:51:181;5257:4:117;1595:18:181;;;1588:50;5110:23:117;5219:20;;1501:18:181;;5219:43:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5272:3:117;;:40;;-1:-1:-1;;;5272:40:117;;-1:-1:-1;;;;;1546:32:181;;;5272:40:117;;;1528:51:181;5307:4:117;1595:18:181;;;1588:50;5272:20:117;;;;-1:-1:-1;5272:20:117;;-1:-1:-1;1501:18:181;;5272:40:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4909:410;;960:101:119;;511:5076;;14:131:181;-1:-1:-1;;;;;89:31:181;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:385::-;229:6;237;290:2;278:9;269:7;265:23;261:32;258:52;;;306:1;303;296:12;258:52;338:9;332:16;357:31;382:5;357:31;:::i;:::-;457:2;442:18;;436:25;407:5;;-1:-1:-1;470:33:181;436:25;470:33;:::i;:::-;522:7;512:17;;;150:385;;;;;:::o;540:272::-;631:6;684:2;672:9;663:7;659:23;655:32;652:52;;;700:1;697;690:12;652:52;732:9;726:16;751:31;776:5;751:31;:::i;:::-;801:5;540:272;-1:-1:-1;;;540:272:181:o;1360:284::-;511:5076:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "511:5076:119:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11194:257:117;;;;;;:::i;:::-;;:::i;:::-;;;755:25:181;;;743:2;728:18;11194:257:117;;;;;;;;15490:697;;;;;;:::i;:::-;;:::i;:::-;;8314:464;;;;;;:::i;:::-;;:::i;3653:31::-;;;;;;;;;;;;:::i;24076:1310::-;;;;;;:::i;:::-;;:::i;3286:100::-;;3336:50;3286:100;;1101:76:123;;1135:42;1101:76;;28035:2728:117;;;;;;:::i;:::-;;:::i;25732:2128::-;;;;;;:::i;:::-;;:::i;13372:659::-;;;;;;:::i;:::-;;:::i;9634:426::-;;;;;;:::i;:::-;;:::i;19328:748::-;;;;;;:::i;:::-;;:::i;8976:401::-;;;;;;:::i;:::-;;:::i;3735:29::-;;;;;12204:305;;;;;;:::i;:::-;;:::i;:::-;;;;10956:25:181;;;11012:2;10997:18;;10990:34;;;;11040:18;;;11033:34;11098:2;11083:18;;11076:34;10943:3;10928:19;12204:305:117;10725:391:181;3192:88:117;;3235:45;3192:88;;14338:738;;;;;;:::i;:::-;;:::i;3810:38::-;;;;;21664:1737;;;;;;:::i;:::-;;:::i;16626:1057::-;;;;;;:::i;:::-;;:::i;12924:196::-;;;;;;:::i;:::-;;:::i;3426:25::-;;;;;3576:39;;;;;18184:744;;;;;;:::i;:::-;;:::i;3496:41::-;;;;;20368:554;;;;;;:::i;:::-;;:::i;10361:598::-;;;;;;:::i;:::-;;:::i;11194:257::-;11297:33;;-1:-1:-1;;;11297:33:117;;11265:20;;-1:-1:-1;;;;;11297:3:117;:20;;;;:33;;11318:5;;11325:4;;11297:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11355:45:117;;-1:-1:-1;;;11355:45:117;;;;;755:25:181;;;-1:-1:-1;;;;;11355:31:117;;;-1:-1:-1;11355:31:117;;-1:-1:-1;728:18:181;;11355:45:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11410:34;;-1:-1:-1;;;11410:34:117;;11340:60;;-1:-1:-1;;;;;;11410:3:117;:20;;;;:34;;11431:5;;11438;;11410:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11194:257;;;;:::o;15490:697::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;15767:18:::1;15788:54;15797:12;15811:16;15829:12;15788:8;:54::i;:::-;15767:75;;15852:21;15876:49;15894:12;15908:8;15918:6;15876:17;:49::i;:::-;15852:73;;15945:12;-1:-1:-1::0;;;;;15935:47:117::1;;15996:8;16026:4;16053;16072:20;16081:10;16072:8;:20::i;:::-;16106:23;16115:13;16106:8;:23::i;:::-;15935:204;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;16149:31;16158:13;16173:6;16149:8;:31::i;:::-;;15757:430;;15490:697:::0;;;;;;:::o;8314:464::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;8518:18:::1;8539:47;8548:5;8555:16;8573:12;8539:8;:47::i;:::-;8518:68;;8606:5;-1:-1:-1::0;;;;;8596:40:117::1;;8650:8;8680:4;8707;8726:20;8735:10;8726:8;:20::i;:::-;8760:1;8596:175;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;24076:1310:::0;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;24326:18:::1;24290:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:54;;;;;;;;:::i;:::-;;;:111;;;-1:-1:-1::0;;;;;;24397:4:117::1;24360:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;24360:41:117::1;;;24290:111;24286:183;;;24419:50;;-1:-1:-1::0;;;24419:50:117::1;;;;;;;;;;;24286:183;24565:1;24526:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;24526:41:117::1;;;:118;;;;-1:-1:-1::0;24617:17:117::1;24585:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;24526:118;24522:177;;;24653:46;;-1:-1:-1::0;;;24653:46:117::1;;;;;;;;;;;24522:177;24832:1;24793:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;24793:41:117::1;;:88;;;;-1:-1:-1::0;;;;;;24850:31:117;::::1;::::0;24793:88:::1;24789:166;;;24899:56;;-1:-1:-1::0;;;24899:56:117::1;;;;;;;;;;;24789:166;25016:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;25004:47:117::1;;25052:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;25074:4;25080;25004:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;25095:11:117::1;:27;::::0;-1:-1:-1;25095:27:117::1;::::0;-1:-1:-1;25157:4:117::1;25176:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;25231:11;25244:13;25259:17;25220:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;25095:192;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;25309:17:117::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;25297:47:117::1;;25345:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;25367:4;25373:5;25297:82;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;24076:1310:::0;;;:::o;28035:2728::-;28199:7;28222:10;-1:-1:-1;;;;;28244:11:117;28222:34;;28218:97;;28265:50;;-1:-1:-1;;;28265:50:117;;;;;;;;;;;28218:97;28339:30;;;28456:48;;;;28467:4;28456:48;:::i;:::-;28325:179;;;;;;28612:21;28636:136;28667:11;:17;;;28698:11;:20;;;28732:11;:23;;;:30;;;28636:17;:136::i;:::-;28839:17;;;;28818:45;;-1:-1:-1;;;28818:45:117;;28612:160;;-1:-1:-1;;;;;;28818:3:117;:20;;;;:45;;28858:4;;28818:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28883:11;:17;;;-1:-1:-1;;;;;28873:52:117;;28939:11;:20;;;28981:4;29008;29028:23;29037:13;29028:8;:23::i;:::-;29027:24;;;:::i;:::-;29066:23;29075:13;29066:8;:23::i;:::-;29065:24;;;:::i;:::-;28873:226;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29130:17:117;;;;29109:46;;-1:-1:-1;;;29109:46:117;;-1:-1:-1;;;;;29109:3:117;:20;;-1:-1:-1;29109:20:117;;:46;;29149:5;;29109:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29233:27;29263:44;29280:11;29293:13;29263:16;:44::i;:::-;29233:74;;29318:21;29342:189;29377:10;29442:24;;;29484:11;:23;;;29402:119;;;;;;;;:::i;:::-;;;;-1:-1:-1;;29402:119:117;;;;;;;;;;;;;;-1:-1:-1;;;;;29402:119:117;-1:-1:-1;;;;;;29402:119:117;;;;;;;;;;29342:13;:189::i;:::-;29318:213;;29541:20;29575:8;29564:31;;;;;;;;;;;;:::i;:::-;29541:54;-1:-1:-1;29681:22:117;29706:34;29541:54;29706:19;:34;:::i;:::-;29857:23;;;;;:30;;29821:67;;-1:-1:-1;;;29821:67:117;;29681:59;;-1:-1:-1;;;;;;29821:10:117;:18;;;;:67;;29848:6;;29857:30;29821:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;29926:23:117;;;;;:30;;29898:59;;-1:-1:-1;;;29898:59:117;;-1:-1:-1;;;;;29898:6:117;:12;;;;:59;;29919:4;;29898:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30095:1;30078:14;:18;30074:642;;;30193:19;;;;:27;;;-1:-1:-1;;;;;30193:41:117;;30189:516;;30254:233;30297:10;30378:24;;;30428:11;:19;;;30330:139;;;;;;;;:::i;30254:233::-;;30189:516;;;30610:23;;;;:31;;;30603:87;;-1:-1:-1;;;;;30603:52:117;30656:17;30675:14;30603:52;:87::i;:::-;-1:-1:-1;3336:50:117;;28035:2728;-1:-1:-1;;;;;;;;;;;;;28035:2728:117:o;25732:2128::-;25917:7;25940:10;-1:-1:-1;;;;;25962:11:117;25940:34;;25936:91;;25983:44;;-1:-1:-1;;;25983:44:117;;;;;;;;;;;25936:91;26051:30;;;26163:49;;;;26174:4;26163:49;:::i;:::-;26311:19;;;;:27;;;26037:175;;-1:-1:-1;26037:175:117;;-1:-1:-1;26037:175:117;-1:-1:-1;;;;;;26311:41:117;;26307:298;;26368:24;26395:135;26434:10;26470:24;;;26496:11;:19;;;26447:69;;;;;;;;:::i;26395:135::-;26368:162;;26571:11;26560:34;;;;;;;;;;;;:::i;:::-;26544:50;;26354:251;26307:298;26656:21;26680:131;26715:10;26751:24;;;26777:11;:23;;;26728:73;;;;;;;;:::i;26680:131::-;26656:155;;26821:21;26856:8;26845:31;;;;;;;;;;;;:::i;:::-;26821:55;;26953:18;26974:73;26991:11;27004:12;27018:13;27033;26974:16;:73::i;:::-;26953:94;;27140:21;27164:112;27195:11;:17;;;27214:11;:20;;;27236:11;:23;;;:30;;;27164:17;:112::i;:::-;27140:136;;27332:11;:17;;;-1:-1:-1;;;;;27322:52:117;;27388:11;:20;;;27430:4;27457;27476:20;27485:10;27476:8;:20::i;:::-;27510:23;27519:13;27510:8;:23::i;:::-;27322:221;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;27636:23:117;;;;;:30;;27609:58;;-1:-1:-1;;;27609:58:117;;:6;-1:-1:-1;;;;;27609:11:117;;;;:58;;27629:4;;27609:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;27788:23:117;;;;;:30;;27747:72;;-1:-1:-1;;;27747:72:117;;:10;-1:-1:-1;;;;;27747:18:117;;;;:72;;27774:11;;27747:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3235:45:117;;25732:2128;-1:-1:-1;;;;;;;;;;;;;;25732:2128:117:o;13372:659::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;13629:18:::1;13650:47;13659:5;13666:16;13684:12;13650:8;:47::i;:::-;13629:68:::0;-1:-1:-1;13707:21:117::1;13731:55;13749:5:::0;13756:8;13766:19;::::1;13731:17;:55::i;:::-;13707:79;;13806:5;-1:-1:-1::0;;;;;13796:40:117::1;;13850:8;13880:4;13907;13926:20;13935:10;13926:8;:20::i;:::-;13960:23;13969:13;13960:8;:23::i;:::-;13796:197;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14003:21;14011:12;14003:7;:21::i;9634:426::-:0;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;9755:21:::1;9779:55;9797:5:::0;9804:8;9814:19;::::1;9779:17;:55::i;:::-;9755:79;;9854:5;-1:-1:-1::0;;;;;9844:40:117::1;;9898:8;9928:4;9955;9974:1;9989:23;9998:13;9989:8;:23::i;:::-;9844:178;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10032:21;10040:12;10032:7;:21::i;:::-;9745:315;9634:426:::0;;;:::o;19328:748::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;19592:51:::1;19599:8;19609:5;19616:12;19630;19592:6;:51::i;:::-;19653:54;::::0;-1:-1:-1;;;19653:54:117;;::::1;::::0;::::1;755:25:181::0;;;-1:-1:-1;;;;;19653:39:117;::::1;::::0;::::1;::::0;728:18:181;;19653:54:117::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;19717:65:117::1;::::0;-1:-1:-1;;;19717:65:117;;-1:-1:-1;;;;;19737:3:117::1;19717:42;::::0;::::1;::::0;:65:::1;::::0;19760:8;;19770:5;;19777:4:::1;::::0;19717:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;19792:40:117;::::1;::::0;-1:-1:-1;19792:40:117::1;19846:8:::0;19876:4:::1;::::0;19922:1:::1;19938:45;19947:35;19969:13:::0;19947:19;::::1;:35;:::i;:::-;19938:8;:45::i;:::-;19937:46;;;:::i;:::-;19792:201;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;20003:66:117::1;::::0;-1:-1:-1;;;20003:66:117;;-1:-1:-1;;;;;20023:3:117::1;20003:42;::::0;-1:-1:-1;20003:42:117::1;::::0;-1:-1:-1;20003:66:117::1;::::0;20046:8;;20056:5;;20063::::1;::::0;20003:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;19328:748:::0;;;;;;:::o;8976:401::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;9147:5:::1;-1:-1:-1::0;;;;;9137:40:117::1;;9191:8;9221:4;9248;9268:33;9277:16;:23;;;9268:8;:33::i;:::-;9267:34;;;:::i;:::-;9315:1;9137:189;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9336:34;9346:5;9353:16;9336:9;:34::i;12204:305::-:0;12324:22;12348:13;12363:24;12389:25;12448:5;-1:-1:-1;;;;;12438:33:117;;12472:11;12485:16;;12438:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12431:71;;;;-1:-1:-1;12431:71:117;-1:-1:-1;12431:71:117;;-1:-1:-1;12204:305:117;-1:-1:-1;;;;;12204:305:117:o;14338:738::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;14595:51:::1;14602:8;14612:5;14619:12;14633;14595:6;:51::i;:::-;14656:65;::::0;-1:-1:-1;;;14656:65:117;;-1:-1:-1;;;;;14676:3:117::1;14656:42;::::0;::::1;::::0;:65:::1;::::0;14699:8;;14709:5;;14716:4:::1;::::0;14656:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14741:5;-1:-1:-1::0;;;;;14731:40:117::1;;14785:8;14815:4;14842;14862:33;14871:16;:23;;;14862:8;:33::i;:::-;14861:34;;;:::i;:::-;14910:29;14919:19:::0;::::1;14910:8;:29::i;:::-;14909:30;;;:::i;:::-;14731:218;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;14959:66:117::1;::::0;-1:-1:-1;;;14959:66:117;;-1:-1:-1;;;;;14979:3:117::1;14959:42;::::0;-1:-1:-1;14959:42:117::1;::::0;-1:-1:-1;14959:66:117::1;::::0;15002:8;;15012:5;;15019::::1;::::0;14959:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;15035:34;15045:5;15052:16;15035:9;:34::i;:::-;;14338:738:::0;;;;;:::o;21664:1737::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;21985:17:::1;21949:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:53;;;;;;;;:::i;:::-;;;:123;;;-1:-1:-1::0;;;;;;22061:10:117::1;22018:54;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:31;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;22018:54:117::1;;;21949:123;:180;;;-1:-1:-1::0;;;;;;22125:4:117::1;22088:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;22088:41:117::1;;;21949:180;21945:252;;;22147:50;;-1:-1:-1::0;;;22147:50:117::1;;;;;;;;;;;21945:252;22293:1;22254:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;22254:41:117::1;;;:230;;;;-1:-1:-1::0;22345:17:117::1;22313:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;:108;;;-1:-1:-1::0;;;;;;22378:43:117;::::1;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;22378:43:117::1;;;22313:108;:161;;;-1:-1:-1::0;;;;;;22470:4:117::1;22437:37;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:29;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;22437:37:117::1;;;22313:161;22250:289;;;22493:46;;-1:-1:-1::0;;;22493:46:117::1;;;;;;;;;;;22250:289;22622:17:::0;;22618:337:::1;;22685:4;-1:-1:-1::0;;;;;22659:31:117;::::1;::::0;22655:290:::1;;22710:54;-1:-1:-1::0;;;;;22710:33:117;::::1;22744:4;22750:13:::0;22710:33:::1;:54::i;:::-;22655:290;;;22852:78;22866:12:::0;22880:14;22896:4:::1;22902:13:::0;22852:78:::1;;::::0;;::::1;::::0;::::1;22917:12:::0;22852:78:::1;:::i;:::-;:13;:78::i;:::-;23008:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;22996:47:117::1;;23044:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;23066:4;23072;22996:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;23087:11:117::1;:21;::::0;-1:-1:-1;23087:21:117::1;::::0;-1:-1:-1;23144:4:117::1;23171:10;23196:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;23251:11;23264:12;23278:13;23240:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;23087:215;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;23324:17:117::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;23312:47:117::1;;23360:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;23382:4;23388:5;23312:82;;;;;;;;;;;;;;;;;:::i;16626:1057::-:0;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;16949:1:::1;16919:18;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16919:32:117::1;;16915:552;;17003:4;16971:20;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16971:37:117::1;;16967:104;;17017:54;;-1:-1:-1::0;;;17017:54:117::1;;;;;;;;;;;16967:104;17094:52;17111:8;17121:10;17133:12;17094:16;:52::i;:::-;17085:61;;16915:552;;;-1:-1:-1::0;;;;;17167:25:117;::::1;17187:4;17167:25;17163:304;;17281:175;17320:10;17349:8:::0;17383:4:::1;17406:6:::0;17281:175:::1;;::::0;;::::1;::::0;::::1;17430:12:::0;17281:175:::1;:::i;:::-;17518:43;::::0;-1:-1:-1;;;17518:43:117;;-1:-1:-1;;;;;17518:10:117::1;:18;::::0;::::1;::::0;:43:::1;::::0;17545:6:::1;::::0;17554;;17518:43:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;17571:35:117::1;::::0;-1:-1:-1;;;17571:35:117;;-1:-1:-1;;;;;17571:6:117::1;:12;::::0;::::1;::::0;:35:::1;::::0;17592:4:::1;::::0;17599:6;;17571:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;17653:23;17662:5;17669:6;17653:8;:23::i;12924:196::-:0;13059:54;;-1:-1:-1;;;13059:54:117;;;;;755:25:181;;;13012:20:117;;-1:-1:-1;;;;;13059:39:117;;;;;728:18:181;;13059:54:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13044:69;12924:196;-1:-1:-1;;;12924:196:117:o;18184:744::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;18454:62:::1;::::0;-1:-1:-1;;;18454:62:117;;::::1;::::0;::::1;755:25:181::0;;;-1:-1:-1;;;;;18454:47:117;::::1;::::0;::::1;::::0;728:18:181;;18454:62:117::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;18526:51:117::1;::::0;-1:-1:-1;;;18526:51:117;;-1:-1:-1;;;;;18526:3:117::1;:20;::::0;::::1;::::0;:51:::1;::::0;18547:8;;18557:13;;18572:4:::1;::::0;18526:51:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;18597:13;-1:-1:-1::0;;;;;18587:48:117::1;;18649:8;18679:4;18706;18726:33;18735:16;:23;;;18726:8;:33::i;:::-;18725:34;;;:::i;:::-;18774:23;18783:13;18774:8;:23::i;:::-;18773:24;;;:::i;:::-;18587:220;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;18817:52:117::1;::::0;-1:-1:-1;;;18817:52:117;;-1:-1:-1;;;;;18817:3:117::1;:20;::::0;-1:-1:-1;18817:20:117::1;::::0;-1:-1:-1;18817:52:117::1;::::0;18838:8;;18848:13;;18863:5:::1;::::0;18817:52:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;18879:42;18889:13;18904:16;18879:9;:42::i;20368:554::-:0;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;20557:7;20534:20:::1;20581:335;20601:12;20597:1;:16;20581:335;;;20634:12;;20647:1;20634:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;20630:245;;;20669:34;20683:7;;20691:1;20683:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;20695:4;;20700:1;20695:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;20669:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;20669:13:117::1;::::0;-1:-1:-1;;;20669:34:117:i:1;:::-;;20630:245;;;20743:12;20757:21:::0;20782:7:::1;;20790:1;20782:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;20782:15:117::1;20798:4;;20803:1;20798:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;20782:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20742:64;;;;20829:7;20824:36;;20838:22;20851:8;20838:12;:22::i;:::-;20724:151;;20630:245;20900:3;;20581:335;;;;20524:398;20368:554:::0;;;;;;:::o;10361:598::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;10555:51:::1;10562:8;10572:5;10579:12;10593;10555:6;:51::i;:::-;10616:65;::::0;-1:-1:-1;;;10616:65:117;;-1:-1:-1;;;;;10636:3:117::1;10616:42;::::0;::::1;::::0;:65:::1;::::0;10659:8;;10669:5;;10676:4:::1;::::0;10616:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10701:5;-1:-1:-1::0;;;;;10691:40:117::1;;10745:8;10775:4;10802;10821:1;10837:29;10846:12;:19;;;10837:8;:29::i;:::-;10836:30;;;:::i;:::-;10691:185;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10886:66:117::1;::::0;-1:-1:-1;;;10886:66:117;;-1:-1:-1;;;;;10906:3:117::1;10886:42;::::0;-1:-1:-1;10886:42:117::1;::::0;-1:-1:-1;10886:66:117::1;::::0;10929:8;;10939:5;;10946::::1;::::0;10886:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;31212:992:::0;31373:7;31409:23;;;;31373:7;31447:24;;;;31409:16;31447:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31447:46:117;;31443:682;;31549:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;31513:64:117;:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31513:64:117;;;:135;;;-1:-1:-1;31643:4:117;31597:24;;;;:16;:24;:::i;:::-;:34;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31597:51:117;;;31513:135;31509:201;;;31670:40;;-1:-1:-1;;;31670:40:117;;;;;;;;;;;31509:201;31733:89;31750:31;;;;;;;;:::i;:::-;31783:24;;;;:16;:24;:::i;:::-;31809:12;31733:16;:89::i;:::-;31724:98;;31443:682;;;31886:4;31843:31;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31843:48:117;;31839:286;;31907:207;31938:28;;;;:16;:28;:::i;:::-;31984:31;;;;;;;;:::i;:::-;32041:4;32064:6;31907:207;;;;;;;32088:12;31907:207;:::i;:::-;32142:55;32153:5;32160:28;;;;:16;:28;:::i;:::-;32190:6;32142:10;:55::i;:::-;32135:62;31212:992;-1:-1:-1;;;;;31212:992:117:o;37433:332::-;37560:18;37591:22;37615:21;37651:5;-1:-1:-1;;;;;37641:27:117;;37669:8;37641:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37590:88;;;;;37701:57;37721:4;37727:15;37744:13;37701:19;:57::i;:::-;37688:70;37433:332;-1:-1:-1;;;;;;37433:332:117:o;509:133:171:-;552:6;-1:-1:-1;;;570:1:171;:13;566:51;;592:25;;-1:-1:-1;;;592:25:171;;;;;;;;;;;566:51;-1:-1:-1;637:1:171;509:133::o;5093:492:119:-;5223:7;5285:27;5325:11;:17;;;-1:-1:-1;;;;;5315:37:119;;5361:4;5368:13;5315:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5285:97;;5492:11;:27;;;-1:-1:-1;;;;;5483:44:119;;5528:19;5557:4;5572;5483:95;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5476:102;;;5093:492;;;;;:::o;767:241:115:-;839:12;864;878:23;905:2;-1:-1:-1;;;;;905:15:115;921:4;905:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:63;;;;941:7;936:38;;950:24;963:10;950:12;:24::i;941:175:62:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1050:58:62;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:62;-1:-1:-1;;;;;;1050:58:62;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;3502:1251:119:-;3693:7;3712:25;3747:27;3777:13;3747:43;;3835:12;-1:-1:-1;;;;;3804:43:119;:11;:27;;;-1:-1:-1;;;;;3804:43:119;;:88;;;;-1:-1:-1;3851:19:119;;;;:27;;;-1:-1:-1;;;;;3851:41:119;;3804:88;3800:360;;;4012:13;3992:33;;3800:360;;;4113:36;4136:13;4113:36;;:::i;:::-;;;3800:360;4220:23;4255:11;:27;;;-1:-1:-1;;;;;4246:43:119;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4338:27;;;;4220:71;;-1:-1:-1;4301:86:119;;-1:-1:-1;;;;;4301:36:119;;;4367:19;4301:36;:86::i;:::-;4428:27;;;;;4419:81;;-1:-1:-1;;;4419:81:119;;;;;37346:25:181;;;4494:4:119;37387:18:181;;;37380:60;4503:17:119;;-1:-1:-1;;;;;4419:45:119;;;;37319:18:181;;4419:81:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:101;;;;:::i;:::-;4618:17;;;;4576:27;;;;4397:123;;-1:-1:-1;4569:88:119;;-1:-1:-1;;;;;4569:48:119;;4397:123;4569:48;:88::i;:::-;4684:11;:17;;;-1:-1:-1;;;;;4674:36:119;;4719:4;4726:19;4674:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4667:79;;;;;3502:1251;;;;;;;:::o;33417:940:117:-;33490:80;;-1:-1:-1;;;33490:80:117;;-1:-1:-1;;;;;33510:3:117;33490:42;;;;:80;;33541:4;;33556:6;;33565:4;;33490:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;33624:1:117;;-1:-1:-1;33584:20:117;;-1:-1:-1;;33584:20:117;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;33584:42:117;;33580:771;;-1:-1:-1;;;;;33642:6:117;:11;;33654:21;;;;;;;;:::i;:::-;33642:55;;-1:-1:-1;;;;;;33642:55:117;;;;;;;;;;33677:19;;;33642:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33711:81:117;;-1:-1:-1;;;33711:81:117;;-1:-1:-1;;;;;33731:3:117;33711:42;;-1:-1:-1;33711:42:117;;-1:-1:-1;33711:81:117;;33762:4;;33777:6;;33786:5;;33711:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33417:940;:::o;33580:771::-;33824:47;;-1:-1:-1;;;33824:47:117;;-1:-1:-1;;;;;33824:6:117;:11;;;;:47;;33844:4;;33851:19;;;33824:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33885:81:117;;-1:-1:-1;;;33885:81:117;;-1:-1:-1;;;;;33905:3:117;33885:42;;-1:-1:-1;33885:42:117;;-1:-1:-1;33885:81:117;;33936:4;;33951:6;;33960:5;;33885:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;34057:10:117;34017:51;;-1:-1:-1;34017:20:117;;-1:-1:-1;34017:20:117;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;34017:51:117;;34013:103;;34077:39;;-1:-1:-1;;;34077:39:117;;;;;;;;;;;34013:103;34130:210;34169:10;-1:-1:-1;;;34288:20:117;;;;:12;:20;:::i;:::-;34198:128;;;;;;;;:::i;34130:210::-;;33580:771;33417:940;:::o;34651:1319::-;34888:14;;34916:20;;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;34916:42:117;;34912:896;;35021:4;34979:20;;;;:12;:20;:::i;:::-;:30;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;34979:47:117;;34975:98;;35035:38;;-1:-1:-1;;;35035:38:117;;;;;;;;;;;34975:98;35097:75;35114:21;;;;;;;;:::i;:::-;35137:20;;;;:12;:20;:::i;:::-;35159:12;35097:16;:75::i;:::-;35088:84;;34912:896;;;35264:22;35288:21;35324:5;-1:-1:-1;;;;;35314:27:117;;35342:8;35314:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;35263:88:117;;-1:-1:-1;35263:88:117;-1:-1:-1;35263:88:117;35374:42;-1:-1:-1;;;;;35374:42:117;;35396:19;;35374:4;:42::i;:::-;:58;;;;:::i;:::-;35365:67;-1:-1:-1;35484:4:117;35451:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;35451:38:117;;35447:351;;35571:212;35614:10;35647:21;;;;;;;;:::i;:::-;35698:4;35725:6;35571:212;;;;;;;35753:12;35571:212;:::i;:::-;35190:618;;34912:896;35875:43;;-1:-1:-1;;;35875:43:117;;-1:-1:-1;;;;;35875:10:117;:18;;;;:43;;35902:6;;35911;;35875:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;35928:35:117;;-1:-1:-1;;;35928:35:117;;-1:-1:-1;;;;;35928:6:117;:12;;;;:35;;35949:4;;35956:6;;35928:35;;;:::i;32476:798::-;32572:7;;32612:73;32624:5;32631:28;;;;:16;:28;:::i;:::-;32661:16;:23;;;32612:11;:73::i;:::-;32591:94;-1:-1:-1;32803:1:117;32759:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32759:46:117;;32755:486;;32821:214;32860:10;-1:-1:-1;;;32979:24:117;;;;:16;:24;:::i;32821:214::-;;32755:486;;;33136:94;33186:31;;;;;;;;:::i;:::-;33219:10;33143:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;33136:49:117;;:94;:49;:94::i;1455:1279:123:-;1623:20;1600:19;;:43;;;;;;;;:::i;:::-;;1596:1132;;1135:42;-1:-1:-1;;;;;1721:46:123;;1785:262;;;;;;;;1856:84;;;;;;;;1901:5;-1:-1:-1;;;;;1856:84:123;;;;;1916:6;:21;;;1856:84;;;1785:262;;;;1969:6;:12;;;1785:262;;;;2013:6;:15;;;1785:262;;;2065:80;;;;;;;;2115:2;-1:-1:-1;;;;;2065:80:123;;;;;2136:6;2065:80;;;2163:4;2198:6;:8;;;2208:6;:8;;;2225:6;:8;;;2218:16;;2185:50;;;;;;;;;37919:19:181;;;37963:2;37954:12;;37947:28;;;;-1:-1:-1;;;;;;38005:26:181;38000:2;37991:12;;37984:48;38057:2;38048:12;;37736:330;2185:50:123;;;;;;;;;;;;;1721:551;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:1132;;;2316:19;2293;;:42;;;;;;;;:::i;:::-;;2289:439;;2406:110;2437:4;2443:2;2447:6;:21;;;2470:6;:15;;;2487:6;:8;;;2497:6;:8;;;2507:6;:8;;;2419:5;-1:-1:-1;;;;;2406:30:123;;;:110;;;;;;;;;;:::i;:::-;2530:48;-1:-1:-1;;;;;2530:30:123;;2561:4;2567:2;2571:6;2530:30;:48::i;:::-;2289:439;;;2669:48;-1:-1:-1;;;;;2669:30:123;;2700:4;2706:2;2710:6;2669:30;:48::i;36066:952:117:-;36224:17;36253:21;36277:241;36312:10;36377:35;;;36430:6;36454:12;36484:10;36337:171;;;;;;;;;;:::i;36277:241::-;36253:265;;36528:17;36559:8;36548:31;;;;;;;;;;;;:::i;:::-;36528:51;-1:-1:-1;36701:18:117;36678:19;;;;;;;;:::i;:::-;:41;;;;;;;;:::i;:::-;;36674:338;;36735:17;36755:28;36774:9;36755:16;;;;:28;:::i;:::-;36735:48;-1:-1:-1;36801:13:117;;36797:110;;36834:58;36874:6;36882:9;36841:18;;;;;;;;:::i;36834:58::-;36932:10;:17;;;36920:29;;36721:239;36674:338;;;36992:9;36980:21;;36674:338;36243:775;;36066:952;;;;;:::o;1192:255:115:-;1263:13;;:18;1259:127;;1354:6;1348:13;1339:6;1335:2;1331:15;1324:38;1259:127;1402:38;;-1:-1:-1;;;1402:38:115;;;;;;;;;;;1526:645:119;1617:7;1636:18;1675:5;-1:-1:-1;;;;;1665:22:119;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1636:54;;1819:10;-1:-1:-1;;;;;1812:17:119;:3;-1:-1:-1;;;;;1812:17:119;;1808:236;;1845:18;1875:10;-1:-1:-1;;;;;1866:26:119;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1845:49;-1:-1:-1;1908:51:119;-1:-1:-1;;;;;1908:31:119;;1940:10;1952:6;1908:31;:51::i;:::-;1982;;-1:-1:-1;;;1982:51:119;;;;;37346:25:181;;;2027:4:119;37387:18:181;;;37380:60;-1:-1:-1;;;;;1982:28:119;;;;;37319:18:181;;1982:51:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1973:60;;1831:213;1808:236;2054:46;-1:-1:-1;;;;;2054:31:119;;2086:5;2093:6;2054:31;:46::i;:::-;2117:47;;-1:-1:-1;;;2117:47:119;;-1:-1:-1;;;;;2117:24:119;;;;;:47;;2150:4;;2157:6;;2117:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1944:373:88:-;2062:18;2101:43;2106:20;2113:13;2106:4;:20;:::i;:::-;2128:15;-1:-1:-1;;;;;2101:43:88;:4;:43::i;:::-;2088:56;;2266:4;2206:57;2220:10;2232:15;2249:13;2206;:57::i;:::-;:64;2202:113;;;2294:12;;1944:373;;;;;:::o;5173:642:62:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:62;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:62;;40667:2:181;5697:111:62;;;40649:21:181;40706:2;40686:18;;;40679:30;40745:34;40725:18;;;40718:62;-1:-1:-1;;;40796:18:181;;;40789:40;40846:19;;5697:111:62;;;;;;;;3756:410;3843:25;3894:22;;;3918:7;3927:5;3871:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3871:62:62;;;;;;;;;;;;;;-1:-1:-1;;;;;3871:62:62;-1:-1:-1;;;;;;3871:62:62;;;;;;;;;;;-1:-1:-1;3949:44:62;3973:5;3871:62;3949:23;:44::i;:::-;3944:216;;4036:58;;-1:-1:-1;;;;;41074:32:181;;4036:58:62;;;41056:51:181;4092:1:62;41123:18:181;;;41116:45;4009:86:62;;4029:5;;-1:-1:-1;;;4059:22:62;41029:18:181;;4036:58:62;40876:291:181;4009:86:62;4109:40;4129:5;4136:12;4109:19;:40::i;3233:443:171:-;3283:9;3436:1;3432;3428:6;3424:14;3421:1;3418:21;3415:1;3411:29;3408:227;;;3539:10;3533:4;3526:24;3620:4;3614;3607:18;3408:227;-1:-1:-1;3664:3:171;3653:9;;3649:19;;3233:443::o;2457:560:119:-;2549:7;2568:27;2608:5;-1:-1:-1;;;;;2598:25:119;;2632:4;2639:6;2598:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2568:78;;2762:18;2801:5;-1:-1:-1;;;;;2791:22:119;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2762:54;;2837:10;-1:-1:-1;;;;;2830:17:119;:3;-1:-1:-1;;;;;2830:17:119;;2826:148;;2885:78;;-1:-1:-1;;;2885:78:119;;-1:-1:-1;;;;;2885:27:119;;;;;:78;;2913:19;;2942:4;;;;2885:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2863:100;;2826:148;-1:-1:-1;2991:19:119;2457:560;-1:-1:-1;;;;2457:560:119:o;4318:472:62:-;4565:19;;-1:-1:-1;;;4565:19:62;;4543;;-1:-1:-1;;;;;4565:12:62;;;;;:19;;4578:5;;4565:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4594:54;;-1:-1:-1;;;4594:54:62;;-1:-1:-1;;;;;41539:15:181;;;4594:54:62;;;41521:34:181;41591:15;;;41571:18;;;41564:43;41623:18;;;41616:34;;;41666:18;;;41659:34;;;41742:4;41730:17;;41709:19;;;41702:46;41764:19;;;41757:35;;;41808:19;;;41801:35;;;4543:41:62;;-1:-1:-1;4594:12:62;;;;;;41455:19:181;;4594:54:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4679:19:62;;-1:-1:-1;;;4679:19:62;;4658:18;;-1:-1:-1;;;;;;4679:12:62;;;-1:-1:-1;4679:12:62;;:19;;4692:5;;4679:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4658:40;-1:-1:-1;4730:15:62;:11;4744:1;4730:15;:::i;:::-;4716:10;:29;4708:75;;;;-1:-1:-1;;;4708:75:62;;42049:2:181;4708:75:62;;;42031:21:181;42088:2;42068:18;;;42061:30;42127:34;42107:18;;;42100:62;-1:-1:-1;;;42178:18:181;;;42171:31;42219:19;;4708:75:62;41847:397:181;1355:203:62;1482:68;;-1:-1:-1;;;;;42507:15:181;;;1482:68:62;;;42489:34:181;42559:15;;42539:18;;;42532:43;42591:18;;;42584:34;;;1455:96:62;;1475:5;;-1:-1:-1;;;1505:27:62;42424:18:181;;1482:68:62;42249:375:181;4704:487:171;4754:9;4934:16;4928:23;;4946:3;4919:33;4912:41;4905:49;;4895:255;;5054:10;5048:4;5041:24;5135:4;5129;5122:18;4895:255;-1:-1:-1;5175:3:171;5168:11;;;;5164:19;;4704:487::o;1470:197:88:-;1588:12;1651:13;1615:33;1620:10;1632:15;-1:-1:-1;;;;;1615:33:88;:4;:33::i;:::-;:49;;;;:::i;4109:223:65:-;4242:12;4273:52;4295:6;4303:4;4309:1;4312:12;4273:21;:52::i;6316:594:62:-;6399:4;6701:12;6715:23;6750:5;-1:-1:-1;;;;;6742:19:62;6762:4;6742:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6700:67;;;;6796:7;:69;;;;-1:-1:-1;6808:17:62;;:22;;:56;;;6845:10;6834:30;;;;;;;;;;;;:::i;:::-;6796:107;;;;-1:-1:-1;;;;;;;;;;1702:19:65;;:23;;;6316:594:62:o;5166:446:65:-;5331:12;5388:5;5363:21;:30;;5355:81;;;;-1:-1:-1;;;5355:81:65;;42831:2:181;5355:81:65;;;42813:21:181;42870:2;42850:18;;;42843:30;42909:34;42889:18;;;42882:62;-1:-1:-1;;;42960:18:181;;;42953:36;43006:19;;5355:81:65;42629:402:181;5355:81:65;5447:12;5461:23;5488:6;-1:-1:-1;;;;;5488:11:65;5507:5;5514:4;5488:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:73;;;;5536:69;5563:6;5571:7;5580:10;5592:12;5536:26;:69::i;:::-;5529:76;5166:446;-1:-1:-1;;;;;;;5166:446:65:o;7672:628::-;7852:12;7880:7;7876:418;;;7907:10;:17;7928:1;7907:22;7903:286;;-1:-1:-1;;;;;1702:19:65;;;8114:60;;;;-1:-1:-1;;;8114:60:65;;43238:2:181;8114:60:65;;;43220:21:181;43277:2;43257:18;;;43250:30;43316:31;43296:18;;;43289:59;43365:18;;8114:60:65;43036:353:181;8114:60:65;-1:-1:-1;8209:10:65;8202:17;;7876:418;8250:33;8258:10;8270:12;8981:17;;:21;8977:379;;9209:10;9203:17;9265:15;9252:10;9248:2;9244:19;9237:44;8977:379;9332:12;9325:20;;-1:-1:-1;;;9325:20:65;;;;;;;;:::i;14:131:181:-;-1:-1:-1;;;;;89:31:181;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:315::-;357:6;365;418:2;406:9;397:7;393:23;389:32;386:52;;;434:1;431;424:12;386:52;473:9;460:23;492:31;517:5;492:31;:::i;:::-;542:5;594:2;579:18;;;;566:32;;-1:-1:-1;;;289:315:181:o;791:165::-;860:5;905:3;896:6;891:3;887:16;883:26;880:46;;;922:1;919;912:12;880:46;-1:-1:-1;944:6:181;791:165;-1:-1:-1;791:165:181:o;961:161::-;1026:5;1071:3;1062:6;1057:3;1053:16;1049:26;1046:46;;;1088:1;1085;1078:12;1127:1000;1301:6;1309;1317;1325;1333;1341;1394:3;1382:9;1373:7;1369:23;1365:33;1362:53;;;1411:1;1408;1401:12;1362:53;1450:9;1437:23;1469:31;1494:5;1469:31;:::i;:::-;1519:5;-1:-1:-1;1576:2:181;1561:18;;1548:32;1589:33;1548:32;1589:33;:::i;:::-;1641:7;-1:-1:-1;1700:2:181;1685:18;;1672:32;1713:33;1672:32;1713:33;:::i;:::-;1765:7;-1:-1:-1;1819:2:181;1804:18;;1791:32;;-1:-1:-1;1874:3:181;1859:19;;1846:33;-1:-1:-1;;;;;1891:30:181;;1888:50;;;1934:1;1931;1924:12;1888:50;1957:76;2025:7;2016:6;2005:9;2001:22;1957:76;:::i;:::-;1947:86;;;2052:69;2113:7;2107:3;2096:9;2092:19;2052:69;:::i;:::-;2042:79;;1127:1000;;;;;;;;:::o;2132:789::-;2288:6;2296;2304;2312;2365:3;2353:9;2344:7;2340:23;2336:33;2333:53;;;2382:1;2379;2372:12;2333:53;2421:9;2408:23;2440:31;2465:5;2440:31;:::i;:::-;2490:5;-1:-1:-1;2547:2:181;2532:18;;2519:32;2560:33;2519:32;2560:33;:::i;:::-;2612:7;-1:-1:-1;2670:2:181;2655:18;;2642:32;-1:-1:-1;;;;;2686:30:181;;2683:50;;;2729:1;2726;2719:12;2683:50;2752:76;2820:7;2811:6;2800:9;2796:22;2752:76;:::i;:::-;2742:86;;;2847:68;2907:7;2902:2;2891:9;2887:18;2847:68;:::i;:::-;2837:78;;2132:789;;;;;;;:::o;2926:220::-;-1:-1:-1;;;;;3107:32:181;;;;3089:51;;3077:2;3062:18;;2926:220::o;3151:160::-;3215:5;3260:3;3251:6;3246:3;3242:16;3238:26;3235:46;;;3277:1;3274;3267:12;3316:568;3425:6;3433;3441;3494:2;3482:9;3473:7;3469:23;3465:32;3462:52;;;3510:1;3507;3500:12;3462:52;3550:9;3537:23;-1:-1:-1;;;;;3575:6:181;3572:30;3569:50;;;3615:1;3612;3605:12;3569:50;3638:71;3701:7;3692:6;3681:9;3677:22;3638:71;:::i;:::-;3628:81;;;3756:2;3745:9;3741:18;3728:32;3718:42;;3810:2;3799:9;3795:18;3782:32;3823:31;3848:5;3823:31;:::i;:::-;3873:5;3863:15;;;3316:568;;;;;:::o;4388:347::-;4439:8;4449:6;4503:3;4496:4;4488:6;4484:17;4480:27;4470:55;;4521:1;4518;4511:12;4470:55;-1:-1:-1;4544:20:181;;-1:-1:-1;;;;;4576:30:181;;4573:50;;;4619:1;4616;4609:12;4573:50;4656:4;4648:6;4644:17;4632:29;;4708:3;4701:4;4692:6;4684;4680:19;4676:30;4673:39;4670:59;;;4725:1;4722;4715:12;4670:59;4388:347;;;;;:::o;4740:681::-;4837:6;4845;4853;4861;4869;4922:3;4910:9;4901:7;4897:23;4893:33;4890:53;;;4939:1;4936;4929:12;4890:53;4978:9;4965:23;4997:31;5022:5;4997:31;:::i;:::-;5047:5;-1:-1:-1;5099:2:181;5084:18;;5071:32;;-1:-1:-1;5150:2:181;5135:18;;5122:32;;-1:-1:-1;5205:2:181;5190:18;;5177:32;-1:-1:-1;;;;;5221:30:181;;5218:50;;;5264:1;5261;5254:12;5218:50;5303:58;5353:7;5344:6;5333:9;5329:22;5303:58;:::i;:::-;4740:681;;;;-1:-1:-1;4740:681:181;;-1:-1:-1;5380:8:181;;5277:84;4740:681;-1:-1:-1;;;4740:681:181:o;5426:823::-;5532:6;5540;5548;5556;5564;5572;5625:3;5613:9;5604:7;5600:23;5596:33;5593:53;;;5642:1;5639;5632:12;5593:53;5681:9;5668:23;5700:31;5725:5;5700:31;:::i;:::-;5750:5;-1:-1:-1;5807:2:181;5792:18;;5779:32;5820:33;5779:32;5820:33;:::i;:::-;5872:7;-1:-1:-1;5926:2:181;5911:18;;5898:32;;-1:-1:-1;5977:2:181;5962:18;;5949:32;;-1:-1:-1;6032:3:181;6017:19;;6004:33;-1:-1:-1;;;;;6049:30:181;;6046:50;;;6092:1;6089;6082:12;6046:50;6131:58;6181:7;6172:6;6161:9;6157:22;6131:58;:::i;:::-;5426:823;;;;-1:-1:-1;5426:823:181;;-1:-1:-1;5426:823:181;;6208:8;;5426:823;-1:-1:-1;;;5426:823:181:o;6254:160::-;6319:5;6364:2;6355:6;6350:3;6346:16;6342:25;6339:45;;;6380:1;6377;6370:12;6419:1056;6617:6;6625;6633;6641;6649;6702:3;6690:9;6681:7;6677:23;6673:33;6670:53;;;6719:1;6716;6709:12;6670:53;6758:9;6745:23;6777:31;6802:5;6777:31;:::i;:::-;6827:5;-1:-1:-1;6884:2:181;6869:18;;6856:32;6897:33;6856:32;6897:33;:::i;:::-;6949:7;-1:-1:-1;7007:2:181;6992:18;;6979:32;-1:-1:-1;;;;;7060:14:181;;;7057:34;;;7087:1;7084;7077:12;7057:34;7110:76;7178:7;7169:6;7158:9;7154:22;7110:76;:::i;:::-;7100:86;;7239:2;7228:9;7224:18;7211:32;7195:48;;7268:2;7258:8;7255:16;7252:36;;;7284:1;7281;7274:12;7252:36;;7307:74;7373:7;7362:8;7351:9;7347:24;7307:74;:::i;:::-;7297:84;;;7400:69;7461:7;7455:3;7444:9;7440:19;7400:69;:::i;:::-;7390:79;;6419:1056;;;;;;;;:::o;7480:643::-;7590:6;7598;7606;7659:2;7647:9;7638:7;7634:23;7630:32;7627:52;;;7675:1;7672;7665:12;7627:52;7714:9;7701:23;7733:31;7758:5;7733:31;:::i;:::-;7783:5;-1:-1:-1;7840:2:181;7825:18;;7812:32;7853:33;7812:32;7853:33;:::i;:::-;7905:7;-1:-1:-1;7963:2:181;7948:18;;7935:32;-1:-1:-1;;;;;7979:30:181;;7976:50;;;8022:1;8019;8012:12;7976:50;8045:72;8109:7;8100:6;8089:9;8085:22;8045:72;:::i;:::-;8035:82;;;7480:643;;;;;:::o;8128:919::-;8298:6;8306;8314;8322;8330;8338;8391:3;8379:9;8370:7;8366:23;8362:33;8359:53;;;8408:1;8405;8398:12;8359:53;8447:9;8434:23;8466:31;8491:5;8466:31;:::i;:::-;8516:5;-1:-1:-1;8573:2:181;8558:18;;8545:32;8586:33;8545:32;8586:33;:::i;:::-;8638:7;-1:-1:-1;8692:2:181;8677:18;;8664:32;;-1:-1:-1;8743:2:181;8728:18;;8715:32;;-1:-1:-1;8798:3:181;8783:19;;8770:33;-1:-1:-1;;;;;8815:30:181;;8812:50;;;8858:1;8855;8848:12;8812:50;8881:72;8945:7;8936:6;8925:9;8921:22;8881:72;:::i;9052:651::-;9166:6;9174;9182;9235:2;9223:9;9214:7;9210:23;9206:32;9203:52;;;9251:1;9248;9241:12;9203:52;9290:9;9277:23;9309:31;9334:5;9309:31;:::i;:::-;9359:5;-1:-1:-1;9416:2:181;9401:18;;9388:32;9429:33;9388:32;9429:33;:::i;:::-;9481:7;-1:-1:-1;9539:2:181;9524:18;;9511:32;-1:-1:-1;;;;;9555:30:181;;9552:50;;;9598:1;9595;9588:12;9552:50;9621:76;9689:7;9680:6;9669:9;9665:22;9621:76;:::i;9708:367::-;9771:8;9781:6;9835:3;9828:4;9820:6;9816:17;9812:27;9802:55;;9853:1;9850;9843:12;9802:55;-1:-1:-1;9876:20:181;;-1:-1:-1;;;;;9908:30:181;;9905:50;;;9951:1;9948;9941:12;9905:50;9988:4;9980:6;9976:17;9964:29;;10048:3;10041:4;10031:6;10028:1;10024:14;10016:6;10012:27;10008:38;10005:47;10002:67;;;10065:1;10062;10055:12;10080:640;10184:6;10192;10200;10208;10261:2;10249:9;10240:7;10236:23;10232:32;10229:52;;;10277:1;10274;10267:12;10229:52;10316:9;10303:23;10335:31;10360:5;10335:31;:::i;:::-;10385:5;-1:-1:-1;10437:2:181;10422:18;;10409:32;;-1:-1:-1;10492:2:181;10477:18;;10464:32;-1:-1:-1;;;;;10508:30:181;;10505:50;;;10551:1;10548;10541:12;10505:50;10590:70;10652:7;10643:6;10632:9;10628:22;10590:70;:::i;:::-;10080:640;;;;-1:-1:-1;10679:8:181;-1:-1:-1;;;;10080:640:181:o;11349:848::-;11509:6;11517;11525;11533;11541;11594:3;11582:9;11573:7;11569:23;11565:33;11562:53;;;11611:1;11608;11601:12;11562:53;11651:9;11638:23;-1:-1:-1;;;;;11676:6:181;11673:30;11670:50;;;11716:1;11713;11706:12;11670:50;11739:71;11802:7;11793:6;11782:9;11778:22;11739:71;:::i;:::-;11729:81;;;11860:2;11849:9;11845:18;11832:32;11873:31;11898:5;11873:31;:::i;:::-;11923:5;-1:-1:-1;11975:2:181;11960:18;;11947:32;;-1:-1:-1;12031:2:181;12016:18;;12003:32;12044:33;12003:32;12044:33;:::i;:::-;12096:7;-1:-1:-1;12122:69:181;12183:7;12177:3;12162:19;;12122:69;:::i;12202:874::-;12361:6;12369;12377;12385;12393;12446:3;12434:9;12425:7;12421:23;12417:33;12414:53;;;12463:1;12460;12453:12;12414:53;12502:9;12489:23;12521:31;12546:5;12521:31;:::i;:::-;12571:5;-1:-1:-1;12628:2:181;12613:18;;12600:32;12641:33;12600:32;12641:33;:::i;:::-;12693:7;-1:-1:-1;12747:2:181;12732:18;;12719:32;;-1:-1:-1;12802:2:181;12787:18;;12774:32;-1:-1:-1;;;;;12818:30:181;;12815:50;;;12861:1;12858;12851:12;12815:50;12884:22;;12940:3;12922:16;;;12918:26;12915:46;;;12957:1;12954;12947:12;13532:931;13673:6;13681;13689;13697;13705;13713;13766:3;13754:9;13745:7;13741:23;13737:33;13734:53;;;13783:1;13780;13773:12;13734:53;13822:9;13809:23;13841:31;13866:5;13841:31;:::i;:::-;13891:5;-1:-1:-1;13948:2:181;13933:18;;13920:32;13961:33;13920:32;13961:33;:::i;:::-;14013:7;-1:-1:-1;14072:2:181;14057:18;;14044:32;14085:33;14044:32;14085:33;:::i;:::-;14137:7;-1:-1:-1;14191:2:181;14176:18;;14163:32;;-1:-1:-1;14242:3:181;14227:19;;14214:33;;-1:-1:-1;14298:3:181;14283:19;;14270:33;-1:-1:-1;;;;;14315:30:181;;14312:50;;;14358:1;14355;14348:12;14312:50;14381:76;14449:7;14440:6;14429:9;14425:22;14381:76;:::i;:::-;14371:86;;;13532:931;;;;;;;;:::o;14698:1096::-;14864:6;14872;14880;14888;14896;14904;14957:2;14945:9;14936:7;14932:23;14928:32;14925:52;;;14973:1;14970;14963:12;14925:52;15013:9;15000:23;-1:-1:-1;;;;;15083:2:181;15075:6;15072:14;15069:34;;;15099:1;15096;15089:12;15069:34;15138:70;15200:7;15191:6;15180:9;15176:22;15138:70;:::i;:::-;15227:8;;-1:-1:-1;15112:96:181;-1:-1:-1;15315:2:181;15300:18;;15287:32;;-1:-1:-1;15331:16:181;;;15328:36;;;15360:1;15357;15350:12;15328:36;15399:72;15463:7;15452:8;15441:9;15437:24;15399:72;:::i;:::-;15490:8;;-1:-1:-1;15373:98:181;-1:-1:-1;15578:2:181;15563:18;;15550:32;;-1:-1:-1;15594:16:181;;;15591:36;;;15623:1;15620;15613:12;15591:36;;15662:72;15726:7;15715:8;15704:9;15700:24;15662:72;:::i;15799:781::-;15951:6;15959;15967;15975;16028:3;16016:9;16007:7;16003:23;15999:33;15996:53;;;16045:1;16042;16035:12;15996:53;16084:9;16071:23;16103:31;16128:5;16103:31;:::i;:::-;16153:5;-1:-1:-1;16210:2:181;16195:18;;16182:32;16223:33;16182:32;16223:33;:::i;:::-;16275:7;-1:-1:-1;16333:2:181;16318:18;;16305:32;-1:-1:-1;;;;;16349:30:181;;16346:50;;;16392:1;16389;16382:12;16346:50;16415:72;16479:7;16470:6;16459:9;16455:22;16415:72;:::i;16585:284::-;-1:-1:-1;;;;;16771:32:181;;;;16753:51;;16847:14;16840:22;16835:2;16820:18;;16813:50;16741:2;16726:18;;16585:284::o;16874:184::-;16944:6;16997:2;16985:9;16976:7;16972:23;16968:32;16965:52;;;17013:1;17010;17003:12;16965:52;-1:-1:-1;17036:16:181;;16874:184;-1:-1:-1;16874:184:181:o;17063:524::-;-1:-1:-1;;;;;17374:15:181;;;17356:34;;17426:15;;;17421:2;17406:18;;17399:43;17478:15;;;;17473:2;17458:18;;17451:43;17525:2;17510:18;;17503:34;;;;17568:3;17553:19;;17546:35;;;;17305:3;17290:19;;17063:524::o;18130:127::-;18191:10;18186:3;18182:20;18179:1;18172:31;18222:4;18219:1;18212:15;18246:4;18243:1;18236:15;18262:329;18359:4;18417:11;18404:25;18511:3;18507:8;18496;18480:14;18476:29;18472:44;18452:18;18448:69;18438:97;;18531:1;18528;18521:12;18438:97;18552:33;;;;;18262:329;-1:-1:-1;;18262:329:181:o;18596:149::-;18670:20;;18719:1;18709:12;;18699:40;;18735:1;18732;18725:12;18750:206;18823:6;18876:2;18864:9;18855:7;18851:23;18847:32;18844:52;;;18892:1;18889;18882:12;18844:52;18915:35;18940:9;18915:35;:::i;18961:247::-;19020:6;19073:2;19061:9;19052:7;19048:23;19044:32;19041:52;;;19089:1;19086;19079:12;19041:52;19128:9;19115:23;19147:31;19172:5;19147:31;:::i;19213:385::-;-1:-1:-1;;;;;19465:15:181;;;19447:34;;19517:15;;;;19512:2;19497:18;;19490:43;19576:14;;19569:22;19564:2;19549:18;;19542:50;19397:2;19382:18;;19213:385::o;19603:296::-;19673:5;19732:3;19719:17;19818:3;19814:8;19803;19787:14;19783:29;19779:44;19759:18;19755:69;19745:97;;19838:1;19835;19828:12;19745:97;19860:33;;;;19603:296;-1:-1:-1;;19603:296:181:o;19904:111::-;19989:1;19982:5;19979:12;19969:40;;20005:1;20002;19995:12;20020:154;20098:20;;20127:41;20098:20;20127:41;:::i;20179:117::-;20264:1;20257:5;20254:12;20244:46;;20270:18;;:::i;20301:139::-;20381:1;20374:5;20371:12;20361:46;;20387:18;;:::i;:::-;20416;;20301:139::o;20445:500::-;20503:5;20510:6;20570:3;20557:17;20656:2;20652:7;20641:8;20625:14;20621:29;20617:43;20597:18;20593:68;20583:96;;20675:1;20672;20665:12;20583:96;20703:33;;20807:4;20794:18;;;-1:-1:-1;20755:21:181;;-1:-1:-1;;;;;;20824:30:181;;20821:50;;;20867:1;20864;20857:12;20821:50;20914:6;20898:14;20894:27;20887:5;20883:39;20880:59;;;20935:1;20932;20925:12;20950:266;21038:6;21033:3;21026:19;21090:6;21083:5;21076:4;21071:3;21067:14;21054:43;-1:-1:-1;21142:1:181;21117:16;;;21135:4;21113:27;;;21106:38;;;;21198:2;21177:15;;;-1:-1:-1;;21173:29:181;21164:39;;;21160:50;;20950:266::o;21221:1131::-;21283:3;21311:6;21354:5;21341:19;21369:43;21404:7;21369:43;:::i;:::-;21421;21456:7;21421:43;:::i;:::-;21473:20;;21522:42;21558:4;21547:16;;21522:42;:::i;:::-;21573:54;21621:4;21616:3;21612:14;21598:12;21573:54;:::i;:::-;;21675:4;21668:5;21664:16;21651:30;21690:33;21715:7;21690:33;:::i;:::-;-1:-1:-1;;;;;21755:33:181;21748:4;21739:14;;21732:57;21845:4;21834:16;;;21821:30;21805:14;;;21798:54;21908:4;21897:16;;;21884:30;21868:14;;;21861:54;21776:3;21952:16;;21939:30;21978:33;21939:30;21978:33;:::i;:::-;-1:-1:-1;;;;;4137:31:181;22057:4;22048:14;;4125:44;22119:4;22108:16;;;22095:30;22079:14;;;22072:54;22171:55;22220:4;22209:16;;22112:5;22171:55;:::i;:::-;22258:2;22251:4;22246:3;22242:14;22235:26;22277:69;22342:2;22337:3;22333:12;22319;22303:14;22277:69;:::i;22357:970::-;22420:3;22466:5;22453:19;22481:33;22506:7;22481:33;:::i;:::-;-1:-1:-1;;;;;22573:16:181;;;22561:29;;22638:4;22627:16;;22614:30;;22653:33;22614:30;22653:33;:::i;:::-;22718:16;;;22711:4;22702:14;;22695:40;22783:4;22772:16;;22759:30;;22798:33;22759:30;22798:33;:::i;:::-;22863:16;22856:4;22847:14;;22840:40;22909:67;22970:4;22959:16;;22963:5;22909:67;:::i;:::-;23008:4;23001;22996:3;22992:14;22985:28;23034:67;23095:4;23090:3;23086:14;23072:12;23034:67;:::i;:::-;23022:79;;23132:67;23193:4;23186:5;23182:16;23175:5;23132:67;:::i;:::-;23241:3;23235:4;23231:14;23224:4;23219:3;23215:14;23208:38;23262:59;23316:4;23300:14;23262:59;:::i;23332:451::-;23579:2;23568:9;23561:21;23542:4;23599:66;23661:2;23650:9;23646:18;23638:6;23599:66;:::i;:::-;23696:2;23681:18;;23674:34;;;;-1:-1:-1;;;;;;23744:32:181;;;;23739:2;23724:18;;;23717:60;23591:74;23332:451;-1:-1:-1;23332:451:181:o;23788:250::-;23873:1;23883:113;23897:6;23894:1;23891:13;23883:113;;;23973:11;;;23967:18;23954:11;;;23947:39;23919:2;23912:10;23883:113;;;-1:-1:-1;;24030:1:181;24012:16;;24005:27;23788:250::o;24043:270::-;24084:3;24122:5;24116:12;24149:6;24144:3;24137:19;24165:76;24234:6;24227:4;24222:3;24218:14;24211:4;24204:5;24200:16;24165:76;:::i;:::-;24295:2;24274:15;-1:-1:-1;;24270:29:181;24261:39;;;;24302:4;24257:50;;24043:270;-1:-1:-1;;24043:270:181:o;24318:415::-;24580:1;24576;24571:3;24567:11;24563:19;24555:6;24551:32;24540:9;24533:51;24620:6;24615:2;24604:9;24600:18;24593:34;24663:2;24658;24647:9;24643:18;24636:30;24514:4;24683:44;24723:2;24712:9;24708:18;24700:6;24683:44;:::i;24738:118::-;24824:5;24817:13;24810:21;24803:5;24800:32;24790:60;;24846:1;24843;24836:12;24861:245;24928:6;24981:2;24969:9;24960:7;24956:23;24952:32;24949:52;;;24997:1;24994;24987:12;24949:52;25029:9;25023:16;25048:28;25070:5;25048:28;:::i;25111:127::-;25172:10;25167:3;25163:20;25160:1;25153:31;25203:4;25200:1;25193:15;25227:4;25224:1;25217:15;25243:250;25310:2;25304:9;25352:6;25340:19;;-1:-1:-1;;;;;25374:34:181;;25410:22;;;25371:62;25368:88;;;25436:18;;:::i;:::-;25472:2;25465:22;25243:250;:::o;25498:718::-;25540:5;25593:3;25586:4;25578:6;25574:17;25570:27;25560:55;;25611:1;25608;25601:12;25560:55;25647:6;25634:20;-1:-1:-1;;;;;25710:2:181;25706;25703:10;25700:36;;;25716:18;;:::i;:::-;25791:2;25785:9;25759:2;25845:13;;-1:-1:-1;;25841:22:181;;;25865:2;25837:31;25833:40;25821:53;;;25889:18;;;25909:22;;;25886:46;25883:72;;;25935:18;;:::i;:::-;25975:10;25971:2;25964:22;26010:2;26002:6;25995:18;26056:3;26049:4;26044:2;26036:6;26032:15;26028:26;26025:35;26022:55;;;26073:1;26070;26063:12;26022:55;26137:2;26130:4;26122:6;26118:17;26111:4;26103:6;26099:17;26086:54;26184:1;26177:4;26172:2;26164:6;26160:15;26156:26;26149:37;26204:6;26195:15;;;;;;25498:718;;;;:::o;26221:847::-;26278:5;26326:6;26314:9;26309:3;26305:19;26301:32;26298:52;;;26346:1;26343;26336:12;26298:52;26368:17;;:::i;:::-;26359:26;;26408:39;26437:9;26408:39;:::i;:::-;26401:5;26394:54;26480:44;26520:2;26509:9;26505:18;26480:44;:::i;:::-;26475:2;26468:5;26464:14;26457:68;26557:38;26591:2;26580:9;26576:18;26557:38;:::i;:::-;26552:2;26545:5;26541:14;26534:62;26656:2;26645:9;26641:18;26628:32;26623:2;26616:5;26612:14;26605:56;26722:3;26711:9;26707:19;26694:33;26688:3;26681:5;26677:15;26670:58;26761:39;26795:3;26784:9;26780:19;26761:39;:::i;:::-;26755:3;26748:5;26744:15;26737:64;26862:3;26851:9;26847:19;26834:33;26828:3;26821:5;26817:15;26810:58;26919:3;26908:9;26904:19;26891:33;-1:-1:-1;;;;;26939:6:181;26936:30;26933:50;;;26979:1;26976;26969:12;26933:50;27016:45;27057:3;27048:6;27037:9;27033:22;27016:45;:::i;:::-;27010:3;27003:5;26999:15;26992:70;;26221:847;;;;:::o;27073:1101::-;27131:5;27179:4;27167:9;27162:3;27158:19;27154:30;27151:50;;;27197:1;27194;27187:12;27151:50;27230:2;27224:9;27272:4;27264:6;27260:17;-1:-1:-1;;;;;27364:6:181;27352:10;27349:22;27344:2;27332:10;27329:18;27326:46;27323:72;;;27375:18;;:::i;:::-;27415:10;27411:2;27404:22;27444:6;27435:15;;27487:9;27474:23;27459:38;;27506:33;27531:7;27506:33;:::i;:::-;27548:23;;;27623:2;27608:18;;27595:32;;27636:33;27595:32;27636:33;:::i;:::-;27702:7;27697:2;27689:6;27685:15;27678:32;27743:38;27777:2;27766:9;27762:18;27743:38;:::i;:::-;27738:2;27730:6;27726:15;27719:63;27833:2;27822:9;27818:18;27805:32;27791:46;;27860:2;27852:6;27849:14;27846:34;;;27876:1;27873;27866:12;27846:34;27913:57;27966:3;27957:6;27946:9;27942:22;27913:57;:::i;:::-;27908:2;27900:6;27896:15;27889:82;28024:3;28013:9;28009:19;27996:33;27980:49;;28054:2;28044:8;28041:16;28038:36;;;28070:1;28067;28060:12;28038:36;;28108:59;28163:3;28152:8;28141:9;28137:24;28108:59;:::i;:::-;28102:3;28094:6;28090:16;28083:85;;;27073:1101;;;;:::o;28179:565::-;28294:6;28302;28310;28363:2;28351:9;28342:7;28338:23;28334:32;28331:52;;;28379:1;28376;28369:12;28331:52;28419:9;28406:23;-1:-1:-1;;;;;28444:6:181;28441:30;28438:50;;;28484:1;28481;28474:12;28438:50;28507:62;28561:7;28552:6;28541:9;28537:22;28507:62;:::i;28749:127::-;28810:10;28805:3;28801:20;28798:1;28791:31;28841:4;28838:1;28831:15;28865:4;28862:1;28855:15;28881:136;28916:3;-1:-1:-1;;;28937:22:181;;28934:48;;28962:18;;:::i;:::-;-1:-1:-1;29002:1:181;28998:13;;28881:136::o;29022:1005::-;29209:2;29198:9;29191:21;29172:4;29237:6;29231:13;29253:38;29288:2;29253:38;:::i;:::-;29327:2;29322;29311:9;29307:18;29300:30;;29377:2;29369:6;29365:15;29359:22;29390:58;29444:2;29433:9;29429:18;29415:12;29390:58;:::i;:::-;;29529:1;29525;29520:3;29516:11;29512:19;29506:2;29498:6;29494:15;29488:22;29484:48;29479:2;29468:9;29464:18;29457:76;29588:2;29580:6;29576:15;29570:22;29564:3;29553:9;29549:19;29542:51;29648:3;29640:6;29636:16;29630:23;29624:3;29613:9;29609:19;29602:52;29703:3;29695:6;29691:16;29685:23;29717:55;29767:3;29756:9;29752:19;29736:14;-1:-1:-1;;;;;4137:31:181;4125:44;;4071:104;29717:55;;29827:3;29819:6;29815:16;29809:23;29803:3;29792:9;29788:19;29781:52;29882:3;29874:6;29870:16;29864:23;29906:6;29948:2;29943;29932:9;29928:18;29921:30;;29968:53;30016:3;30005:9;30001:19;29985:14;29968:53;:::i;30032:128::-;30099:9;;;30120:11;;;30117:37;;;30134:18;;:::i;30165:274::-;-1:-1:-1;;;;;30357:32:181;;;;30339:51;;30421:2;30406:18;;30399:34;30327:2;30312:18;;30165:274::o;30444:565::-;30559:6;30567;30575;30628:2;30616:9;30607:7;30603:23;30599:32;30596:52;;;30644:1;30641;30634:12;30596:52;30684:9;30671:23;-1:-1:-1;;;;;30709:6:181;30706:30;30703:50;;;30749:1;30746;30739:12;30703:50;30772:62;30826:7;30817:6;30806:9;30802:22;30772:62;:::i;:::-;30762:72;;;30884:2;30873:9;30869:18;30856:32;30897:31;30922:5;30897:31;:::i;:::-;30444:565;;30947:5;;-1:-1:-1;;;30999:2:181;30984:18;;;;30971:32;;30444:565::o;31552:125::-;31617:9;;;31638:10;;;31635:36;;;31651:18;;:::i;31682:514::-;31881:25;;;31942:2;31937;31922:18;;31915:30;;;31961:18;;31954:34;;;-1:-1:-1;;;;;;32000:31:181;;31997:51;;;32044:1;32041;32034:12;31997:51;32078:6;32075:1;32071:14;32135:6;32127;32122:2;32111:9;32107:18;32094:48;32163:22;;;;32187:2;32159:31;;31682:514;-1:-1:-1;;;;31682:514:181:o;32201:368::-;32298:6;32306;32314;32322;32375:3;32363:9;32354:7;32350:23;32346:33;32343:53;;;32392:1;32389;32382:12;32343:53;-1:-1:-1;;32415:16:181;;32471:2;32456:18;;32450:25;32515:2;32500:18;;32494:25;32559:2;32544:18;;;32538:25;32415:16;;32450:25;;-1:-1:-1;32538:25:181;;-1:-1:-1;32201:368:181;-1:-1:-1;32201:368:181:o;32574:156::-;32640:20;;32700:4;32689:16;;32679:27;;32669:55;;32720:1;32717;32710:12;32735:929;32825:6;32878:3;32866:9;32857:7;32853:23;32849:33;32846:53;;;32895:1;32892;32885:12;32846:53;32928:2;32922:9;32970:3;32962:6;32958:16;33040:6;33028:10;33025:22;-1:-1:-1;;;;;32992:10:181;32989:34;32986:62;32983:88;;;33051:18;;:::i;:::-;33087:2;33080:22;33124:23;;33156:41;33124:23;33156:41;:::i;:::-;33221:5;33213:6;33206:21;;33288:2;33277:9;33273:18;33260:32;33255:2;33247:6;33243:15;33236:57;33354:2;33343:9;33339:18;33326:32;33321:2;33313:6;33309:15;33302:57;33420:2;33409:9;33405:18;33392:32;33387:2;33379:6;33375:15;33368:57;33459:37;33491:3;33480:9;33476:19;33459:37;:::i;:::-;33453:3;33445:6;33441:16;33434:63;33559:3;33548:9;33544:19;33531:33;33525:3;33517:6;33513:16;33506:59;33627:3;33616:9;33612:19;33599:33;33593:3;33585:6;33581:16;33574:59;33652:6;33642:16;;;32735:929;;;;:::o;33669:451::-;33916:2;33905:9;33898:21;33879:4;33936:66;33998:2;33987:9;33983:18;33975:6;33936:66;:::i;:::-;-1:-1:-1;;;;;34038:32:181;;;;34033:2;34018:18;;34011:60;-1:-1:-1;34102:2:181;34087:18;34080:34;33928:74;33669:451;-1:-1:-1;33669:451:181:o;34125:519::-;-1:-1:-1;;;;;34425:15:181;;;34407:34;;34477:15;;34472:2;34457:18;;34450:43;34524:2;34509:18;;34502:34;;;34572:3;34567:2;34552:18;;34545:31;;;34350:4;;34593:45;;34618:19;;34610:6;34593:45;:::i;34649:127::-;34710:10;34705:3;34701:20;34698:1;34691:31;34741:4;34738:1;34731:15;34765:4;34762:1;34755:15;34781:241;34837:6;34890:2;34878:9;34869:7;34865:23;34861:32;34858:52;;;34906:1;34903;34896:12;34858:52;34945:9;34932:23;34964:28;34986:5;34964:28;:::i;35027:521::-;35104:4;35110:6;35170:11;35157:25;35264:2;35260:7;35249:8;35233:14;35229:29;35225:43;35205:18;35201:68;35191:96;;35283:1;35280;35273:12;35191:96;35310:33;;35362:20;;;-1:-1:-1;;;;;;35394:30:181;;35391:50;;;35437:1;35434;35427:12;35391:50;35470:4;35458:17;;-1:-1:-1;35501:14:181;35497:27;;;35487:38;;35484:58;;;35538:1;35535;35528:12;35553:271;35736:6;35728;35723:3;35710:33;35692:3;35762:16;;35787:13;;;35762:16;35553:271;-1:-1:-1;35553:271:181:o;35829:410::-;35916:6;35924;35932;35985:2;35973:9;35964:7;35960:23;35956:32;35953:52;;;36001:1;35998;35991:12;35953:52;36033:9;36027:16;-1:-1:-1;;;;;36076:5:181;36072:30;36065:5;36062:41;36052:69;;36117:1;36114;36107:12;36052:69;36185:2;36170:18;;36164:25;36229:2;36214:18;;;36208:25;36140:5;;36164:25;;-1:-1:-1;36208:25:181;35829:410;-1:-1:-1;;;35829:410:181:o;36244:375::-;36446:25;;;-1:-1:-1;;;;;36545:15:181;;;36540:2;36525:18;;36518:43;36597:15;36592:2;36577:18;;36570:43;36434:2;36419:18;;36244:375::o;36624:287::-;36753:3;36791:6;36785:13;36807:66;36866:6;36861:3;36854:4;36846:6;36842:17;36807:66;:::i;36916:251::-;36986:6;37039:2;37027:9;37018:7;37014:23;37010:32;37007:52;;;37055:1;37052;37045:12;37007:52;37087:9;37081:16;37106:31;37131:5;37106:31;:::i;37451:280::-;37640:2;37629:9;37622:21;37603:4;37660:65;37721:2;37710:9;37706:18;37698:6;37660:65;:::i;38259:830::-;38613:4;38642:3;38654:60;38704:9;38695:6;38689:13;38157:12;;-1:-1:-1;;;;;38153:38:181;38141:51;;38241:4;38230:16;;;38224:23;38208:14;;38201:47;38071:183;38654:60;38770:4;38762:6;38758:17;38752:24;38745:4;38734:9;38730:20;38723:54;38833:4;38825:6;38821:17;38815:24;38808:4;38797:9;38793:20;38786:54;38849:63;38907:3;38896:9;38892:19;38884:6;38157:12;;-1:-1:-1;;;;;38153:38:181;38141:51;;38241:4;38230:16;;;38224:23;38208:14;;38201:47;38071:183;38849:63;-1:-1:-1;;;;;38949:32:181;;38943:3;38928:19;;38921:61;39013:3;38998:19;;38991:31;;;39039:44;39064:18;;;39056:6;39039:44;:::i;39094:1094::-;-1:-1:-1;;;;;39425:32:181;;39407:51;;39366:4;39395:3;39480:20;;39509:41;39480:20;39509:41;:::i;:::-;39559;39594:5;39559:41;:::i;:::-;39636:5;39631:2;39620:9;39616:18;39609:33;;39703:2;39695:6;39691:15;39678:29;39673:2;39662:9;39658:18;39651:57;39769:2;39761:6;39757:15;39744:29;39739:2;39728:9;39724:18;39717:57;39836:2;39828:6;39824:15;39811:29;39805:3;39794:9;39790:19;39783:58;39918:4;39882:34;39911:3;39903:6;39899:16;39882:34;:::i;:::-;39878:45;39872:3;39861:9;39857:19;39850:74;39986:3;39978:6;39974:16;39961:30;39955:3;39944:9;39940:19;39933:59;40054:3;40046:6;40042:16;40029:30;40023:3;40012:9;40008:19;40001:59;40097:2;40091:3;40080:9;40076:19;40069:31;40117:65;40178:2;40167:9;40163:18;40155:6;40117:65;:::i;43394:219::-;43543:2;43532:9;43525:21;43506:4;43563:44;43603:2;43592:9;43588:18;43580:6;43563:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "50811": [
        {
          "start": 955,
          "length": 32
        },
        {
          "start": 1150,
          "length": 32
        },
        {
          "start": 1389,
          "length": 32
        },
        {
          "start": 3116,
          "length": 32
        },
        {
          "start": 3391,
          "length": 32
        },
        {
          "start": 5687,
          "length": 32
        },
        {
          "start": 5947,
          "length": 32
        },
        {
          "start": 6519,
          "length": 32
        },
        {
          "start": 6789,
          "length": 32
        },
        {
          "start": 9087,
          "length": 32
        },
        {
          "start": 9356,
          "length": 32
        },
        {
          "start": 10062,
          "length": 32
        },
        {
          "start": 10315,
          "length": 32
        },
        {
          "start": 11943,
          "length": 32
        },
        {
          "start": 12301,
          "length": 32
        },
        {
          "start": 12596,
          "length": 32
        }
      ],
      "50815": [
        {
          "start": 1052,
          "length": 32
        },
        {
          "start": 2571,
          "length": 32
        },
        {
          "start": 2972,
          "length": 32
        },
        {
          "start": 4188,
          "length": 32
        },
        {
          "start": 4866,
          "length": 32
        },
        {
          "start": 7834,
          "length": 32
        }
      ],
      "50819": [
        {
          "start": 994,
          "length": 32
        },
        {
          "start": 3704,
          "length": 32
        },
        {
          "start": 4813,
          "length": 32
        },
        {
          "start": 7057,
          "length": 32
        },
        {
          "start": 7910,
          "length": 32
        },
        {
          "start": 8401,
          "length": 32
        },
        {
          "start": 8473,
          "length": 32
        },
        {
          "start": 12746,
          "length": 32
        },
        {
          "start": 13278,
          "length": 32
        },
        {
          "start": 13368,
          "length": 32
        }
      ],
      "50823": [
        {
          "start": 465,
          "length": 32
        },
        {
          "start": 3749,
          "length": 32
        },
        {
          "start": 3889,
          "length": 32
        },
        {
          "start": 4679,
          "length": 32
        },
        {
          "start": 8518,
          "length": 32
        },
        {
          "start": 8651,
          "length": 32
        },
        {
          "start": 11990,
          "length": 32
        },
        {
          "start": 12141,
          "length": 32
        },
        {
          "start": 12350,
          "length": 32
        },
        {
          "start": 12469,
          "length": 32
        },
        {
          "start": 12645,
          "length": 32
        },
        {
          "start": 13413,
          "length": 32
        },
        {
          "start": 13546,
          "length": 32
        }
      ],
      "50826": [
        {
          "start": 711,
          "length": 32
        },
        {
          "start": 1511,
          "length": 32
        },
        {
          "start": 1753,
          "length": 32
        },
        {
          "start": 1948,
          "length": 32
        },
        {
          "start": 2078,
          "length": 32
        },
        {
          "start": 2450,
          "length": 32
        },
        {
          "start": 2614,
          "length": 32
        },
        {
          "start": 2841,
          "length": 32
        },
        {
          "start": 5035,
          "length": 32
        },
        {
          "start": 5266,
          "length": 32
        },
        {
          "start": 5481,
          "length": 32
        },
        {
          "start": 6075,
          "length": 32
        },
        {
          "start": 6421,
          "length": 32
        },
        {
          "start": 6927,
          "length": 32
        },
        {
          "start": 7147,
          "length": 32
        },
        {
          "start": 7426,
          "length": 32
        },
        {
          "start": 7567,
          "length": 32
        },
        {
          "start": 7616,
          "length": 32
        },
        {
          "start": 7713,
          "length": 32
        },
        {
          "start": 7877,
          "length": 32
        },
        {
          "start": 8138,
          "length": 32
        },
        {
          "start": 8211,
          "length": 32
        },
        {
          "start": 8893,
          "length": 32
        },
        {
          "start": 9486,
          "length": 32
        },
        {
          "start": 9964,
          "length": 32
        }
      ],
      "50830": [
        {
          "start": 859,
          "length": 32
        },
        {
          "start": 3517,
          "length": 32
        },
        {
          "start": 4029,
          "length": 32
        },
        {
          "start": 4304,
          "length": 32
        },
        {
          "start": 4397,
          "length": 32
        },
        {
          "start": 12856,
          "length": 32
        },
        {
          "start": 13684,
          "length": 32
        },
        {
          "start": 14251,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CALLBACK_SUCCESS()": "8237e538",
    "CALLBACK_SUCCESS_CREDIT()": "0f13be2a",
    "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "56415a90",
    "cdm()": "e2dfb317",
    "claimUndelegatedCredit(address,uint256)": "dfad9c37",
    "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)": "0b839bf2",
    "delegate(address,uint256)": "026e402b",
    "delegateViaStablecoin(address,address,uint256,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "df3df773",
    "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "0567d4b1",
    "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "4ad4d4ad",
    "depositAndDelegate(address,address,address,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "03ccc7d0",
    "flashlender()": "ee58918a",
    "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "aad598ae",
    "minter()": "07546172",
    "multisend(address[],bytes[],bool[])": "f38584e0",
    "onCreditFlashLoan(address,uint256,uint256,bytes)": "16d8f165",
    "onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b",
    "permit2()": "12261ee7",
    "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "faa99405",
    "repayAndClaim(address,address,uint256,uint256,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "65b57a74",
    "self()": "7104ddb2",
    "stablecoin()": "e9cbd822",
    "swapAction()": "a888828b",
    "undelegate(address,uint256,uint256[])": "7810436a",
    "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "6c747057",
    "withdrawAndClaim(address,address,address,uint256,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "ecec1641",
    "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "96c2c408"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flashlender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapActions_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Action__revertBytes_emptyRevertBytes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toInt256_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__borrow_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidResidualRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__delegateViaStablecoin_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__deposit_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onCreditFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__repay_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS_CREDIT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cdm\",\"outputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimForEpoch\",\"type\":\"uint256\"}],\"name\":\"claimUndelegatedCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"subCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"residualRecipient\",\"type\":\"address\"}],\"name\":\"decreaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditAmount\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"swapParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"delegateViaStablecoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"depositAndBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"depositVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegateVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"depositAndDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashlender\",\"outputs\":[{\"internalType\":\"contract IFlashlender\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"upFrontToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"upFrontAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"increaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"contract IMinter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"bool[]\",\"name\":\"delegateCall\",\"type\":\"bool[]\"}],\"name\":\"multisend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onCreditFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimForEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subNormalDebt\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"repayAndClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"self\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IStablecoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAction\",\"outputs\":[{\"internalType\":\"contract SwapAction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"prevQueuedEpochs\",\"type\":\"uint256[]\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"estimatedClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableAtEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixableUntilEpoch\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegateVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimForEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subNormalDebt\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"}],\"name\":\"withdrawAndClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"withdrawAndRepay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"creditParams\":\"The borrow parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"claimUndelegatedCredit(address,uint256)\":{\"details\":\"Wrapper function around CDPVault.claimUndelegatedCredit()This function does not have the onlyDelegatecall modifier to save gas but should only be called via Proxy\",\"params\":{\"claimForEpoch\":\"The epoch to claim undelegatedCredit for\",\"vault\":\"The CDP Vault\"},\"returns\":{\"creditAmount\":\"Amount of credit claimed [wad]\"}},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)\":{\"params\":{\"leverParams\":\"The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan\",\"residualRecipient\":\"Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to\",\"subCollateral\":\"The amount of collateral to withdraw from the position [wad]\"}},\"delegate(address,uint256)\":{\"details\":\"Wrapper function around CDPVault.delegateCredit()\",\"params\":{\"creditAmount\":\"Amount of credit to delegate [wad]\"},\"returns\":{\"sharesAmount\":\"Amount of shares issued [wad]\"}},\"delegateViaStablecoin(address,address,uint256,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"credit\":\"The amount of credit to delegate [wad]\",\"creditor\":\"The address to transfer stablecoin or swap tokens from\",\"permitParams\":\"The permit parameters\",\"swapParams\":\"The swap parameters for swapping an arbitrary asset to stablecoin\",\"vault\":\"The CDP Vault to delegate credit to\"}},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"depositAndDelegate(address,address,address,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"credit\":\"The amount of credit to delegate\",\"delegateVault\":\"The CDP Vault to delegate credit to\",\"depositVault\":\"The CDP Vault to deposit collateral into\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\"}},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralizer\":\"The address to transfer `upFrontToken` from\",\"leverParams\":\"The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token\",\"permitParams\":\"The permit parameters for the `collateralizer` to transfer `upFrontToken`\",\"upFrontAmount\":\"The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]\",\"upFrontToken\":\"The token to transfer up front to the LeverAction contract\"}},\"multisend(address[],bytes[],bool[])\":{\"params\":{\"data\":\"The encoded data to call each address with\",\"delegateCall\":\"Whether or not to use delegatecall or call\",\"targets\":\"The addresses to call\"}},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the credit flash loan\"}},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the flash loan\"}},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"repayAndClaim(address,address,uint256,uint256,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"claimForEpoch\":\"The epoch to claim undelegatedCredit for\",\"creditParams\":\"The credit parameters for debt repayment\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"subNormalDebt\":\"The amount of normal debt to repay [wad]\",\"vault\":\"The CDP Vault\"}},\"undelegate(address,uint256,uint256[])\":{\"details\":\"Wrapper function around CDPVault.undelegateCredit()This function does not have the onlyDelegatecall modifier to save gas but should only be called via Proxy\",\"params\":{\"prevQueuedEpochs\":\"Array of stale epochs for which shares were queued\",\"shareAmount\":\"Amount of shares to redeem [wad]\"},\"returns\":{\"claimableAtEpoch\":\"Epoch at which the undelegated credit can be claimed by the delegator\",\"epoch\":\"Epoch at which the undelegation was initiated\",\"estimatedClaim\":\"Estimated amount of withdrawable credit, if no bad debt is accrued [wad]\",\"fixableUntilEpoch\":\"Epoch at which the credit claim of the epoch has to be fixed by\"}},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdrawAndClaim(address,address,address,uint256,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"claimForEpoch\":\"The epoch to claim undelegatedCredit for\",\"collateralParams\":\"The collateral parameters for collateral withdrawal\",\"delegateVault\":\"The CDP Vault to undelegate credit from\",\"position\":\"The CDP Vault position\",\"subNormalDebt\":\"The amount of normal debt to repay [wad]\",\"withdrawVault\":\"The CDP Vault to withdraw collateral from\"}},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}}},\"title\":\"PositionAction4626\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)\"},\"cdm()\":{\"notice\":\"The CDM contract\"},\"claimUndelegatedCredit(address,uint256)\":{\"notice\":\"Claim undelegated credit from a vault\"},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)\":{\"notice\":\"Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral\"},\"delegate(address,uint256)\":{\"notice\":\"Delegates credit to `vault`\"},\"delegateViaStablecoin(address,address,uint256,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Swap for stablecoin or transfer stablecoin directly, then delegate to a vault\"},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral to a CDP Vault\"},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral and debt to a CDP Vault\"},\"depositAndDelegate(address,address,address,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral and delegates credit to a vault\"},\"flashlender()\":{\"notice\":\"The flashloan contract\"},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Increase the leverage of a position by taking out a flash loan and buying Stablecoin\"},\"minter()\":{\"notice\":\"Stablecoin mint\"},\"multisend(address[],bytes[],bool[])\":{\"notice\":\"Allows for multiple calls to be made to cover use cases not covered by the other functions\"},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the credit flash loan taken out in decreaseLever\"},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the flash loan taken out in increaseLever\"},\"permit2()\":{\"notice\":\"Permit2\"},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)\"},\"repayAndClaim(address,address,uint256,uint256,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Undelegate and then repay a position\"},\"self()\":{\"notice\":\"The address of this contract\"},\"stablecoin()\":{\"notice\":\"Stablecoin token\"},\"swapAction()\":{\"notice\":\"The SwapAction contract\"},\"undelegate(address,uint256,uint256[])\":{\"notice\":\"Undelegate credit from a vault\"},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Removes collateral from a CDP Vault\"},\"withdrawAndClaim(address,address,address,uint256,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Undelegate credit from a vault and withdraw collateral from a vault\"},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Removes collateral and debt from a CDP Vault\"}},\"notice\":\"Generic ERC4626 implementation of PositionAction base contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxy/PositionAction4626.sol\":\"PositionAction4626\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0xeb51c812325c4b4e6a68116241dde8c889ae3fd4a7aecd49adbd07660c1fe6e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7e6e9105a3c49eb9955790d2b0c28580ab280915d929656c89dcc29ce9a64c3\",\"dweb:/ipfs/QmVgZTPRgfGm7rbEYCx9AM3YyaHwyepqwbAgWfpkkASaTC\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d\",\"dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"src/CDM.sol\":{\"keccak256\":\"0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99\",\"dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L\"]},\"src/CDPVault.sol\":{\"keccak256\":\"0xb59663a5a96b5abe638f2fb4a5e4d0918a41607cbaee2e974ab2317f271be131\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4292cb1e12fe471b852e223ce612c5c666cdaac948f1b2803e45edc2ea8c213\",\"dweb:/ipfs/QmNykUHbviSx2HKe6v45qU7B7wjC5Fre3xunPYCAjdcZMx\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x681ca8dbbb9637f112fd4668dd549380579f269e3c60af2e84578192f4cfeda8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b4b3abe1c4c38c8ea7c5f1ed9e4d5d1a4cedeadbf65b466a3ca96ebbdb2b77\",\"dweb:/ipfs/Qmd1RVYuiiESg4rwWVR2qB9zSxQvpfqbtPJxGagP6KES6L\"]},\"src/interfaces/IBuffer.sol\":{\"keccak256\":\"0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff\",\"dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/ICDPVault.sol\":{\"keccak256\":\"0x7ce3b81164802c14566697092c69fb355d9c31ab846dfc8d90edd5d6a6eb68e3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://343c84ea42c9846dc3907a6ca2d4c55df6e0cbaea7a83ed2c7458174560a86d6\",\"dweb:/ipfs/QmWcAoAFQYL7YzeFnd5t4HMHxEZHiFirsNHJGL7FoBCkF6\"]},\"src/interfaces/ICDPVault_TypeA_Factory.sol\":{\"keccak256\":\"0x9ea6fe3a8b5d6ab2f041c72b6058e1e59b3df5e12d54ccc845a27f90f45ddf01\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c805f1c1b060173d445de751c4a8565232938ad23a6d200c08b99eb634679638\",\"dweb:/ipfs/QmSajnrXMZHMwYF8Y2C6obNp1K7bq2XjexdkqcVoHDFhGm\"]},\"src/interfaces/IFlashlender.sol\":{\"keccak256\":\"0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2\",\"dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3\"]},\"src/interfaces/IInterestRateModel.sol\":{\"keccak256\":\"0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599\",\"dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA\"]},\"src/interfaces/IMinter.sol\":{\"keccak256\":\"0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54\",\"dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da\",\"dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF\"]},\"src/interfaces/IPause.sol\":{\"keccak256\":\"0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec\",\"dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]},\"src/interfaces/IStablecoin.sol\":{\"keccak256\":\"0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461\",\"dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS\"]},\"src/proxy/BaseAction.sol\":{\"keccak256\":\"0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24\",\"dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR\"]},\"src/proxy/PositionAction.sol\":{\"keccak256\":\"0x46dd1ac7cf68935811c1842fdc0da9406e582613f21419ad783ef38eaecf3532\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffa356e6d607545127eebcaf030b3602664820e17ec126cc179df78984e15f18\",\"dweb:/ipfs/Qmbntqtm28WmdRCy6nPabXqsMQt51s7D3wN4hz7QyuK3cc\"]},\"src/proxy/PositionAction4626.sol\":{\"keccak256\":\"0x85017711118a289c30fd7980675714ce1f6b8aa94102ac3c1550d6a139275ea3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a81aa8a02ac5025c737d3c13a12a5040143466c6de0418d9571e36c05f9fe2d7\",\"dweb:/ipfs/QmeDeBRAJb1Md6FtNbVnJz6fmn8ThFC5uWfpFKnH5cu542\"]},\"src/proxy/SwapAction.sol\":{\"keccak256\":\"0xf3c446b763969f9cbe0cdbbba16140176bf75ada29da89dfb24d32dbe744ddce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84a857e66ba74ead46269034e1ce8c7320f500550240197c18c7415f15af3ce8\",\"dweb:/ipfs/QmYFoDhtFfxDKuSmCbrxqyZNkMGjLdG5ZPZJc7UEhzfJKT\"]},\"src/proxy/TransferAction.sol\":{\"keccak256\":\"0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756\",\"dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt\"]},\"src/utils/DoubleLinkedList.sol\":{\"keccak256\":\"0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb\",\"dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/utils/Pause.sol\":{\"keccak256\":\"0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1\",\"dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL\"]},\"src/utils/Permission.sol\":{\"keccak256\":\"0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb\",\"dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p\"]},\"src/vendor/IBalancerVault.sol\":{\"keccak256\":\"0xcfa567dab77301f65a2085f34a3ae0027e46f27e79a3c1bc5292c46a69160c62\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://205c801c5cf14af56151d70f0f7e1df9963d33caa4fada26b0429531510af585\",\"dweb:/ipfs/QmZ8tK5dXu2yPD7hF8aHu2B2YbTutXNgsQKkAPCqZYntLN\"]},\"src/vendor/IUniswapV3Router.sol\":{\"keccak256\":\"0x5ab23c0c3f5571e77353ebf1b7d4dec9103504b728faa7530e04b84e5d233c03\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9a95e0a55b44b18deab9989f7bf4afed71d22d51dd96c42eeb1552a30d252de4\",\"dweb:/ipfs/QmSyZhFhvegYMncZSc18m8skqhzXiMisgg1K2K9V1t796Z\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flashlender_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "swapActions_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Action__revertBytes_emptyRevertBytes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toInt256_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__borrow_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidResidualRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__deposit_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onCreditFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onlyDelegatecall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__repay_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS_CREDIT",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cdm",
          "outputs": [
            {
              "internalType": "contract ICDM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimForEpoch",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimUndelegatedCredit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "subCollateral",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "residualRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseLever"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "creditAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sharesAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "credit",
              "type": "uint256"
            },
            {
              "internalType": "struct SwapParams",
              "name": "swapParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateViaStablecoin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndBorrow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "depositVault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegateVault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "credit",
              "type": "uint256"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndDelegate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flashlender",
          "outputs": [
            {
              "internalType": "contract IFlashlender",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "upFrontToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "upFrontAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseLever"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "contract IMinter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            },
            {
              "internalType": "bool[]",
              "name": "delegateCall",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multisend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCreditFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permit2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimForEpoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subNormalDebt",
              "type": "uint256"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayAndClaim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "self",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stablecoin",
          "outputs": [
            {
              "internalType": "contract IStablecoin",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapAction",
          "outputs": [
            {
              "internalType": "contract SwapAction",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shareAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "prevQueuedEpochs",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "estimatedClaim",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimableAtEpoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fixableUntilEpoch",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawVault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegateVault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimForEpoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subNormalDebt",
              "type": "uint256"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAndClaim"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAndRepay"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "creditParams": "The borrow parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "claimUndelegatedCredit(address,uint256)": {
            "details": "Wrapper function around CDPVault.claimUndelegatedCredit()This function does not have the onlyDelegatecall modifier to save gas but should only be called via Proxy",
            "params": {
              "claimForEpoch": "The epoch to claim undelegatedCredit for",
              "vault": "The CDP Vault"
            },
            "returns": {
              "creditAmount": "Amount of credit claimed [wad]"
            }
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)": {
            "params": {
              "leverParams": "The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan",
              "residualRecipient": "Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to",
              "subCollateral": "The amount of collateral to withdraw from the position [wad]"
            }
          },
          "delegate(address,uint256)": {
            "details": "Wrapper function around CDPVault.delegateCredit()",
            "params": {
              "creditAmount": "Amount of credit to delegate [wad]"
            },
            "returns": {
              "sharesAmount": "Amount of shares issued [wad]"
            }
          },
          "delegateViaStablecoin(address,address,uint256,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "credit": "The amount of credit to delegate [wad]",
              "creditor": "The address to transfer stablecoin or swap tokens from",
              "permitParams": "The permit parameters",
              "swapParams": "The swap parameters for swapping an arbitrary asset to stablecoin",
              "vault": "The CDP Vault to delegate credit to"
            }
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "depositAndDelegate(address,address,address,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "credit": "The amount of credit to delegate",
              "delegateVault": "The CDP Vault to delegate credit to",
              "depositVault": "The CDP Vault to deposit collateral into",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position"
            }
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralizer": "The address to transfer `upFrontToken` from",
              "leverParams": "The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token",
              "permitParams": "The permit parameters for the `collateralizer` to transfer `upFrontToken`",
              "upFrontAmount": "The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]",
              "upFrontToken": "The token to transfer up front to the LeverAction contract"
            }
          },
          "multisend(address[],bytes[],bool[])": {
            "params": {
              "data": "The encoded data to call each address with",
              "delegateCall": "Whether or not to use delegatecall or call",
              "targets": "The addresses to call"
            }
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the credit flash loan"
            }
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the flash loan"
            }
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "repayAndClaim(address,address,uint256,uint256,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "claimForEpoch": "The epoch to claim undelegatedCredit for",
              "creditParams": "The credit parameters for debt repayment",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "subNormalDebt": "The amount of normal debt to repay [wad]",
              "vault": "The CDP Vault"
            }
          },
          "undelegate(address,uint256,uint256[])": {
            "details": "Wrapper function around CDPVault.undelegateCredit()This function does not have the onlyDelegatecall modifier to save gas but should only be called via Proxy",
            "params": {
              "prevQueuedEpochs": "Array of stale epochs for which shares were queued",
              "shareAmount": "Amount of shares to redeem [wad]"
            },
            "returns": {
              "claimableAtEpoch": "Epoch at which the undelegated credit can be claimed by the delegator",
              "epoch": "Epoch at which the undelegation was initiated",
              "estimatedClaim": "Estimated amount of withdrawable credit, if no bad debt is accrued [wad]",
              "fixableUntilEpoch": "Epoch at which the credit claim of the epoch has to be fixed by"
            }
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdrawAndClaim(address,address,address,uint256,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "claimForEpoch": "The epoch to claim undelegatedCredit for",
              "collateralParams": "The collateral parameters for collateral withdrawal",
              "delegateVault": "The CDP Vault to undelegate credit from",
              "position": "The CDP Vault position",
              "subNormalDebt": "The amount of normal debt to repay [wad]",
              "withdrawVault": "The CDP Vault to withdraw collateral from"
            }
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)"
          },
          "cdm()": {
            "notice": "The CDM contract"
          },
          "claimUndelegatedCredit(address,uint256)": {
            "notice": "Claim undelegated credit from a vault"
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)": {
            "notice": "Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral"
          },
          "delegate(address,uint256)": {
            "notice": "Delegates credit to `vault`"
          },
          "delegateViaStablecoin(address,address,uint256,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Swap for stablecoin or transfer stablecoin directly, then delegate to a vault"
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral to a CDP Vault"
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral and debt to a CDP Vault"
          },
          "depositAndDelegate(address,address,address,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral and delegates credit to a vault"
          },
          "flashlender()": {
            "notice": "The flashloan contract"
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Increase the leverage of a position by taking out a flash loan and buying Stablecoin"
          },
          "minter()": {
            "notice": "Stablecoin mint"
          },
          "multisend(address[],bytes[],bool[])": {
            "notice": "Allows for multiple calls to be made to cover use cases not covered by the other functions"
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "notice": "Callback function for the credit flash loan taken out in decreaseLever"
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "notice": "Callback function for the flash loan taken out in increaseLever"
          },
          "permit2()": {
            "notice": "Permit2"
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)"
          },
          "repayAndClaim(address,address,uint256,uint256,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Undelegate and then repay a position"
          },
          "self()": {
            "notice": "The address of this contract"
          },
          "stablecoin()": {
            "notice": "Stablecoin token"
          },
          "swapAction()": {
            "notice": "The SwapAction contract"
          },
          "undelegate(address,uint256,uint256[])": {
            "notice": "Undelegate credit from a vault"
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Removes collateral from a CDP Vault"
          },
          "withdrawAndClaim(address,address,address,uint256,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Undelegate credit from a vault and withdraw collateral from a vault"
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Removes collateral and debt from a CDP Vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/proxy/PositionAction4626.sol": "PositionAction4626"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0xeb51c812325c4b4e6a68116241dde8c889ae3fd4a7aecd49adbd07660c1fe6e4",
        "urls": [
          "bzz-raw://d7e6e9105a3c49eb9955790d2b0c28580ab280915d929656c89dcc29ce9a64c3",
          "dweb:/ipfs/QmVgZTPRgfGm7rbEYCx9AM3YyaHwyepqwbAgWfpkkASaTC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319",
        "urls": [
          "bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d",
          "dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "src/CDM.sol": {
        "keccak256": "0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5",
        "urls": [
          "bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99",
          "dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L"
        ],
        "license": "MIT"
      },
      "src/CDPVault.sol": {
        "keccak256": "0xb59663a5a96b5abe638f2fb4a5e4d0918a41607cbaee2e974ab2317f271be131",
        "urls": [
          "bzz-raw://b4292cb1e12fe471b852e223ce612c5c666cdaac948f1b2803e45edc2ea8c213",
          "dweb:/ipfs/QmNykUHbviSx2HKe6v45qU7B7wjC5Fre3xunPYCAjdcZMx"
        ],
        "license": "MIT"
      },
      "src/InterestRateModel.sol": {
        "keccak256": "0x681ca8dbbb9637f112fd4668dd549380579f269e3c60af2e84578192f4cfeda8",
        "urls": [
          "bzz-raw://89b4b3abe1c4c38c8ea7c5f1ed9e4d5d1a4cedeadbf65b466a3ca96ebbdb2b77",
          "dweb:/ipfs/Qmd1RVYuiiESg4rwWVR2qB9zSxQvpfqbtPJxGagP6KES6L"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBuffer.sol": {
        "keccak256": "0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f",
        "urls": [
          "bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff",
          "dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault.sol": {
        "keccak256": "0x7ce3b81164802c14566697092c69fb355d9c31ab846dfc8d90edd5d6a6eb68e3",
        "urls": [
          "bzz-raw://343c84ea42c9846dc3907a6ca2d4c55df6e0cbaea7a83ed2c7458174560a86d6",
          "dweb:/ipfs/QmWcAoAFQYL7YzeFnd5t4HMHxEZHiFirsNHJGL7FoBCkF6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_TypeA_Factory.sol": {
        "keccak256": "0x9ea6fe3a8b5d6ab2f041c72b6058e1e59b3df5e12d54ccc845a27f90f45ddf01",
        "urls": [
          "bzz-raw://c805f1c1b060173d445de751c4a8565232938ad23a6d200c08b99eb634679638",
          "dweb:/ipfs/QmSajnrXMZHMwYF8Y2C6obNp1K7bq2XjexdkqcVoHDFhGm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFlashlender.sol": {
        "keccak256": "0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d",
        "urls": [
          "bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2",
          "dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IInterestRateModel.sol": {
        "keccak256": "0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055",
        "urls": [
          "bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599",
          "dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IMinter.sol": {
        "keccak256": "0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3",
        "urls": [
          "bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54",
          "dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417",
        "urls": [
          "bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da",
          "dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPause.sol": {
        "keccak256": "0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d",
        "urls": [
          "bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec",
          "dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IStablecoin.sol": {
        "keccak256": "0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239",
        "urls": [
          "bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461",
          "dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/proxy/BaseAction.sol": {
        "keccak256": "0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab",
        "urls": [
          "bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24",
          "dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction.sol": {
        "keccak256": "0x46dd1ac7cf68935811c1842fdc0da9406e582613f21419ad783ef38eaecf3532",
        "urls": [
          "bzz-raw://ffa356e6d607545127eebcaf030b3602664820e17ec126cc179df78984e15f18",
          "dweb:/ipfs/Qmbntqtm28WmdRCy6nPabXqsMQt51s7D3wN4hz7QyuK3cc"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction4626.sol": {
        "keccak256": "0x85017711118a289c30fd7980675714ce1f6b8aa94102ac3c1550d6a139275ea3",
        "urls": [
          "bzz-raw://a81aa8a02ac5025c737d3c13a12a5040143466c6de0418d9571e36c05f9fe2d7",
          "dweb:/ipfs/QmeDeBRAJb1Md6FtNbVnJz6fmn8ThFC5uWfpFKnH5cu542"
        ],
        "license": "MIT"
      },
      "src/proxy/SwapAction.sol": {
        "keccak256": "0xf3c446b763969f9cbe0cdbbba16140176bf75ada29da89dfb24d32dbe744ddce",
        "urls": [
          "bzz-raw://84a857e66ba74ead46269034e1ce8c7320f500550240197c18c7415f15af3ce8",
          "dweb:/ipfs/QmYFoDhtFfxDKuSmCbrxqyZNkMGjLdG5ZPZJc7UEhzfJKT"
        ],
        "license": "MIT"
      },
      "src/proxy/TransferAction.sol": {
        "keccak256": "0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e",
        "urls": [
          "bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756",
          "dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt"
        ],
        "license": "MIT"
      },
      "src/utils/DoubleLinkedList.sol": {
        "keccak256": "0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691",
        "urls": [
          "bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb",
          "dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/utils/Pause.sol": {
        "keccak256": "0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19",
        "urls": [
          "bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1",
          "dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL"
        ],
        "license": "MIT"
      },
      "src/utils/Permission.sol": {
        "keccak256": "0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1",
        "urls": [
          "bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb",
          "dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p"
        ],
        "license": "MIT"
      },
      "src/vendor/IBalancerVault.sol": {
        "keccak256": "0xcfa567dab77301f65a2085f34a3ae0027e46f27e79a3c1bc5292c46a69160c62",
        "urls": [
          "bzz-raw://205c801c5cf14af56151d70f0f7e1df9963d33caa4fada26b0429531510af585",
          "dweb:/ipfs/QmZ8tK5dXu2yPD7hF8aHu2B2YbTutXNgsQKkAPCqZYntLN"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/vendor/IUniswapV3Router.sol": {
        "keccak256": "0x5ab23c0c3f5571e77353ebf1b7d4dec9103504b728faa7530e04b84e5d233c03",
        "urls": [
          "bzz-raw://9a95e0a55b44b18deab9989f7bf4afed71d22d51dd96c42eeb1552a30d252de4",
          "dweb:/ipfs/QmSyZhFhvegYMncZSc18m8skqhzXiMisgg1K2K9V1t796Z"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/proxy/PositionAction4626.sol",
    "id": 53412,
    "exportedSymbols": {
      "ICDPVault": [
        48986
      ],
      "IERC20": [
        34464
      ],
      "IERC4626": [
        32740
      ],
      "LeverParams": [
        50784
      ],
      "PositionAction": [
        52923
      ],
      "PositionAction4626": [
        53411
      ],
      "SafeERC20": [
        35920
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5556:119",
    "nodes": [
      {
        "id": 53093,
        "nodeType": "PragmaDirective",
        "src": "32:24:119",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 53095,
        "nodeType": "ImportDirective",
        "src": "58:68:119",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "file": "openzeppelin/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53412,
        "sourceUnit": 32570,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53094,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34464,
              "src": "66:6:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53097,
        "nodeType": "ImportDirective",
        "src": "127:72:119",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol",
        "file": "openzeppelin/contracts/interfaces/IERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53412,
        "sourceUnit": 32741,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53096,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32740,
              "src": "135:8:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53099,
        "nodeType": "ImportDirective",
        "src": "200:81:119",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53412,
        "sourceUnit": 35921,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53098,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35920,
              "src": "208:9:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53101,
        "nodeType": "ImportDirective",
        "src": "283:54:119",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDPVault.sol",
        "file": "../interfaces/ICDPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53412,
        "sourceUnit": 48987,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53100,
              "name": "ICDPVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48986,
              "src": "291:9:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53104,
        "nodeType": "ImportDirective",
        "src": "339:65:119",
        "nodes": [],
        "absolutePath": "src/proxy/PositionAction.sol",
        "file": "./PositionAction.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53412,
        "sourceUnit": 52924,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53102,
              "name": "PositionAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52923,
              "src": "347:14:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53103,
              "name": "LeverParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50784,
              "src": "363:11:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53411,
        "nodeType": "ContractDefinition",
        "src": "511:5076:119",
        "nodes": [
          {
            "id": 53111,
            "nodeType": "UsingForDirective",
            "src": "744:27:119",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53108,
              "name": "SafeERC20",
              "nameLocations": [
                "750:9:119"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35920,
              "src": "750:9:119"
            },
            "typeName": {
              "id": 53110,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53109,
                "name": "IERC20",
                "nameLocations": [
                  "764:6:119"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34464,
                "src": "764:6:119"
              },
              "referencedDeclaration": 34464,
              "src": "764:6:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$34464",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 53123,
            "nodeType": "FunctionDefinition",
            "src": "960:101:119",
            "nodes": [],
            "body": {
              "id": 53122,
              "nodeType": "Block",
              "src": "1059:2:119",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 53118,
                    "name": "flashlender_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53113,
                    "src": "1031:12:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 53119,
                    "name": "swapActions_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53115,
                    "src": "1045:12:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 53120,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 53117,
                  "name": "PositionAction",
                  "nameLocations": [
                    "1016:14:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52923,
                  "src": "1016:14:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "1016:42:119"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53113,
                  "mutability": "mutable",
                  "name": "flashlender_",
                  "nameLocation": "980:12:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53123,
                  "src": "972:20:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53115,
                  "mutability": "mutable",
                  "name": "swapActions_",
                  "nameLocation": "1002:12:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53123,
                  "src": "994:20:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:44:119"
            },
            "returnParameters": {
              "id": 53121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1059:0:119"
            },
            "scope": 53411,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53201,
            "nodeType": "FunctionDefinition",
            "src": "1526:645:119",
            "nodes": [],
            "body": {
              "id": 53200,
              "nodeType": "Block",
              "src": "1626:545:119",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53137,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "1644:10:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 53200,
                      "src": "1636:18:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53136,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1636:7:119",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53146,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 53141,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53126,
                                "src": "1675:5:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 53140,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48986,
                              "src": "1665:9:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48986_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 53142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1665:16:119",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$48986",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 53143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1682:5:119",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48731,
                          "src": "1665:22:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 53144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1665:24:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 53139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1657:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 53138,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1657:7:119",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 53145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1657:33:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1636:54:119"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 53149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53147,
                      "name": "src",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53128,
                      "src": "1812:3:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 53148,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53137,
                      "src": "1819:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1812:17:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53180,
                  "nodeType": "IfStatement",
                  "src": "1808:236:119",
                  "trueBody": {
                    "id": 53179,
                    "nodeType": "Block",
                    "src": "1831:213:119",
                    "statements": [
                      {
                        "assignments": [
                          53151
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 53151,
                            "mutability": "mutable",
                            "name": "underlying",
                            "nameLocation": "1853:10:119",
                            "nodeType": "VariableDeclaration",
                            "scope": 53179,
                            "src": "1845:18:119",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 53150,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1845:7:119",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 53157,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 53153,
                                  "name": "collateral",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53137,
                                  "src": "1875:10:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 53152,
                                "name": "IERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32740,
                                "src": "1866:8:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                  "typeString": "type(contract IERC4626)"
                                }
                              },
                              "id": 53154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1866:20:119",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC4626_$32740",
                                "typeString": "contract IERC4626"
                              }
                            },
                            "id": 53155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1887:5:119",
                            "memberName": "asset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32609,
                            "src": "1866:26:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 53156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1866:28:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1845:49:119"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 53162,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53137,
                              "src": "1940:10:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53163,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53130,
                              "src": "1952:6:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 53159,
                                  "name": "underlying",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53151,
                                  "src": "1915:10:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 53158,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34464,
                                "src": "1908:6:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 53160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1908:18:119",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$34464",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 53161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1927:12:119",
                            "memberName": "forceApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35777,
                            "src": "1908:31:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 53164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1908:51:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53165,
                        "nodeType": "ExpressionStatement",
                        "src": "1908:51:119"
                      },
                      {
                        "expression": {
                          "id": 53177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53166,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53130,
                            "src": "1973:6:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 53171,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53130,
                                "src": "2011:6:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 53174,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2027:4:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  ],
                                  "id": 53173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2019:7:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 53172,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2019:7:119",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 53175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2019:13:119",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 53168,
                                    "name": "collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53137,
                                    "src": "1991:10:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 53167,
                                  "name": "IERC4626",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32740,
                                  "src": "1982:8:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                    "typeString": "type(contract IERC4626)"
                                  }
                                },
                                "id": 53169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1982:20:119",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC4626_$32740",
                                  "typeString": "contract IERC4626"
                                }
                              },
                              "id": 53170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2003:7:119",
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32657,
                              "src": "1982:28:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 53176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1982:51:119",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1973:60:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53178,
                        "nodeType": "ExpressionStatement",
                        "src": "1973:60:119"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53185,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53126,
                        "src": "2086:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53186,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53130,
                        "src": "2093:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53182,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53137,
                            "src": "2061:10:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53181,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "2054:6:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 53183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2054:18:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 53184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2073:12:119",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "2054:31:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 53187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:46:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53188,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:46:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53195,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2150:4:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 53194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2142:7:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53193,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2142:7:119",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2142:13:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53197,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53130,
                        "src": "2157:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53190,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53126,
                            "src": "2127:5:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53189,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48986,
                          "src": "2117:9:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48986_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2117:16:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$48986",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2134:7:119",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48880,
                      "src": "2117:24:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2117:47:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53135,
                  "id": 53199,
                  "nodeType": "Return",
                  "src": "2110:54:119"
                }
              ]
            },
            "baseFunctions": [
              50943
            ],
            "documentation": {
              "id": 53124,
              "nodeType": "StructuredDocumentation",
              "src": "1254:267:119",
              "text": "@notice Deposit collateral into the vault\n @param vault Address of the vault\n @param src Token passed in by the caller\n @param amount Amount of collateral to deposit [CDPVault.tokenScale()]\n @return Amount of collateral deposited [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDeposit",
            "nameLocation": "1535:10:119",
            "overrides": {
              "id": 53132,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1599:8:119"
            },
            "parameters": {
              "id": 53131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53126,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1554:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53201,
                  "src": "1546:13:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53128,
                  "mutability": "mutable",
                  "name": "src",
                  "nameLocation": "1569:3:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53201,
                  "src": "1561:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53130,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1582:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53201,
                  "src": "1574:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1574:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1545:44:119"
            },
            "returnParameters": {
              "id": 53135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53201,
                  "src": "1617:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1616:9:119"
            },
            "scope": 53411,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53263,
            "nodeType": "FunctionDefinition",
            "src": "2457:560:119",
            "nodes": [],
            "body": {
              "id": 53262,
              "nodeType": "Block",
              "src": "2558:459:119",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53215,
                      "mutability": "mutable",
                      "name": "collateralWithdrawn",
                      "nameLocation": "2576:19:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 53262,
                      "src": "2568:27:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2568:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53226,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53222,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2632:4:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 53221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2624:7:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53220,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2624:7:119",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2624:13:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53224,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53208,
                        "src": "2639:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53217,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53204,
                            "src": "2608:5:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53216,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48986,
                          "src": "2598:9:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48986_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2598:16:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$48986",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2615:8:119",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48889,
                      "src": "2598:25:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2598:48:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2568:78:119"
                },
                {
                  "assignments": [
                    53228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53228,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "2770:10:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 53262,
                      "src": "2762:18:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53227,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2762:7:119",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53237,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 53232,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53204,
                                "src": "2801:5:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 53231,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48986,
                              "src": "2791:9:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48986_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 53233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2791:16:119",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$48986",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 53234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2808:5:119",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48731,
                          "src": "2791:22:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 53235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2791:24:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 53230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2783:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 53229,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2783:7:119",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 53236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2783:33:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2762:54:119"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 53240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53238,
                      "name": "dst",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53206,
                      "src": "2830:3:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 53239,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53228,
                      "src": "2837:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2830:17:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53259,
                  "nodeType": "IfStatement",
                  "src": "2826:148:119",
                  "trueBody": {
                    "id": 53258,
                    "nodeType": "Block",
                    "src": "2849:125:119",
                    "statements": [
                      {
                        "expression": {
                          "id": 53256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53241,
                            "name": "collateralWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53215,
                            "src": "2863:19:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 53246,
                                "name": "collateralWithdrawn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53215,
                                "src": "2913:19:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 53249,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2942:4:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  ],
                                  "id": 53248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2934:7:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 53247,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2934:7:119",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 53250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2934:13:119",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 53253,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2957:4:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  ],
                                  "id": 53252,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2949:7:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 53251,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2949:7:119",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 53254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2949:13:119",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 53243,
                                    "name": "collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53228,
                                    "src": "2894:10:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 53242,
                                  "name": "IERC4626",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32740,
                                  "src": "2885:8:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                    "typeString": "type(contract IERC4626)"
                                  }
                                },
                                "id": 53244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2885:20:119",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC4626_$32740",
                                  "typeString": "contract IERC4626"
                                }
                              },
                              "id": 53245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2906:6:119",
                              "memberName": "redeem",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32739,
                              "src": "2885:27:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address,address) external returns (uint256)"
                              }
                            },
                            "id": 53255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2885:78:119",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2863:100:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53257,
                        "nodeType": "ExpressionStatement",
                        "src": "2863:100:119"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 53260,
                    "name": "collateralWithdrawn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53215,
                    "src": "2991:19:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53213,
                  "id": 53261,
                  "nodeType": "Return",
                  "src": "2984:26:119"
                }
              ]
            },
            "baseFunctions": [
              50955
            ],
            "documentation": {
              "id": 53202,
              "nodeType": "StructuredDocumentation",
              "src": "2177:275:119",
              "text": "@notice Withdraw collateral from the vault\n @param vault Address of the vault\n @param dst Token the caller expects to receive\n @param amount Amount of collateral to withdraw [wad]\n @return Amount of collateral withdrawn [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onWithdraw",
            "nameLocation": "2466:11:119",
            "overrides": {
              "id": 53210,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2531:8:119"
            },
            "parameters": {
              "id": 53209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53204,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2486:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53263,
                  "src": "2478:13:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2478:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53206,
                  "mutability": "mutable",
                  "name": "dst",
                  "nameLocation": "2501:3:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53263,
                  "src": "2493:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2493:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53208,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2514:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53263,
                  "src": "2506:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2506:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2477:44:119"
            },
            "returnParameters": {
              "id": 53213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53212,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53263,
                  "src": "2549:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2549:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2548:9:119"
            },
            "scope": 53411,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53367,
            "nodeType": "FunctionDefinition",
            "src": "3502:1251:119",
            "nodes": [],
            "body": {
              "id": 53366,
              "nodeType": "Block",
              "src": "3702:1051:119",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53280,
                      "mutability": "mutable",
                      "name": "upFrontCollateral",
                      "nameLocation": "3720:17:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 53366,
                      "src": "3712:25:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53279,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3712:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53281,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3712:25:119"
                },
                {
                  "assignments": [
                    53283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53283,
                      "mutability": "mutable",
                      "name": "addCollateralAmount",
                      "nameLocation": "3755:19:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 53366,
                      "src": "3747:27:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53282,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3747:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53285,
                  "initialValue": {
                    "id": 53284,
                    "name": "swapAmountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53273,
                    "src": "3777:13:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3747:43:119"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 53298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 53289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 53286,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53267,
                          "src": "3804:11:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 53287,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3816:15:119",
                        "memberName": "collateralToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50777,
                        "src": "3804:27:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 53288,
                        "name": "upFrontToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53269,
                        "src": "3835:12:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3804:43:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 53297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 53290,
                            "name": "leverParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53267,
                            "src": "3851:11:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                              "typeString": "struct LeverParams memory"
                            }
                          },
                          "id": 53291,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3863:7:119",
                          "memberName": "auxSwap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50783,
                          "src": "3851:19:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapParams_$54109_memory_ptr",
                            "typeString": "struct SwapParams memory"
                          }
                        },
                        "id": 53292,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3871:7:119",
                        "memberName": "assetIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54097,
                        "src": "3851:27:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 53295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3890:1:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 53294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3882:7:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53293,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3882:7:119",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3882:10:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3851:41:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3804:88:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 53308,
                    "nodeType": "Block",
                    "src": "4042:118:119",
                    "statements": [
                      {
                        "expression": {
                          "id": 53306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53304,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53283,
                            "src": "4113:19:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 53305,
                            "name": "upFrontAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53271,
                            "src": "4136:13:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4113:36:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53307,
                        "nodeType": "ExpressionStatement",
                        "src": "4113:36:119"
                      }
                    ]
                  },
                  "id": 53309,
                  "nodeType": "IfStatement",
                  "src": "3800:360:119",
                  "trueBody": {
                    "id": 53303,
                    "nodeType": "Block",
                    "src": "3894:142:119",
                    "statements": [
                      {
                        "expression": {
                          "id": 53301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53299,
                            "name": "upFrontCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53280,
                            "src": "3992:17:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 53300,
                            "name": "upFrontAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53271,
                            "src": "4012:13:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3992:33:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53302,
                        "nodeType": "ExpressionStatement",
                        "src": "3992:33:119"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    53311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53311,
                      "mutability": "mutable",
                      "name": "underlyingToken",
                      "nameLocation": "4228:15:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 53366,
                      "src": "4220:23:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53310,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4220:7:119",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53318,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53313,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53267,
                              "src": "4255:11:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53314,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4267:15:119",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50777,
                            "src": "4255:27:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53312,
                          "name": "IERC4626",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32740,
                          "src": "4246:8:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                            "typeString": "type(contract IERC4626)"
                          }
                        },
                        "id": 53315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4246:37:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$32740",
                          "typeString": "contract IERC4626"
                        }
                      },
                      "id": 53316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4284:5:119",
                      "memberName": "asset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32609,
                      "src": "4246:43:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 53317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4246:45:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4220:71:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53323,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53267,
                          "src": "4338:11:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 53324,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4350:15:119",
                        "memberName": "collateralToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50777,
                        "src": "4338:27:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53325,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53283,
                        "src": "4367:19:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53320,
                            "name": "underlyingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53311,
                            "src": "4308:15:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53319,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "4301:6:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 53321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4301:23:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 53322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4325:12:119",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "4301:36:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 53326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4301:86:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53327,
                  "nodeType": "ExpressionStatement",
                  "src": "4301:86:119"
                },
                {
                  "expression": {
                    "id": 53342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53328,
                      "name": "addCollateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53283,
                      "src": "4397:19:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 53341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 53334,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53283,
                            "src": "4465:19:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 53337,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4494:4:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                                  "typeString": "contract PositionAction4626"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                                  "typeString": "contract PositionAction4626"
                                }
                              ],
                              "id": 53336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4486:7:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53335,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4486:7:119",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4486:13:119",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 53330,
                                  "name": "leverParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53267,
                                  "src": "4428:11:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                                    "typeString": "struct LeverParams memory"
                                  }
                                },
                                "id": 53331,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4440:15:119",
                                "memberName": "collateralToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50777,
                                "src": "4428:27:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 53329,
                              "name": "IERC4626",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32740,
                              "src": "4419:8:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                "typeString": "type(contract IERC4626)"
                              }
                            },
                            "id": 53332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4419:37:119",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC4626_$32740",
                              "typeString": "contract IERC4626"
                            }
                          },
                          "id": 53333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4457:7:119",
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32657,
                          "src": "4419:45:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,address) external returns (uint256)"
                          }
                        },
                        "id": 53339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4419:81:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 53340,
                        "name": "upFrontCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53280,
                        "src": "4503:17:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4419:101:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4397:123:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53343,
                  "nodeType": "ExpressionStatement",
                  "src": "4397:123:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53349,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53267,
                          "src": "4618:11:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 53350,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4630:5:119",
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50775,
                        "src": "4618:17:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53351,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53283,
                        "src": "4637:19:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53345,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53267,
                              "src": "4576:11:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53346,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4588:15:119",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50777,
                            "src": "4576:27:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53344,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "4569:6:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 53347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4569:35:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 53348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4605:12:119",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "4569:48:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 53352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4569:88:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53353,
                  "nodeType": "ExpressionStatement",
                  "src": "4569:88:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53361,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4719:4:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 53360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4711:7:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53359,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4711:7:119",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4711:13:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53363,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53283,
                        "src": "4726:19:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53355,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53267,
                              "src": "4684:11:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53356,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4696:5:119",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50775,
                            "src": "4684:17:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53354,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48986,
                          "src": "4674:9:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48986_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4674:28:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$48986",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4703:7:119",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48880,
                      "src": "4674:36:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4674:72:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53278,
                  "id": 53365,
                  "nodeType": "Return",
                  "src": "4667:79:119"
                }
              ]
            },
            "baseFunctions": [
              50970
            ],
            "documentation": {
              "id": 53264,
              "nodeType": "StructuredDocumentation",
              "src": "3024:473:119",
              "text": "@notice Hook to decrease lever by depositing collateral into the Yearn Vault and the Yearn Vault\n @param leverParams LeverParams struct\n @param upFrontToken the token passed up front\n @param upFrontAmount the amount of tokens passed up front [IYVault.decimals()]\n @param swapAmountOut the amount of tokens received from the stablecoin flash loan swap [IYVault.decimals()]\n @return Amount of collateral added to CDPVault position [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onIncreaseLever",
            "nameLocation": "3511:16:119",
            "overrides": {
              "id": 53275,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3675:8:119"
            },
            "parameters": {
              "id": 53274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53267,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "3556:11:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53367,
                  "src": "3537:30:119",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 53266,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53265,
                      "name": "LeverParams",
                      "nameLocations": [
                        "3537:11:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50784,
                      "src": "3537:11:119"
                    },
                    "referencedDeclaration": 50784,
                    "src": "3537:11:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$50784_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53269,
                  "mutability": "mutable",
                  "name": "upFrontToken",
                  "nameLocation": "3585:12:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53367,
                  "src": "3577:20:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3577:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53271,
                  "mutability": "mutable",
                  "name": "upFrontAmount",
                  "nameLocation": "3615:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53367,
                  "src": "3607:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3607:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53273,
                  "mutability": "mutable",
                  "name": "swapAmountOut",
                  "nameLocation": "3646:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53367,
                  "src": "3638:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3638:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3527:138:119"
            },
            "returnParameters": {
              "id": 53278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53277,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53367,
                  "src": "3693:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3692:9:119"
            },
            "scope": 53411,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53410,
            "nodeType": "FunctionDefinition",
            "src": "5093:492:119",
            "nodes": [],
            "body": {
              "id": 53409,
              "nodeType": "Block",
              "src": "5232:353:119",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53380,
                      "mutability": "mutable",
                      "name": "withdrawnCollateral",
                      "nameLocation": "5293:19:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 53409,
                      "src": "5285:27:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53379,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5285:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53392,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53388,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5361:4:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 53387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5353:7:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53386,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5353:7:119",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5353:13:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53390,
                        "name": "subCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53373,
                        "src": "5368:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53382,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53371,
                              "src": "5325:11:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53383,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5337:5:119",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50775,
                            "src": "5325:17:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53381,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48986,
                          "src": "5315:9:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48986_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5315:28:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$48986",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5344:8:119",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48889,
                      "src": "5315:37:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5315:67:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5285:97:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53398,
                        "name": "withdrawnCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53380,
                        "src": "5528:19:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53401,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5557:4:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 53400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5549:7:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53399,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5549:7:119",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5549:13:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53405,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5572:4:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$53411",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 53404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5564:7:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5564:7:119",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5564:13:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53394,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53371,
                              "src": "5492:11:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53395,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5504:15:119",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50777,
                            "src": "5492:27:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53393,
                          "name": "IERC4626",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32740,
                          "src": "5483:8:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                            "typeString": "type(contract IERC4626)"
                          }
                        },
                        "id": 53396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5483:37:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$32740",
                          "typeString": "contract IERC4626"
                        }
                      },
                      "id": 53397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5521:6:119",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32739,
                      "src": "5483:44:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 53407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5483:95:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53378,
                  "id": 53408,
                  "nodeType": "Return",
                  "src": "5476:102:119"
                }
              ]
            },
            "baseFunctions": [
              50981
            ],
            "documentation": {
              "id": 53368,
              "nodeType": "StructuredDocumentation",
              "src": "4759:329:119",
              "text": "@notice Hook to decrease lever by withdrawing collateral from the CDPVault and the ERC4626 Vault\n @param leverParams LeverParams struct\n @param subCollateral Amount of collateral to withdraw in CDPVault decimals [wad]\n @return Amount of underlying token withdrawn from yearn vault [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDecreaseLever",
            "nameLocation": "5102:16:119",
            "overrides": {
              "id": 53375,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5205:8:119"
            },
            "parameters": {
              "id": 53374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53371,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "5147:11:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53410,
                  "src": "5128:30:119",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$50784_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 53370,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53369,
                      "name": "LeverParams",
                      "nameLocations": [
                        "5128:11:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50784,
                      "src": "5128:11:119"
                    },
                    "referencedDeclaration": 50784,
                    "src": "5128:11:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$50784_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53373,
                  "mutability": "mutable",
                  "name": "subCollateral",
                  "nameLocation": "5176:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 53410,
                  "src": "5168:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5168:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5118:77:119"
            },
            "returnParameters": {
              "id": 53378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53377,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53410,
                  "src": "5223:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5223:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5222:9:119"
            },
            "scope": 53411,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53106,
              "name": "PositionAction",
              "nameLocations": [
                "542:14:119"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52923,
              "src": "542:14:119"
            },
            "id": 53107,
            "nodeType": "InheritanceSpecifier",
            "src": "542:14:119"
          }
        ],
        "canonicalName": "PositionAction4626",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 53105,
          "nodeType": "StructuredDocumentation",
          "src": "406:105:119",
          "text": "@title PositionAction4626\n @notice Generic ERC4626 implementation of PositionAction base contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          53411,
          52923,
          50663,
          54851,
          49402,
          49353
        ],
        "name": "PositionAction4626",
        "nameLocation": "520:18:119",
        "scope": 53412,
        "usedErrors": [
          50616,
          50832,
          50834,
          50836,
          50838,
          50840,
          50842,
          50844,
          50846,
          50848,
          50850,
          50852,
          50854,
          131175
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 119
}