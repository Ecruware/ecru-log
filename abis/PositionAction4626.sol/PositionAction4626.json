{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "flashlender_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "swapActions_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "joinAction_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Action__revertBytes_emptyRevertBytes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toInt256_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__borrow_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidResidualRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__deposit_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onCreditFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onlyDelegatecall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__repay_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS_CREDIT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cdm",
      "outputs": [
        {
          "internalType": "contract ICDM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum JoinProtocol",
                  "name": "protocol",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "assetsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "minOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct JoinParams",
              "name": "auxJoin",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "auxJoinToken",
              "type": "address"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "subCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "residualRecipient",
          "type": "address"
        }
      ],
      "name": "decreaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "depositAndBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flashlender",
      "outputs": [
        {
          "internalType": "contract IFlashlender",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum JoinProtocol",
                  "name": "protocol",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "assetsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "minOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct JoinParams",
              "name": "auxJoin",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "auxJoinToken",
              "type": "address"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "upFrontToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "upFrontAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "increaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "joinAction",
      "outputs": [
        {
          "internalType": "contract JoinAction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "contract IMinter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        },
        {
          "internalType": "bool[]",
          "name": "delegateCall",
          "type": "bool[]"
        }
      ],
      "name": "multisend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onCreditFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "self",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IStablecoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapAction",
      "outputs": [
        {
          "internalType": "contract SwapAction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "withdrawAndRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "523:5958:125:-:0;;;972:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1064:12;1078;1092:11;5378:12:123;-1:-1:-1;;;;;5351:40:123;;;-1:-1:-1;;;;;5351:40:123;;;;;5414:11;;-1:-1:-1;;;;;5414:22:123;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5401:37:123;;;-1:-1:-1;;;;;5401:37:123;;;;;5457:11;;-1:-1:-1;;;;;5457:18:123;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5448:29:123;;;-1:-1:-1;;;;;5448:29:123;;;;;5493:11;;-1:-1:-1;;;;;5493:15:123;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5487:23:123;;;;;;;5535:4;5520:20;;5550:36;;;;;5596;;;;;5671:6;;5642:43;;-1:-1:-1;;;5642:43:123;;1680:32:193;;5642:43:123;;;1662:51:193;5680:4:123;1729:18:193;;;1722:50;5487:23:123;5642:20;;1635:18:193;;5642:43:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5695:3:123;;:40;;-1:-1:-1;;;5695:40:123;;-1:-1:-1;;;;;1680:32:193;;;5695:40:123;;;1662:51:193;5730:4:123;1729:18:193;;;1722:50;5695:20:123;;;;-1:-1:-1;5695:20:123;;-1:-1:-1;1635:18:193;;5695:40:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:477;;;972:135:125;;;523:5958;;14:131:193;-1:-1:-1;;;;;89:31:193;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:519::-;238:6;246;254;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;355:9;349:16;374:31;399:5;374:31;:::i;:::-;474:2;459:18;;453:25;424:5;;-1:-1:-1;487:33:193;453:25;487:33;:::i;:::-;591:2;576:18;;570:25;539:7;;-1:-1:-1;604:33:193;570:25;604:33;:::i;:::-;656:7;646:17;;;150:519;;;;;:::o;674:272::-;765:6;818:2;806:9;797:7;793:23;789:32;786:52;;;834:1;831;824:12;786:52;866:9;860:16;885:31;910:5;885:31;:::i;:::-;935:5;674:272;-1:-1:-1;;;674:272:193:o;1494:284::-;523:5958:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "523:5958:125:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8737:464:123;;;;;;:::i;:::-;;:::i;:::-;;3925:31;;;;;;;;;;;;:::i;:::-;;;;;;;;3558:100;;3608:50;3558:100;;;;;1790:25:193;;;1778:2;1763:18;3558:100:123;1644:177:193;1101:76:130;;1135:42;1101:76;;21297:2728:123;;;;;;:::i;:::-;;:::i;18994:2128::-;;;;;;:::i;:::-;;:::i;14926:1737::-;;;;;;:::i;:::-;;:::i;11634:659::-;;;;;;:::i;:::-;;:::i;10057:426::-;;;;;;:::i;:::-;;:::i;9399:401::-;;;;;;:::i;:::-;;:::i;4007:29::-;;;;;3464:88;;3507:45;3464:88;;12600:738;;;;;;:::i;:::-;;:::i;4082:38::-;;;;;3698:25;;;;;3848:39;;;;;17338:1310;;;;;;:::i;:::-;;:::i;3768:41::-;;;;;13630:554;;;;;;:::i;:::-;;:::i;4166:38::-;;;;;10784:598;;;;;;:::i;:::-;;:::i;8737:464::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;8941:18:::1;8962:47;8971:5;8978:16;8996:12;8962:8;:47::i;:::-;8941:68;;9029:5;-1:-1:-1::0;;;;;9019:40:123::1;;9073:8;9103:4;9130;9149:20;9158:10;9149:8;:20::i;:::-;9183:1;9019:175;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8931:270;8737:464:::0;;;;:::o;21297:2728::-;21461:7;21484:10;-1:-1:-1;;;;;21506:11:123;21484:34;;21480:97;;21527:50;;-1:-1:-1;;;21527:50:123;;;;;;;;;;;21480:97;21601:30;;;21718:48;;;;21729:4;21718:48;:::i;:::-;21587:179;;;;;;21874:21;21898:136;21929:11;:17;;;21960:11;:20;;;21994:11;:23;;;:30;;;21898:17;:136::i;:::-;22101:17;;;;22080:45;;-1:-1:-1;;;22080:45:123;;-1:-1:-1;;;;;19405:32:193;;;22080:45:123;;;19387:51:193;22120:4:123;19454:18:193;;;19447:50;21874:160:123;;-1:-1:-1;22080:3:123;:20;;;;19360:18:193;;22080:45:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22145:11;:17;;;-1:-1:-1;;;;;22135:52:123;;22201:11;:20;;;22243:4;22270;22290:23;22299:13;22290:8;:23::i;:::-;22289:24;;;:::i;:::-;22328:23;22337:13;22328:8;:23::i;:::-;22327:24;;;:::i;:::-;22135:226;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;22392:17:123;;;;22371:46;;-1:-1:-1;;;22371:46:123;;-1:-1:-1;;;;;19405:32:193;;;22371:46:123;;;19387:51:193;22411:5:123;19454:18:193;;;19447:50;22371:3:123;:20;;;;;;19360:18:193;;22371:46:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22495:27;22525:44;22542:11;22555:13;22525:16;:44::i;:::-;22495:74;;22580:21;22604:189;22639:10;22704:24;;;22746:11;:23;;;22664:119;;;;;;;;:::i;:::-;;;;-1:-1:-1;;22664:119:123;;;;;;;;;;;;;;-1:-1:-1;;;;;22664:119:123;-1:-1:-1;;;;;;22664:119:123;;;;;;;;;;22604:13;:189::i;:::-;22580:213;;22803:20;22837:8;22826:31;;;;;;;;;;;;:::i;:::-;22803:54;-1:-1:-1;22943:22:123;22968:34;22803:54;22968:19;:34;:::i;:::-;23119:23;;;;;:30;;23083:67;;-1:-1:-1;;;23083:67:123;;22943:59;;-1:-1:-1;;;;;;23083:10:123;:18;;;;:67;;23110:6;;23119:30;23083:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23188:23:123;;;;;:30;;23160:59;;-1:-1:-1;;;23160:59:123;;-1:-1:-1;;;;;23160:6:123;:12;;;;:59;;23181:4;;23160:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23357:1;23340:14;:18;23336:642;;;23455:19;;;;:27;;;-1:-1:-1;;;;;23455:41:123;;23451:516;;23516:233;23559:10;23640:24;;;23690:11;:19;;;23592:139;;;;;;;;:::i;23516:233::-;;23451:516;;;23872:23;;;;:31;;;23865:87;;-1:-1:-1;;;;;23865:52:123;23918:17;23937:14;23865:52;:87::i;:::-;-1:-1:-1;3608:50:123;;21297:2728;-1:-1:-1;;;;;;;;;;;;;21297:2728:123:o;18994:2128::-;19179:7;19202:10;-1:-1:-1;;;;;19224:11:123;19202:34;;19198:91;;19245:44;;-1:-1:-1;;;19245:44:123;;;;;;;;;;;19198:91;19313:30;;;19425:49;;;;19436:4;19425:49;:::i;:::-;19573:19;;;;:27;;;19299:175;;-1:-1:-1;19299:175:123;;-1:-1:-1;19299:175:123;-1:-1:-1;;;;;;19573:41:123;;19569:298;;19630:24;19657:135;19696:10;19732:24;;;19758:11;:19;;;19709:69;;;;;;;;:::i;19657:135::-;19630:162;;19833:11;19822:34;;;;;;;;;;;;:::i;:::-;19806:50;;19616:251;19569:298;19918:21;19942:131;19977:10;20013:24;;;20039:11;:23;;;19990:73;;;;;;;;:::i;19942:131::-;19918:155;;20083:21;20118:8;20107:31;;;;;;;;;;;;:::i;:::-;20083:55;;20215:18;20236:73;20253:11;20266:12;20280:13;20295;20236:16;:73::i;:::-;20215:94;;20402:21;20426:112;20457:11;:17;;;20476:11;:20;;;20498:11;:23;;;:30;;;20426:17;:112::i;:::-;20402:136;;20594:11;:17;;;-1:-1:-1;;;;;20584:52:123;;20650:11;:20;;;20692:4;20719;20738:20;20747:10;20738:8;:20::i;:::-;20772:23;20781:13;20772:8;:23::i;:::-;20584:221;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;20898:23:123;;;;;:30;;20871:58;;-1:-1:-1;;;20871:58:123;;:6;-1:-1:-1;;;;;20871:11:123;;;;:58;;20891:4;;20871:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;21050:23:123;;;;;:30;;21009:72;;-1:-1:-1;;;21009:72:123;;:10;-1:-1:-1;;;;;21009:18:123;;;;:72;;21036:11;;21009:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3507:45:123;;18994:2128;-1:-1:-1;;;;;;;;;;;;;;18994:2128:123:o;14926:1737::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;15247:17:::1;15211:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:53;;;;;;;;:::i;:::-;;;:123;;;-1:-1:-1::0;;;;;;15323:10:123::1;15280:54;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:31;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15280:54:123::1;;;15211:123;:180;;;-1:-1:-1::0;;;;;;15387:4:123::1;15350:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15350:41:123::1;;;15211:180;15207:252;;;15409:50;;-1:-1:-1::0;;;15409:50:123::1;;;;;;;;;;;15207:252;15555:1;15516:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15516:41:123::1;;;:230;;;;-1:-1:-1::0;15607:17:123::1;15575:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;:108;;;-1:-1:-1::0;;;;;;15640:43:123;::::1;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15640:43:123::1;;;15575:108;:161;;;-1:-1:-1::0;;;;;;15732:4:123::1;15699:37;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:29;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15699:37:123::1;;;15575:161;15512:289;;;15755:46;;-1:-1:-1::0;;;15755:46:123::1;;;;;;;;;;;15512:289;15884:17:::0;;15880:337:::1;;15947:4;-1:-1:-1::0;;;;;15921:31:123;::::1;::::0;15917:290:::1;;15972:54;-1:-1:-1::0;;;;;15972:33:123;::::1;16006:4;16012:13:::0;15972:33:::1;:54::i;:::-;15917:290;;;16114:78;16128:12:::0;16142:14;16158:4:::1;16164:13:::0;16114:78:::1;;::::0;;::::1;::::0;::::1;16179:12:::0;16114:78:::1;:::i;:::-;:13;:78::i;:::-;16270:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16258:47:123::1;;16306:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;16328:4;16334;16258:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;16349:11:123::1;:21;::::0;-1:-1:-1;16349:21:123::1;::::0;-1:-1:-1;16406:4:123::1;16433:10;16458:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;16513:11;16526:12;16540:13;16502:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16349:215;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;16586:17:123::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16574:47:123::1;;16622:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;16644:4;16650:5;16574:82;;;;;;;;;;;;;;;;;:::i;11634:659::-:0;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;11891:18:::1;11912:47;11921:5;11928:16;11946:12;11912:8;:47::i;:::-;11891:68:::0;-1:-1:-1;11969:21:123::1;11993:55;12011:5:::0;12018:8;12028:19;::::1;11993:17;:55::i;:::-;11969:79;;12068:5;-1:-1:-1::0;;;;;12058:40:123::1;;12112:8;12142:4;12169;12188:20;12197:10;12188:8;:20::i;:::-;12222:23;12231:13;12222:8;:23::i;:::-;12058:197;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12265:21;12273:12;12265:7;:21::i;:::-;11881:412;;11634:659:::0;;;;;:::o;10057:426::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;10178:21:::1;10202:55;10220:5:::0;10227:8;10237:19;::::1;10202:17;:55::i;:::-;10178:79;;10277:5;-1:-1:-1::0;;;;;10267:40:123::1;;10321:8;10351:4;10378;10397:1;10412:23;10421:13;10412:8;:23::i;:::-;10267:178;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10455:21;10463:12;10455:7;:21::i;:::-;10168:315;10057:426:::0;;;:::o;9399:401::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;9570:5:::1;-1:-1:-1::0;;;;;9560:40:123::1;;9614:8;9644:4;9671;9691:33;9700:16;:23;;;9691:8;:33::i;:::-;9690:34;;;:::i;:::-;9738:1;9560:189;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9759:34;9769:5;9776:16;9759:9;:34::i;12600:738::-:0;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;12857:51:::1;12864:8;12874:5;12881:12;12895;12857:6;:51::i;:::-;12918:65;::::0;-1:-1:-1;;;12918:65:123;;-1:-1:-1;;;;;12938:3:123::1;12918:42;::::0;::::1;::::0;:65:::1;::::0;12961:8;;12971:5;;12978:4:::1;::::0;12918:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13003:5;-1:-1:-1::0;;;;;12993:40:123::1;;13047:8;13077:4;13104;13124:33;13133:16;:23;;;13124:8;:33::i;:::-;13123:34;;;:::i;:::-;13172:29;13181:19:::0;::::1;13172:8;:29::i;:::-;13171:30;;;:::i;:::-;12993:218;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13221:66:123::1;::::0;-1:-1:-1;;;13221:66:123;;-1:-1:-1;;;;;13241:3:123::1;13221:42;::::0;-1:-1:-1;13221:42:123::1;::::0;-1:-1:-1;13221:66:123::1;::::0;13264:8;;13274:5;;13281::::1;::::0;13221:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13297:34;13307:5;13314:16;13297:9;:34::i;:::-;;12600:738:::0;;;;;:::o;17338:1310::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;17588:18:::1;17552:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:54;;;;;;;;:::i;:::-;;;:111;;;-1:-1:-1::0;;;;;;17659:4:123::1;17622:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17622:41:123::1;;;17552:111;17548:183;;;17681:50;;-1:-1:-1::0;;;17681:50:123::1;;;;;;;;;;;17548:183;17827:1;17788:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17788:41:123::1;;;:118;;;;-1:-1:-1::0;17879:17:123::1;17847:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;17788:118;17784:177;;;17915:46;;-1:-1:-1::0;;;17915:46:123::1;;;;;;;;;;;17784:177;18094:1;18055:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;18055:41:123::1;;:88;;;;-1:-1:-1::0;;;;;;18112:31:123;::::1;::::0;18055:88:::1;18051:166;;;18161:56;;-1:-1:-1::0;;;18161:56:123::1;;;;;;;;;;;18051:166;18278:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;18266:47:123::1;;18314:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;18336:4;18342;18266:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;18357:11:123::1;:27;::::0;-1:-1:-1;18357:27:123::1;::::0;-1:-1:-1;18419:4:123::1;18438:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;18493:11;18506:13;18521:17;18482:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18357:192;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;18571:17:123::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;18559:47:123::1;;18607:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;18629:4;18635:5;18559:82;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;13630:554:::0;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;13819:7;13796:20:::1;13843:335;13863:12;13859:1;:16;13843:335;;;13896:12;;13909:1;13896:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13892:245;;;13931:34;13945:7;;13953:1;13945:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13957:4;;13962:1;13957:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13931:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;13931:13:123::1;::::0;-1:-1:-1;;;13931:34:123:i:1;:::-;;13892:245;;;14005:12;14019:21:::0;14044:7:::1;;14052:1;14044:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14044:15:123::1;14060:4;;14065:1;14060:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;14044:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14004:64;;;;14091:7;14086:36;;14100:22;14113:8;14100:12;:22::i;:::-;13986:151;;13892:245;14162:3;;13843:335;;;;13786:398;13630:554:::0;;;;;;:::o;10784:598::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;10978:51:::1;10985:8;10995:5;11002:12;11016;10978:6;:51::i;:::-;11039:65;::::0;-1:-1:-1;;;11039:65:123;;-1:-1:-1;;;;;11059:3:123::1;11039:42;::::0;::::1;::::0;:65:::1;::::0;11082:8;;11092:5;;11099:4:::1;::::0;11039:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11124:5;-1:-1:-1::0;;;;;11114:40:123::1;;11168:8;11198:4;11225;11244:1;11260:29;11269:12;:19;;;11260:8;:29::i;:::-;11259:30;;;:::i;:::-;11114:185;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11309:66:123::1;::::0;-1:-1:-1;;;11309:66:123;;-1:-1:-1;;;;;11329:3:123::1;11309:42;::::0;-1:-1:-1;11309:42:123::1;::::0;-1:-1:-1;11309:66:123::1;::::0;11352:8;;11362:5;;11369::::1;::::0;11309:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;24474:992:::0;24635:7;24671:23;;;;24635:7;24709:24;;;;24671:16;24709:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24709:46:123;;24705:682;;24811:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;24775:64:123;:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24775:64:123;;;:135;;;-1:-1:-1;24905:4:123;24859:24;;;;:16;:24;:::i;:::-;:34;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24859:51:123;;;24775:135;24771:201;;;24932:40;;-1:-1:-1;;;24932:40:123;;;;;;;;;;;24771:201;24995:89;25012:31;;;;;;;;:::i;:::-;25045:24;;;;:16;:24;:::i;:::-;25071:12;24995:16;:89::i;:::-;24986:98;;24705:682;;;25148:4;25105:31;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25105:48:123;;25101:286;;25169:207;25200:28;;;;:16;:28;:::i;:::-;25246:31;;;;;;;;:::i;:::-;25303:4;25326:6;25169:207;;;;;;;25350:12;25169:207;:::i;:::-;25404:55;25415:5;25422:28;;;;:16;:28;:::i;:::-;25452:6;25404:10;:55::i;:::-;25397:62;;;24474:992;;;;;;:::o;509:133:181:-;552:6;-1:-1:-1;;;570:1:181;:13;566:51;;592:25;;-1:-1:-1;;;592:25:181;;;;;;;;;;;566:51;-1:-1:-1;637:1:181;509:133::o;30695:332:123:-;30822:18;30853:22;30877:21;30913:5;-1:-1:-1;;;;;30903:27:123;;30931:8;30903:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30852:88;;;;;30963:57;30983:4;30989:15;31006:13;30963:19;:57::i;:::-;30950:70;30695:332;-1:-1:-1;;;;;;30695:332:123:o;5987:492:125:-;6117:7;6179:27;6219:11;:17;;;-1:-1:-1;;;;;6209:37:125;;6255:4;6262:13;6209:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6179:97;;6386:11;:27;;;-1:-1:-1;;;;;6377:44:125;;6422:19;6451:4;6466;6377:95;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6370:102;;;5987:492;;;;;:::o;767:241:120:-;839:12;864;878:23;905:2;-1:-1:-1;;;;;905:15:120;921:4;905:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:63;;;;941:7;936:38;;950:24;963:10;950:12;:24::i;941:175:62:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1050:58:62;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:62;-1:-1:-1;;;;;;1050:58:62;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;3547:2100:125:-;3738:7;3757:25;3792:27;3822:13;3792:43;;3880:12;-1:-1:-1;;;;;3849:43:125;:11;:27;;;-1:-1:-1;;;;;3849:43:125;;:88;;;;-1:-1:-1;3896:19:125;;;;:27;;;-1:-1:-1;;;;;3896:41:125;;3849:88;3845:360;;;4057:13;4037:33;;3845:360;;;4158:36;4181:13;4158:36;;:::i;:::-;;;3845:360;4215:23;4250:11;:27;;;-1:-1:-1;;;;;4241:43:125;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4340:19;;;;:26;;;4215:71;;-1:-1:-1;4340:40:125;4336:807;;4424:19;;;;:27;;;4396:24;;-1:-1:-1;;;;;4424:41:125;;4423:85;;4484:11;:24;;;4423:85;;;4469:12;4423:85;4661:19;;;;4734:24;;;;4617:219;;-1:-1:-1;;;4617:219:125;;4396:112;;-1:-1:-1;4586:28:125;;-1:-1:-1;;;;;4617:10:125;:26;;;;:219;;4396:112;;4734:24;4777:13;;4809;;4617:219;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4617:219:125;;;;;;;;;;;;:::i;:::-;4586:250;;4851:126;4890:10;4926:24;;;4952:10;4903:60;;;;;;;;:::i;4851:126::-;-1:-1:-1;5084:48:125;;-1:-1:-1;;;5084:48:125;;-1:-1:-1;;;;;5084:33:125;;;;;:48;;5126:4;;5084:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5062:70;;4382:761;;4336:807;5232:27;;;;5195:86;;-1:-1:-1;;;;;5195:36:125;;;5261:19;5195:36;:86::i;:::-;5322:27;;;;;5313:81;;-1:-1:-1;;;5313:81:125;;;;;43270:25:193;;;5388:4:125;43311:18:193;;;43304:60;5397:17:125;;-1:-1:-1;;;;;5313:45:125;;;;43243:18:193;;5313:81:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:101;;;;:::i;:::-;5512:17;;;;5470:27;;;;5291:123;;-1:-1:-1;5463:88:125;;-1:-1:-1;;;;;5463:48:125;;5291:123;5463:48;:88::i;:::-;5578:11;:17;;;-1:-1:-1;;;;;5568:36:125;;5613:4;5620:19;5568:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5561:79;;;;;3547:2100;;;;;;;:::o;1455:1279:130:-;1623:20;1600:19;;:43;;;;;;;;:::i;:::-;;1596:1132;;1135:42;-1:-1:-1;;;;;1721:46:130;;1785:262;;;;;;;;1856:84;;;;;;;;1901:5;-1:-1:-1;;;;;1856:84:130;;;;;1916:6;:21;;;1856:84;;;1785:262;;;;1969:6;:12;;;1785:262;;;;2013:6;:15;;;1785:262;;;2065:80;;;;;;;;2115:2;-1:-1:-1;;;;;2065:80:130;;;;;2136:6;2065:80;;;2163:4;2198:6;:8;;;2208:6;:8;;;2225:6;:8;;;2218:16;;2185:50;;;;;;;;;43558:19:193;;;43602:2;43593:12;;43586:28;;;;-1:-1:-1;;;;;;43644:26:193;43639:2;43630:12;;43623:48;43696:2;43687:12;;43375:330;2185:50:130;;;;;;;;;;;;;1721:551;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:1132;;;2316:19;2293;;:42;;;;;;;;:::i;:::-;;2289:439;;2406:110;2437:4;2443:2;2447:6;:21;;;2470:6;:15;;;2487:6;:8;;;2497:6;:8;;;2507:6;:8;;;2419:5;-1:-1:-1;;;;;2406:30:130;;;:110;;;;;;;;;;:::i;:::-;2530:48;-1:-1:-1;;;;;2530:30:130;;2561:4;2567:2;2571:6;2530:30;:48::i;:::-;2289:439;;;2669:48;-1:-1:-1;;;;;2669:30:130;;2700:4;2706:2;2710:6;2669:30;:48::i;:::-;1455:1279;;;;;:::o;26679:940:123:-;26752:80;;-1:-1:-1;;;26752:80:123;;-1:-1:-1;;;;;26772:3:123;26752:42;;;;:80;;26803:4;;26818:6;;26827:4;;26752:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26886:1:123;;-1:-1:-1;26846:20:123;;-1:-1:-1;;26846:20:123;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26846:42:123;;26842:771;;-1:-1:-1;;;;;26904:6:123;:11;;26916:21;;;;;;;;:::i;:::-;26904:55;;-1:-1:-1;;;;;;26904:55:123;;;;;;;;;;26939:19;;;26904:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26973:81:123;;-1:-1:-1;;;26973:81:123;;-1:-1:-1;;;;;26993:3:123;26973:42;;-1:-1:-1;26973:42:123;;-1:-1:-1;26973:81:123;;27024:4;;27039:6;;27048:5;;26973:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26842:771;27086:47;;-1:-1:-1;;;27086:47:123;;-1:-1:-1;;;;;27086:6:123;:11;;;;:47;;27106:4;;27113:19;;;27086:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27147:81:123;;-1:-1:-1;;;27147:81:123;;-1:-1:-1;;;;;27167:3:123;27147:42;;-1:-1:-1;27147:42:123;;-1:-1:-1;27147:81:123;;27198:4;;27213:6;;27222:5;;27147:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;27319:10:123;27279:51;;-1:-1:-1;27279:20:123;;-1:-1:-1;27279:20:123;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;27279:51:123;;27275:103;;27339:39;;-1:-1:-1;;;27339:39:123;;;;;;;;;;;27275:103;27392:210;27431:10;-1:-1:-1;;;27550:20:123;;;;:12;:20;:::i;:::-;27460:128;;;;;;;;:::i;27392:210::-;;26842:771;26679:940;:::o;25738:798::-;25834:7;;25874:73;25886:5;25893:28;;;;:16;:28;:::i;:::-;25923:16;:23;;;25874:11;:73::i;:::-;25853:94;-1:-1:-1;26065:1:123;26021:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26021:46:123;;26017:486;;26083:214;26122:10;-1:-1:-1;;;26241:24:123;;;;:16;:24;:::i;26083:214::-;;26017:486;;;26398:94;26448:31;;;;;;;;:::i;:::-;26481:10;26405:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;26398:49:123;;:94;:49;:94::i;27913:1319::-;28150:14;;28178:20;;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28178:42:123;;28174:896;;28283:4;28241:20;;;;:12;:20;:::i;:::-;:30;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28241:47:123;;28237:98;;28297:38;;-1:-1:-1;;;28297:38:123;;;;;;;;;;;28237:98;28359:75;28376:21;;;;;;;;:::i;:::-;28399:20;;;;:12;:20;:::i;:::-;28421:12;28359:16;:75::i;:::-;28350:84;;28174:896;;;28526:22;28550:21;28586:5;-1:-1:-1;;;;;28576:27:123;;28604:8;28576:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28525:88:123;;-1:-1:-1;28525:88:123;-1:-1:-1;28525:88:123;28636:42;-1:-1:-1;;;;;28636:42:123;;28658:19;;28636:4;:42::i;:::-;:58;;;;:::i;:::-;28627:67;-1:-1:-1;28746:4:123;28713:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28713:38:123;;28709:351;;28833:212;28876:10;28909:21;;;;;;;;:::i;:::-;28960:4;28987:6;28833:212;;;;;;;29015:12;28833:212;:::i;:::-;28452:618;;28174:896;29137:43;;-1:-1:-1;;;29137:43:123;;-1:-1:-1;;;;;29137:10:123;:18;;;;:43;;29164:6;;29173;;29137:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;29190:35:123;;-1:-1:-1;;;29190:35:123;;-1:-1:-1;;;;;29190:6:123;:12;;;;:35;;29211:4;;29218:6;;29190:35;;;:::i;1192:255:120:-;1263:13;;:18;1259:127;;1354:6;1348:13;1339:6;1335:2;1331:15;1324:38;1259:127;1402:38;;-1:-1:-1;;;1402:38:120;;;;;;;;;;;29328:952:123;29486:17;29515:21;29539:241;29574:10;29639:35;;;29692:6;29716:12;29746:10;29599:171;;;;;;;;;;:::i;29539:241::-;29515:265;;29790:17;29821:8;29810:31;;;;;;;;;;;;:::i;:::-;29790:51;-1:-1:-1;29963:18:123;29940:19;;;;;;;;:::i;:::-;:41;;;;;;;;:::i;:::-;;29936:338;;29997:17;30017:28;30036:9;30017:16;;;;:28;:::i;:::-;29997:48;-1:-1:-1;30063:13:123;;30059:110;;30096:58;30136:6;30144:9;30103:18;;;;;;;;:::i;30096:58::-;30194:10;:17;;;30182:29;;29983:239;29936:338;;;30254:9;30242:21;;29936:338;29505:775;;29328:952;;;;;:::o;1572:645:125:-;1663:7;1682:18;1721:5;-1:-1:-1;;;;;1711:22:125;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1682:54;;1865:10;-1:-1:-1;;;;;1858:17:125;:3;-1:-1:-1;;;;;1858:17:125;;1854:236;;1891:18;1921:10;-1:-1:-1;;;;;1912:26:125;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1891:49;-1:-1:-1;1954:51:125;-1:-1:-1;;;;;1954:31:125;;1986:10;1998:6;1954:31;:51::i;:::-;2028;;-1:-1:-1;;;2028:51:125;;;;;43270:25:193;;;2073:4:125;43311:18:193;;;43304:60;-1:-1:-1;;;;;2028:28:125;;;;;43243:18:193;;2028:51:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2019:60;;1877:213;1854:236;2100:46;-1:-1:-1;;;;;2100:31:125;;2132:5;2139:6;2100:31;:46::i;:::-;2163:47;;-1:-1:-1;;;2163:47:125;;-1:-1:-1;;;;;2163:24:125;;;;;:47;;2196:4;;2203:6;;2163:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1940:373:88:-;2058:18;2097:43;2102:20;2109:13;2102:4;:20;:::i;:::-;2124:15;-1:-1:-1;;;;;2097:43:88;:4;:43::i;:::-;2084:56;;2262:4;2202:57;2216:10;2228:15;2245:13;2202;:57::i;:::-;:64;2198:113;;;2290:12;;1940:373;;;;;:::o;5173:642:62:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:62;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:62;;46591:2:193;5697:111:62;;;46573:21:193;46630:2;46610:18;;;46603:30;46669:34;46649:18;;;46642:62;-1:-1:-1;;;46720:18:193;;;46713:40;46770:19;;5697:111:62;;;;;;;;3756:410;3843:25;3894:22;;;3918:7;3927:5;3871:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3871:62:62;;;;;;;;;;;;;;-1:-1:-1;;;;;3871:62:62;-1:-1:-1;;;;;;3871:62:62;;;;;;;;;;;-1:-1:-1;3949:44:62;3973:5;3871:62;3949:23;:44::i;:::-;3944:216;;4036:58;;-1:-1:-1;;;;;46998:32:193;;4036:58:62;;;46980:51:193;4092:1:62;47047:18:193;;;47040:45;4009:86:62;;4029:5;;-1:-1:-1;;;4059:22:62;46953:18:193;;4036:58:62;46800:291:193;4009:86:62;4109:40;4129:5;4136:12;4109:19;:40::i;4318:472::-;4565:19;;-1:-1:-1;;;4565:19:62;;4543;;-1:-1:-1;;;;;4565:12:62;;;;;:19;;4578:5;;4565:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4594:54;;-1:-1:-1;;;4594:54:62;;-1:-1:-1;;;;;47463:15:193;;;4594:54:62;;;47445:34:193;47515:15;;;47495:18;;;47488:43;47547:18;;;47540:34;;;47590:18;;;47583:34;;;47666:4;47654:17;;47633:19;;;47626:46;47688:19;;;47681:35;;;47732:19;;;47725:35;;;4543:41:62;;-1:-1:-1;4594:12:62;;;;;;47379:19:193;;4594:54:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4679:19:62;;-1:-1:-1;;;4679:19:62;;4658:18;;-1:-1:-1;;;;;;4679:12:62;;;-1:-1:-1;4679:12:62;;:19;;4692:5;;4679:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4658:40;-1:-1:-1;4730:15:62;:11;4744:1;4730:15;:::i;:::-;4716:10;:29;4708:75;;;;-1:-1:-1;;;4708:75:62;;47973:2:193;4708:75:62;;;47955:21:193;48012:2;47992:18;;;47985:30;48051:34;48031:18;;;48024:62;-1:-1:-1;;;48102:18:193;;;48095:31;48143:19;;4708:75:62;47771:397:193;4708:75:62;4533:257;;4318:472;;;;;;;;:::o;1355:203::-;1482:68;;-1:-1:-1;;;;;48431:15:193;;;1482:68:62;;;48413:34:193;48483:15;;48463:18;;;48456:43;48515:18;;;48508:34;;;1455:96:62;;1475:5;;-1:-1:-1;;;1505:27:62;48348:18:193;;1482:68:62;48173:375:193;2503:560:125;2595:7;2614:27;2654:5;-1:-1:-1;;;;;2644:25:125;;2678:4;2685:6;2644:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2614:78;;2808:18;2847:5;-1:-1:-1;;;;;2837:22:125;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2808:54;;2883:10;-1:-1:-1;;;;;2876:17:125;:3;-1:-1:-1;;;;;2876:17:125;;2872:148;;2931:78;;-1:-1:-1;;;2931:78:125;;-1:-1:-1;;;;;2931:27:125;;;;;:78;;2959:19;;2988:4;;;;2931:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2909:100;;2872:148;-1:-1:-1;3037:19:125;2503:560;-1:-1:-1;;;;2503:560:125:o;3233:443:181:-;3283:9;3436:1;3432;3428:6;3424:14;3421:1;3418:21;3415:1;3411:29;3408:227;;;3539:10;3533:4;3526:24;3620:4;3614;3607:18;3408:227;-1:-1:-1;3664:3:181;3653:9;;3649:19;;3233:443::o;4704:487::-;4754:9;4934:16;4928:23;;4946:3;4919:33;4912:41;4905:49;;4895:255;;5054:10;5048:4;5041:24;5135:4;5129;5122:18;4895:255;-1:-1:-1;5175:3:181;5168:11;;;;5164:19;;4704:487::o;1466:197:88:-;1584:12;1647:13;1611:33;1616:10;1628:15;-1:-1:-1;;;;;1611:33:88;:4;:33::i;:::-;:49;;;;:::i;4109:223:65:-;4242:12;4273:52;4295:6;4303:4;4309:1;4312:12;4273:21;:52::i;6316:594:62:-;6399:4;6701:12;6715:23;6750:5;-1:-1:-1;;;;;6742:19:62;6762:4;6742:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6700:67;;;;6796:7;:69;;;;-1:-1:-1;6808:17:62;;:22;;:56;;;6845:10;6834:30;;;;;;;;;;;;:::i;:::-;6796:107;;;;-1:-1:-1;;;;;;1702:19:65;;;:23;;6869:34:62;6777:126;6316:594;-1:-1:-1;;;;;6316:594:62:o;5166:446:65:-;5331:12;5388:5;5363:21;:30;;5355:81;;;;-1:-1:-1;;;5355:81:65;;48755:2:193;5355:81:65;;;48737:21:193;48794:2;48774:18;;;48767:30;48833:34;48813:18;;;48806:62;-1:-1:-1;;;48884:18:193;;;48877:36;48930:19;;5355:81:65;48553:402:193;5355:81:65;5447:12;5461:23;5488:6;-1:-1:-1;;;;;5488:11:65;5507:5;5514:4;5488:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:73;;;;5536:69;5563:6;5571:7;5580:10;5592:12;5536:26;:69::i;:::-;5529:76;5166:446;-1:-1:-1;;;;;;;5166:446:65:o;7672:628::-;7852:12;7880:7;7876:418;;;7907:10;:17;7928:1;7907:22;7903:286;;-1:-1:-1;;;;;1702:19:65;;;8114:60;;;;-1:-1:-1;;;8114:60:65;;49162:2:193;8114:60:65;;;49144:21:193;49201:2;49181:18;;;49174:30;49240:31;49220:18;;;49213:59;49289:18;;8114:60:65;48960:353:193;8114:60:65;-1:-1:-1;8209:10:65;8202:17;;7876:418;8250:33;8258:10;8270:12;8981:17;;:21;8977:379;;9209:10;9203:17;9265:15;9252:10;9248:2;9244:19;9237:44;8977:379;9332:12;9325:20;;-1:-1:-1;;;9325:20:65;;;;;;;;:::i;14:131:193:-;-1:-1:-1;;;;;89:31:193;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:165::-;358:5;403:3;394:6;389:3;385:16;381:26;378:46;;;420:1;417;410:12;378:46;-1:-1:-1;442:6:193;289:165;-1:-1:-1;289:165:193:o;459:161::-;524:5;569:3;560:6;555:3;551:16;547:26;544:46;;;586:1;583;576:12;625:789;781:6;789;797;805;858:3;846:9;837:7;833:23;829:33;826:53;;;875:1;872;865:12;826:53;914:9;901:23;933:31;958:5;933:31;:::i;:::-;983:5;-1:-1:-1;1040:2:193;1025:18;;1012:32;1053:33;1012:32;1053:33;:::i;:::-;1105:7;-1:-1:-1;1163:2:193;1148:18;;1135:32;-1:-1:-1;;;;;1179:30:193;;1176:50;;;1222:1;1219;1212:12;1176:50;1245:76;1313:7;1304:6;1293:9;1289:22;1245:76;:::i;:::-;1235:86;;;1340:68;1400:7;1395:2;1384:9;1380:18;1340:68;:::i;:::-;1330:78;;625:789;;;;;;;:::o;1419:220::-;-1:-1:-1;;;;;1600:32:193;;;;1582:51;;1570:2;1555:18;;1419:220::o;2143:347::-;2194:8;2204:6;2258:3;2251:4;2243:6;2239:17;2235:27;2225:55;;2276:1;2273;2266:12;2225:55;-1:-1:-1;2299:20:193;;-1:-1:-1;;;;;2331:30:193;;2328:50;;;2374:1;2371;2364:12;2328:50;2411:4;2403:6;2399:17;2387:29;;2463:3;2456:4;2447:6;2439;2435:19;2431:30;2428:39;2425:59;;;2480:1;2477;2470:12;2425:59;2143:347;;;;;:::o;2495:681::-;2592:6;2600;2608;2616;2624;2677:3;2665:9;2656:7;2652:23;2648:33;2645:53;;;2694:1;2691;2684:12;2645:53;2733:9;2720:23;2752:31;2777:5;2752:31;:::i;:::-;2802:5;-1:-1:-1;2854:2:193;2839:18;;2826:32;;-1:-1:-1;2905:2:193;2890:18;;2877:32;;-1:-1:-1;2960:2:193;2945:18;;2932:32;-1:-1:-1;;;;;2976:30:193;;2973:50;;;3019:1;3016;3009:12;2973:50;3058:58;3108:7;3099:6;3088:9;3084:22;3058:58;:::i;:::-;2495:681;;;;-1:-1:-1;2495:681:193;;-1:-1:-1;3135:8:193;;3032:84;2495:681;-1:-1:-1;;;2495:681:193:o;3181:823::-;3287:6;3295;3303;3311;3319;3327;3380:3;3368:9;3359:7;3355:23;3351:33;3348:53;;;3397:1;3394;3387:12;3348:53;3436:9;3423:23;3455:31;3480:5;3455:31;:::i;:::-;3505:5;-1:-1:-1;3562:2:193;3547:18;;3534:32;3575:33;3534:32;3575:33;:::i;:::-;3627:7;-1:-1:-1;3681:2:193;3666:18;;3653:32;;-1:-1:-1;3732:2:193;3717:18;;3704:32;;-1:-1:-1;3787:3:193;3772:19;;3759:33;-1:-1:-1;;;;;3804:30:193;;3801:50;;;3847:1;3844;3837:12;3801:50;3886:58;3936:7;3927:6;3916:9;3912:22;3886:58;:::i;:::-;3181:823;;;;-1:-1:-1;3181:823:193;;-1:-1:-1;3181:823:193;;3963:8;;3181:823;-1:-1:-1;;;3181:823:193:o;4009:849::-;4169:6;4177;4185;4193;4201;4254:3;4242:9;4233:7;4229:23;4225:33;4222:53;;;4271:1;4268;4261:12;4222:53;4311:9;4298:23;-1:-1:-1;;;;;4336:6:193;4333:30;4330:50;;;4376:1;4373;4366:12;4330:50;4399:72;4463:7;4454:6;4443:9;4439:22;4399:72;:::i;:::-;4389:82;;;4521:2;4510:9;4506:18;4493:32;4534:31;4559:5;4534:31;:::i;:::-;4584:5;-1:-1:-1;4636:2:193;4621:18;;4608:32;;-1:-1:-1;4692:2:193;4677:18;;4664:32;4705:33;4664:32;4705:33;:::i;:::-;4757:7;-1:-1:-1;4783:69:193;4844:7;4838:3;4823:19;;4783:69;:::i;:::-;4773:79;;4009:849;;;;;;;;:::o;4863:160::-;4928:5;4973:2;4964:6;4959:3;4955:16;4951:25;4948:45;;;4989:1;4986;4979:12;5028:1056;5226:6;5234;5242;5250;5258;5311:3;5299:9;5290:7;5286:23;5282:33;5279:53;;;5328:1;5325;5318:12;5279:53;5367:9;5354:23;5386:31;5411:5;5386:31;:::i;:::-;5436:5;-1:-1:-1;5493:2:193;5478:18;;5465:32;5506:33;5465:32;5506:33;:::i;:::-;5558:7;-1:-1:-1;5616:2:193;5601:18;;5588:32;-1:-1:-1;;;;;5669:14:193;;;5666:34;;;5696:1;5693;5686:12;5666:34;5719:76;5787:7;5778:6;5767:9;5763:22;5719:76;:::i;:::-;5709:86;;5848:2;5837:9;5833:18;5820:32;5804:48;;5877:2;5867:8;5864:16;5861:36;;;5893:1;5890;5883:12;5861:36;;5916:74;5982:7;5971:8;5960:9;5956:24;5916:74;:::i;:::-;5906:84;;;6009:69;6070:7;6064:3;6053:9;6049:19;6009:69;:::i;6089:643::-;6199:6;6207;6215;6268:2;6256:9;6247:7;6243:23;6239:32;6236:52;;;6284:1;6281;6274:12;6236:52;6323:9;6310:23;6342:31;6367:5;6342:31;:::i;:::-;6392:5;-1:-1:-1;6449:2:193;6434:18;;6421:32;6462:33;6421:32;6462:33;:::i;:::-;6514:7;-1:-1:-1;6572:2:193;6557:18;;6544:32;-1:-1:-1;;;;;6588:30:193;;6585:50;;;6631:1;6628;6621:12;6585:50;6654:72;6718:7;6709:6;6698:9;6694:22;6654:72;:::i;:::-;6644:82;;;6089:643;;;;;:::o;6737:651::-;6851:6;6859;6867;6920:2;6908:9;6899:7;6895:23;6891:32;6888:52;;;6936:1;6933;6926:12;6888:52;6975:9;6962:23;6994:31;7019:5;6994:31;:::i;:::-;7044:5;-1:-1:-1;7101:2:193;7086:18;;7073:32;7114:33;7073:32;7114:33;:::i;:::-;7166:7;-1:-1:-1;7224:2:193;7209:18;;7196:32;-1:-1:-1;;;;;7240:30:193;;7237:50;;;7283:1;7280;7273:12;7237:50;7306:76;7374:7;7365:6;7354:9;7350:22;7306:76;:::i;8072:569::-;8181:6;8189;8197;8250:2;8238:9;8229:7;8225:23;8221:32;8218:52;;;8266:1;8263;8256:12;8218:52;8306:9;8293:23;-1:-1:-1;;;;;8331:6:193;8328:30;8325:50;;;8371:1;8368;8361:12;8325:50;8394:72;8458:7;8449:6;8438:9;8434:22;8394:72;:::i;:::-;8384:82;;;8513:2;8502:9;8498:18;8485:32;8475:42;;8567:2;8556:9;8552:18;8539:32;8580:31;8605:5;8580:31;:::i;:::-;8630:5;8620:15;;;8072:569;;;;;:::o;8876:367::-;8939:8;8949:6;9003:3;8996:4;8988:6;8984:17;8980:27;8970:55;;9021:1;9018;9011:12;8970:55;-1:-1:-1;9044:20:193;;-1:-1:-1;;;;;9076:30:193;;9073:50;;;9119:1;9116;9109:12;9073:50;9156:4;9148:6;9144:17;9132:29;;9216:3;9209:4;9199:6;9196:1;9192:14;9184:6;9180:27;9176:38;9173:47;9170:67;;;9233:1;9230;9223:12;9248:1096;9414:6;9422;9430;9438;9446;9454;9507:2;9495:9;9486:7;9482:23;9478:32;9475:52;;;9523:1;9520;9513:12;9475:52;9563:9;9550:23;-1:-1:-1;;;;;9633:2:193;9625:6;9622:14;9619:34;;;9649:1;9646;9639:12;9619:34;9688:70;9750:7;9741:6;9730:9;9726:22;9688:70;:::i;:::-;9777:8;;-1:-1:-1;9662:96:193;-1:-1:-1;9865:2:193;9850:18;;9837:32;;-1:-1:-1;9881:16:193;;;9878:36;;;9910:1;9907;9900:12;9878:36;9949:72;10013:7;10002:8;9991:9;9987:24;9949:72;:::i;:::-;10040:8;;-1:-1:-1;9923:98:193;-1:-1:-1;10128:2:193;10113:18;;10100:32;;-1:-1:-1;10144:16:193;;;10141:36;;;10173:1;10170;10163:12;10141:36;;10212:72;10276:7;10265:8;10254:9;10250:24;10212:72;:::i;10577:781::-;10729:6;10737;10745;10753;10806:3;10794:9;10785:7;10781:23;10777:33;10774:53;;;10823:1;10820;10813:12;10774:53;10862:9;10849:23;10881:31;10906:5;10881:31;:::i;:::-;10931:5;-1:-1:-1;10988:2:193;10973:18;;10960:32;11001:33;10960:32;11001:33;:::i;:::-;11053:7;-1:-1:-1;11111:2:193;11096:18;;11083:32;-1:-1:-1;;;;;11127:30:193;;11124:50;;;11170:1;11167;11160:12;11124:50;11193:72;11257:7;11248:6;11237:9;11233:22;11193:72;:::i;11363:533::-;-1:-1:-1;;;;;11683:15:193;;;11665:34;;11735:15;;;11730:2;11715:18;;11708:43;11787:15;;;;11782:2;11767:18;;11760:43;11834:2;11819:18;;11812:34;;;;11877:3;11862:19;;11855:35;;;;11614:3;11599:19;;11363:533::o;11901:127::-;11962:10;11957:3;11953:20;11950:1;11943:31;11993:4;11990:1;11983:15;12017:4;12014:1;12007:15;12033:255;12105:2;12099:9;12147:6;12135:19;;-1:-1:-1;;;;;12169:34:193;;12205:22;;;12166:62;12163:88;;;12231:18;;:::i;:::-;12267:2;12260:22;12033:255;:::o;12293:253::-;12365:2;12359:9;12407:4;12395:17;;-1:-1:-1;;;;;12427:34:193;;12463:22;;;12424:62;12421:88;;;12489:18;;:::i;12551:275::-;12622:2;12616:9;12687:2;12668:13;;-1:-1:-1;;12664:27:193;12652:40;;-1:-1:-1;;;;;12707:34:193;;12743:22;;;12704:62;12701:88;;;12769:18;;:::i;:::-;12805:2;12798:22;12551:275;;-1:-1:-1;12551:275:193:o;12831:111::-;12916:1;12909:5;12906:12;12896:40;;12932:1;12929;12922:12;12947:154;13025:20;;13054:41;13025:20;13054:41;:::i;13106:149::-;13180:20;;13229:1;13219:12;;13209:40;;13245:1;13242;13235:12;13260:530;13302:5;13355:3;13348:4;13340:6;13336:17;13332:27;13322:55;;13373:1;13370;13363:12;13322:55;13409:6;13396:20;-1:-1:-1;;;;;13431:2:193;13428:26;13425:52;;;13457:18;;:::i;:::-;13501:55;13544:2;13525:13;;-1:-1:-1;;13521:27:193;13550:4;13517:38;13501:55;:::i;:::-;13581:2;13572:7;13565:19;13627:3;13620:4;13615:2;13607:6;13603:15;13599:26;13596:35;13593:55;;;13644:1;13641;13634:12;13593:55;13709:2;13702:4;13694:6;13690:17;13683:4;13674:7;13670:18;13657:55;13757:1;13732:16;;;13750:4;13728:27;13721:38;;;;13736:7;13260:530;-1:-1:-1;;;13260:530:193:o;13795:852::-;13852:5;13900:6;13888:9;13883:3;13879:19;13875:32;13872:52;;;13920:1;13917;13910:12;13872:52;13942:22;;:::i;:::-;13933:31;;13987:39;14016:9;13987:39;:::i;:::-;13980:5;13973:54;14059:44;14099:2;14088:9;14084:18;14059:44;:::i;:::-;14054:2;14047:5;14043:14;14036:68;14136:38;14170:2;14159:9;14155:18;14136:38;:::i;:::-;14131:2;14124:5;14120:14;14113:62;14235:2;14224:9;14220:18;14207:32;14202:2;14195:5;14191:14;14184:56;14301:3;14290:9;14286:19;14273:33;14267:3;14260:5;14256:15;14249:58;14340:39;14374:3;14363:9;14359:19;14340:39;:::i;:::-;14334:3;14327:5;14323:15;14316:64;14441:3;14430:9;14426:19;14413:33;14407:3;14400:5;14396:15;14389:58;14498:3;14487:9;14483:19;14470:33;-1:-1:-1;;;;;14518:6:193;14515:30;14512:50;;;14558:1;14555;14548:12;14512:50;14595:45;14636:3;14627:6;14616:9;14612:22;14595:45;:::i;:::-;14589:3;14582:5;14578:15;14571:70;;13795:852;;;;:::o;14652:111::-;14737:1;14730:5;14727:12;14717:40;;14753:1;14750;14743:12;14768:154;14846:20;;14875:41;14846:20;14875:41;:::i;14927:183::-;14987:4;-1:-1:-1;;;;;15012:6:193;15009:30;15006:56;;;15042:18;;:::i;:::-;-1:-1:-1;15087:1:193;15083:14;15099:4;15079:25;;14927:183::o;15115:737::-;15169:5;15222:3;15215:4;15207:6;15203:17;15199:27;15189:55;;15240:1;15237;15230:12;15189:55;15276:6;15263:20;15302:4;15326:60;15342:43;15382:2;15342:43;:::i;:::-;15326:60;:::i;:::-;15420:15;;;15506:1;15502:10;;;;15490:23;;15486:32;;;15451:12;;;;15530:15;;;15527:35;;;15558:1;15555;15548:12;15527:35;15594:2;15586:6;15582:15;15606:217;15622:6;15617:3;15614:15;15606:217;;;15702:3;15689:17;15719:31;15744:5;15719:31;:::i;:::-;15763:18;;15801:12;;;;15639;;15606:217;;;-1:-1:-1;15841:5:193;15115:737;-1:-1:-1;;;;;;15115:737:193:o;15857:662::-;15911:5;15964:3;15957:4;15949:6;15945:17;15941:27;15931:55;;15982:1;15979;15972:12;15931:55;16018:6;16005:20;16044:4;16068:60;16084:43;16124:2;16084:43;:::i;16068:60::-;16162:15;;;16248:1;16244:10;;;;16232:23;;16228:32;;;16193:12;;;;16272:15;;;16269:35;;;16300:1;16297;16290:12;16269:35;16336:2;16328:6;16324:15;16348:142;16364:6;16359:3;16356:15;16348:142;;;16430:17;;16418:30;;16468:12;;;;16381;;16348:142;;16524:1056;16581:5;16629:4;16617:9;16612:3;16608:19;16604:30;16601:50;;;16647:1;16644;16637:12;16601:50;16669:22;;:::i;:::-;16660:31;;16714:39;16743:9;16714:39;:::i;:::-;16707:5;16700:54;16814:2;16803:9;16799:18;16786:32;16781:2;16774:5;16770:14;16763:56;16870:2;16859:9;16855:18;16842:32;-1:-1:-1;;;;;16934:2:193;16926:6;16923:14;16920:34;;;16950:1;16947;16940:12;16920:34;16986:57;17039:3;17030:6;17019:9;17015:22;16986:57;:::i;:::-;16981:2;16974:5;16970:14;16963:81;17097:2;17086:9;17082:18;17069:32;17053:48;;17126:2;17116:8;17113:16;17110:36;;;17142:1;17139;17132:12;17110:36;17178:59;17233:3;17222:8;17211:9;17207:24;17178:59;:::i;:::-;17173:2;17166:5;17162:14;17155:83;17291:3;17280:9;17276:19;17263:33;17247:49;;17321:2;17311:8;17308:16;17305:36;;;17337:1;17334;17327:12;17305:36;;17374:59;17429:3;17418:8;17407:9;17403:24;17374:59;:::i;:::-;17368:3;17361:5;17357:15;17350:84;;17495:3;17484:9;17480:19;17467:33;17461:3;17454:5;17450:15;17443:58;17534:39;17568:3;17557:9;17553:19;17534:39;:::i;:::-;17528:3;17521:5;17517:15;17510:64;16524:1056;;;;:::o;17585:1059::-;17643:5;17691:4;17679:9;17674:3;17670:19;17666:30;17663:50;;;17709:1;17706;17699:12;17663:50;17731:22;;:::i;:::-;17722:31;;17776:29;17795:9;17776:29;:::i;:::-;17769:5;17762:44;17838:38;17872:2;17861:9;17857:18;17838:38;:::i;:::-;17833:2;17826:5;17822:14;17815:62;17909:38;17943:2;17932:9;17928:18;17909:38;:::i;:::-;17904:2;17897:5;17893:14;17886:62;17999:2;17988:9;17984:18;17971:32;-1:-1:-1;;;;;18063:2:193;18055:6;18052:14;18049:34;;;18079:1;18076;18069:12;18049:34;18115:57;18168:3;18159:6;18148:9;18144:22;18115:57;:::i;:::-;18110:2;18103:5;18099:14;18092:81;18226:3;18215:9;18211:19;18198:33;18182:49;;18256:2;18246:8;18243:16;18240:36;;;18272:1;18269;18262:12;18240:36;18309:59;18364:3;18353:8;18342:9;18338:24;18309:59;:::i;:::-;18303:3;18296:5;18292:15;18285:84;18422:3;18411:9;18407:19;18394:33;18378:49;;18452:2;18442:8;18439:16;18436:36;;;18468:1;18465;18458:12;18436:36;;18505:59;18560:3;18549:8;18538:9;18534:24;18505:59;:::i;:::-;18499:3;18492:5;18488:15;18481:84;;18598:39;18632:3;18621:9;18617:19;18598:39;:::i;18649:565::-;18764:6;18772;18780;18833:2;18821:9;18812:7;18808:23;18804:32;18801:52;;;18849:1;18846;18839:12;18801:52;18889:9;18876:23;-1:-1:-1;;;;;18914:6:193;18911:30;18908:50;;;18954:1;18951;18944:12;18908:50;18977:62;19031:7;19022:6;19011:9;19007:22;18977:62;:::i;19508:127::-;19569:10;19564:3;19560:20;19557:1;19550:31;19600:4;19597:1;19590:15;19624:4;19621:1;19614:15;19640:136;19675:3;-1:-1:-1;;;19696:22:193;;19693:48;;19721:18;;:::i;:::-;-1:-1:-1;19761:1:193;19757:13;;19640:136::o;20310:127::-;20371:10;20366:3;20362:20;20359:1;20352:31;20402:4;20399:1;20392:15;20426:4;20423:1;20416:15;20442:117;20527:1;20520:5;20517:12;20507:46;;20533:18;;:::i;20564:139::-;20644:1;20637:5;20634:12;20624:46;;20650:18;;:::i;:::-;20679;;20564:139::o;20708:250::-;20793:1;20803:113;20817:6;20814:1;20811:13;20803:113;;;20893:11;;;20887:18;20874:11;;;20867:39;20839:2;20832:10;20803:113;;;-1:-1:-1;;20950:1:193;20932:16;;20925:27;20708:250::o;20963:270::-;21004:3;21042:5;21036:12;21069:6;21064:3;21057:19;21085:76;21154:6;21147:4;21142:3;21138:14;21131:4;21124:5;21120:16;21085:76;:::i;:::-;21215:2;21194:15;-1:-1:-1;;21190:29:193;21181:39;;;;21222:4;21177:50;;20963:270;-1:-1:-1;;20963:270:193:o;21238:1005::-;21425:2;21414:9;21407:21;21388:4;21453:6;21447:13;21469:38;21504:2;21469:38;:::i;:::-;21543:2;21538;21527:9;21523:18;21516:30;;21593:2;21585:6;21581:15;21575:22;21606:58;21660:2;21649:9;21645:18;21631:12;21606:58;:::i;:::-;;21745:1;21741;21736:3;21732:11;21728:19;21722:2;21714:6;21710:15;21704:22;21700:48;21695:2;21684:9;21680:18;21673:76;21804:2;21796:6;21792:15;21786:22;21780:3;21769:9;21765:19;21758:51;21864:3;21856:6;21852:16;21846:23;21840:3;21829:9;21825:19;21818:52;21919:3;21911:6;21907:16;21901:23;21933:55;21983:3;21972:9;21968:19;21952:14;-1:-1:-1;;;;;1892:31:193;1880:44;;1826:104;21933:55;;22043:3;22035:6;22031:16;22025:23;22019:3;22008:9;22004:19;21997:52;22098:3;22090:6;22086:16;22080:23;22122:6;22164:2;22159;22148:9;22144:18;22137:30;;22184:53;22232:3;22221:9;22217:19;22201:14;22184:53;:::i;22248:184::-;22318:6;22371:2;22359:9;22350:7;22346:23;22342:32;22339:52;;;22387:1;22384;22377:12;22339:52;-1:-1:-1;22410:16:193;;22248:184;-1:-1:-1;22248:184:193:o;22437:128::-;22504:9;;;22525:11;;;22522:37;;;22539:18;;:::i;22570:274::-;-1:-1:-1;;;;;22762:32:193;;;;22744:51;;22826:2;22811:18;;22804:34;22732:2;22717:18;;22570:274::o;22849:118::-;22935:5;22928:13;22921:21;22914:5;22911:32;22901:60;;22957:1;22954;22947:12;22972:245;23039:6;23092:2;23080:9;23071:7;23067:23;23063:32;23060:52;;;23108:1;23105;23098:12;23060:52;23140:9;23134:16;23159:28;23181:5;23159:28;:::i;23222:565::-;23337:6;23345;23353;23406:2;23394:9;23385:7;23381:23;23377:32;23374:52;;;23422:1;23419;23412:12;23374:52;23462:9;23449:23;-1:-1:-1;;;;;23487:6:193;23484:30;23481:50;;;23527:1;23524;23517:12;23481:50;23550:62;23604:7;23595:6;23584:9;23580:22;23550:62;:::i;:::-;23540:72;;;23662:2;23651:9;23647:18;23634:32;23675:31;23700:5;23675:31;:::i;:::-;23222:565;;23725:5;;-1:-1:-1;;;23777:2:193;23762:18;;;;23749:32;;23222:565::o;23792:329::-;23889:4;23947:11;23934:25;24041:3;24037:8;24026;24010:14;24006:29;24002:44;23982:18;23978:69;23968:97;;24061:1;24058;24051:12;23968:97;24082:33;;;;;23792:329;-1:-1:-1;;23792:329:193:o;24126:206::-;24199:6;24252:2;24240:9;24231:7;24227:23;24223:32;24220:52;;;24268:1;24265;24258:12;24220:52;24291:35;24316:9;24291:35;:::i;24337:247::-;24396:6;24449:2;24437:9;24428:7;24424:23;24420:32;24417:52;;;24465:1;24462;24455:12;24417:52;24504:9;24491:23;24523:31;24548:5;24523:31;:::i;24589:156::-;24655:20;;24715:4;24704:16;;24694:27;;24684:55;;24735:1;24732;24725:12;24750:768;24840:6;24893:3;24881:9;24872:7;24868:23;24864:33;24861:53;;;24910:1;24907;24900:12;24861:53;24936:22;;:::i;:::-;24995:9;24982:23;25014:43;25049:7;25014:43;:::i;:::-;25080:7;25073:5;25066:22;;25148:2;25137:9;25133:18;25120:32;25115:2;25108:5;25104:14;25097:56;25213:2;25202:9;25198:18;25185:32;25180:2;25173:5;25169:14;25162:56;25278:2;25267:9;25263:18;25250:32;25245:2;25238:5;25234:14;25227:56;25316:37;25348:3;25337:9;25333:19;25316:37;:::i;:::-;25310:3;25303:5;25299:15;25292:62;25415:3;25404:9;25400:19;25387:33;25381:3;25374:5;25370:15;25363:58;25482:3;25471:9;25467:19;25454:33;25448:3;25441:5;25437:15;25430:58;25507:5;25497:15;;;24750:768;;;;:::o;25523:385::-;-1:-1:-1;;;;;25775:15:193;;;25757:34;;25827:15;;;;25822:2;25807:18;;25800:43;25886:14;;25879:22;25874:2;25859:18;;25852:50;25707:2;25692:18;;25523:385::o;25913:296::-;25983:5;26042:3;26029:17;26128:3;26124:8;26113;26097:14;26093:29;26089:44;26069:18;26065:69;26055:97;;26148:1;26145;26138:12;26055:97;26170:33;;;;25913:296;-1:-1:-1;;25913:296:193:o;26214:500::-;26272:5;26279:6;26339:3;26326:17;26425:2;26421:7;26410:8;26394:14;26390:29;26386:43;26366:18;26362:68;26352:96;;26444:1;26441;26434:12;26352:96;26472:33;;26576:4;26563:18;;;-1:-1:-1;26524:21:193;;-1:-1:-1;;;;;;26593:30:193;;26590:50;;;26636:1;26633;26626:12;26590:50;26683:6;26667:14;26663:27;26656:5;26652:39;26649:59;;;26704:1;26701;26694:12;26719:266;26807:6;26802:3;26795:19;26859:6;26852:5;26845:4;26840:3;26836:14;26823:43;-1:-1:-1;26911:1:193;26886:16;;;26904:4;26882:27;;;26875:38;;;;26967:2;26946:15;;;-1:-1:-1;;26942:29:193;26933:39;;;26929:50;;26719:266::o;26990:1131::-;27052:3;27080:6;27123:5;27110:19;27138:43;27173:7;27138:43;:::i;:::-;27190;27225:7;27190:43;:::i;:::-;27242:20;;27291:42;27327:4;27316:16;;27291:42;:::i;:::-;27342:54;27390:4;27385:3;27381:14;27367:12;27342:54;:::i;:::-;;27444:4;27437:5;27433:16;27420:30;27459:33;27484:7;27459:33;:::i;:::-;-1:-1:-1;;;;;27524:33:193;27517:4;27508:14;;27501:57;27614:4;27603:16;;;27590:30;27574:14;;;27567:54;27677:4;27666:16;;;27653:30;27637:14;;;27630:54;27545:3;27721:16;;27708:30;27747:33;27708:30;27747:33;:::i;:::-;-1:-1:-1;;;;;1892:31:193;27826:4;27817:14;;1880:44;27888:4;27877:16;;;27864:30;27848:14;;;27841:54;27940:55;27989:4;27978:16;;27881:5;27940:55;:::i;:::-;28027:2;28020:4;28015:3;28011:14;28004:26;28046:69;28111:2;28106:3;28102:12;28088;28072:14;28046:69;:::i;28126:296::-;28196:5;28255:3;28242:17;28341:3;28337:8;28326;28310:14;28306:29;28302:44;28282:18;28278:69;28268:97;;28361:1;28358;28351:12;28427:143;28511:1;28504:5;28501:12;28491:46;;28517:18;;:::i;28575:520::-;28645:5;28652:6;28712:3;28699:17;28798:2;28794:7;28783:8;28767:14;28763:29;28759:43;28739:18;28735:68;28725:96;;28817:1;28814;28807:12;28725:96;28845:33;;28949:4;28936:18;;;-1:-1:-1;28897:21:193;;-1:-1:-1;;;;;;28966:30:193;;28963:50;;;29009:1;29006;28999:12;28963:50;29063:6;29060:1;29056:14;29040;29036:35;29029:5;29025:47;29022:67;;;29085:1;29082;29075:12;29100:311;29188:19;;;29170:3;-1:-1:-1;;;;;29219:31:193;;29216:51;;;29263:1;29260;29253:12;29216:51;29299:6;29296:1;29292:14;29351:8;29344:5;29337:4;29332:3;29328:14;29315:45;29380:18;;;;29400:4;29376:29;;29100:311;-1:-1:-1;;;29100:311:193:o;29416:1672::-;29478:3;29517:4;29512:3;29508:14;29559:5;29546:19;29574:43;29609:7;29574:43;:::i;:::-;29626:42;29664:3;29655:7;29626:42;:::i;:::-;;29687:4;29745:2;29738:5;29734:14;29721:28;29716:2;29711:3;29707:12;29700:50;29793:67;29854:4;29847:5;29843:16;29836:5;29793:67;:::i;:::-;29892:4;29885;29876:14;;29869:28;29932:26;;;;30012:12;30042:1;;29985:3;29976:13;;30052:295;30066:12;30063:1;30060:19;30052:295;;;30149:6;30136:20;30169:33;30194:7;30169:33;:::i;:::-;-1:-1:-1;;;;;30229:33:193;30215:48;;30322:15;;;;30259:1;30087:9;;;;;30285:14;;30052:295;;;30394:67;30455:4;30448:5;30444:16;30437:5;30394:67;:::i;:::-;30356:105;;;;30504:3;30497:5;30493:15;30486:4;30481:3;30477:14;30470:39;30532:76;30602:5;30586:14;30570;30532:76;:::i;:::-;30518:90;;;;;;30655:67;30716:4;30709:5;30705:16;30698:5;30655:67;:::i;:::-;30766:3;30758:6;30754:16;30747:4;30742:3;30738:14;30731:40;30794:77;30864:6;30848:14;30832;30794:77;:::i;:::-;30780:91;;;;30927:4;30920:5;30916:16;30903:30;30896:4;30891:3;30887:14;30880:54;30965:36;30995:4;30988:5;30984:16;30965:36;:::i;:::-;-1:-1:-1;;;;;1892:31:193;;31054:4;31045:14;;1880:44;31010:50;-1:-1:-1;31076:6:193;29416:1672;-1:-1:-1;;;29416:1672:193:o;31093:1356::-;31156:3;31202:5;31189:19;31217:33;31242:7;31217:33;:::i;:::-;-1:-1:-1;;;;;31309:16:193;;;31297:29;;31374:4;31363:16;;31350:30;;31389:33;31350:30;31389:33;:::i;:::-;31454:16;;;31447:4;31438:14;;31431:40;31519:4;31508:16;;31495:30;;31534:33;31495:30;31534:33;:::i;:::-;31599:16;31592:4;31583:14;;31576:40;31645:67;31706:4;31695:16;;31699:5;31645:67;:::i;:::-;31744:4;31737;31732:3;31728:14;31721:28;31770:67;31831:4;31826:3;31822:14;31808:12;31770:67;:::i;:::-;31758:79;;31868:67;31929:4;31922:5;31918:16;31911:5;31868:67;:::i;:::-;31977:3;31971:4;31967:14;31960:4;31955:3;31951:14;31944:38;32005:59;32059:4;32043:14;32005:59;:::i;:::-;31991:73;;;32095:67;32156:4;32149:5;32145:16;32138:5;32095:67;:::i;:::-;32206:3;32198:6;32194:16;32187:4;32182:3;32178:14;32171:40;32234:61;32288:6;32272:14;32234:61;:::i;:::-;32220:75;;;32326:36;32356:4;32349:5;32345:16;32326:36;:::i;32454:451::-;32701:2;32690:9;32683:21;32664:4;32721:66;32783:2;32772:9;32768:18;32760:6;32721:66;:::i;:::-;-1:-1:-1;;;;;32823:32:193;;;;32818:2;32803:18;;32796:60;-1:-1:-1;32887:2:193;32872:18;32865:34;32713:74;32454:451;-1:-1:-1;32454:451:193:o;32910:519::-;-1:-1:-1;;;;;33210:15:193;;;33192:34;;33262:15;;33257:2;33242:18;;33235:43;33309:2;33294:18;;33287:34;;;33357:3;33352:2;33337:18;;33330:31;;;33135:4;;33378:45;;33403:19;;33395:6;33378:45;:::i;33972:451::-;34219:2;34208:9;34201:21;34182:4;34239:66;34301:2;34290:9;34286:18;34278:6;34239:66;:::i;:::-;34336:2;34321:18;;34314:34;;;;-1:-1:-1;;;;;;34384:32:193;;;;34379:2;34364:18;;;34357:60;34231:74;33972:451;-1:-1:-1;33972:451:193:o;34428:415::-;34690:1;34686;34681:3;34677:11;34673:19;34665:6;34661:32;34650:9;34643:51;34730:6;34725:2;34714:9;34710:18;34703:34;34773:2;34768;34757:9;34753:18;34746:30;34624:4;34793:44;34833:2;34822:9;34818:18;34810:6;34793:44;:::i;34848:127::-;34909:10;34904:3;34900:20;34897:1;34890:31;34940:4;34937:1;34930:15;34964:4;34961:1;34954:15;34980:241;35036:6;35089:2;35077:9;35068:7;35064:23;35060:32;35057:52;;;35105:1;35102;35095:12;35057:52;35144:9;35131:23;35163:28;35185:5;35163:28;:::i;35226:521::-;35303:4;35309:6;35369:11;35356:25;35463:2;35459:7;35448:8;35432:14;35428:29;35424:43;35404:18;35400:68;35390:96;;35482:1;35479;35472:12;35390:96;35509:33;;35561:20;;;-1:-1:-1;;;;;;35593:30:193;;35590:50;;;35636:1;35633;35626:12;35590:50;35669:4;35657:17;;-1:-1:-1;35700:14:193;35696:27;;;35686:38;;35683:58;;;35737:1;35734;35727:12;35752:271;35935:6;35927;35922:3;35909:33;35891:3;35961:16;;35986:13;;;35961:16;35752:271;-1:-1:-1;35752:271:193:o;36028:410::-;36115:6;36123;36131;36184:2;36172:9;36163:7;36159:23;36155:32;36152:52;;;36200:1;36197;36190:12;36152:52;36232:9;36226:16;-1:-1:-1;;;;;36275:5:193;36271:30;36264:5;36261:41;36251:69;;36316:1;36313;36306:12;36251:69;36384:2;36369:18;;36363:25;36428:2;36413:18;;;36407:25;36339:5;;36363:25;;-1:-1:-1;36407:25:193;36028:410;-1:-1:-1;;;36028:410:193:o;36443:375::-;36645:25;;;-1:-1:-1;;;;;36744:15:193;;;36739:2;36724:18;;36717:43;36796:15;36791:2;36776:18;;36769:43;36633:2;36618:18;;36443:375::o;36823:287::-;36952:3;36990:6;36984:13;37006:66;37065:6;37060:3;37053:4;37045:6;37041:17;37006:66;:::i;37115:125::-;37180:9;;;37201:10;;;37198:36;;;37214:18;;:::i;37245:138::-;37324:13;;37346:31;37324:13;37346:31;:::i;37388:251::-;37458:6;37511:2;37499:9;37490:7;37486:23;37482:32;37479:52;;;37527:1;37524;37517:12;37479:52;37559:9;37553:16;37578:31;37603:5;37578:31;:::i;37644:435::-;37697:3;37735:5;37729:12;37762:6;37757:3;37750:19;37788:4;37817:2;37812:3;37808:12;37801:19;;37854:2;37847:5;37843:14;37875:1;37885:169;37899:6;37896:1;37893:13;37885:169;;;37960:13;;37948:26;;37994:12;;;;38029:15;;;;37921:1;37914:9;37885:169;;;-1:-1:-1;38070:3:193;;37644:435;-1:-1:-1;;;;;37644:435:193:o;38084:1269::-;38137:3;38176:4;38171:3;38167:14;38190:47;38233:3;38225:5;38219:12;38190:47;:::i;:::-;38256:4;38307:2;38300:5;38296:14;38290:21;38285:2;38280:3;38276:12;38269:43;38358:4;38351:5;38347:16;38341:23;38396:4;38389;38384:3;38380:14;38373:28;38423:4;38456:12;38450:19;38491:6;38485:4;38478:20;38525:3;38520;38516:13;38507:22;;38570:2;38556:12;38552:21;38538:35;;38591:1;38582:10;;38601:201;38615:6;38612:1;38609:13;38601:201;;;38682:13;;-1:-1:-1;;;;;38678:39:193;38664:54;;38777:15;;;;38714:1;38630:9;;;;;38740:14;;;;38601:201;;;38605:3;38850:4;38843:5;38839:16;38833:23;38811:45;;38899:3;38892:5;38888:15;38881:4;38876:3;38872:14;38865:39;38927:51;38972:5;38956:14;38927:51;:::i;:::-;38913:65;;;;;39026:4;39019:5;39015:16;39009:23;39076:3;39068:6;39064:16;39057:4;39052:3;39048:14;39041:40;39104:52;39149:6;39133:14;39104:52;:::i;:::-;39090:66;;;39205:4;39198:5;39194:16;39188:23;39181:4;39176:3;39172:14;39165:47;39260:4;39253:5;39249:16;39243:23;39275:50;39319:4;39314:3;39310:14;39294;-1:-1:-1;;;;;1892:31:193;1880:44;;1826:104;39358:612;39657:3;39646:9;39639:22;39620:4;39678:57;39730:3;39719:9;39715:19;39707:6;39678:57;:::i;:::-;-1:-1:-1;;;;;39809:15:193;;;39804:2;39789:18;;39782:43;39861:15;;;;39856:2;39841:18;;39834:43;39908:2;39893:18;;39886:34;;;;39951:3;39936:19;;;39929:35;39670:65;39358:612;-1:-1:-1;;39358:612:193:o;39975:158::-;40064:13;;40086:41;40064:13;40086:41;:::i;40138:734::-;40203:5;40256:3;40249:4;40241:6;40237:17;40233:27;40223:55;;40274:1;40271;40264:12;40223:55;40303:6;40297:13;40329:4;40353:60;40369:43;40409:2;40369:43;:::i;40353:60::-;40447:15;;;40533:1;40529:10;;;;40517:23;;40513:32;;;40478:12;;;;40557:15;;;40554:35;;;40585:1;40582;40575:12;40554:35;40621:2;40613:6;40609:15;40633:210;40649:6;40644:3;40641:15;40633:210;;;40722:3;40716:10;40739:31;40764:5;40739:31;:::i;:::-;40783:18;;40821:12;;;;40666;;40633:210;;40877:659;40942:5;40995:3;40988:4;40980:6;40976:17;40972:27;40962:55;;41013:1;41010;41003:12;40962:55;41042:6;41036:13;41068:4;41092:60;41108:43;41148:2;41108:43;:::i;41092:60::-;41186:15;;;41272:1;41268:10;;;;41256:23;;41252:32;;;41217:12;;;;41296:15;;;41293:35;;;41324:1;41321;41314:12;41293:35;41360:2;41352:6;41348:15;41372:135;41388:6;41383:3;41380:15;41372:135;;;41454:10;;41442:23;;41485:12;;;;41405;;41372:135;;41541:1276;41640:6;41693:2;41681:9;41672:7;41668:23;41664:32;41661:52;;;41709:1;41706;41699:12;41661:52;41742:9;41736:16;-1:-1:-1;;;;;41812:2:193;41804:6;41801:14;41798:34;;;41828:1;41825;41818:12;41798:34;41851:22;;;;41907:4;41889:16;;;41885:27;41882:47;;;41925:1;41922;41915:12;41882:47;41951:22;;:::i;:::-;41996:43;42036:2;41996:43;:::i;:::-;41989:5;41982:58;42086:2;42082;42078:11;42072:18;42067:2;42060:5;42056:14;42049:42;42130:2;42126;42122:11;42116:18;42159:2;42149:8;42146:16;42143:36;;;42175:1;42172;42165:12;42143:36;42211:67;42270:7;42259:8;42255:2;42251:17;42211:67;:::i;:::-;42206:2;42199:5;42195:14;42188:91;;42318:2;42314;42310:11;42304:18;42347:2;42337:8;42334:16;42331:36;;;42363:1;42360;42353:12;42331:36;42399:67;42458:7;42447:8;42443:2;42439:17;42399:67;:::i;:::-;42394:2;42387:5;42383:14;42376:91;;42506:3;42502:2;42498:12;42492:19;42536:2;42526:8;42523:16;42520:36;;;42552:1;42549;42542:12;42520:36;42589:67;42648:7;42637:8;42633:2;42629:17;42589:67;:::i;:::-;42583:3;42576:5;42572:15;42565:92;;42704:3;42700:2;42696:12;42690:19;42684:3;42677:5;42673:15;42666:44;42743:43;42781:3;42777:2;42773:12;42743:43;:::i;:::-;42737:3;42726:15;;42719:68;42730:5;41541:1276;-1:-1:-1;;;;;41541:1276:193:o;42822:269::-;43009:2;42998:9;42991:21;42972:4;43029:56;43081:2;43070:9;43066:18;43058:6;43029:56;:::i;43898:830::-;44252:4;44281:3;44293:60;44343:9;44334:6;44328:13;43796:12;;-1:-1:-1;;;;;43792:38:193;43780:51;;43880:4;43869:16;;;43863:23;43847:14;;43840:47;43710:183;44293:60;44409:4;44401:6;44397:17;44391:24;44384:4;44373:9;44369:20;44362:54;44472:4;44464:6;44460:17;44454:24;44447:4;44436:9;44432:20;44425:54;44488:63;44546:3;44535:9;44531:19;44523:6;43796:12;;-1:-1:-1;;;;;43792:38:193;43780:51;;43880:4;43869:16;;;43863:23;43847:14;;43840:47;43710:183;44488:63;-1:-1:-1;;;;;44588:32:193;;44582:3;44567:19;;44560:61;44652:3;44637:19;;44630:31;;;44678:44;44703:18;;;44695:6;44678:44;:::i;44733:280::-;44922:2;44911:9;44904:21;44885:4;44942:65;45003:2;44992:9;44988:18;44980:6;44942:65;:::i;45018:1094::-;-1:-1:-1;;;;;45349:32:193;;45331:51;;45290:4;45319:3;45404:20;;45433:41;45404:20;45433:41;:::i;:::-;45483;45518:5;45483:41;:::i;:::-;45560:5;45555:2;45544:9;45540:18;45533:33;;45627:2;45619:6;45615:15;45602:29;45597:2;45586:9;45582:18;45575:57;45693:2;45685:6;45681:15;45668:29;45663:2;45652:9;45648:18;45641:57;45760:2;45752:6;45748:15;45735:29;45729:3;45718:9;45714:19;45707:58;45842:4;45806:34;45835:3;45827:6;45823:16;45806:34;:::i;:::-;45802:45;45796:3;45785:9;45781:19;45774:74;45910:3;45902:6;45898:16;45885:30;45879:3;45868:9;45864:19;45857:59;45978:3;45970:6;45966:16;45953:30;45947:3;45936:9;45932:19;45925:59;46021:2;46015:3;46004:9;46000:19;45993:31;46041:65;46102:2;46091:9;46087:18;46079:6;46041:65;:::i;49318:219::-;49467:2;49456:9;49449:21;49430:4;49487:44;49527:2;49516:9;49512:18;49504:6;49487:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "51818": [
        {
          "start": 728,
          "length": 32
        },
        {
          "start": 1314,
          "length": 32
        },
        {
          "start": 1593,
          "length": 32
        },
        {
          "start": 5270,
          "length": 32
        },
        {
          "start": 5540,
          "length": 32
        },
        {
          "start": 7266,
          "length": 32
        },
        {
          "start": 7519,
          "length": 32
        },
        {
          "start": 10004,
          "length": 32
        },
        {
          "start": 10362,
          "length": 32
        },
        {
          "start": 10650,
          "length": 32
        }
      ],
      "51822": [
        {
          "start": 825,
          "length": 32
        },
        {
          "start": 1155,
          "length": 32
        },
        {
          "start": 2379,
          "length": 32
        },
        {
          "start": 3057,
          "length": 32
        },
        {
          "start": 4133,
          "length": 32
        },
        {
          "start": 6301,
          "length": 32
        }
      ],
      "51826": [
        {
          "start": 767,
          "length": 32
        },
        {
          "start": 1895,
          "length": 32
        },
        {
          "start": 3004,
          "length": 32
        },
        {
          "start": 3356,
          "length": 32
        },
        {
          "start": 4209,
          "length": 32
        },
        {
          "start": 10800,
          "length": 32
        },
        {
          "start": 11522,
          "length": 32
        },
        {
          "start": 11612,
          "length": 32
        }
      ],
      "51830": [
        {
          "start": 342,
          "length": 32
        },
        {
          "start": 1940,
          "length": 32
        },
        {
          "start": 2080,
          "length": 32
        },
        {
          "start": 2870,
          "length": 32
        },
        {
          "start": 10051,
          "length": 32
        },
        {
          "start": 10202,
          "length": 32
        },
        {
          "start": 10411,
          "length": 32
        },
        {
          "start": 10523,
          "length": 32
        },
        {
          "start": 10699,
          "length": 32
        },
        {
          "start": 11657,
          "length": 32
        },
        {
          "start": 11790,
          "length": 32
        }
      ],
      "51833": [
        {
          "start": 592,
          "length": 32
        },
        {
          "start": 946,
          "length": 32
        },
        {
          "start": 3226,
          "length": 32
        },
        {
          "start": 3446,
          "length": 32
        },
        {
          "start": 3725,
          "length": 32
        },
        {
          "start": 3866,
          "length": 32
        },
        {
          "start": 3915,
          "length": 32
        },
        {
          "start": 4012,
          "length": 32
        },
        {
          "start": 4176,
          "length": 32
        },
        {
          "start": 4437,
          "length": 32
        },
        {
          "start": 4510,
          "length": 32
        },
        {
          "start": 4750,
          "length": 32
        },
        {
          "start": 4965,
          "length": 32
        },
        {
          "start": 5172,
          "length": 32
        },
        {
          "start": 5678,
          "length": 32
        },
        {
          "start": 5808,
          "length": 32
        },
        {
          "start": 6180,
          "length": 32
        },
        {
          "start": 6344,
          "length": 32
        },
        {
          "start": 6571,
          "length": 32
        },
        {
          "start": 6690,
          "length": 32
        },
        {
          "start": 7168,
          "length": 32
        }
      ],
      "51837": [
        {
          "start": 689,
          "length": 32
        },
        {
          "start": 1708,
          "length": 32
        },
        {
          "start": 2220,
          "length": 32
        },
        {
          "start": 2495,
          "length": 32
        },
        {
          "start": 2588,
          "length": 32
        },
        {
          "start": 10910,
          "length": 32
        },
        {
          "start": 11066,
          "length": 32
        },
        {
          "start": 11893,
          "length": 32
        }
      ],
      "51841": [
        {
          "start": 883,
          "length": 32
        },
        {
          "start": 8898,
          "length": 32
        },
        {
          "start": 9032,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CALLBACK_SUCCESS()": "8237e538",
    "CALLBACK_SUCCESS_CREDIT()": "0f13be2a",
    "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "56415a90",
    "cdm()": "e2dfb317",
    "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),uint256,address)": "ee18c320",
    "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "0567d4b1",
    "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "4ad4d4ad",
    "flashlender()": "ee58918a",
    "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "24ac0df5",
    "joinAction()": "f8e63c52",
    "minter()": "07546172",
    "multisend(address[],bytes[],bool[])": "f38584e0",
    "onCreditFlashLoan(address,uint256,uint256,bytes)": "16d8f165",
    "onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b",
    "permit2()": "12261ee7",
    "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "faa99405",
    "self()": "7104ddb2",
    "stablecoin()": "e9cbd822",
    "swapAction()": "a888828b",
    "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "6c747057",
    "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "96c2c408"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flashlender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapActions_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"joinAction_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Action__revertBytes_emptyRevertBytes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toInt256_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__borrow_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidResidualRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__delegateViaStablecoin_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__deposit_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onCreditFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__repay_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS_CREDIT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cdm\",\"outputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum JoinProtocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"assetsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct JoinParams\",\"name\":\"auxJoin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"auxJoinToken\",\"type\":\"address\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"subCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"residualRecipient\",\"type\":\"address\"}],\"name\":\"decreaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"depositAndBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashlender\",\"outputs\":[{\"internalType\":\"contract IFlashlender\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum JoinProtocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"assetsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct JoinParams\",\"name\":\"auxJoin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"auxJoinToken\",\"type\":\"address\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"upFrontToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"upFrontAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"increaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joinAction\",\"outputs\":[{\"internalType\":\"contract JoinAction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"contract IMinter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"bool[]\",\"name\":\"delegateCall\",\"type\":\"bool[]\"}],\"name\":\"multisend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onCreditFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"self\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IStablecoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAction\",\"outputs\":[{\"internalType\":\"contract SwapAction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"withdrawAndRepay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"creditParams\":\"The borrow parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),uint256,address)\":{\"params\":{\"leverParams\":\"The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan\",\"residualRecipient\":\"Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to\",\"subCollateral\":\"The amount of collateral to withdraw from the position [wad]\"}},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralizer\":\"The address to transfer `upFrontToken` from\",\"leverParams\":\"The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token\",\"permitParams\":\"The permit parameters for the `collateralizer` to transfer `upFrontToken`\",\"upFrontAmount\":\"The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]\",\"upFrontToken\":\"The token to transfer up front to the LeverAction contract\"}},\"multisend(address[],bytes[],bool[])\":{\"params\":{\"data\":\"The encoded data to call each address with\",\"delegateCall\":\"Whether or not to use delegatecall or call\",\"targets\":\"The addresses to call\"}},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the credit flash loan\"}},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the flash loan\"}},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}}},\"title\":\"PositionAction4626\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)\"},\"cdm()\":{\"notice\":\"The CDM contract\"},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),uint256,address)\":{\"notice\":\"Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral\"},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral to a CDP Vault\"},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral and debt to a CDP Vault\"},\"flashlender()\":{\"notice\":\"The flashloan contract\"},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Increase the leverage of a position by taking out a flash loan and buying Stablecoin\"},\"joinAction()\":{\"notice\":\"The JoinAction contract\"},\"minter()\":{\"notice\":\"Stablecoin mint\"},\"multisend(address[],bytes[],bool[])\":{\"notice\":\"Allows for multiple calls to be made to cover use cases not covered by the other functions\"},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the credit flash loan taken out in decreaseLever\"},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the flash loan taken out in increaseLever\"},\"permit2()\":{\"notice\":\"Permit2\"},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)\"},\"self()\":{\"notice\":\"The address of this contract\"},\"stablecoin()\":{\"notice\":\"Stablecoin token\"},\"swapAction()\":{\"notice\":\"The SwapAction contract\"},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Removes collateral from a CDP Vault\"},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Removes collateral and debt from a CDP Vault\"}},\"notice\":\"Generic ERC4626 implementation of PositionAction base contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxy/PositionAction4626.sol\":\"PositionAction4626\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0xeb51c812325c4b4e6a68116241dde8c889ae3fd4a7aecd49adbd07660c1fe6e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7e6e9105a3c49eb9955790d2b0c28580ab280915d929656c89dcc29ce9a64c3\",\"dweb:/ipfs/QmVgZTPRgfGm7rbEYCx9AM3YyaHwyepqwbAgWfpkkASaTC\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d\",\"dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"src/CDM.sol\":{\"keccak256\":\"0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99\",\"dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L\"]},\"src/CDPVault.sol\":{\"keccak256\":\"0xf2f5dbf0b94224a4aed520fb1d1b09b377470827c6da8dba1760ac0ea4efa0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e97a36351d85c0c1c4ac44ec99e16b8b15e548db6272a1ef0ef1256800c38009\",\"dweb:/ipfs/QmNnxqR2xse22M741qAeXBDcsQkLbC5MzhmieLsan3Ehz5\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e\",\"dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT\"]},\"src/interfaces/IBuffer.sol\":{\"keccak256\":\"0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff\",\"dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/ICDPVault.sol\":{\"keccak256\":\"0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f\",\"dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE\"]},\"src/interfaces/ICDPVault_FactoryBase.sol\":{\"keccak256\":\"0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e\",\"dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD\"]},\"src/interfaces/IFlashlender.sol\":{\"keccak256\":\"0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2\",\"dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3\"]},\"src/interfaces/IInterestRateModel.sol\":{\"keccak256\":\"0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599\",\"dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA\"]},\"src/interfaces/IMinter.sol\":{\"keccak256\":\"0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54\",\"dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x23103163e03628c0e8291b368b27cf831c3e55ebe544745b833b6df9a9acada2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58cc66f58fca72fd73c240dca9501165e083d248ff085ee4dc6a7719c224926c\",\"dweb:/ipfs/QmWqhtXoXTfYTkAao3a3F34XVjFsyxVqPCf2StG6udS617\"]},\"src/interfaces/IPause.sol\":{\"keccak256\":\"0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec\",\"dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]},\"src/interfaces/IStablecoin.sol\":{\"keccak256\":\"0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461\",\"dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS\"]},\"src/proxy/BaseAction.sol\":{\"keccak256\":\"0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24\",\"dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR\"]},\"src/proxy/JoinAction.sol\":{\"keccak256\":\"0x8dc50914a95520b3bd9129ca1cb667715b7782128b7af245e52b7e80d6db0ee9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36eeaeb112521827df81950492ed891d5355277521a82dcb13cfad64e2895739\",\"dweb:/ipfs/QmZBViHYg4uXwYAxHiUHMLc3qp1vca3BUrwihGNGfjjV6i\"]},\"src/proxy/PositionAction.sol\":{\"keccak256\":\"0x3e91423182242e7ccbae872b1bd289f032ab4c89544425a0a65876a63e63c5f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2465546c51536a1d8193adfcfac59ea933cc3988df7da010705a73de5be2fb3b\",\"dweb:/ipfs/Qma43SD6BRB2VpE6EH9W4P3gMmWZNueWENrQhJQJrFURaX\"]},\"src/proxy/PositionAction4626.sol\":{\"keccak256\":\"0x19b3bc931bd278bab082a29986eaf4ef09a777b445a90aa91c0aa74848895fe4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a26ccf7960ec0824ae9420c8726c3efae300a1c33b445f5313b9539bf82ab8b\",\"dweb:/ipfs/QmVs5ATxzztzKpxGTXzeGaACYg5gNfjegNKRpwRUEozrX7\"]},\"src/proxy/SwapAction.sol\":{\"keccak256\":\"0xf3c446b763969f9cbe0cdbbba16140176bf75ada29da89dfb24d32dbe744ddce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84a857e66ba74ead46269034e1ce8c7320f500550240197c18c7415f15af3ce8\",\"dweb:/ipfs/QmYFoDhtFfxDKuSmCbrxqyZNkMGjLdG5ZPZJc7UEhzfJKT\"]},\"src/proxy/TransferAction.sol\":{\"keccak256\":\"0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756\",\"dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt\"]},\"src/utils/DoubleLinkedList.sol\":{\"keccak256\":\"0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb\",\"dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/utils/Pause.sol\":{\"keccak256\":\"0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1\",\"dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL\"]},\"src/utils/Permission.sol\":{\"keccak256\":\"0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb\",\"dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p\"]},\"src/vendor/IBalancerVault.sol\":{\"keccak256\":\"0xc4d7312f444bd3990ca3180052b6c01c5d10b817d6452df2f6de5da270ed6179\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://65faf1ee901a992c98e2f60e8f06ee26ed77ca54e71acd86d93334c7904131c1\",\"dweb:/ipfs/Qmf6iS7TNfRy9P392yTQTHHkk7ybJc9CCRabsTYzHaDAFr\"]},\"src/vendor/IUniswapV3Router.sol\":{\"keccak256\":\"0x5ab23c0c3f5571e77353ebf1b7d4dec9103504b728faa7530e04b84e5d233c03\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9a95e0a55b44b18deab9989f7bf4afed71d22d51dd96c42eeb1552a30d252de4\",\"dweb:/ipfs/QmSyZhFhvegYMncZSc18m8skqhzXiMisgg1K2K9V1t796Z\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flashlender_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "swapActions_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "joinAction_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Action__revertBytes_emptyRevertBytes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toInt256_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__borrow_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidResidualRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__deposit_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onCreditFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onlyDelegatecall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__repay_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS_CREDIT",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cdm",
          "outputs": [
            {
              "internalType": "contract ICDM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct JoinParams",
                  "name": "auxJoin",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum JoinProtocol",
                      "name": "protocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address[]",
                      "name": "assets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "assetsIn",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "maxAmountsIn",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minOut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "auxJoinToken",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "subCollateral",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "residualRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseLever"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndBorrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flashlender",
          "outputs": [
            {
              "internalType": "contract IFlashlender",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct JoinParams",
                  "name": "auxJoin",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum JoinProtocol",
                      "name": "protocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address[]",
                      "name": "assets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "assetsIn",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "maxAmountsIn",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minOut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "auxJoinToken",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "upFrontToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "upFrontAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseLever"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "joinAction",
          "outputs": [
            {
              "internalType": "contract JoinAction",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "contract IMinter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            },
            {
              "internalType": "bool[]",
              "name": "delegateCall",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multisend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCreditFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permit2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "self",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stablecoin",
          "outputs": [
            {
              "internalType": "contract IStablecoin",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapAction",
          "outputs": [
            {
              "internalType": "contract SwapAction",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAndRepay"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "creditParams": "The borrow parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),uint256,address)": {
            "params": {
              "leverParams": "The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan",
              "residualRecipient": "Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to",
              "subCollateral": "The amount of collateral to withdraw from the position [wad]"
            }
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralizer": "The address to transfer `upFrontToken` from",
              "leverParams": "The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token",
              "permitParams": "The permit parameters for the `collateralizer` to transfer `upFrontToken`",
              "upFrontAmount": "The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]",
              "upFrontToken": "The token to transfer up front to the LeverAction contract"
            }
          },
          "multisend(address[],bytes[],bool[])": {
            "params": {
              "data": "The encoded data to call each address with",
              "delegateCall": "Whether or not to use delegatecall or call",
              "targets": "The addresses to call"
            }
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the credit flash loan"
            }
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the flash loan"
            }
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)"
          },
          "cdm()": {
            "notice": "The CDM contract"
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),uint256,address)": {
            "notice": "Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral"
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral to a CDP Vault"
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral and debt to a CDP Vault"
          },
          "flashlender()": {
            "notice": "The flashloan contract"
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Increase the leverage of a position by taking out a flash loan and buying Stablecoin"
          },
          "joinAction()": {
            "notice": "The JoinAction contract"
          },
          "minter()": {
            "notice": "Stablecoin mint"
          },
          "multisend(address[],bytes[],bool[])": {
            "notice": "Allows for multiple calls to be made to cover use cases not covered by the other functions"
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "notice": "Callback function for the credit flash loan taken out in decreaseLever"
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "notice": "Callback function for the flash loan taken out in increaseLever"
          },
          "permit2()": {
            "notice": "Permit2"
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)"
          },
          "self()": {
            "notice": "The address of this contract"
          },
          "stablecoin()": {
            "notice": "Stablecoin token"
          },
          "swapAction()": {
            "notice": "The SwapAction contract"
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Removes collateral from a CDP Vault"
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Removes collateral and debt from a CDP Vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/proxy/PositionAction4626.sol": "PositionAction4626"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0xeb51c812325c4b4e6a68116241dde8c889ae3fd4a7aecd49adbd07660c1fe6e4",
        "urls": [
          "bzz-raw://d7e6e9105a3c49eb9955790d2b0c28580ab280915d929656c89dcc29ce9a64c3",
          "dweb:/ipfs/QmVgZTPRgfGm7rbEYCx9AM3YyaHwyepqwbAgWfpkkASaTC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319",
        "urls": [
          "bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d",
          "dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "src/CDM.sol": {
        "keccak256": "0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5",
        "urls": [
          "bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99",
          "dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L"
        ],
        "license": "MIT"
      },
      "src/CDPVault.sol": {
        "keccak256": "0xf2f5dbf0b94224a4aed520fb1d1b09b377470827c6da8dba1760ac0ea4efa0b4",
        "urls": [
          "bzz-raw://e97a36351d85c0c1c4ac44ec99e16b8b15e548db6272a1ef0ef1256800c38009",
          "dweb:/ipfs/QmNnxqR2xse22M741qAeXBDcsQkLbC5MzhmieLsan3Ehz5"
        ],
        "license": "MIT"
      },
      "src/InterestRateModel.sol": {
        "keccak256": "0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb",
        "urls": [
          "bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e",
          "dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBuffer.sol": {
        "keccak256": "0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f",
        "urls": [
          "bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff",
          "dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault.sol": {
        "keccak256": "0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d",
        "urls": [
          "bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f",
          "dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_FactoryBase.sol": {
        "keccak256": "0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717",
        "urls": [
          "bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e",
          "dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFlashlender.sol": {
        "keccak256": "0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d",
        "urls": [
          "bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2",
          "dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IInterestRateModel.sol": {
        "keccak256": "0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055",
        "urls": [
          "bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599",
          "dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IMinter.sol": {
        "keccak256": "0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3",
        "urls": [
          "bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54",
          "dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x23103163e03628c0e8291b368b27cf831c3e55ebe544745b833b6df9a9acada2",
        "urls": [
          "bzz-raw://58cc66f58fca72fd73c240dca9501165e083d248ff085ee4dc6a7719c224926c",
          "dweb:/ipfs/QmWqhtXoXTfYTkAao3a3F34XVjFsyxVqPCf2StG6udS617"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPause.sol": {
        "keccak256": "0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d",
        "urls": [
          "bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec",
          "dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IStablecoin.sol": {
        "keccak256": "0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239",
        "urls": [
          "bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461",
          "dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/proxy/BaseAction.sol": {
        "keccak256": "0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab",
        "urls": [
          "bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24",
          "dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR"
        ],
        "license": "MIT"
      },
      "src/proxy/JoinAction.sol": {
        "keccak256": "0x8dc50914a95520b3bd9129ca1cb667715b7782128b7af245e52b7e80d6db0ee9",
        "urls": [
          "bzz-raw://36eeaeb112521827df81950492ed891d5355277521a82dcb13cfad64e2895739",
          "dweb:/ipfs/QmZBViHYg4uXwYAxHiUHMLc3qp1vca3BUrwihGNGfjjV6i"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction.sol": {
        "keccak256": "0x3e91423182242e7ccbae872b1bd289f032ab4c89544425a0a65876a63e63c5f9",
        "urls": [
          "bzz-raw://2465546c51536a1d8193adfcfac59ea933cc3988df7da010705a73de5be2fb3b",
          "dweb:/ipfs/Qma43SD6BRB2VpE6EH9W4P3gMmWZNueWENrQhJQJrFURaX"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction4626.sol": {
        "keccak256": "0x19b3bc931bd278bab082a29986eaf4ef09a777b445a90aa91c0aa74848895fe4",
        "urls": [
          "bzz-raw://1a26ccf7960ec0824ae9420c8726c3efae300a1c33b445f5313b9539bf82ab8b",
          "dweb:/ipfs/QmVs5ATxzztzKpxGTXzeGaACYg5gNfjegNKRpwRUEozrX7"
        ],
        "license": "MIT"
      },
      "src/proxy/SwapAction.sol": {
        "keccak256": "0xf3c446b763969f9cbe0cdbbba16140176bf75ada29da89dfb24d32dbe744ddce",
        "urls": [
          "bzz-raw://84a857e66ba74ead46269034e1ce8c7320f500550240197c18c7415f15af3ce8",
          "dweb:/ipfs/QmYFoDhtFfxDKuSmCbrxqyZNkMGjLdG5ZPZJc7UEhzfJKT"
        ],
        "license": "MIT"
      },
      "src/proxy/TransferAction.sol": {
        "keccak256": "0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e",
        "urls": [
          "bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756",
          "dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt"
        ],
        "license": "MIT"
      },
      "src/utils/DoubleLinkedList.sol": {
        "keccak256": "0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691",
        "urls": [
          "bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb",
          "dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/utils/Pause.sol": {
        "keccak256": "0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19",
        "urls": [
          "bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1",
          "dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL"
        ],
        "license": "MIT"
      },
      "src/utils/Permission.sol": {
        "keccak256": "0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1",
        "urls": [
          "bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb",
          "dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p"
        ],
        "license": "MIT"
      },
      "src/vendor/IBalancerVault.sol": {
        "keccak256": "0xc4d7312f444bd3990ca3180052b6c01c5d10b817d6452df2f6de5da270ed6179",
        "urls": [
          "bzz-raw://65faf1ee901a992c98e2f60e8f06ee26ed77ca54e71acd86d93334c7904131c1",
          "dweb:/ipfs/Qmf6iS7TNfRy9P392yTQTHHkk7ybJc9CCRabsTYzHaDAFr"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/vendor/IUniswapV3Router.sol": {
        "keccak256": "0x5ab23c0c3f5571e77353ebf1b7d4dec9103504b728faa7530e04b84e5d233c03",
        "urls": [
          "bzz-raw://9a95e0a55b44b18deab9989f7bf4afed71d22d51dd96c42eeb1552a30d252de4",
          "dweb:/ipfs/QmSyZhFhvegYMncZSc18m8skqhzXiMisgg1K2K9V1t796Z"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/proxy/PositionAction4626.sol",
    "id": 54111,
    "exportedSymbols": {
      "ICDPVault": [
        49449
      ],
      "IERC20": [
        34464
      ],
      "IERC4626": [
        32740
      ],
      "JoinParams": [
        51372
      ],
      "LeverParams": [
        51791
      ],
      "PositionAction": [
        53549
      ],
      "PositionAction4626": [
        54110
      ],
      "SafeERC20": [
        35920
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6450:125",
    "nodes": [
      {
        "id": 53722,
        "nodeType": "PragmaDirective",
        "src": "32:24:125",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 53724,
        "nodeType": "ImportDirective",
        "src": "58:68:125",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "file": "openzeppelin/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54111,
        "sourceUnit": 32570,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53723,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34464,
              "src": "66:6:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53726,
        "nodeType": "ImportDirective",
        "src": "127:72:125",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol",
        "file": "openzeppelin/contracts/interfaces/IERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54111,
        "sourceUnit": 32741,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53725,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32740,
              "src": "135:8:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53728,
        "nodeType": "ImportDirective",
        "src": "200:81:125",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54111,
        "sourceUnit": 35921,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53727,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35920,
              "src": "208:9:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53730,
        "nodeType": "ImportDirective",
        "src": "283:54:125",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDPVault.sol",
        "file": "../interfaces/ICDPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54111,
        "sourceUnit": 49450,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53729,
              "name": "ICDPVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49449,
              "src": "291:9:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53734,
        "nodeType": "ImportDirective",
        "src": "339:77:125",
        "nodes": [],
        "absolutePath": "src/proxy/PositionAction.sol",
        "file": "./PositionAction.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54111,
        "sourceUnit": 53550,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53731,
              "name": "PositionAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53549,
              "src": "347:14:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53732,
              "name": "LeverParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51791,
              "src": "363:11:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53733,
              "name": "JoinParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51372,
              "src": "376:10:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54110,
        "nodeType": "ContractDefinition",
        "src": "523:5958:125",
        "nodes": [
          {
            "id": 53741,
            "nodeType": "UsingForDirective",
            "src": "756:27:125",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53738,
              "name": "SafeERC20",
              "nameLocations": [
                "762:9:125"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35920,
              "src": "762:9:125"
            },
            "typeName": {
              "id": 53740,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53739,
                "name": "IERC20",
                "nameLocations": [
                  "776:6:125"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34464,
                "src": "776:6:125"
              },
              "referencedDeclaration": 34464,
              "src": "776:6:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$34464",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 53756,
            "nodeType": "FunctionDefinition",
            "src": "972:135:125",
            "nodes": [],
            "body": {
              "id": 53755,
              "nodeType": "Block",
              "src": "1105:2:125",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 53750,
                    "name": "flashlender_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53743,
                    "src": "1064:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 53751,
                    "name": "swapActions_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53745,
                    "src": "1078:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 53752,
                    "name": "joinAction_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53747,
                    "src": "1092:11:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 53753,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 53749,
                  "name": "PositionAction",
                  "nameLocations": [
                    "1049:14:125"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53549,
                  "src": "1049:14:125"
                },
                "nodeType": "ModifierInvocation",
                "src": "1049:55:125"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53743,
                  "mutability": "mutable",
                  "name": "flashlender_",
                  "nameLocation": "992:12:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53756,
                  "src": "984:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53745,
                  "mutability": "mutable",
                  "name": "swapActions_",
                  "nameLocation": "1014:12:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53756,
                  "src": "1006:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53747,
                  "mutability": "mutable",
                  "name": "joinAction_",
                  "nameLocation": "1036:11:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53756,
                  "src": "1028:19:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "983:65:125"
            },
            "returnParameters": {
              "id": 53754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1105:0:125"
            },
            "scope": 54110,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53834,
            "nodeType": "FunctionDefinition",
            "src": "1572:645:125",
            "nodes": [],
            "body": {
              "id": 53833,
              "nodeType": "Block",
              "src": "1672:545:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53770
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53770,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "1690:10:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 53833,
                      "src": "1682:18:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53769,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1682:7:125",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53779,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 53774,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53759,
                                "src": "1721:5:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 53773,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49449,
                              "src": "1711:9:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 53775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1711:16:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$49449",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 53776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1728:5:125",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49270,
                          "src": "1711:22:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 53777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1711:24:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 53772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1703:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 53771,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1703:7:125",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 53778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:33:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1682:54:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 53782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53780,
                      "name": "src",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53761,
                      "src": "1858:3:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 53781,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53770,
                      "src": "1865:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1858:17:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53813,
                  "nodeType": "IfStatement",
                  "src": "1854:236:125",
                  "trueBody": {
                    "id": 53812,
                    "nodeType": "Block",
                    "src": "1877:213:125",
                    "statements": [
                      {
                        "assignments": [
                          53784
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 53784,
                            "mutability": "mutable",
                            "name": "underlying",
                            "nameLocation": "1899:10:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 53812,
                            "src": "1891:18:125",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 53783,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1891:7:125",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 53790,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 53786,
                                  "name": "collateral",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53770,
                                  "src": "1921:10:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 53785,
                                "name": "IERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32740,
                                "src": "1912:8:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                  "typeString": "type(contract IERC4626)"
                                }
                              },
                              "id": 53787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1912:20:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC4626_$32740",
                                "typeString": "contract IERC4626"
                              }
                            },
                            "id": 53788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1933:5:125",
                            "memberName": "asset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32609,
                            "src": "1912:26:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 53789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1912:28:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1891:49:125"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 53795,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53770,
                              "src": "1986:10:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53796,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53763,
                              "src": "1998:6:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 53792,
                                  "name": "underlying",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53784,
                                  "src": "1961:10:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 53791,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34464,
                                "src": "1954:6:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 53793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1954:18:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$34464",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 53794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1973:12:125",
                            "memberName": "forceApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35777,
                            "src": "1954:31:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 53797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1954:51:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53798,
                        "nodeType": "ExpressionStatement",
                        "src": "1954:51:125"
                      },
                      {
                        "expression": {
                          "id": 53810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53799,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53763,
                            "src": "2019:6:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 53804,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53763,
                                "src": "2057:6:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 53807,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2073:4:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  ],
                                  "id": 53806,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2065:7:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 53805,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2065:7:125",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 53808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2065:13:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 53801,
                                    "name": "collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53770,
                                    "src": "2037:10:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 53800,
                                  "name": "IERC4626",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32740,
                                  "src": "2028:8:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                    "typeString": "type(contract IERC4626)"
                                  }
                                },
                                "id": 53802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2028:20:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC4626_$32740",
                                  "typeString": "contract IERC4626"
                                }
                              },
                              "id": 53803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2049:7:125",
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32657,
                              "src": "2028:28:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 53809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2028:51:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2019:60:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53811,
                        "nodeType": "ExpressionStatement",
                        "src": "2019:60:125"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53818,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53759,
                        "src": "2132:5:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53819,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53763,
                        "src": "2139:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53815,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53770,
                            "src": "2107:10:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53814,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "2100:6:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 53816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2100:18:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 53817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2119:12:125",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "2100:31:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 53820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2100:46:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53821,
                  "nodeType": "ExpressionStatement",
                  "src": "2100:46:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53828,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2196:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 53827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2188:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53826,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2188:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2188:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53830,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53763,
                        "src": "2203:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53823,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53759,
                            "src": "2173:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53822,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "2163:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2163:16:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2180:7:125",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49343,
                      "src": "2163:24:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2163:47:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53768,
                  "id": 53832,
                  "nodeType": "Return",
                  "src": "2156:54:125"
                }
              ]
            },
            "baseFunctions": [
              51962
            ],
            "documentation": {
              "id": 53757,
              "nodeType": "StructuredDocumentation",
              "src": "1300:267:125",
              "text": "@notice Deposit collateral into the vault\n @param vault Address of the vault\n @param src Token passed in by the caller\n @param amount Amount of collateral to deposit [CDPVault.tokenScale()]\n @return Amount of collateral deposited [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDeposit",
            "nameLocation": "1581:10:125",
            "overrides": {
              "id": 53765,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1645:8:125"
            },
            "parameters": {
              "id": 53764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53759,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1600:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53834,
                  "src": "1592:13:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53761,
                  "mutability": "mutable",
                  "name": "src",
                  "nameLocation": "1615:3:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53834,
                  "src": "1607:11:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53763,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1628:6:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53834,
                  "src": "1620:14:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1620:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1591:44:125"
            },
            "returnParameters": {
              "id": 53768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53767,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53834,
                  "src": "1663:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1662:9:125"
            },
            "scope": 54110,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53896,
            "nodeType": "FunctionDefinition",
            "src": "2503:560:125",
            "nodes": [],
            "body": {
              "id": 53895,
              "nodeType": "Block",
              "src": "2604:459:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53848
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53848,
                      "mutability": "mutable",
                      "name": "collateralWithdrawn",
                      "nameLocation": "2622:19:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 53895,
                      "src": "2614:27:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53847,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2614:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53859,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53855,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2678:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 53854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2670:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53853,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2670:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2670:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53857,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53841,
                        "src": "2685:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53850,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53837,
                            "src": "2654:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53849,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "2644:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2644:16:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2661:8:125",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49352,
                      "src": "2644:25:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:48:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2614:78:125"
                },
                {
                  "assignments": [
                    53861
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53861,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "2816:10:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 53895,
                      "src": "2808:18:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53860,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2808:7:125",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53870,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 53865,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53837,
                                "src": "2847:5:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 53864,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49449,
                              "src": "2837:9:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 53866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2837:16:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$49449",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 53867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2854:5:125",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49270,
                          "src": "2837:22:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 53868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2837:24:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 53863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2829:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 53862,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2829:7:125",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 53869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2829:33:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2808:54:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 53873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53871,
                      "name": "dst",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53839,
                      "src": "2876:3:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 53872,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53861,
                      "src": "2883:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2876:17:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53892,
                  "nodeType": "IfStatement",
                  "src": "2872:148:125",
                  "trueBody": {
                    "id": 53891,
                    "nodeType": "Block",
                    "src": "2895:125:125",
                    "statements": [
                      {
                        "expression": {
                          "id": 53889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53874,
                            "name": "collateralWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53848,
                            "src": "2909:19:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 53879,
                                "name": "collateralWithdrawn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53848,
                                "src": "2959:19:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 53882,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2988:4:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  ],
                                  "id": 53881,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2980:7:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 53880,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2980:7:125",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 53883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2980:13:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 53886,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3003:4:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  ],
                                  "id": 53885,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2995:7:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 53884,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2995:7:125",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 53887,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2995:13:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 53876,
                                    "name": "collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53861,
                                    "src": "2940:10:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 53875,
                                  "name": "IERC4626",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32740,
                                  "src": "2931:8:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                    "typeString": "type(contract IERC4626)"
                                  }
                                },
                                "id": 53877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2931:20:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC4626_$32740",
                                  "typeString": "contract IERC4626"
                                }
                              },
                              "id": 53878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2952:6:125",
                              "memberName": "redeem",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32739,
                              "src": "2931:27:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address,address) external returns (uint256)"
                              }
                            },
                            "id": 53888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2931:78:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2909:100:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53890,
                        "nodeType": "ExpressionStatement",
                        "src": "2909:100:125"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 53893,
                    "name": "collateralWithdrawn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53848,
                    "src": "3037:19:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53846,
                  "id": 53894,
                  "nodeType": "Return",
                  "src": "3030:26:125"
                }
              ]
            },
            "baseFunctions": [
              51974
            ],
            "documentation": {
              "id": 53835,
              "nodeType": "StructuredDocumentation",
              "src": "2223:275:125",
              "text": "@notice Withdraw collateral from the vault\n @param vault Address of the vault\n @param dst Token the caller expects to receive\n @param amount Amount of collateral to withdraw [wad]\n @return Amount of collateral withdrawn [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onWithdraw",
            "nameLocation": "2512:11:125",
            "overrides": {
              "id": 53843,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2577:8:125"
            },
            "parameters": {
              "id": 53842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53837,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2532:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53896,
                  "src": "2524:13:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2524:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53839,
                  "mutability": "mutable",
                  "name": "dst",
                  "nameLocation": "2547:3:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53896,
                  "src": "2539:11:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2539:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53841,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2560:6:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 53896,
                  "src": "2552:14:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2523:44:125"
            },
            "returnParameters": {
              "id": 53846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53896,
                  "src": "2595:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2594:9:125"
            },
            "scope": 54110,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54066,
            "nodeType": "FunctionDefinition",
            "src": "3547:2100:125",
            "nodes": [],
            "body": {
              "id": 54065,
              "nodeType": "Block",
              "src": "3747:1900:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53913,
                      "mutability": "mutable",
                      "name": "upFrontCollateral",
                      "nameLocation": "3765:17:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 54065,
                      "src": "3757:25:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53912,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3757:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53914,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3757:25:125"
                },
                {
                  "assignments": [
                    53916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53916,
                      "mutability": "mutable",
                      "name": "addCollateralAmount",
                      "nameLocation": "3800:19:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 54065,
                      "src": "3792:27:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53915,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3792:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53918,
                  "initialValue": {
                    "id": 53917,
                    "name": "swapAmountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53906,
                    "src": "3822:13:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3792:43:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 53931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 53922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 53919,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53900,
                          "src": "3849:11:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 53920,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3861:15:125",
                        "memberName": "collateralToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51779,
                        "src": "3849:27:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 53921,
                        "name": "upFrontToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53902,
                        "src": "3880:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3849:43:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 53930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 53923,
                            "name": "leverParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53900,
                            "src": "3896:11:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                              "typeString": "struct LeverParams memory"
                            }
                          },
                          "id": 53924,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3908:7:125",
                          "memberName": "auxSwap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51785,
                          "src": "3896:19:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapParams_$55227_memory_ptr",
                            "typeString": "struct SwapParams memory"
                          }
                        },
                        "id": 53925,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3916:7:125",
                        "memberName": "assetIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55215,
                        "src": "3896:27:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 53928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3935:1:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 53927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3927:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53926,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3927:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3927:10:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3896:41:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3849:88:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 53941,
                    "nodeType": "Block",
                    "src": "4087:118:125",
                    "statements": [
                      {
                        "expression": {
                          "id": 53939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53937,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53916,
                            "src": "4158:19:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 53938,
                            "name": "upFrontAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53904,
                            "src": "4181:13:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4158:36:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53940,
                        "nodeType": "ExpressionStatement",
                        "src": "4158:36:125"
                      }
                    ]
                  },
                  "id": 53942,
                  "nodeType": "IfStatement",
                  "src": "3845:360:125",
                  "trueBody": {
                    "id": 53936,
                    "nodeType": "Block",
                    "src": "3939:142:125",
                    "statements": [
                      {
                        "expression": {
                          "id": 53934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53932,
                            "name": "upFrontCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53913,
                            "src": "4037:17:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 53933,
                            "name": "upFrontAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53904,
                            "src": "4057:13:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4037:33:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53935,
                        "nodeType": "ExpressionStatement",
                        "src": "4037:33:125"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    53944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53944,
                      "mutability": "mutable",
                      "name": "underlyingToken",
                      "nameLocation": "4223:15:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 54065,
                      "src": "4215:23:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53943,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4215:7:125",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53951,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53946,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53900,
                              "src": "4250:11:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53947,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4262:15:125",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51779,
                            "src": "4250:27:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53945,
                          "name": "IERC4626",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32740,
                          "src": "4241:8:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                            "typeString": "type(contract IERC4626)"
                          }
                        },
                        "id": 53948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4241:37:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$32740",
                          "typeString": "contract IERC4626"
                        }
                      },
                      "id": 53949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4279:5:125",
                      "memberName": "asset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32609,
                      "src": "4241:43:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 53950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4241:45:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4215:71:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 53959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 53952,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53900,
                          "src": "4340:11:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 53953,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4352:7:125",
                        "memberName": "auxJoin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51788,
                        "src": "4340:19:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JoinParams_$51372_memory_ptr",
                          "typeString": "struct JoinParams memory"
                        }
                      },
                      "id": 53954,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4360:6:125",
                      "memberName": "poolId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51358,
                      "src": "4340:26:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 53957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4378:1:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 53956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4370:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 53955,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4370:7:125",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 53958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4370:10:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4340:40:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54017,
                  "nodeType": "IfStatement",
                  "src": "4336:807:125",
                  "trueBody": {
                    "id": 54016,
                    "nodeType": "Block",
                    "src": "4382:761:125",
                    "statements": [
                      {
                        "assignments": [
                          53961
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 53961,
                            "mutability": "mutable",
                            "name": "joinUpfrontToken",
                            "nameLocation": "4404:16:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 54016,
                            "src": "4396:24:125",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 53960,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4396:7:125",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 53975,
                        "initialValue": {
                          "condition": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 53969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 53962,
                                      "name": "leverParams",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 53900,
                                      "src": "4424:11:125",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                        "typeString": "struct LeverParams memory"
                                      }
                                    },
                                    "id": 53963,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4436:7:125",
                                    "memberName": "auxSwap",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 51785,
                                    "src": "4424:19:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapParams_$55227_memory_ptr",
                                      "typeString": "struct SwapParams memory"
                                    }
                                  },
                                  "id": 53964,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4444:7:125",
                                  "memberName": "assetIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 55215,
                                  "src": "4424:27:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 53967,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4463:1:125",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 53966,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4455:7:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 53965,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4455:7:125",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 53968,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4455:10:125",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4424:41:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 53970,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4423:43:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "id": 53972,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53900,
                              "src": "4484:11:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53973,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4496:12:125",
                            "memberName": "auxJoinToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51790,
                            "src": "4484:24:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 53974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "4423:85:125",
                          "trueExpression": {
                            "id": 53971,
                            "name": "upFrontToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53902,
                            "src": "4469:12:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4396:112:125"
                      },
                      {
                        "assignments": [
                          53978
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 53978,
                            "mutability": "mutable",
                            "name": "joinParams",
                            "nameLocation": "4604:10:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 54016,
                            "src": "4586:28:125",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JoinParams_$51372_memory_ptr",
                              "typeString": "struct JoinParams"
                            },
                            "typeName": {
                              "id": 53977,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 53976,
                                "name": "JoinParams",
                                "nameLocations": [
                                  "4586:10:125"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51372,
                                "src": "4586:10:125"
                              },
                              "referencedDeclaration": 51372,
                              "src": "4586:10:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JoinParams_$51372_storage_ptr",
                                "typeString": "struct JoinParams"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 53989,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 53981,
                                "name": "leverParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53900,
                                "src": "4661:11:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                  "typeString": "struct LeverParams memory"
                                }
                              },
                              "id": 53982,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4673:7:125",
                              "memberName": "auxJoin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51788,
                              "src": "4661:19:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JoinParams_$51372_memory_ptr",
                                "typeString": "struct JoinParams memory"
                              }
                            },
                            {
                              "id": 53983,
                              "name": "joinUpfrontToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53961,
                              "src": "4699:16:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 53984,
                                "name": "leverParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53900,
                                "src": "4734:11:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                  "typeString": "struct LeverParams memory"
                                }
                              },
                              "id": 53985,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4746:12:125",
                              "memberName": "auxJoinToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51790,
                              "src": "4734:24:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53986,
                              "name": "swapAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53906,
                              "src": "4777:13:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 53987,
                              "name": "upFrontAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53904,
                              "src": "4809:13:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_JoinParams_$51372_memory_ptr",
                                "typeString": "struct JoinParams memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 53979,
                              "name": "joinAction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51841,
                              "src": "4617:10:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_JoinAction_$51718",
                                "typeString": "contract JoinAction"
                              }
                            },
                            "id": 53980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4628:15:125",
                            "memberName": "updateLeverJoin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51717,
                            "src": "4617:26:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_struct$_JoinParams_$51372_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$_JoinParams_$51372_memory_ptr_$",
                              "typeString": "function (struct JoinParams memory,address,address,uint256,uint256) pure external returns (struct JoinParams memory)"
                            }
                          },
                          "id": 53988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4617:219:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JoinParams_$51372_memory_ptr",
                            "typeString": "struct JoinParams memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4586:250:125"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 53993,
                                  "name": "joinAction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51841,
                                  "src": "4890:10:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_JoinAction_$51718",
                                    "typeString": "contract JoinAction"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_JoinAction_$51718",
                                    "typeString": "contract JoinAction"
                                  }
                                ],
                                "id": 53992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4882:7:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53991,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4882:7:125",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 53994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4882:19:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 53997,
                                      "name": "joinAction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51841,
                                      "src": "4926:10:125",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_JoinAction_$51718",
                                        "typeString": "contract JoinAction"
                                      }
                                    },
                                    "id": 53998,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4937:4:125",
                                    "memberName": "join",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 51554,
                                    "src": "4926:15:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_struct$_JoinParams_$51372_memory_ptr_$returns$__$",
                                      "typeString": "function (struct JoinParams memory) external"
                                    }
                                  },
                                  "id": 53999,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4942:8:125",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "4926:24:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 54000,
                                  "name": "joinParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53978,
                                  "src": "4952:10:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JoinParams_$51372_memory_ptr",
                                    "typeString": "struct JoinParams memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_struct$_JoinParams_$51372_memory_ptr",
                                    "typeString": "struct JoinParams memory"
                                  }
                                ],
                                "expression": {
                                  "id": 53995,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4903:3:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 53996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4907:18:125",
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "4903:22:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 54001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4903:60:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 53990,
                            "name": "_delegateCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51264,
                            "src": "4851:13:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 54002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4851:126:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 54003,
                        "nodeType": "ExpressionStatement",
                        "src": "4851:126:125"
                      },
                      {
                        "expression": {
                          "id": 54014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54004,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53916,
                            "src": "5062:19:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 54011,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5126:4:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                                      "typeString": "contract PositionAction4626"
                                    }
                                  ],
                                  "id": 54010,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5118:7:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 54009,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5118:7:125",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 54012,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5118:13:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 54006,
                                    "name": "underlyingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53944,
                                    "src": "5091:15:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 54005,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34464,
                                  "src": "5084:6:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 54007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5084:23:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$34464",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 54008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5108:9:125",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34421,
                              "src": "5084:33:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 54013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5084:48:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5062:70:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54015,
                        "nodeType": "ExpressionStatement",
                        "src": "5062:70:125"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54022,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53900,
                          "src": "5232:11:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 54023,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5244:15:125",
                        "memberName": "collateralToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51779,
                        "src": "5232:27:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54024,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53916,
                        "src": "5261:19:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54019,
                            "name": "underlyingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53944,
                            "src": "5202:15:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54018,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "5195:6:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5195:23:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 54021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5219:12:125",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "5195:36:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 54025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5195:86:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54026,
                  "nodeType": "ExpressionStatement",
                  "src": "5195:86:125"
                },
                {
                  "expression": {
                    "id": 54041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54027,
                      "name": "addCollateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53916,
                      "src": "5291:19:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 54040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 54033,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53916,
                            "src": "5359:19:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 54036,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5388:4:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                                  "typeString": "contract PositionAction4626"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                                  "typeString": "contract PositionAction4626"
                                }
                              ],
                              "id": 54035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5380:7:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 54034,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5380:7:125",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5380:13:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 54029,
                                  "name": "leverParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53900,
                                  "src": "5322:11:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                    "typeString": "struct LeverParams memory"
                                  }
                                },
                                "id": 54030,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5334:15:125",
                                "memberName": "collateralToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 51779,
                                "src": "5322:27:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 54028,
                              "name": "IERC4626",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32740,
                              "src": "5313:8:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                                "typeString": "type(contract IERC4626)"
                              }
                            },
                            "id": 54031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5313:37:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC4626_$32740",
                              "typeString": "contract IERC4626"
                            }
                          },
                          "id": 54032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5351:7:125",
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32657,
                          "src": "5313:45:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,address) external returns (uint256)"
                          }
                        },
                        "id": 54038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5313:81:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 54039,
                        "name": "upFrontCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53913,
                        "src": "5397:17:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5313:101:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5291:123:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54042,
                  "nodeType": "ExpressionStatement",
                  "src": "5291:123:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54048,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53900,
                          "src": "5512:11:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 54049,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5524:5:125",
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51777,
                        "src": "5512:17:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54050,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53916,
                        "src": "5531:19:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54044,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53900,
                              "src": "5470:11:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54045,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5482:15:125",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51779,
                            "src": "5470:27:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54043,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "5463:6:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5463:35:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 54047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5499:12:125",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "5463:48:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 54051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:88:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54052,
                  "nodeType": "ExpressionStatement",
                  "src": "5463:88:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54060,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5613:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 54059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5605:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54058,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5605:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5605:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54062,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53916,
                        "src": "5620:19:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54054,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53900,
                              "src": "5578:11:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54055,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5590:5:125",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51777,
                            "src": "5578:17:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54053,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "5568:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 54056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5568:28:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 54057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5597:7:125",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49343,
                      "src": "5568:36:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 54063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5568:72:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53911,
                  "id": 54064,
                  "nodeType": "Return",
                  "src": "5561:79:125"
                }
              ]
            },
            "baseFunctions": [
              51989
            ],
            "documentation": {
              "id": 53897,
              "nodeType": "StructuredDocumentation",
              "src": "3069:473:125",
              "text": "@notice Hook to decrease lever by depositing collateral into the Yearn Vault and the Yearn Vault\n @param leverParams LeverParams struct\n @param upFrontToken the token passed up front\n @param upFrontAmount the amount of tokens passed up front [IYVault.decimals()]\n @param swapAmountOut the amount of tokens received from the stablecoin flash loan swap [IYVault.decimals()]\n @return Amount of collateral added to CDPVault position [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onIncreaseLever",
            "nameLocation": "3556:16:125",
            "overrides": {
              "id": 53908,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3720:8:125"
            },
            "parameters": {
              "id": 53907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53900,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "3601:11:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54066,
                  "src": "3582:30:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 53899,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53898,
                      "name": "LeverParams",
                      "nameLocations": [
                        "3582:11:125"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51791,
                      "src": "3582:11:125"
                    },
                    "referencedDeclaration": 51791,
                    "src": "3582:11:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$51791_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53902,
                  "mutability": "mutable",
                  "name": "upFrontToken",
                  "nameLocation": "3630:12:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54066,
                  "src": "3622:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53904,
                  "mutability": "mutable",
                  "name": "upFrontAmount",
                  "nameLocation": "3660:13:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54066,
                  "src": "3652:21:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53906,
                  "mutability": "mutable",
                  "name": "swapAmountOut",
                  "nameLocation": "3691:13:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54066,
                  "src": "3683:21:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3683:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3572:138:125"
            },
            "returnParameters": {
              "id": 53911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53910,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54066,
                  "src": "3738:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3738:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3737:9:125"
            },
            "scope": 54110,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54109,
            "nodeType": "FunctionDefinition",
            "src": "5987:492:125",
            "nodes": [],
            "body": {
              "id": 54108,
              "nodeType": "Block",
              "src": "6126:353:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54079,
                      "mutability": "mutable",
                      "name": "withdrawnCollateral",
                      "nameLocation": "6187:19:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 54108,
                      "src": "6179:27:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54078,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6179:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54091,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54087,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6255:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 54086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6247:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54085,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6247:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6247:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54089,
                        "name": "subCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54072,
                        "src": "6262:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54081,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54070,
                              "src": "6219:11:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54082,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6231:5:125",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51777,
                            "src": "6219:17:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54080,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "6209:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 54083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6209:28:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 54084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6238:8:125",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49352,
                      "src": "6209:37:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 54090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6209:67:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6179:97:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54097,
                        "name": "withdrawnCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54079,
                        "src": "6422:19:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54100,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6451:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 54099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6443:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54098,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6443:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6443:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54104,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6466:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction4626_$54110",
                              "typeString": "contract PositionAction4626"
                            }
                          ],
                          "id": 54103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6458:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54102,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6458:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6458:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54093,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54070,
                              "src": "6386:11:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54094,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6398:15:125",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51779,
                            "src": "6386:27:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54092,
                          "name": "IERC4626",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32740,
                          "src": "6377:8:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC4626_$32740_$",
                            "typeString": "type(contract IERC4626)"
                          }
                        },
                        "id": 54095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6377:37:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$32740",
                          "typeString": "contract IERC4626"
                        }
                      },
                      "id": 54096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6415:6:125",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32739,
                      "src": "6377:44:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 54106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6377:95:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 54077,
                  "id": 54107,
                  "nodeType": "Return",
                  "src": "6370:102:125"
                }
              ]
            },
            "baseFunctions": [
              52000
            ],
            "documentation": {
              "id": 54067,
              "nodeType": "StructuredDocumentation",
              "src": "5653:329:125",
              "text": "@notice Hook to decrease lever by withdrawing collateral from the CDPVault and the ERC4626 Vault\n @param leverParams LeverParams struct\n @param subCollateral Amount of collateral to withdraw in CDPVault decimals [wad]\n @return Amount of underlying token withdrawn from yearn vault [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDecreaseLever",
            "nameLocation": "5996:16:125",
            "overrides": {
              "id": 54074,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6099:8:125"
            },
            "parameters": {
              "id": 54073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54070,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "6041:11:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54109,
                  "src": "6022:30:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 54069,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54068,
                      "name": "LeverParams",
                      "nameLocations": [
                        "6022:11:125"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51791,
                      "src": "6022:11:125"
                    },
                    "referencedDeclaration": 51791,
                    "src": "6022:11:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$51791_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54072,
                  "mutability": "mutable",
                  "name": "subCollateral",
                  "nameLocation": "6070:13:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 54109,
                  "src": "6062:21:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6062:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6012:77:125"
            },
            "returnParameters": {
              "id": 54077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54076,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54109,
                  "src": "6117:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6117:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6116:9:125"
            },
            "scope": 54110,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53736,
              "name": "PositionAction",
              "nameLocations": [
                "554:14:125"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53549,
              "src": "554:14:125"
            },
            "id": 53737,
            "nodeType": "InheritanceSpecifier",
            "src": "554:14:125"
          }
        ],
        "canonicalName": "PositionAction4626",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 53735,
          "nodeType": "StructuredDocumentation",
          "src": "418:105:125",
          "text": "@title PositionAction4626\n @notice Generic ERC4626 implementation of PositionAction base contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54110,
          53549,
          51282,
          55969,
          50021,
          49972
        ],
        "name": "PositionAction4626",
        "nameLocation": "532:18:125",
        "scope": 54111,
        "usedErrors": [
          51235,
          51843,
          51845,
          51847,
          51849,
          51851,
          51853,
          51855,
          51857,
          51859,
          51861,
          51863,
          51865,
          133395
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 125
}