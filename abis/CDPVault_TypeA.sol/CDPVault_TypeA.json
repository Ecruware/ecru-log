{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CDPVault__addLimitPriceTick_invalidPriceTickOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__addLimitPriceTick_limitPriceTickOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__calculateAssetsAndLiabilities_insufficientAssets",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__cancelLimitOrder_limitOrderDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__checkEmergencyMode_entered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__claimUndelegatedCredit_epochNotClaimable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__claimUndelegatedCredit_epochNotFixed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitOrderAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitOrderFloor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitPriceTickNotActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__delegateCredit_creditAmountTooSmall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__exchange_notEnoughExchanged",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__liquidatePosition_notUnsafe",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__liquidatePositions_argLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_maxUtilizationRatio",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_noPermission",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_notSafe",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyPosition_debtFloor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__setParameter_unrecognizedParameter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IdIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InterestRateModel__setBaseRate_invalidBaseRate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ItemInList",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ItemNotInList",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__add_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__mul_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__sub_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toInt256_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toUint64_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Permission__modifyPermission_notPermitted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "AddLimitPriceTick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "CancelLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sharesRedeemed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditClaimed",
          "type": "uint256"
        }
      ],
      "name": "ClaimUndelegatedCredit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "CreateLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditDelegated",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sharesIssued",
          "type": "uint256"
        }
      ],
      "name": "DelegateCredit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRedeemed",
          "type": "uint256"
        }
      ],
      "name": "Exchange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRedeemed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        }
      ],
      "name": "ExecuteLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralReleased",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "normalDebtRepaid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        }
      ],
      "name": "LiquidatePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        }
      ],
      "name": "ModifyCollateralAndDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "grant",
          "type": "bool"
        }
      ],
      "name": "ModifyPermission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalNormalDebt",
          "type": "uint256"
        }
      ],
      "name": "ModifyPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "RemoveLimitPriceTick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int64",
          "name": "baseRate",
          "type": "int64"
        }
      ],
      "name": "SetBaseRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SetGlobalIRS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "parameter",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "SetParameter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "grant",
          "type": "bool"
        }
      ],
      "name": "SetPermittedAgent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "position",
          "type": "address"
        }
      ],
      "name": "SetPositionIRS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "estimatedClaim",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimableAtEpoch",
          "type": "uint256"
        }
      ],
      "name": "UndelegateCredit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EPOCH_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EPOCH_FIX_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EPOCH_FIX_TIMEOUT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "name": "activeLimitPriceTicks",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextLimitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "addLimitPriceTick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buffer",
      "outputs": [
        {
          "internalType": "contract IBuffer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "name": "calculateRebateFactorForPriceTick",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cdm",
      "outputs": [
        {
          "internalType": "contract ICDM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feesClaimed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimForEpoch",
          "type": "uint256"
        }
      ],
      "name": "claimUndelegatedCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "createLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditWithholder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "creditAmount",
          "type": "uint256"
        }
      ],
      "name": "delegateCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sharesAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cashAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enterEmergencyMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        }
      ],
      "name": "epochs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalCreditClaimable",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalCreditWithheld",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSharesQueued",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "claimRatio",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "estimatedCreditClaimPerShare",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "upperLimitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditToExchange",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralExchanged",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "upperLimitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditToExchange",
          "type": "uint256"
        }
      ],
      "name": "exchangePreview",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralExchanged",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentEpoch",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGlobalIRS",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int64",
              "name": "baseRate",
              "type": "int64"
            },
            {
              "internalType": "uint64",
              "name": "lastUpdated",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "rateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "averageRebate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "globalAccruedRebate",
              "type": "uint256"
            }
          ],
          "internalType": "struct InterestRateModel.GlobalIRS",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getLimitOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        }
      ],
      "name": "getPositionIRS",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "snapshotRateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "rebateFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "accruedRebate",
              "type": "uint128"
            }
          ],
          "internalType": "struct InterestRateModel.PositionIRS",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getPriceTick",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "hasPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitOrderFloor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        }
      ],
      "name": "limitOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "repayAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "liquidatePositions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationConfig",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "liquidationPenalty",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "liquidationDiscount",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "targetHealthFactor",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        }
      ],
      "name": "modifyCollateralAndDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "modifyPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "modifyPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pausedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "normalDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "removeLimitPriceTick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "parameter",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "setParameter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "setPermissionAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "unwinderFactory",
          "type": "address"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        }
      ],
      "name": "sharesQueuedByEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sharesQueued",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spotPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAccruedFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCreditClaimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalNormalDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "prevQueuedEpochs",
          "type": "uint256[]"
        }
      ],
      "name": "undelegateCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "estimatedClaim",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimableAtEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fixableUntilEpoch",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultConfig",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "debtFloor",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "liquidationRatio",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "globalLiquidationRatio",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        }
      ],
      "name": "virtualIRS",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "rateAccumulator",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "accruedRebate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "globalAccruedRebate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "697:8882:90:-:0;;;2739:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;996:7:47;:15;;-1:-1:-1;;996:15:47;;;12011:47:88;;;-1:-1:-1;;;12011:47:88;;;;2777:7:90;;-1:-1:-1;;;;;12011:45:88;;;;;:47;;;;;;;;;;;;;;;1006:5:47;12011:45:88;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11786:272:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11786:272:88;;-1:-1:-1;11786:272:88;-1:-1:-1;697:8882:90;;-1:-1:-1;697:8882:90;14:131:181;-1:-1:-1;;;;;89:31:181;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:251::-;220:6;273:2;261:9;252:7;248:23;244:32;241:52;;;289:1;286;279:12;241:52;321:9;315:16;340:31;365:5;340:31;:::i;:::-;390:5;150:251;-1:-1:-1;;;150:251:181:o;406:1101::-;612:6;620;628;636;644;652;660;668;676;729:3;717:9;708:7;704:23;700:33;697:53;;;746:1;743;736:12;697:53;778:9;772:16;797:31;822:5;797:31;:::i;:::-;897:2;882:18;;876:25;847:5;;-1:-1:-1;910:33:181;876:25;910:33;:::i;:::-;1014:2;999:18;;993:25;962:7;;-1:-1:-1;1027:33:181;993:25;1027:33;:::i;:::-;1131:2;1116:18;;1110:25;1079:7;;-1:-1:-1;1144:33:181;1110:25;1144:33;:::i;:::-;1196:7;1186:17;;;1243:3;1232:9;1228:19;1222:26;1212:36;;1288:3;1277:9;1273:19;1267:26;1257:36;;1333:3;1322:9;1318:19;1312:26;1302:36;;1378:3;1367:9;1363:19;1357:26;1347:36;;1428:3;1417:9;1413:19;1407:26;1442:33;1467:7;1442:33;:::i;:::-;1494:7;1484:17;;;406:1101;;;;;;;;;;;:::o;:::-;697:8882:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106103505760003560e01c8063842c311e116101bf578063cb6238c8116100fa578063dc2ec2491161009d578063dc2ec24914610976578063df10f6871461097f578063e2dfb31714610992578063eb953449146109b9578063edaafe2014610a15578063ef0563fb14610a3c578063f3fef3a314610a4f578063fc0c546a14610a6257600080fd5b8063cb6238c81461088b578063cde68041146108b6578063ce7c2ac2146108c9578063d294f093146108e9578063d4b7eac3146108f1578063d547741f14610904578063d9c70f5714610917578063dbe6b31c1461092a57600080fd5b8063a70b9f0c11610162578063a70b9f0c14610772578063b0e21e8a1461077c578063b6dc16f6146107a3578063b97dd9e2146107c3578063ba95534c146107cb578063bf404a41146107d4578063c6b61e4c146107fb578063c75a4b5e1461087857600080fd5b8063842c311e146106f85780638456cb591461070157806388439aea1461070957806391d148541461071c57806393f9eb351461072f5780639844afd214610742578063a217fddf1461074a578063a3e2b4951461075257600080fd5b80633f2601ef1161028f5780635fe83c7b116102325780635fe83c7b146105a9578063683f81a1146105b25780636e5e741e146105d5578063723507be146106085780637cc34bb41461061b5780637dc0d1d0146106795780638051ba75146106ad5780638309dbdd146106e557600080fd5b80633f2601ef146104f15780633f4ba83a1461050457806344a3c6641461050c578063472132f01461051f57806347e7ef241461052757806351f813ec1461053a57806355f57510146105625780635c975abb1461059e57600080fd5b80632af8992b116102f75780632af8992b146104645780632b2368a2146104775780632e55d0f21461048a5780632f2ff15d14610493578063342c02b1146104a657806336568abe146104cd578063398482d8146104e05780633a98ef39146104e857600080fd5b806301ffc9a71461035557806314815a6d1461037d57806319f1039c146103b65780631c580ad5146103be5780632202ce8c14610411578063248a9ca31461041b578063280c37ef1461043e5780632906f94e14610451575b600080fd5b6103686103633660046153a6565b610a89565b60405190151581526020015b60405180910390f35b6103a861038b3660046153e7565b601060209081526000928352604080842090915290825290205481565b604051908152602001610374565b6103a8600381565b6018546103e7906001600160401b0380821691600160401b8104821691600160801b9091041683565b604080516001600160401b0394851681529284166020840152921691810191909152606001610374565b610419610ac0565b005b6103a8610429366004615413565b60009081526020819052604090206001015490565b61041961044c36600461543a565b610b89565b61041961045f366004615413565b610c00565b6103a8610472366004615471565b610d39565b6103a8610485366004615413565b610d87565b6103a860025481565b6104196104a13660046153e7565b6110a7565b6103a87f000000000000000000000000000000000000000000000000000000000000000081565b6104196104db3660046153e7565b6110d1565b6103a8611154565b6103a8600c5481565b6104196104ff366004615493565b61120b565b61041961131e565b61041961051a366004615471565b611358565b6103a8600181565b6103a86105353660046154ae565b611491565b61054d610548366004615413565b611533565b60408051928352901515602083015201610374565b610589610570366004615493565b6012602052600090815260409020805460019091015482565b60408051928352602083019190915201610374565b60015460ff16610368565b6103a8600e5481565b6103686105c0366004615413565b60136020526000908152604090205460ff1681565b6105e86105e336600461557d565b61158f565b604080519485526020850193909352918301526060820152608001610374565b610419610616366004615471565b611910565b60095461064a906001600160801b038116906001600160401b03600160801b8204811691600160c01b90041683565b604080516001600160801b0390941684526001600160401b039283166020850152911690820152606001610374565b6106a07f000000000000000000000000000000000000000000000000000000000000000081565b60405161037491906155c3565b6106c06106bb366004615493565b611b74565b604080516001600160401b039094168452602084019290925290820152606001610374565b6104196106f33660046155d7565b611c04565b6103a8600a5481565b610419611cd3565b610589610717366004615471565b611d08565b61036861072a3660046153e7565b611d2b565b6103a861073d366004615413565b611d54565b610419611ec4565b6103a8600081565b6103a8610760366004615413565b60166020526000908152604090205481565b6103a86203f48081565b6103a87f000000000000000000000000000000000000000000000000000000000000000081565b6103a86107b1366004615493565b60116020526000908152604090205481565b6103a8611f16565b6103a8600b5481565b6106a07f000000000000000000000000000000000000000000000000000000000000000081565b610844610809366004615413565b600f602052600090815260409020805460018201546002830154600390930154919290916001600160801b0380821691600160801b90041685565b604080519586526020860194909452928401919091526001600160801b03908116606084015216608082015260a001610374565b61041961088636600461561e565b611f34565b61089e610899366004615413565b612349565b6040516001600160401b039091168152602001610374565b6103686108c4366004615673565b6123d0565b6103a86108d7366004615493565b600d6020526000908152604090205481565b6103a861241e565b6105896108ff366004615471565b6124cc565b6104196109123660046153e7565b6125d4565b61041961092536600461543a565b6125f9565b61093d610938366004615493565b61265c565b6040805182516001600160401b03908116825260208085015190911690820152918101516001600160801b031690820152606001610374565b6103a860175481565b61041961098d36600461569d565b6126c7565b6106a07f000000000000000000000000000000000000000000000000000000000000000081565b6109c1612baa565b6040516103749190600060a082019050825160070b825260208301516001600160401b0380821660208501528060408601511660408501525050606083015160608301526080830151608083015292915050565b6106a07f000000000000000000000000000000000000000000000000000000000000000081565b610419610a4a366004615413565b612c01565b6103a8610a5d3660046154ae565b612c83565b6106a07f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216637965db0b60e01b1480610aba57506301ffc9a760e01b6001600160e01b03198316145b92915050565b3360008181526016602052604081205490819003610af157604051630573b42560e51b815260040160405180910390fd5b6000818152601560205260409020610b099083612d12565b6000828152601660209081526040808320839055338084526012909252822060010154600a54610b5593610b3b611154565b600954600160c01b90046001600160401b03166000612d93565b505060405133915082907f6f36e2a381bc87c87bcc2043deb0a5cdf9a6d87eb14cbe13cf0f1fe39f324dd990600090a35050565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815194855291840192909252908201527f6501e8bfa2d3e686d62fe2c0c3275df594494583b0a63a70b7452d3eeb712bd6906060015b60405180910390a15050565b60008181526013602052604090205460ff16610c2f5760405163da4b118b60e01b815260040160405180910390fd5b33600090815260126020526040902060010154601754811015610c65576040516305c0093760e21b815260040160405180910390fd5b3360008181526016602052604090205415610c935760405163345c017d60e01b815260040160405180910390fd5b600081815260166020908152604080832086905585835260158083528184208480528084529184206001015493879052909152610cd1918390612e5e565b610d043383600a546000610ce3611154565b600954600160c01b90046001600160401b0316610cff8a612349565b612d93565b505060405133915084907f85d7690ee90733d849878d2bbbd5bf047e442ce2d045c0308a58cfd2ce53031590600090a3505050565b6000828152601560209081526040808320838052909152812054905b828114610d805760008481526015602090815260408083208584529091529020549150600101610d55565b5092915050565b600080610d92611f16565b905060018301811015610db85760405163d84d29d760e01b815260040160405180910390fd5b6000610dc384612f2b565b94505050505080604001516000148015610de8575060608101516001600160801b0316155b8015610df657506020810151155b15610e5757506000838152600f6020908152604091829020825160a081018452815481526001820154928101929092526002810154928201929092526003909101546001600160801b038082166060840152600160801b9091041660808201525b604081015115801590610e75575060608101516001600160801b0316155b15610e9357604051632dcf9d3960e01b815260040160405180910390fd5b60008481526010602090815260408083203384529091528120546060830151909190610ec99083906001600160801b0316613634565b60008781526010602090815260408083203384529091528120559050610eef8183615749565b336000908152600d602052604081208054909190610f0e90849061575c565b9091555050604083015183519192508291610f2a90839061576f565b610f34919061579c565b604051632b0b3a6f60e21b81529095506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc90610fa7907f00000000000000000000000000000000000000000000000000000000000000009033908a906004016157be565b600060405180830381600087803b158015610fc157600080fd5b505af1158015610fd5573d6000803e3d6000fd5b505050508183604001818151610feb9190615749565b905250825185908490610fff908390615749565b9052506000868152600f60209081526040808320865181559186015160018301558501516002820155606085015160808601516001600160801b03908116600160801b02911617600390910155600e805487929061105e908490615749565b9091555050604080518381526020810187905233917f5a4beaa18eb50f2c5150783acec1964edb2e32cbf0f99957707375f76ffbd982910160405180910390a250505050919050565b6000828152602081905260409020600101546110c281613662565b6110cc838361366c565b505050565b6001600160a01b03811633146111465760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61115082826136f0565b5050565b604051632cbf04c160e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632cbf04c1906111c3907f0000000000000000000000000000000000000000000000000000000000000000906004016155c3565b6020604051808303816000875af11580156111e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120691906157e2565b905090565b6000611215612baa565b905080602001516001600160401b031660001461123157600080fd5b61123c60003361366c565b6001600160401b0342166020820152670de0b6b3a7640000604082015261126281613755565b6112986001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016836000196137e3565b60405163d9c70f5760e01b81526001600160a01b038381166004830152600160248301527f0000000000000000000000000000000000000000000000000000000000000000169063d9c70f5790604401600060405180830381600087803b15801561130257600080fd5b505af1158015611316573d6000803e3d6000fd5b505050505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61134881613662565b61135061392b565b506000600255565b611360613977565b7ff96f3d6876b63665360200e15ed8964960110cbbd99e917fb50ad1e576f538ac61138a81613662565b670de0b6b3a76400008310806113a857508268056bc75e2d63100000105b156113c6576040516336bbc25960e01b815260040160405180910390fd5b600080526014602052600080516020615a3a83398151915254801580156113ec57508215155b806114095750821580159061140957508284118061140957508281115b80611421575060008381526014602052604090205484105b1561143f576040516346b0cc7160e11b815260040160405180910390fd5b61144b60148585612e5e565b600084815260136020526040808220805460ff191660011790555185917f3907a47dfbf148deb99efcd854a68497cbdc2a2db8488083ecb842ad6bde91a891a250505050565b600061149b613977565b6114d06001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330856139bf565b6114fa827f00000000000000000000000000000000000000000000000000000000000000006139e6565b6001600160a01b03841660009081526011602052604081208054929350839290919061152790849061575c565b90915550909392505050565b60008080526014602052600080516020615a3a8339815191525490805b838114611573576000838152601460205260409020600101549250600101611550565b5050600081815260136020526040902054909260ff9091169150565b60008060008061159d611f16565b925060008060008060006115b088612f2b565b945094509450945094506000805b8b518110156116b55760008c82815181106115db576115db6157fb565b6020026020010151905081600101915080600014806115fd575060038b038110155b8061162157506000818152600f60205260409020600301546001600160801b031615155b8061163b57506000818152600f6020526040902060020154155b1561164657506115be565b600081815260106020908152604080832033845290915290205461166a818561575c565b60008381526010602090815260408083203384528252808320839055858352600f9091528120600201805492965083929091906116a8908490615749565b909155506115be92505050565b50828c6116c28789615749565b6116cc919061576f565b6116d6919061579c565b99506000848b116116e7578a6116e9565b845b604051632b0b3a6f60e21b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc9061175c9030907f00000000000000000000000000000000000000000000000000000000000000009086906004016157be565b600060405180830381600087803b15801561177657600080fd5b505af115801561178a573d6000803e3d6000fd5b5050505080836020018181516117a0919061575c565b905250506040820151156117d9576117d482608001516001600160801b03166117c98c8f6139e6565b808218908211021890565b6117e3565b6117e38a8d6139e6565b6001600160801b031660808301526040820180518d919061180590839061575c565b9052506000898152600f6020908152604080832085518155828601516001820155818601516002820155606086015160808701516001600160801b03908116600160801b0291161760039091015560108252808320338452909152812080548e929061187290849061575c565b9091555050336000908152600d60205260409020548c9061189490839061575c565b61189e9190615749565b336000818152600d60209081526040918290209390935580518f81529283018d905260018c01908301819052995060038b0198508a917fe5248481489259c5ccaad0795cac80cd527112765494ed5a8d98b93501b27f079060600160405180910390a350505050505092959194509250565b611918613977565b7f7e2be3cffb06427cbcb9b1d12d4b78adcf14a2bf640e9bbdeb54bb711b65ec7161194281613662565b82683232b13a233637b7b960b91b0361197557600980546001600160801b0319166001600160801b038416179055611b35565b826f6c69717569646174696f6e526174696f60801b036119b9576009805467ffffffffffffffff60801b1916600160801b6001600160401b03851602179055611b35565b8275676c6f62616c4c69717569646174696f6e526174696f60501b036119fe57600980546001600160c01b0316600160c01b6001600160401b03851602179055611b35565b826e3634b6b4ba27b93232b9233637b7b960891b03611a21576017829055611b35565b8267626173655261746560c01b03611a5257611a4d6000198314611a455782613a35565b600019613a35565b611b35565b82716c69717569646174696f6e50656e616c747960701b03611a8f576018805467ffffffffffffffff19166001600160401b038416179055611b35565b82721b1a5c5d5a59185d1a5bdb911a5cd8dbdd5b9d606a1b03611ad6576018805467ffffffffffffffff60401b1916600160401b6001600160401b03851602179055611b35565b82713a30b933b2ba2432b0b63a342330b1ba37b960711b03611b1c576018805467ffffffffffffffff60801b1916600160801b6001600160401b03851602179055611b35565b604051638dd691e760e01b815260040160405180910390fd5b827f4327e67d6578eb2c9293fb22f9334006073ac1397c7100f5dd5adca09ad71c0883604051611b6791815260200190565b60405180910390a2505050565b600080600080611b82612baa565b600a54909150611b928282613add565b9450611ba78286836000806000806000613bf0565b506080810151935091506001600160a01b03861615611bfb57611bef611bcc8761265c565b6001600160a01b0388166000908152601260205260409020600101548790613d8f565b6001600160801b031693505b50509193909250565b6001600160a01b0383163314801590611c4157506001600160a01b038316600090815260046020908152604080832033845290915290205460ff16155b15611c5f57604051638743d2ff60e01b815260040160405180910390fd5b6001600160a01b0383811660009081526003602090815260408083209386168352929052819020805460ff1916831515179055517fdcf2bd5a4c47afeb1792d170f6f5e6e528e30c6b546fffe62b697a11f8953b2b90611cc6903390869086908690615811565b60405180910390a1505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611cfd81613662565b611d05613dca565b50565b6000803315611d1657600080fd5b611d208484613dd8565b915091509250929050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000670de0b6b3a7640000821015611d7f57604051636396b11f60e01b815260040160405180910390fd5b6000806000611d94611d8f611f16565b612f2b565b50935050925092508060001480611db25750611db08284615749565b155b611dd957611dc08284615749565b611dca868361576f565b611dd4919061579c565b611ddb565b845b336000908152600d602052604090208054820190559350611dfc848261575c565b600c55604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc90611e4f90339030908a906004016157be565b600060405180830381600087803b158015611e6957600080fd5b505af1158015611e7d573d6000803e3d6000fd5b505060408051888152602081018890523393507f12352042ba8d46dbbba12767322c1c3bb5ed774314b10c283f945bf69e83f15792500160405180910390a2505050919050565b611ecc613977565b600080611ed96000611b74565b6009549294509250611f0991600160c01b90046001600160401b03169050611eff611154565b600a54858561405e565b1561115057611150613dca565b60006203f480804206420381611f2e57611f2e615786565b04905090565b6000811380611f435750600082125b8015611f565750611f5485336123d0565b155b80611f735750600082138015611f735750611f7184336123d0565b155b80611f905750600081128015611f905750611f8e83336123d0565b155b15611fae57604051634c26249960e01b815260040160405180910390fd5b6001600160a01b038516600090815260126020908152604080832081518083018352815481526001909101548184015281516060810183526009546001600160801b03811682526001600160401b03600160801b8204811695830195909552600160c01b900490931691830191909152600a54909261202b611154565b9050600080600061204a8c8860200151878b888b604001516000612d93565b92509250925061205e8c88848c8c8a61416e565b9650600088138061206f5750600089125b80156120b257506120b06120998860200151846000015185604001516001600160801b0316614275565b8851602089015187906001600160401b0316614295565b155b156120d057604051633f66923d60e01b815260040160405180910390fd5b6001600160a01b038b166000908152601160205260409020546120f3908a6142b8565b6001600160a01b038c1660009081526011602052604090205561211685896142fd565b945084600a819055506000816001600160801b031661214285604001516001600160401b03168b614342565b61214c919061583b565b905060008113156121de57604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906121a79030908f9086906004016157be565b600060405180830381600087803b1580156121c157600080fd5b505af11580156121d5573d6000803e3d6000fd5b50505050612272565b6000811215612272576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ac2ce9bc8c3061222185615863565b6040518463ffffffff1660e01b815260040161223f939291906157be565b600060405180830381600087803b15801561225957600080fd5b505af115801561226d573d6000803e3d6000fd5b505050505b60008913156122da576000612287858861436c565b90506001600160401b037f000000000000000000000000000000000000000000000000000000000000000060401c16808211156122d7576040516329b823dd60e21b815260040160405180910390fd5b50505b8a6001600160a01b03168c6001600160a01b03168e6001600160a01b03167f7ce3e27b99e7e2e42f0ddcb6f6679a25081a5fd4ca991bcd05c45e54daa997088d8d604051612332929190918252602082015260400190565b60405180910390a450505050505050505050505050565b6000670de0b6b3a764000082101561236357506000919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160801b0381169060801c6123c86123c3670de0b6b3a76400006123b4856123af838a615749565b613634565b6123be908561575c565b6139e6565b614441565b949350505050565b6000816001600160a01b0316836001600160a01b0316148061241757506001600160a01b0380841660009081526003602090815260408083209386168352929052205460ff165b9392505050565b600b80546000909155604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906124979030907f00000000000000000000000000000000000000000000000000000000000000009086906004016157be565b600060405180830381600087803b1580156124b157600080fd5b505af11580156124c5573d6000803e3d6000fd5b5050505090565b6000806124d98484613dd8565b9092509050811561256757604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc90612534903390309087906004016157be565b600060405180830381600087803b15801561254e57600080fd5b505af1158015612562573d6000803e3d6000fd5b505050505b801561259257336000908152601160205260408120805483929061258c90849061575c565b90915550505b604080518381526020810183905233917f26981b9aefbb0f732b0264bd34c255e831001eb50b06bc85b32cc39e14389721910160405180910390a29250929050565b6000828152602081905260409020600101546125ef81613662565b6110cc83836136f0565b3360008181526003602090815260408083206001600160a01b038716845290915290819020805460ff1916841515179055517fdcf2bd5a4c47afeb1792d170f6f5e6e528e30c6b546fffe62b697a11f8953b2b91610bf491819086908690615811565b6126646152be565b6001600160a01b038216600090815260086020908152604091829020825160608101845290546001600160401b038082168352600160401b82041692820192909252600160801b9091046001600160801b031691810191909152610aba9061446b565b6126cf613977565b805182146126f0576040516338f30c4b60e11b815260040160405180910390fd5b60006126fa612baa565b60408051606080820183526009546001600160801b03811683526001600160401b03600160801b8083048216602080870191909152600160c01b909304821685870152855193840186526018548083168552600160401b810483169385019390935290910416928101929092529192506000612774611154565b905061277e6152de565b848152600a5460208201526009546001600160801b031660a08201526018546127b8908390600160401b90046001600160401b0316613634565b60c08201526018546001600160401b031660e082015260208101516000906127e1908790613add565b905060005b888110156129ff5760008a8a83818110612802576128026157fb565b90506020020160208101906128179190615493565b90506001600160a01b0381161580612848575088828151811061283c5761283c6157fb565b60200260200101516000145b6129f6576001600160a01b038116600090815260126020908152604080832081518083019092528054825260010154918101829052919061288b908490876144a2565b905060006128ab83602001518784604001516001600160801b0316614275565b90508715806128d257506128d28184600001518a8d602001516001600160401b0316614295565b156128f05760405163f87e38e960e01b815260040160405180910390fd5b600080600061291961290687600001518d613634565b8e602001516001600160401b03166139e6565b9050806129338d604001516001600160401b031686613634565b61293d9190615749565b91505060006129668d602001516001600160401b03168d602001516001600160401b0316613634565b9050600061297c670de0b6b3a7640000836139e6565b6129978e604001516001600160401b03168d60e00151613634565b6129a19190615749565b90506129ad83826139e6565b93505050506129dd8d87815181106129c7576129c76157fb565b60200260200101516117c9838b60e001516139e6565b6101008901526129ef888585886144e1565b9750505050505b506001016127e6565b50612a478260000151612a2884606001518560e00151670de0b6b3a76400006123af9190615749565b8460800151612a37919061575c565b846020015186896040015161471b565b506020820151600a556060820151604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ac2ce9bc91612aa49133913091906004016157be565b600060405180830381600087803b158015612abe57600080fd5b505af1158015612ad2573d6000803e3d6000fd5b505050604080840151336000908152601160205291822080549193509190612afb90849061575c565b909155505061012082015115612b9f57610120820151604051630bd0dedd60e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632f437b74906024016020604051808303816000875af1158015612b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9d91906157e2565b505b505050505050505050565b612bb2615337565b506040805160a081018252600554600781810b83526001600160401b03600160401b830481166020850152600160801b9092049091169282019290925260065460608201529054608082015290565b612c09613977565b7ff96f3d6876b63665360200e15ed8964960110cbbd99e917fb50ad1e576f538ac612c3381613662565b6000828152601360205260409020805460ff19169055612c54601483612d12565b60405182907f343776161924dfe02a29fdf57e6087e2d25ca11fe703785a80632e9ab88c88a190600090a25050565b6000612c8d613977565b3360009081526011602052604081208054849290612cac908490615749565b90915550612cdc9050827f0000000000000000000000000000000000000000000000000000000000000000613634565b9050610aba6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848361474e565b600081815260208381526040918290208251808401909352805483526001015490820152612d40838361477e565b612d5d5760405163564e265760e11b815260040160405180910390fd5b60208082018051835160009081529590925260408086206001908101939093559251905185528285205591835282208281550155565b612d9b615337565b612da36152be565b6000612dad612baa565b9250612db88a61265c565b91506000612dc6848a613add565b9050612dd383828c613d8f565b6001600160801b031660408401526001600160401b03168252612e1260008812612dfe576000612e07565b612e0788615863565b8a84604001516147ec565b6001600160801b0316604084015290506000612e348b85858c8e8d888c614837565b9094509050612e4f8482612e488c8c6142fd565b8a8a61471b565b50509750975097945050505050565b612e68838361477e565b15612e8657604051631e2bbc4f60e11b815260040160405180910390fd5b8015801590612e9c5750612e9a838261477e565b155b15612eba5760405163564e265760e11b815260040160405180910390fd5b600081815260208490526040902080549083905581158015612eeb5750600082815260208590526040902060010154155b15612f055760008281526020859052604090206001018390555b600081815260209490945260408085206001908101859055938552909320928355910155565b600080600080612f39615365565b6000612f43611f16565b60408051600480825260a08201909252919250600091829160609190816020015b612f6c615365565b815260200190600190039081612f645790505090506000805b600381116130d257600219818701016000818152600f6020908152604091829020825160a081018452815481526001820154928101929092526002810154928201929092526003909101546001600160801b038082166060840152600160801b90910416608082015284518190869085908110613004576130046157fb565b6020026020010181905250806040015160001415801561302f575060608101516001600160801b0316155b801561304557508761304260018461575c565b11155b1561309057861561306c5760808101516001600160801b031680851190851802841861307b565b80608001516001600160801b03165b935080604001518761308d919061575c565b96505b60608101516001909301926001600160801b03161580156130b45750604081015115155b156130cb5760208101516130c8908761575c565b95505b5050612f85565b50600e54604051632f2e037160e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635e5c06e290613145907f0000000000000000000000000000000000000000000000000000000000000000906004016155c3565b6040805180830381865afa158015613161573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613185919061587f565b50905060008286613195846148c5565b61319f9190615749565b6131a99190615749565b9050801561325457604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc90613221907f000000000000000000000000000000000000000000000000000000000000000090309086906004016157be565b600060405180830381600087803b15801561323b57600080fd5b505af115801561324f573d6000803e3d6000fd5b505050505b5050600080600c549950613267866148dc565b929f50909d50909b5050891561329c5789878d8f6132859190615749565b61328f919061576f565b613299919061579c565b90505b80156132e2576132b0816117c9868a613634565b905060006132be878d61575c565b90506132d2818084108482180284186139e6565b92506132de8284613634565b9150505b6000805b6003811161347e5760008160038c03019050600088838151811061330c5761330c6157fb565b602002602001015190508060400151600014158015613336575060608101516001600160801b0316155b801561334c57508b61334960018461575c565b11155b15613474576040518060a001604052808c83604001518861336d919061576f565b613377919061579c565b815260200182602001518152602001613394836040015189613634565b81526001600160801b0388166020820152600060409091015280519091506133bc908861575c565b965080604001518e6133ce9190615749565b9d506133dd8160200151614a56565b81516133e890614a56565b6133f291906158a3565b6133fc908561583b565b935060008160200181815250508089848151811061341c5761341c6157fb565b6020908102919091018101919091526000838152600f8252604090819020835181559183015160018301558201516002820155606082015160808301516001600160801b03908116600160801b029116176003909101555b50506001016132e6565b50600e849055600c8b9055600081131561353557604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906135029030907f00000000000000000000000000000000000000000000000000000000000000009086906004016157be565b600060405180830381600087803b15801561351c57600080fd5b505af1158015613530573d6000803e3d6000fd5b505050505b60008112156135e9576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ac2ce9bc7f00000000000000000000000000000000000000000000000000000000000000003061359885615863565b6040518463ffffffff1660e01b81526004016135b6939291906157be565b600060405180830381600087803b1580156135d057600080fd5b505af11580156135e4573d6000803e3d6000fd5b505050505b60008f8a6135f79190615749565b90508060031061362157868160030381518110613616576136166157fb565b60200260200101519a505b5050505050505050505091939590929450565b6000816000190483118202156136525763c4c5d7f56000526004601cfd5b50670de0b6b3a764000091020490565b611d058133614a7c565b6136768282611d2b565b611150576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556136ac3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6136fa8282611d2b565b15611150576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b80516005805460208401516040808601516001600160401b03908116600160801b0267ffffffffffffffff60801b19938216600160401b026001600160801b03199095169190961617929092171692909217905560608201516006556080820151600755517f9334cbdde649ebcbf798eaa08c381dc574197dc53947470a9be908dbcccc330190600090a150565b80158061385d5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015613837573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061385b91906157e2565b155b6138c85760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161113d565b6040516001600160a01b0383166024820152604481018290526110cc90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614ad5565b613933614baa565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405161396d91906155c3565b60405180910390a1565b60015460ff16156139bd5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161113d565b565b6139e0846323b872dd60e01b8585856040516024016138f4939291906157be565b50505050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a764000002158202613a235763bcbede656000526004601cfd5b50670de0b6b3a7640000919091020490565b60008160070b138015613a535750670de0b6b3a7640000600782900b125b80613a695750670de0b6b8c1e505ce600782900b135b15613a875760405163947800ab60e01b815260040160405180910390fd5b6005805467ffffffffffffffff19166001600160401b038316179055604051600782900b81527fcb1621676ff5c8c9deff7ffc0af9b2c296851bc5b191381ac07d97e82ec03fe69060200160405180910390a150565b6000806000846000015160070b1215613be2576001600160401b037f000000000000000000000000000000000000000000000000000000000000000081811691604082901c1690670de0b6b3a764000064ffffffffff608083901c811682019260a881901c821683019260d09190911c909116016000613b5d8a8a61436c565b905084811115613b6a5750835b858111613b9e57613b8d613b87613b818685615749565b886139e6565b82613634565b613b97908561575c565b9650613bd7565b613bca613bc0613bae8486615749565b6123be89670de0b6b3a7640000615749565b6123af8884615749565b613bd4908361575c565b96505b505050505050613be6565b5082515b6123c88482614bf3565b613bf8615337565b600080613c0589886142fd565b60608c015190915087151580613c2d5750856001600160401b0316876001600160401b031614155b15613c7857613c49866001600160401b03166123af8b8b6142fd565b613c5c886001600160401b03168b613634565b8d60600151613c6b9190615749565b613c75919061575c565b90505b60008a15613cbd57613cb8613cb2613c948f606001518e6139e6565b8f604001518f613ca491906158c3565b6001600160401b0316613634565b84613634565b613cc0565b60005b90506000866001600160801b0316828f60800151613cde919061575c565b613ce89190615749565b90506040518060a001604052808f6000015160070b8152602001426001600160401b031681526020018e6001600160401b03168152602001848152602001828152509550505089600014613d7b57613d76613d70613d4a8e606001518d6139e6565b613d5c90670de0b6b3a7640000615749565b8e604001518760400151613ca491906158c3565b8b613634565b613d7e565b60005b925050509850989650505050505050565b6000613dbb613db585602001516001600160401b0316866000015186613ca491906158c3565b83613634565b84604001516123c891906158e3565b613dd2614c31565b42600255565b6000806000613de5612baa565b604080516060810182526009546001600160801b03811682526001600160401b03600160801b820481166020840152600160c01b90910416918101919091529091506000613e31611154565b9050613e3b6152de565b838152600a546020820181905283516001600160801b031660a0830152670de0b6b3a764000060e0830152600090613e74908690613add565b600080516020615a3a833981519152546000818152601560209081526040808320838052909152902054919250905b8984606001511015613ff857811580613ebb57508a82115b613ff85760008281526013602052604090205460ff161580613edb575080155b15613f0f57506000908152601460209081526040808320600101548084526015835281842084805290925290912054613ea3565b6000828152601560209081526040808320848452909152902054818103613f365750613ff8565b6001600160a01b03821660009081526012602090815260408083208151808301909252805482526001015491810182905284929091613f77908490896144a2565b9050613f838987613634565b60c08901526060880151613f97908f615749565b610100890152602082015181516040830151613fd892613fc19290916001600160801b0316614275565b835160208d01518c906001600160401b0316614295565b15613fec57613fe9888383866144e1565b97505b83945050505050613ea3565b614015846000015185608001518660200151888a6040015161471b565b506020840151600a5560608401518a1461404257604051633e6c5e0f60e01b815260040160405180910390fd5b8360600151846040015198509850505050505050509250929050565b60008061406c858585614275565b905080158015906141505750866001600160401b031661414e7f0000000000000000000000000000000000000000000000000000000000000000887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016140f391906155c3565b602060405180830381865afa158015614110573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061413491906157e2565b61413e919061576f565b614148919061579c565b836139e6565b105b1561415f576001915050614165565b60009150505b95945050505050565b6040805180820190915260008082526020820152855161418e90856142fd565b8652602086015161419f90846142fd565b60208701819052158015906141d857506009546020870151865160408801516001600160801b03938416936141d693929116614275565b105b156141f657604051634b2c23a160e11b815260040160405180910390fd5b6001600160a01b038716600081815260126020908152604090912088518155908801516001909101557f71671d6112ff9270f1553ebc8fbf767a3221090f1002c7047475b6fa8f5801cd858561424c86826142fd565b6040805193845260208401929092529082015260600160405180910390a2509395945050505050565b60008161428b85856001600160401b0316613634565b6123c89190615749565b600084826142a3858761576f565b6142ad919061579c565b101595945050505050565b8082036000821380156142ca57508281115b806142df57506000821280156142df57508281105b15610aba5760405163e942b9ed60e01b815260040160405180910390fd5b81810160008213801561430f57508281105b80614324575060008212801561432457508281115b15610aba576040516354012a2960e11b815260040160405180910390fd5b6000670de0b6b3a76400006143578484614c6c565b8161436457614364615786565b059392505050565b6000806143828385604001518660800151614275565b905080156144375761443281600b547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c3536e7306040518263ffffffff1660e01b81526004016143dd91906155c3565b602060405180830381865afa1580156143fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061441e91906157e2565b614428908561575c565b6123be9190615749565b6123c8565b6000949350505050565b6000600160401b8210614467576040516302217c1560e11b815260040160405180910390fd5b5090565b6144736152be565b81516001600160401b031660000361446757600060208301819052670de0b6b3a7640000835260408301525090565b6144aa6152be565b6144b38461265c565b90506144c0818385613d8f565b6001600160801b031660408201526001600160401b03909116815292915050565b6144e96152de565b6000806000806000614511896020015189600001518a604001516001600160801b0316614275565b905060006145288b61010001518c60e00151613634565b905061458e8183118015614548575060a08c01516145468385615749565b105b61455f5761455a838d60e001516139e6565b61457c565b61457c8c60a00151846145729190615749565b8d60e001516139e6565b6117c98c600001518e60c00151614cb5565b6101008c01519091508181118183180218955060006145b1878d60e00151613634565b90506145c281848c604001516147ec565b6001600160801b0390811660408d01528b519195506145e49183918716614ceb565b94506145f4878d60c001516139e6565b8b51909650861115614605578a5195505b8a51861480156146185750848b60200151115b15614644576146278184615749565b8c61012001818151614639919061575c565b90525060208b015194505b505050600089602001519050600061467c888c600001518b858e6020015161466b8a614a56565b61467490615863565b896000614837565b908c5290506146b1888b8b61469089614a56565b61469990615863565b6146a289614a56565b6146ab90615863565b8761416e565b50838b6020018181516146c49190615749565b90525060408b0180518691906146db90839061575c565b90525060608b0180518791906146f290839061575c565b90525060808b01805182919061470990839061575c565b905250999a9950505050505050505050565b600061473282848689604001518a60800151614d27565b61473b86613755565b61474485614d59565b9695505050505050565b6040516001600160a01b0383166024820152604481018290526110cc90849063a9059cbb60e01b906064016138f4565b6000816000036147a15760405163ee7efd5760e01b815260040160405180910390fd5b6000828152602084905260409020541515806147cd575060008281526020849052604090206001015415155b8061241757505060008080526020929092526040909120600101541490565b60008184158015906147fd57508315155b1561482f57836148166001600160801b0385168761576f565b614820919061579c565b915061482c8282615903565b90505b935093915050565b61483f615337565b60208781015160008b815260169092526040822054614883908c906148648a8a6142fd565b6001600160401b038816156148795787614dac565b8c60200151614dac565b6001600160401b031660208a015261489b8b8a614df2565b6148b38a8a600001518a8a8a868f602001518c613bf0565b909c909b509950505050505050505050565b60008082126148d45781610aba565b600092915050565b6000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635e5c06e2306040518263ffffffff1660e01b815260040161493191906155c3565b6040805180830381865afa15801561494d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614971919061587f565b9150915061497e826148c5565b935061498a8282614e8c565b92506000614996612baa565b600a5490915060006149ba836149ac8185613add565b846000806000806000613bf0565b909350905060006149e78483856149cf611154565b600954600160c01b90046001600160401b031661471b565b90506149fc8385604001518660800151614275565b614a068c8a61575c565b614a10919061575c565b995080614a1c87614eb4565b614a26919061575c565b9850888a1015614a495760405163702fbbed60e01b815260040160405180910390fd5b5050505050509193509193565b6000600160ff1b821061446757604051632db27c5360e01b815260040160405180910390fd5b614a868282611d2b565b61115057614a9381614ecb565b614a9e836020614edd565b604051602001614aaf929190615947565b60408051601f198184030181529082905262461bcd60e51b825261113d916004016159b6565b6000614b2a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166150789092919063ffffffff16565b9050805160001480614b4b575080806020019051810190614b4b91906159e9565b6110cc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161113d565b60015460ff166139bd5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161113d565b600061241783604001516001600160401b03166123af846001600160401b031686602001516001600160401b03164203670de0b6b3a7640000615087565b614c39613977565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833613960565b8181026000831280614c9757508115801590614c97575082828281614c9357614c93615786565b0514155b15610aba57604051631eed389360e01b815260040160405180910390fd5b600081600019048311820215614cd35763c4c5d7f56000526004601cfd5b50670de0b6b3a7640000910281810615159190040190565b6000614d09614cfa838661575c565b846001600160401b03166139e6565b905083614d17828585614275565b1015612417576001019392505050565b614d34858585858561405e565b15614d5257604051632ce9f52360e01b815260040160405180910390fd5b5050505050565b6000614d63613977565b614d8d827f0000000000000000000000000000000000000000000000000000000000000000613634565b600b6000828254614d9e919061575c565b92505081905590505b919050565b808315801590614dbd575082601754115b156123c8576000848152601560205260409020614dda9086612d12565b50505060009182525060166020526040812081905590565b6001600160a01b0382166000908152600860209081526040918290208351815492850151848601516001600160801b03908116600160801b026001600160401b03928316600160401b026001600160801b031990961692909316919091179390931792909216919091179055517f4fd60289e0d86501846be34d5f370dc28945d66ca81804a5f84e0e7c017c73a290610bf49084906155c3565b600080614e9883615863565b905080841261443757614eab84826158a3565b61443290615863565b60008082136148d457614ec682615863565b610aba565b6060610aba6001600160a01b03831660145b60606000614eec83600261576f565b614ef790600261575c565b6001600160401b03811115614f0e57614f0e6154d8565b6040519080825280601f01601f191660200182016040528015614f38576020820181803683370190505b509050600360fc1b81600081518110614f5357614f536157fb565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110614f8257614f826157fb565b60200101906001600160f81b031916908160001a9053506000614fa684600261576f565b614fb190600161575c565b90505b6001811115615029576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110614fe557614fe56157fb565b1a60f81b828281518110614ffb57614ffb6157fb565b60200101906001600160f81b031916908160001a90535060049490941c9361502281615a06565b9050614fb4565b5083156124175760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161113d565b60606123c88484600085615145565b60008280156151395784801561512e576001851680156150a9578693506150ad565b8493505b50600284046002860495505b8515615128578687028760801c156150d057600080fd5b818101818110156150e057600080fd5b869004975050600186161561511d57868402848882041415881515161561510657600080fd5b8181018181101561511657600080fd5b8690049450505b6002860495506150b9565b50615133565b600092505b5061513d565b8291505b509392505050565b6060824710156151a65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161113d565b600080866001600160a01b031685876040516151c29190615a1d565b60006040518083038185875af1925050503d80600081146151ff576040519150601f19603f3d011682016040523d82523d6000602084013e615204565b606091505b509150915061521587838387615220565b979650505050505050565b6060831561528f578251600003615288576001600160a01b0385163b6152885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161113d565b50816123c8565b6123c883838151156152a45781518083602001fd5b8060405162461bcd60e51b815260040161113d91906159b6565b604080516060810182526000808252602082018190529181019190915290565b6040518061014001604052806152f2615337565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b6040518060a0016040528060008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b031681525090565b6000602082840312156153b857600080fd5b81356001600160e01b03198116811461241757600080fd5b80356001600160a01b0381168114614da757600080fd5b600080604083850312156153fa57600080fd5b8235915061540a602084016153d0565b90509250929050565b60006020828403121561542557600080fd5b5035919050565b8015158114611d0557600080fd5b6000806040838503121561544d57600080fd5b615456836153d0565b915060208301356154668161542c565b809150509250929050565b6000806040838503121561548457600080fd5b50508035926020909101359150565b6000602082840312156154a557600080fd5b612417826153d0565b600080604083850312156154c157600080fd5b6154ca836153d0565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126154ff57600080fd5b813560206001600160401b038083111561551b5761551b6154d8565b8260051b604051601f19603f83011681018181108482111715615540576155406154d8565b60405293845285810183019383810192508785111561555e57600080fd5b83870191505b8482101561521557813583529183019190830190615564565b6000806040838503121561559057600080fd5b8235915060208301356001600160401b038111156155ad57600080fd5b6155b9858286016154ee565b9150509250929050565b6001600160a01b0391909116815260200190565b6000806000606084860312156155ec57600080fd5b6155f5846153d0565b9250615603602085016153d0565b915060408401356156138161542c565b809150509250925092565b600080600080600060a0868803121561563657600080fd5b61563f866153d0565b945061564d602087016153d0565b935061565b604087016153d0565b94979396509394606081013594506080013592915050565b6000806040838503121561568657600080fd5b61568f836153d0565b915061540a602084016153d0565b6000806000604084860312156156b257600080fd5b83356001600160401b03808211156156c957600080fd5b818601915086601f8301126156dd57600080fd5b8135818111156156ec57600080fd5b8760208260051b850101111561570157600080fd5b60209283019550935090850135908082111561571c57600080fd5b50615729868287016154ee565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b81810381811115610aba57610aba615733565b80820180821115610aba57610aba615733565b8082028115828204841417610aba57610aba615733565b634e487b7160e01b600052601260045260246000fd5b6000826157b957634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156157f457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b808201828112600083128015821682158216171561585b5761585b615733565b505092915050565b6000600160ff1b820161587857615878615733565b5060000390565b6000806040838503121561589257600080fd5b505080516020909101519092909150565b8181036000831280158383131683831282161715610d8057610d80615733565b6001600160401b03828116828216039080821115610d8057610d80615733565b6001600160801b03818116838216019080821115610d8057610d80615733565b6001600160801b03828116828216039080821115610d8057610d80615733565b60005b8381101561593e578181015183820152602001615926565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351615979816017850160208801615923565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516159aa816028840160208801615923565b01602801949350505050565b60208152600082518060208401526159d5816040850160208701615923565b601f01601f19169190910160400192915050565b6000602082840312156159fb57600080fd5b81516124178161542c565b600081615a1557615a15615733565b506000190190565b60008251615a2f818460208701615923565b919091019291505056fe4f26c3876aa9f4b92579780beea1161a61f87ebf1ec6ee865b299e447ecba99da264697066735822122054c132516b40f09b9eb7fcd8b09cad51c9c5a86045d0735bd30b938c949e4fcb64736f6c63430008130033",
    "sourceMap": "697:8882:90:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:31;;;;;;:::i;:::-;;:::i;:::-;;;470:14:181;;463:22;445:41;;433:2;418:18;2732:202:31;;;;;;;;7657:103:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1080:25:181;;;1068:2;1053:18;7657:103:88;934:177:181;3886:45:88;;3930:1;3886:45;;1738:42:90;;;;;-1:-1:-1;;;;;1738:42:90;;;;-1:-1:-1;;;1738:42:90;;;;;-1:-1:-1;;;1738:42:90;;;;;;;;;;-1:-1:-1;;;;;1367:15:181;;;1349:34;;1419:15;;;1414:2;1399:18;;1392:43;1471:15;;1451:18;;;1444:43;;;;1300:2;1285:18;1738:42:90;1116:377:181;56336:696:88;;;:::i;:::-;;4504:129:31;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;2861:194:173;;;;;;:::i;:::-;;:::i;54991:1263:88:-;;;;;;:::i;:::-;;:::i;51478:330::-;;;;;;:::i;:::-;;:::i;30386:2242::-;;;;;;:::i;:::-;;:::i;585:23:172:-;;;;;;4929:145:31;;;;;;:::i;:::-;;:::i;3397:35:88:-;;;;;6038:214:31;;;;;;:::i;:::-;;:::i;38773:97:88:-;;;:::i;6424:26::-;;;;;;12071:647;;;;;;:::i;:::-;;:::i;1173:99:172:-;;;:::i;52988:1248:88:-;;;;;;:::i;:::-;;:::i;3766:43::-;;3808:1;3766:43;;33194:250;;;;;;:::i;:::-;;:::i;50849:344::-;;;;;;:::i;:::-;;:::i;:::-;;;;3623:25:181;;;3691:14;;3684:22;3679:2;3664:18;;3657:50;3596:18;50849:344:88;3455:258:181;8083:51:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3892:25:181;;;3948:2;3933:18;;3926:34;;;;3865:18;8083:51:88;3718:248:181;1615:84:47;1685:7;;;;1615:84;;6680:35:88;;;;;;8229:72;;;;;;:::i;:::-;;;;;;;;;;;;;;;;26886:3077;;;;;;:::i;:::-;;:::i;:::-;;;;5662:25:181;;;5718:2;5703:18;;5696:34;;;;5746:18;;;5739:34;5804:2;5789:18;;5782:34;5649:3;5634:19;26886:3077:88;5431:391:181;3204:1188:90;;;;;;:::i;:::-;;:::i;6035:30:88:-;;;;;-1:-1:-1;;;;;6035:30:88;;;-1:-1:-1;;;;;;;;6035:30:88;;;;;-1:-1:-1;;;6035:30:88;;;;;;;;;-1:-1:-1;;;;;6296:32:181;;;6278:51;;-1:-1:-1;;;;;6402:15:181;;;6397:2;6382:18;;6375:43;6454:15;;6434:18;;;6427:43;6266:2;6251:18;6035:30:88;6080:396:181;3141:31:88;;;;;;;;;;;;:::i;37453:724::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6924:31:181;;;6906:50;;6987:2;6972:18;;6965:34;;;;7015:18;;;7008:34;6894:2;6879:18;37453:724:88;6706:342:181;2268::173;;;;;;:::i;:::-;;:::i;6170:30:88:-;;;;;;998:73:172;;;:::i;67130:294:88:-;;;;;;:::i;:::-;;:::i;3021:145:31:-;;;;;;:::i;:::-;;:::i;25335:839:88:-;;;;;;:::i;:::-;;:::i;14396:320::-;;;:::i;2153:49:31:-;;2198:4;2153:49;;8715:69:88;;;;;;:::i;:::-;;;;;;;;;;;;;;3628:47;;3669:6;3628:47;;3506:36;;;;;7856:53;;;;;;:::i;:::-;;;;;;;;;;;;;;15050:187;;;:::i;6274:31::-;;;;;;4094:41;;;;;7481:56;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7481:56:88;;;;-1:-1:-1;;;7481:56:88;;;;;;;;;7914:25:181;;;7970:2;7955:18;;7948:34;;;;7998:18;;;7991:34;;;;-1:-1:-1;;;;;8099:15:181;;;8094:2;8079:18;;8072:43;8152:15;8052:3;8131:19;;8124:44;7901:3;7886:19;7481:56:88;7655:519:181;46996:3390:88;;;;;;:::i;:::-;;:::i;52006:330::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8816:31:181;;;8798:50;;8786:2;8771:18;52006:330:88;8654:200:181;3297:149:173;;;;;;:::i;:::-;;:::i;6527:55:88:-;;;;;;:::i;:::-;;;;;;;;;;;;;;38241:209;;;:::i;67769:633::-;;;;;;:::i;:::-;;:::i;5354:147:31:-;;;;;;:::i;:::-;;:::i;1776:200:173:-;;;;;;:::i;:::-;;:::i;3546:148:94:-;;;;;;:::i;:::-;;:::i;:::-;;;;9389:13:181;;-1:-1:-1;;;;;9385:22:181;;;9367:41;;9468:4;9456:17;;;9450:24;9446:33;;;9424:20;;;9417:63;9528:17;;;9522:24;-1:-1:-1;;;;;9518:50:181;9496:20;;;9489:80;9318:2;9303:18;3546:148:94;9124:451:181;8854:30:88;;;;;;5576:4001:90;;;;;;:::i;:::-;;:::i;3063:25:88:-;;;;;3275:97:94;;;:::i;:::-;;;;;;10802:4:181;10844:3;10833:9;10829:19;10821:27;;10895:6;10889:13;10886:1;10875:28;10864:9;10857:47;10951:4;10943:6;10939:17;10933:24;-1:-1:-1;;;;;11050:2:181;11036:12;11032:21;11025:4;11014:9;11010:20;11003:51;11122:2;11114:4;11106:6;11102:17;11096:24;11092:33;11085:4;11074:9;11070:20;11063:63;;;11182:4;11174:6;11170:17;11164:24;11157:4;11146:9;11142:20;11135:54;11245:4;11237:6;11233:17;11227:24;11220:4;11209:9;11205:20;11198:54;10654:604;;;;;3225:31:88;;;;;54408:268;;;;;;:::i;:::-;;:::i;33733:235::-;;;;;;:::i;:::-;;:::i;3295:29::-;;;;;2732:202:31;2817:4;-1:-1:-1;;;;;;2840:47:31;;-1:-1:-1;;;2840:47:31;;:87;;-1:-1:-1;;;;;;;;;;937:40:73;;;2891:36:31;2833:94;2732:202;-1:-1:-1;;2732:202:31:o;56336:696:88:-;56424:10;56381:20;56465:25;;;:11;:25;;;;;;;56504:14;;;56500:78;;56527:51;;-1:-1:-1;;;56527:51:88;;;;;;;;;;;56500:78;56588:27;;;;:16;:27;;;;;:48;;56623:12;56588:34;:48::i;:::-;56653:25;;;;:11;:25;;;;;;;;56646:32;;;56772:10;56796:21;;;:9;:21;;;;;:32;;;56842:15;;56735:235;;56886:11;:9;:11::i;:::-;56911;:34;-1:-1:-1;;;56911:34:88;;-1:-1:-1;;;;;56911:34:88;;56735:23;:235::i;:::-;-1:-1:-1;;56986:39:88;;57014:10;;-1:-1:-1;57003:9:88;;56986:39;;;;;56371:661;;56336:696::o;2861:194:173:-;2956:10;2939:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2939:35:173;;;;;;;;;;;;:47;;-1:-1:-1;;2939:47:173;;;;;;;;;;3001;;11946:34:181;;;11996:18;;;11989:43;;;;12048:18;;;12041:50;3001:47:173;;11896:2:181;11881:18;3001:47:173;;;;;;;;2861:194;;:::o;54991:1263:88:-;55063:37;;;;:21;:37;;;;;;;;55058:115;;55121:52;;-1:-1:-1;;;55121:52:88;;;;;;;;;;;55058:115;55223:10;55192:18;55213:21;;;:9;:21;;;;;:32;;;55259:15;;:28;-1:-1:-1;55255:97:88;;;55308:44;;-1:-1:-1;;;55308:44:88;;;;;;;;;;;55255:97;55414:10;55371:20;55439:25;;;:11;:25;;;;;;:30;55435:107;;55490:52;;-1:-1:-1;;;55490:52:88;;;;;;;;;;;55435:107;55642:25;;;;:11;:25;;;;;;;;:42;;;55825:32;;;:16;:32;;;;;;1276:13:170;;;;;;;;;:18;;;55771:32:88;;;;;;;:97;;55642:25;;55771:39;:97::i;:::-;55926:261;55963:10;55987;56011:15;;56040:1;56055:11;:9;:11::i;:::-;56080;:34;-1:-1:-1;;;56080:34:88;;-1:-1:-1;;;;;56080:34:88;56128:49;56162:14;56128:33;:49::i;:::-;55926:23;:261::i;:::-;-1:-1:-1;;56203:44:88;;56236:10;;-1:-1:-1;56220:14:88;;56203:44;;;;;55048:1206;;54991:1263;:::o;51478:330::-;51558:20;51605:27;;;:16;:27;;;;;;;;1539:13:170;;;;;;;;:18;;51652:150:88;51673:5;51668:1;:10;51652:150;;51711:27;;;;:16;:27;;;;;;;;2335:14:170;;;;;;;;:19;51696:64:88;-1:-1:-1;51786:3:88;;51652:150;;;;51478:330;;;;:::o;30386:2242::-;30459:20;30491;30514:17;:15;:17::i;:::-;30491:40;;3808:1;30584:13;:31;30569:12;:46;30565:127;;;30640:52;;-1:-1:-1;;;30640:52:88;;;;;;;;;;;30565:127;30770:23;30797:37;30820:13;30797:22;:37::i;:::-;30764:70;;;;;;30924:10;:28;;;30956:1;30924:33;:63;;;;-1:-1:-1;30961:21:88;;;;-1:-1:-1;;;;;30961:26:88;;30924:63;:102;;;;-1:-1:-1;30991:30:88;;;;:35;30924:102;30920:154;;;-1:-1:-1;31053:21:88;;;;:6;:21;;;;;;;;;31040:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;31040:34:88;;;;;;;-1:-1:-1;;;31040:34:88;;;;;;;;30920:154;31143:28;;;;:33;;;;:63;;-1:-1:-1;31180:21:88;;;;-1:-1:-1;;;;;31180:26:88;;31143:63;31139:136;;;31227:48;;-1:-1:-1;;;31227:48:88;;;;;;;;;;;31139:136;31330:19;31352:34;;;:19;:34;;;;;;;;31387:10;31352:46;;;;;;;;31451:21;;;;31352:46;;31330:19;31433:40;;31352:46;;-1:-1:-1;;;;;31433:40:88;:4;:40::i;:::-;31534:34;;;;:19;:34;;;;;;;;31569:10;31534:46;;;;;;;31527:53;31408:65;-1:-1:-1;31800:28:88;31408:65;31800:11;:28;:::i;:::-;31785:10;31778:18;;;;:6;:18;;;;;:50;;:18;;;:50;;;;;:::i;:::-;;;;-1:-1:-1;;32163:28:88;;;;32115:31;;31852:14;;-1:-1:-1;31852:14:88;;32115:45;;31852:14;;32115:45;:::i;:::-;:76;;;;:::i;:::-;32201:61;;-1:-1:-1;;;32201:61:88;;32100:91;;-1:-1:-1;;;;;;32201:3:88;:17;;;;:61;;32219:16;;32237:10;;32100:91;;32201:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32378:11;32346:10;:28;;:43;;;;;;;:::i;:::-;;;-1:-1:-1;32399:47:88;;32434:12;;32399:10;;:47;;32434:12;;32399:47;:::i;:::-;;;-1:-1:-1;32456:21:88;;;;:6;:21;;;;;;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;32456:34:88;;;-1:-1:-1;;;32456:34:88;;;;;;;;;32500:20;:36;;32524:12;;32456:21;32500:36;;32524:12;;32500:36;:::i;:::-;;;;-1:-1:-1;;32560:61:88;;;3892:25:181;;;3948:2;3933:18;;3926:34;;;32583:10:88;;32560:61;;3865:18:181;32560:61:88;;;;;;;30481:2147;;;;30386:2242;;;:::o;4929:145:31:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:31;;719:10:66;6133:23:31;6125:83;;;;-1:-1:-1;;;6125:83:31;;13606:2:181;6125:83:31;;;13588:21:181;13645:2;13625:18;;;13618:30;13684:34;13664:18;;;13657:62;-1:-1:-1;;;13735:18:181;;;13728:45;13790:19;;6125:83:31;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;38773:97:88:-;38836:27;;-1:-1:-1;;;38836:27:88;;38810:7;;-1:-1:-1;;;;;38836:6:88;:11;;;;:27;;38856:5;;38836:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38829:34;;38773:97;:::o;12071:647::-;12136:26;12165:14;:12;:14::i;:::-;12136:43;;12193:9;:21;;;-1:-1:-1;;;;;12193:26:88;12218:1;12193:26;12189:40;;12221:8;;;12189:40;12277:42;2198:4:31;12308:10:88;12277;:42::i;:::-;-1:-1:-1;;;;;12393:15:88;12362:47;:21;;;:47;368:4:171;12419:25:88;;;:39;12468:24;12362:9;12468:13;:24::i;:::-;12605:53;-1:-1:-1;;;;;12605:5:88;:17;12623:15;-1:-1:-1;;12605:17:88;:53::i;:::-;12668:43;;-1:-1:-1;;;12668:43:88;;-1:-1:-1;;;;;14195:32:181;;;12668:43:88;;;14177:51:181;12706:4:88;14244:18:181;;;14237:50;12668:3:88;:20;;;;14150:18:181;;12668:43:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12126:592;12071:647;:::o;1173:99:172:-;313:24;2631:16:31;2642:4;2631:10;:16::i;:::-;1233:10:172::1;:8;:10::i;:::-;-1:-1:-1::0;1264:1:172::1;1253:8;:12:::0;1173:99::o;52988:1248:88:-;1239:19:47;:17;:19::i;:::-;1079:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;53171:9:88::2;53154:14;:26;:56;;;;53196:14;53184:9;:26;53154:56;53150:135;;;53231:54;;-1:-1:-1::0;;;53231:54:88::2;;;;;;;;;;;53150:135;53335:28;1276:13:170::0;;53366:16:88::2;1276:13:170::0;;-1:-1:-1;;;;;;;;;;;1276:18:170;53489:25:88;;:52;::::2;;;-1:-1:-1::0;53518:23:88;;::::2;53489:52;53488:317;;;-1:-1:-1::0;53662:23:88;;;::::2;::::0;:129:::2;;;53724:18;53707:14;:35;53706:84;;;;53771:18;53748:20;:41;53706:84;53488:498;;;-1:-1:-1::0;2309:7:170;2335:14;;;53942:16:88::2;2335:14:170::0;;;;;:19;53925:14:88::2;:61;53488:498;53402:653;;;54004:51;;-1:-1:-1::0;;;54004:51:88::2;;;;;;;;;;;53402:653;54066:59;:16;54090:14:::0;54106:18;54066:23:::2;:59::i;:::-;54135:37;::::0;;;:21:::2;:37;::::0;;;;;:44;;-1:-1:-1;;54135:44:88::2;54175:4;54135:44;::::0;;54195:33;54157:14;;54195:33:::2;::::0;::::2;53140:1096;1268:1:47::1;52988:1248:88::0;;:::o;33194:250::-;33271:18;1239:19:47;:17;:19::i;:::-;33301:57:88::1;-1:-1:-1::0;;;;;33301:5:88::1;:22;33324:10;33344:4;33351:6:::0;33301:22:::1;:57::i;:::-;33381:24;33386:6;33394:10;33381:4;:24::i;:::-;-1:-1:-1::0;;;;;33415:8:88;::::1;;::::0;;;:4:::1;:8;::::0;;;;:22;;33368:37;;-1:-1:-1;33368:37:88;;33415:8;;;:22:::1;::::0;33368:37;;33415:22:::1;:::i;:::-;::::0;;;-1:-1:-1;33194:250:88;;;-1:-1:-1;;;33194:250:88:o;50849:344::-;50909:17;1276:13:170;;;50965:16:88;1276:13:170;;-1:-1:-1;;;;;;;;;;;1276:18:170;;50909:17:88;51001:133;51022:5;51017:1;:10;51001:133;;1908:7:170;1934:14;;;51057:16:88;1934:14:170;;;;;:19;;;51045:47:88;-1:-1:-1;51118:3:88;;51001:133;;;-1:-1:-1;;51154:32:88;;;;:21;:32;;;;;;51176:9;;51154:32;;;;;-1:-1:-1;50849:344:88:o;26886:3077::-;26995:22;27019:20;27041:24;27067:25;27124:17;:15;:17::i;:::-;27109:32;;27217:14;27233:19;27254:18;27274:20;27296:23;27332:36;27355:12;27332:22;:36::i;:::-;27203:165;;;;;;;;;;27450:22;27487:9;27482:865;27502:16;:23;27498:1;:27;27482:865;;;27543:23;27569:16;27586:1;27569:19;;;;;;;;:::i;:::-;;;;;;;27543:45;;27630:3;;;;;27774:15;27793:1;27774:20;:95;;;;3930:1;27837:12;:32;27818:15;:51;;27774:95;:158;;;-1:-1:-1;27893:23:88;;;;:6;:23;;;;;:34;;;-1:-1:-1;;;;;27893:34:88;:39;;27774:158;:228;;;-1:-1:-1;27956:23:88;;;;:6;:23;;;;;:41;;;:46;27774:228;27770:259;;;28021:8;27482:865;;27770:259;28057:28;28088:36;;;:19;:36;;;;;;;;28125:10;28088:48;;;;;;;;28150:38;28088:48;28150:38;;:::i;:::-;28209:36;;;;:19;:36;;;;;;;;28246:10;28209:48;;;;;;;28202:55;;;28271:23;;;:6;:23;;;;;:41;;:65;;28150:38;;-1:-1:-1;28316:20:88;;28271:41;;28209:36;28271:65;;28316:20;;28271:65;:::i;:::-;;;;-1:-1:-1;27482:865:88;;-1:-1:-1;;;27482:865:88;;-1:-1:-1;28724:12:88;28710:11;28686:20;28695:11;28686:6;:20;:::i;:::-;28685:36;;;;:::i;:::-;:51;;;;:::i;:::-;28668:68;;28858:16;28895:10;28878:14;:27;28877:59;;28922:14;28877:59;;;28909:10;28877:59;28946:60;;-1:-1:-1;;;28946:60:88;;28858:78;;-1:-1:-1;;;;;;28946:3:88;:17;;;;:60;;28972:4;;28979:16;;28858:78;;28946:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29050:8;29016:10;:30;;:42;;;;;;;:::i;:::-;;;-1:-1:-1;;29223:28:88;;;;:33;29222:195;;29337:79;29341:10;:39;;;-1:-1:-1;;;;;29337:79:88;29382:33;29387:14;29403:11;29382:4;:33::i;:::-;1473:9:171;;;1484:8;;-1:-1:-1;1469:24:171;1462:32;;1357:145;29337:79:88;29222:195;;;29280:33;29285:14;29301:11;29280:4;:33::i;:::-;-1:-1:-1;;;;;29180:237:88;:39;;;:237;29464:28;;;:43;;29496:11;;29464:28;:43;;29496:11;;29464:43;:::i;:::-;;;-1:-1:-1;29517:20:88;;;;:6;:20;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29517:33:88;;;-1:-1:-1;;;29517:33:88;;;;;;;;;;29560;;;;;29594:10;29560:45;;;;;;;:60;;29609:11;;29517:20;29560:60;;29609:11;;29560:60;:::i;:::-;;;;-1:-1:-1;;29658:10:88;29651:18;;;;:6;:18;;;;;;29689:11;;29651:35;;29672:14;;29651:35;:::i;:::-;:49;;;;:::i;:::-;29637:10;29630:18;;;;:6;:18;;;;;;;;;:70;;;;29867:89;;14632:25:181;;;14673:18;;;14666:34;;;3808:1:88;29776:30;;14716:18:181;;;14709:34;;;29776:30:88;-1:-1:-1;3930:1:88;29808:32;;;-1:-1:-1;29776:12:88;;29867:89;;14620:2:181;14605:18;29867:89:88;;;;;;;27099:2864;;;;;;26886:3077;;;;;;;:::o;3204:1188:90:-;1239:19:47;:17;:19::i;:::-;1010:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;3324:9:90::2;-1:-1:-1::0;;;3324:24:90;3320:1021:::2;;3350:11;:37:::0;;-1:-1:-1;;;;;;3350:37:90::2;-1:-1:-1::0;;;;;3350:37:90;::::2;;::::0;;3320:1021:::2;;;3406:9;-1:-1:-1::0;;;3406:31:90;3402:939:::2;;3439:11;:43:::0;;-1:-1:-1;;;;3439:43:90::2;-1:-1:-1::0;;;;;;;;3439:43:90;::::2;;;::::0;;3402:939:::2;;;3501:9;-1:-1:-1::0;;;3501:37:90;3497:844:::2;;3540:11;:49:::0;;-1:-1:-1;;;;;3540:49:90::2;-1:-1:-1::0;;;;;;;;3540:49:90;::::2;;;::::0;;3497:844:::2;;;3608:9;-1:-1:-1::0;;;3608:30:90;3604:737:::2;;3640:15;:22:::0;;;3604:737:::2;;;3863:9;-1:-1:-1::0;;;3863:23:90;3859:482:::2;;3888:68;-1:-1:-1::0;;3902:4:90::2;:25;3901:54;;3949:4;3888:12;:68::i;3901:54::-;-1:-1:-1::0;;3888:12:90::2;:68::i;:::-;3859:482;;;3975:9;-1:-1:-1::0;;;3975:33:90;3971:370:::2;;4010:17;:51:::0;;-1:-1:-1;;4010:51:90::2;-1:-1:-1::0;;;;;4010:51:90;::::2;;::::0;;3971:370:::2;;;4080:9;-1:-1:-1::0;;;4080:34:90;4076:265:::2;;4116:17;:52:::0;;-1:-1:-1;;;;4116:52:90::2;-1:-1:-1::0;;;;;;;;4116:52:90;::::2;;;::::0;;4076:265:::2;;;4187:9;-1:-1:-1::0;;;4187:33:90;4183:158:::2;;4222:17;:51:::0;;-1:-1:-1;;;;4222:51:90::2;-1:-1:-1::0;;;;;;;;4222:51:90;::::2;;;::::0;;4183:158:::2;;;4295:46;;-1:-1:-1::0;;;4295:46:90::2;;;;;;;;;;;4183:158;4369:9;4356:29;4380:4;4356:29;;;;1080:25:181::0;;1068:2;1053:18;;934:177;4356:29:90::2;;;;;;;;1268:1:47::1;3204:1188:90::0;;:::o;37453:724:88:-;37530:22;37554:21;37577:27;37621:26;37650:14;:12;:14::i;:::-;37701:15;;37621:43;;-1:-1:-1;37744:54:88;37621:43;37701:15;37744:25;:54::i;:::-;37726:72;;37824:80;37844:9;37855:15;37872:16;37890:1;37893;37896;37899;37902;37824:19;:80::i;:::-;-1:-1:-1;37936:29:88;;;;;-1:-1:-1;37808:96:88;-1:-1:-1;;;;;;37979:22:88;;;37975:196;;38032:128;38073:24;38088:8;38073:14;:24::i;:::-;-1:-1:-1;;;;;38116:19:88;;;;;;:9;:19;;;;;:30;;;38099:15;;38032:23;:128::i;:::-;-1:-1:-1;;;;;38016:144:88;;;37975:196;37611:566;;37453:724;;;;;:::o;2268:342:173:-;-1:-1:-1;;;;;2364:19:173;;2373:10;2364:19;;;;:59;;-1:-1:-1;;;;;;2388:23:173;;;;;;:16;:23;;;;;;;;2412:10;2388:35;;;;;;;;;;2387:36;2364:59;2360:127;;;2444:43;;-1:-1:-1;;;2444:43:173;;;;;;;;;;;2360:127;-1:-1:-1;;;;;2497:17:173;;;;;;;:10;:17;;;;;;;;:25;;;;;;;;;;;:37;;-1:-1:-1;;2497:37:173;;;;;;;2549:54;;;;;2566:10;;2497:17;;:25;;:37;;2549:54;:::i;:::-;;;;;;;;2268:342;;;:::o;998:73:172:-;313:24;2631:16:31;2642:4;2631:10;:16::i;:::-;1056:8:172::1;:6;:8::i;:::-;998:73:::0;:::o;67130:294:88:-;67250:23;;67318:10;:24;67314:38;;67344:8;;;67314:38;67369:48;67379:19;67400:16;67369:9;:48::i;:::-;67362:55;;;;67130:294;;;;;:::o;3021:145:31:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:31;;;;;;;;;;;;;;;3021:145::o;25335:839:88:-;25399:20;368:4:171;25435:12:88;:18;25431:78;;;25462:47;;-1:-1:-1;;;25462:47:88;;;;;;;;;;;25431:78;25585:14;25601:19;25623:20;25657:41;25680:17;:15;:17::i;:::-;25657:22;:41::i;:::-;25571:127;;;;;;;;25791:12;25807:1;25791:17;:46;;;-1:-1:-1;25812:20:88;25821:11;25812:6;:20;:::i;:::-;:25;25791:46;25790:130;;25899:20;25908:11;25899:6;:20;:::i;:::-;25868:27;25883:12;25868;:27;:::i;:::-;:52;;;;:::i;:::-;25790:130;;;25853:12;25790:130;25949:10;25942:18;;;;:6;:18;;;;;:34;;;;;;25775:145;-1:-1:-1;26002:27:88;25775:145;26002:12;:27;:::i;:::-;25988:11;:41;26039:58;;-1:-1:-1;;;26039:58:88;;-1:-1:-1;;;;;26039:3:88;:17;;;;:58;;26057:10;;26077:4;;26084:12;;26039:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26113:54:88;;;3892:25:181;;;3948:2;3933:18;;3926:34;;;26128:10:88;;-1:-1:-1;26113:54:88;;-1:-1:-1;3865:18:181;26113:54:88;;;;;;;25421:753;;;25335:839;;;:::o;14396:320::-;1239:19:47;:17;:19::i;:::-;14460:22:88::1;14485:27:::0;14516:22:::1;14535:1;14516:10;:22::i;:::-;14587:11;:34:::0;14459:79;;-1:-1:-1;14459:79:88;-1:-1:-1;14552:147:88::1;::::0;-1:-1:-1;;;14587:34:88;::::1;-1:-1:-1::0;;;;;14587:34:88::1;::::0;-1:-1:-1;14623:11:88::1;:9;:11::i;:::-;14636:15;;14653;14670:19;14552:21;:147::i;:::-;14548:161;;;14701:8;:6;:8::i;15050:187::-:0;15098:20;3669:6;;15177:15;:32;15158:15;:52;15157:71;;;;;:::i;:::-;;15142:86;;15050:187;:::o;46996:3390::-;47339:1;47321:15;:19;:42;;;;47362:1;47344:15;:19;47321:42;47320:81;;;;;47369:32;47383:5;47390:10;47369:13;:32::i;:::-;47368:33;47320:81;:278;;;;47550:1;47532:15;:19;:65;;;;;47556:41;47570:14;47586:10;47556:13;:41::i;:::-;47555:42;47532:65;47320:454;;;;47732:1;47714:15;:19;:59;;;;;47738:35;47752:8;47762:10;47738:13;:35::i;:::-;47737:36;47714:59;47199:641;;;47792:48;;-1:-1:-1;;;47792:48:88;;;;;;;;;;;47199:641;-1:-1:-1;;;;;47878:16:88;;47851:24;47878:16;;;:9;:16;;;;;;;;47851:43;;;;;;;;;;;;;;;;;;;;47904:45;;;;;;;47938:11;47904:45;-1:-1:-1;;;;;47904:45:88;;;;-1:-1:-1;;;;;;;;47904:45:88;;;;;;;;;;;-1:-1:-1;;;47904:45:88;;;;;;;;;;;;47986:15;;47851:43;;48032:11;:9;:11::i;:::-;48011:32;;48163:26;48191:30;48223:21;48248:232;48285:5;48304:8;:19;;;48337:16;48367:15;48396:10;48420:12;:35;;;48469:1;48248:23;:232::i;:::-;48162:318;;;;;;48545:97;48561:5;48568:8;48578:11;48591:15;48608;48625:16;48545:15;:97::i;:::-;48534:108;;48756:1;48738:15;:19;:42;;;;48779:1;48761:15;:19;48738:42;48737:308;;;;;48786:259;48821:98;48835:8;:19;;;48856:11;:35;;;48893:11;:25;;;-1:-1:-1;;;;;48821:98:88;:13;:98::i;:::-;48937:19;;49002:29;;;;48974:10;;-1:-1:-1;;;;;48786:259:88;:17;:259::i;:::-;48785:260;48737:308;48720:386;;;49063:43;;-1:-1:-1;;;49063:43:88;;;;;;;;;;;48720:386;-1:-1:-1;;;;;49208:20:88;;;;;;:4;:20;;;;;;49204:42;;49230:15;49204:3;:42::i;:::-;-1:-1:-1;;;;;49181:20:88;;;;;;:4;:20;;;;;:65;49275:38;49279:16;49297:15;49275:3;:38::i;:::-;49256:57;;49342:16;49324:15;:34;;;;49538:16;49623:13;-1:-1:-1;;;;;49615:22:88;49557:48;49562:9;:25;;;-1:-1:-1;;;;;49557:48:88;49589:15;49557:4;:48::i;:::-;:81;;;;:::i;:::-;49538:100;;49664:1;49652:9;:13;49648:219;;;49681:62;;-1:-1:-1;;;49681:62:88;;-1:-1:-1;;;;;49681:3:88;:17;;;;:62;;49707:4;;49714:8;;49732:9;;49681:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49648:219;;;49776:1;49764:9;:13;49760:107;;;-1:-1:-1;;;;;49793:3:88;:17;;49811:8;49829:4;49844:10;49845:9;49844:10;:::i;:::-;49793:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49760:107;49937:1;49919:15;:19;49916:357;;;49954:24;49981:55;50008:9;50019:16;49981:26;:55::i;:::-;49954:82;-1:-1:-1;;;;;;50087:17:88;50108:2;50087:23;50050:61;50128:38;;;50125:138;;;50193:55;;-1:-1:-1;;;50193:55:88;;;;;;;;;;;50125:138;49940:333;;49916:357;50336:8;-1:-1:-1;;;;;50289:90:88;50320:14;-1:-1:-1;;;;;50289:90:88;50313:5;-1:-1:-1;;;;;50289:90:88;;50346:15;50363;50289:90;;;;;;3892:25:181;;;3948:2;3933:18;;3926:34;3880:2;3865:18;;3718:248;50289:90:88;;;;;;;;47189:3197;;;;;;;;46996:3390;;;;;:::o;52006:330::-;52089:6;368:4:171;52111:9:88;:15;52107:29;;;-1:-1:-1;52135:1:88;;52006:330;-1:-1:-1;52006:330:88:o;52107:29::-;52175:12;-1:-1:-1;;;;;52146:42:88;;;52242:3;52226:19;52263:66;52272:56;368:4:171;52294:33:88;52146:42;52311:15;368:4:171;52311:9:88;:15;:::i;:::-;52294:4;:33::i;:::-;52282:45;;:9;:45;:::i;:::-;52272:4;:56::i;:::-;52263:8;:66::i;:::-;52256:73;52006:330;-1:-1:-1;;;;52006:330:88:o;3297:149:173:-;3372:4;3404:6;-1:-1:-1;;;;;3395:15:173;:5;-1:-1:-1;;;;;3395:15:173;;:44;;;-1:-1:-1;;;;;;3414:17:173;;;;;;;:10;:17;;;;;;;;:25;;;;;;;;;;;;3395:44;3388:51;3297:149;-1:-1:-1;;;3297:149:173:o;38241:209:88:-;38325:16;;;38280:19;38351:20;;;38381:62;;-1:-1:-1;;;38381:62:88;;-1:-1:-1;;;;;38381:3:88;:17;;;;:62;;38407:4;;38422:6;;38325:16;;38381:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38241:209;:::o;67769:633::-;67882:23;67907:27;67987:48;67997:19;68018:16;67987:9;:48::i;:::-;67946:89;;-1:-1:-1;67946:89:88;-1:-1:-1;68105:19:88;;68101:86;;68126:61;;-1:-1:-1;;;68126:61:88;;-1:-1:-1;;;;;68126:3:88;:17;;;;:61;;68144:10;;68164:4;;68171:15;;68126:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;68101:86;68201:23;;68197:68;;68231:10;68226:16;;;;:4;:16;;;;;:39;;68246:19;;68226:16;:39;;68246:19;;68226:39;:::i;:::-;;;;-1:-1:-1;;68197:68:88;68281:58;;;3892:25:181;;;3948:2;3933:18;;3926:34;;;68290:10:88;;68281:58;;3865:18:181;68281:58:88;;;;;;;67769:633;;;;;:::o;5354:147:31:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;1776:200:173:-:0;1864:10;1853:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;1853:30:173;;;;;;;;;;;:42;;-1:-1:-1;;1853:42:173;;;;;;;1910:59;;;;;1864:10;;1853:30;;:42;;1910:59;:::i;3546:148:94:-;3609:18;;:::i;:::-;-1:-1:-1;;;;;3664:22:94;;;;;;:12;:22;;;;;;;;;3646:41;;;;;;;;;-1:-1:-1;;;;;3646:41:94;;;;;-1:-1:-1;;;3646:41:94;;;;;;;;;;-1:-1:-1;;;3646:41:94;;;-1:-1:-1;;;;;3646:41:94;;;;;;;;;;:17;:41::i;5576:4001:90:-;1239:19:47;:17;:19::i;:::-;5716::90;;5699:36;::::1;5695:97;;5744:48;;-1:-1:-1::0;;;5744:48:90::1;;;;;;;;;;;5695:97;5803:26;5832:14;:12;:14::i;:::-;5856:45;::::0;;::::1;::::0;;::::1;::::0;;5890:11:::1;5856:45:::0;-1:-1:-1;;;;;5856:45:90;::::1;::::0;;-1:-1:-1;;;;;;;;5856:45:90;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;;-1:-1:-1;;;5856:45:90;;::::1;::::0;::::1;::::0;;;;5911:63;;;;::::1;::::0;;5856:45:::1;5911:63:::0;;;::::1;::::0;;-1:-1:-1;;;5911:63:90;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;;::::0;;;;;;;5803:43;;-1:-1:-1;5856:31:90::1;6005:11;:9;:11::i;:::-;5984:32;;6027:26;;:::i;:::-;6063:27:::0;;;6124:15:::1;::::0;6100:21:::1;::::0;::::1;:39:::0;6167:11:::1;:21:::0;-1:-1:-1;;;;;6167:21:90::1;6149:15;::::0;::::1;:39:::0;6238:17:::1;:37:::0;6221:55:::1;::::0;6226:10;;-1:-1:-1;;;6238:37:90;::::1;-1:-1:-1::0;;;;;6238:37:90::1;6221:4;:55::i;:::-;6198:20;::::0;::::1;:78:::0;6312:17:::1;:36:::0;-1:-1:-1;;;;;6312:36:90::1;6286:23;::::0;::::1;:62:::0;6421:21:::1;::::0;::::1;::::0;6312:36:::1;::::0;6384:59:::1;::::0;6410:9;;6384:25:::1;:59::i;:::-;6359:84;;6459:9;6454:2047;6470:17:::0;;::::1;6454:2047;;;6505:13;6521:6;;6528:1;6521:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6505:25:::0;-1:-1:-1;;;;;;6550:19:90;::::1;::::0;;:43:::1;;;6573:12;6586:1;6573:15;;;;;;;;:::i;:::-;;;;;;;6592:1;6573:20;6550:43;6544:1915;;-1:-1:-1::0;;;;;6641:16:90;::::1;6614:24;6641:16:::0;;;:9:::1;:16;::::0;;;;;;;6614:43;;;;::::1;::::0;;;;;;;::::1;;::::0;;;::::1;::::0;;;;:24;6708:67:::1;::::0;6651:5;;6759:15;6708:22:::1;:67::i;:::-;6675:100;;6858:12;6873:78;6887:8;:19;;;6908:15;6925:11;:25;;;-1:-1:-1::0;;;;;6873:78:90::1;:13;:78::i;:::-;6858:93:::0;-1:-1:-1;7035:15:90;;;:144:::1;;;7054:125;7093:4;7099:8;:19;;;7120:10;7132:12;:29;;;-1:-1:-1::0;;;;;7054:125:90::1;:17;:125::i;:::-;7031:196;;;7188:39;;-1:-1:-1::0;;;7188:39:90::1;;;;;;;;;;;7031:196;7432:24;7492:17:::0;7545:23:::1;7571:74;7576:37;7581:8;:19;;;7602:10;7576:4;:37::i;:::-;7615:12;:29;;;-1:-1:-1::0;;;;;7571:74:90::1;:4;:74::i;:::-;7545:100;;7727:15;7675:49;7680:18;:37;;;-1:-1:-1::0;;;;;7675:49:90::1;7719:4;7675;:49::i;:::-;:67;;;;:::i;:::-;7663:79;;7527:234;7778:21;7802:75;7807:12;:29;;;-1:-1:-1::0;;;;;7802:75:90::1;7838:18;:38;;;-1:-1:-1::0;;;;;7802:75:90::1;:4;:75::i;:::-;7778:99;;7895:19;8008:24;368:4:171;8018:13:90;8008:4;:24::i;:::-;7917:68;7922:18;:37;;;-1:-1:-1::0;;;;;7917:68:90::1;7961:5;:23;;;7917:4;:68::i;:::-;:115;;;;:::i;:::-;7895:137;;8069:28;8074:9;8085:11;8069:4;:28::i;:::-;8050:47;;7474:642;;;8238:69;8242:12;8255:1;8242:15;;;;;;;;:::i;:::-;;;;;;;8259:47;8264:16;8282:5;:23;;;8259:4;:47::i;8238:69::-;8210:25;::::0;::::1;:97:::0;8376:68:::1;8210:5:::0;8415:8;8425:11;8438:5;8376:31:::1;:68::i;:::-;8368:76;;6596:1863;;;;6544:1915;-1:-1:-1::0;8485:3:90::1;;6454:2047;;;;8630:296;8697:5;:15;;;8750:58;8755:5;:21;;;8784:5;:23;;;368:4:171;8778:29:90;;;;:::i;8750:58::-;8726:5;:21;;;:82;;;;:::i;:::-;8822:5;:21;;;8857:10;8881:12;:35;;;8630:53;:296::i;:::-;-1:-1:-1::0;9012:21:90::1;::::0;::::1;::::0;8994:15:::1;:39:::0;9159:21:::1;::::0;::::1;::::0;9114:67:::1;::::0;-1:-1:-1;;;9114:67:90;;-1:-1:-1;;;;;9114:3:90::1;:17;::::0;::::1;::::0;:67:::1;::::0;9132:10:::1;::::0;9152:4:::1;::::0;9159:21;9114:67:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;9281:25:90::1;::::0;;::::1;::::0;9266:10:::1;9261:16;::::0;;;:4:::1;:16;::::0;;;;:45;;9281:25;;-1:-1:-1;9261:16:90;;:45:::1;::::0;9281:25;;9261:45:::1;:::i;:::-;::::0;;;-1:-1:-1;;9430:20:90::1;::::0;::::1;::::0;:25;9426:145:::1;;9538:20;::::0;::::1;::::0;9523:36:::1;::::0;-1:-1:-1;;;9523:36:90;;::::1;::::0;::::1;1080:25:181::0;;;;9523:6:90::1;-1:-1:-1::0;;;;;9523:14:90::1;::::0;::::1;::::0;1053:18:181;;9523:36:90::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9426:145;5685:3892;;;;;;5576:4001:::0;;;:::o;3275:97:94:-;3320:16;;:::i;:::-;-1:-1:-1;3348:17:94;;;;;;;;3355:10;3348:17;;;;;;;-1:-1:-1;;;;;;;;3348:17:94;;;;;;;;-1:-1:-1;;;3348:17:94;;;;;;;;;;;;;;;;;;;;;;;;;;3275:97::o;54408:268:88:-;1239:19:47;:17;:19::i;:::-;1079:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;54563:5:88::2;54523:37:::0;;;:21:::2;:37;::::0;;;;:45;;-1:-1:-1;;54523:45:88::2;::::0;;54578:39:::2;:16;54545:14:::0;54578:23:::2;:39::i;:::-;54632:36;::::0;54653:14;;54632:36:::2;::::0;;;::::2;1268:1:47::1;54408:268:88::0;:::o;33733:235::-;33811:19;1239::47;:17;:19::i;:::-;33847:10:88::1;33842:16;::::0;;;:4:::1;:16;::::0;;;;:26;;33862:6;;33842:16;:26:::1;::::0;33862:6;;33842:26:::1;:::i;:::-;::::0;;;-1:-1:-1;33892:24:88::1;::::0;-1:-1:-1;33897:6:88;33905:10:::1;33892:4;:24::i;:::-;33878:38:::0;-1:-1:-1;33926:35:88::1;-1:-1:-1::0;;;;;33926:5:88::1;:18;33945:2:::0;33878:38;33926:18:::1;:35::i;3063:290:170:-:0;3129:16;3148:14;;;;;;;;;;;;3129:33;;;;;;;;;;;;;;;;;;;3177:18;3148:4;3159:2;3177:8;:18::i;:::-;3172:47;;3204:15;;-1:-1:-1;;;3204:15:170;;;;;;;;;;;3172:47;3258:9;;;;;;3240;;3229:10;:21;;;;;;;;;;;:26;;;;:38;;;;3306:9;;3288;;3277:21;;;;;:38;3332:14;;;;;3325:21;;;;;3063:290::o;42487:1736:88:-;42784:26;;:::i;:::-;42812:30;;:::i;:::-;42844:21;42894:14;:12;:14::i;:::-;42882:26;;42932:21;42947:5;42932:14;:21::i;:::-;42918:35;;43191:22;43216:59;43242:9;43253:21;43216:25;:59::i;:::-;43191:84;;43321:71;43345:11;43358:15;43375:16;43321:23;:71::i;:::-;-1:-1:-1;;;;;43293:99:88;:25;;;:99;-1:-1:-1;;;;;43402:53:88;;;43520:143;43402:35;43556:19;;43555:53;;43607:1;43555:53;;;43587:16;43588:15;43587:16;:::i;:::-;43610;43628:11;:25;;;43520:21;:143::i;:::-;-1:-1:-1;;;;;43475:188:88;43491:25;;;43475:188;;-1:-1:-1;43674:23:88;43738:283;43804:5;43823:9;43491:11;43871:21;43906:16;43936:15;43475:188;43992:19;43738:52;:283::i;:::-;43707:314;;-1:-1:-1;43707:314:88;-1:-1:-1;44032:184:88;43707:314;;44127:43;44131:21;44154:15;44127:3;:43::i;:::-;44172:10;44184:22;44032:53;:184::i;:::-;;42872:1351;42487:1736;;;;;;;;;;;:::o;3915:473:170:-;3999:18;4008:4;4014:2;3999:8;:18::i;:::-;3995:43;;;4026:12;;-1:-1:-1;;;4026:12:170;;;;;;;;;;;3995:43;4052:9;;;;;:34;;;4066:20;4075:4;4081;4066:8;:20::i;:::-;4065:21;4052:34;4048:62;;;4095:15;;-1:-1:-1;;;4095:15:170;;;;;;;;;;;4048:62;4120:12;4135:16;;;;;;;;;;:21;;4166:26;;;;4206:9;;:39;;;;-1:-1:-1;4219:10:170;:16;;;;;;;;;;:21;;;:26;4206:39;4202:71;;;4247:10;:16;;;;;;;;;;:21;;:26;;;4202:71;4283:10;:16;;;;;;;;;;;;:21;;;;:26;;;4319:14;;;;;;:26;;;4355:19;;:26;3915:473::o;18161:6907:88:-;18256:14;18280:19;18309:18;18337:20;18367:45;;:::i;:::-;18429:20;18452:17;:15;:17::i;:::-;18792:34;;;18804:21;18792:34;;;;;;;;;18429:40;;-1:-1:-1;18550:25:88;;;;18730:26;;18792:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18778:48;;19018:41;19074:9;19069:1299;3930:1;19085;:22;19069:1299;;-1:-1:-1;;19230:36:88;;;;19183:13;19308;;;:6;:13;;;;;;;;;19282:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3930:1;19282:39;;;;-1:-1:-1;;;;;19282:39:88;;;;;;;-1:-1:-1;;;19282:39:88;;;;;;;;19335:14;;19282:39;;19335:14;;19230:36;;19335:14;;;;;;:::i;:::-;;;;;;:27;;;;19500:10;:28;;;19532:1;19500:33;;:79;;;;-1:-1:-1;19553:21:88;;;;-1:-1:-1;;;;;19553:26:88;;19500:79;:138;;;;-1:-1:-1;19626:12:88;19599:23;3808:1;19599:5;:23;:::i;:::-;:39;;19500:138;19496:481;;;19708:22;;19707:188;;19855:39;;;;-1:-1:-1;;;;;19816:79:88;-1:-1:-1;;;1473:9:171;;;1469:24;1462:32;;19707:188:88;;;19754:10;:39;;;-1:-1:-1;;;;;19707:188:88;;19671:224;;19934:10;:28;;;19913:49;;;;;:::i;:::-;;;19496:481;20103:21;;;;20002:3;;;;;-1:-1:-1;;;;;20103:26:88;;:63;;;;-1:-1:-1;20133:28:88;;;;:33;;20103:63;20099:258;;;20327:30;;;;20288:69;;;;:::i;:::-;;;20099:258;19111:1257;;19069:1299;;;-1:-1:-1;20482:20:88;;20542:30;;-1:-1:-1;;;20542:30:88;;20450:29;;-1:-1:-1;;;;;20542:3:88;:12;;;;:30;;20555:16;;20542:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20522:50;;;20582:27;20671:21;20633:35;20612:18;20622:7;20612:9;:18::i;:::-;:56;;;;:::i;:::-;:80;;;;:::i;:::-;20582:110;-1:-1:-1;20706:23:88;;20702:100;;20731:71;;-1:-1:-1;;;20731:71:88;;-1:-1:-1;;;;;20731:3:88;:17;;;;:71;;20749:16;;20775:4;;20782:19;;20731:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20702:100;20512:301;;20914:18;20942:24;20991:11;;20976:26;;21140:67;21171:35;21140:30;:67::i;:::-;21103:104;;-1:-1:-1;21103:104:88;;-1:-1:-1;21103:104:88;;-1:-1:-1;;21221:17:88;;21217:112;;21317:12;21297:17;21282:11;21273:6;:20;;;;:::i;:::-;21272:42;;;;:::i;:::-;:57;;;;:::i;:::-;21253:76;;21217:112;21343:21;;21339:838;;21603:81;21607:16;21625:58;21630:33;21665:17;21625:4;:58::i;21603:81::-;21584:100;-1:-1:-1;21761:26:88;21790:48;21803:35;21790:10;:48;:::i;:::-;21761:77;-1:-1:-1;21964:67:88;21761:77;-1:-1:-1;;;2045:9:171;;;2041:24;2034:32;;52272:4:88;:56::i;21964:67::-;21951:80;;22132:34;22137:16;22155:10;22132:4;:34::i;:::-;22113:53;;21366:811;21339:838;22276:18;22309:9;22304:1814;3930:1;22320;:22;22304:1814;;22414:13;22496:1;3930;22461:12;:32;:36;22453:44;;22513:23;22539:11;22551:1;22539:14;;;;;;;;:::i;:::-;;;;;;;22513:40;;22691:10;:28;;;22723:1;22691:33;;:79;;;;-1:-1:-1;22744:21:88;;;;-1:-1:-1;;;;;22744:26:88;;22691:79;:138;;;;-1:-1:-1;22817:12:88;22790:23;3808:1;22790:5;:23;:::i;:::-;:39;;22691:138;22687:1390;;;22954:513;;;;;;;;23126:17;23095:10;:28;;;23076:16;:47;;;;:::i;:::-;:67;;;;:::i;:::-;22954:513;;;;23186:10;:30;;;22954:513;;;;23257:46;23262:10;:28;;;23292:10;23257:4;:46::i;:::-;22954:513;;-1:-1:-1;;;;;22954:513:88;;;;;;-1:-1:-1;22954:513:88;;;;;23511:31;;22941:526;;-1:-1:-1;23486:56:88;;;;:::i;:::-;;;23576:10;:28;;;23560:44;;;;;:::i;:::-;;;23808:40;23817:10;:30;;;23808:8;:40::i;:::-;23773:31;;23764:41;;:8;:41::i;:::-;:84;;;;:::i;:::-;23749:99;;;;:::i;:::-;;;23899:1;23866:10;:30;;:34;;;;;24008:10;23991:11;24003:1;23991:14;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;24036:13;;;;:6;:13;;;;;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24036:26:88;;;-1:-1:-1;;;24036:26:88;;;;;;;;;22687:1390;-1:-1:-1;;24102:3:88;;22304:1814;;;-1:-1:-1;24165:20:88;:44;;;24219:11;:26;;;-1:-1:-1;24464:15:88;;24460:93;;;24481:72;;-1:-1:-1;;;24481:72:88;;-1:-1:-1;;;;;24481:3:88;:17;;;;:72;;24507:4;;24514:16;;24540:11;;24481:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24460:93;24691:1;24677:11;:15;24673:94;;;-1:-1:-1;;;;;24694:3:88;:17;;24712:16;24738:4;24753:12;24754:11;24753:12;:::i;:::-;24694:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24673:94;24824:22;24864:26;24849:12;:41;;;;:::i;:::-;24824:66;;24925:14;3930:1;24904:35;24900:162;;25002:11;25034:14;3930:1;25014:34;25002:47;;;;;;;;:::i;:::-;;;;;;;24967:82;;24900:162;18419:6649;;;;;;;;;;18161:6907;;;;;;;:::o;3233:443:171:-;3283:9;3436:1;3432;3428:6;3424:14;3421:1;3418:21;3415:1;3411:29;3408:227;;;3539:10;3533:4;3526:24;3620:4;3614;3607:18;3408:227;-1:-1:-1;3664:3:171;3653:9;;3649:19;;3233:443::o;3460:103:31:-;3526:30;3537:4;719:10:66;3526::31;:30::i;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:31;;;;;;;;;:36;;-1:-1:-1;;7708:36:31;7740:4;7708:36;;;7790:12;719:10:66;;640:96;7790:12:31;-1:-1:-1;;;;;7763:40:31;7781:7;-1:-1:-1;;;;;7763:40:31;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:31;;;;;;;;;;:37;;-1:-1:-1;;8112:37:31;;;8168:40;719:10:66;;8112:12:31;;8168:40;;8144:5;8168:40;7991:234;;:::o;3808:128:94:-;3878:22;;:10;:22;;;;;;;;;;;-1:-1:-1;;;;;3878:22:94;;;-1:-1:-1;;;3878:22:94;-1:-1:-1;;;;3878:22:94;;;-1:-1:-1;;;3878:22:94;-1:-1:-1;;;;;;3878:22:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3915:14;;;3878:22;;3915:14;3808:128;:::o;1818:573:62:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:62;;-1:-1:-1;;;2159:39:62;;2183:4;2159:39;;;16502:34:181;-1:-1:-1;;;;;16572:15:181;;;16552:18;;;16545:43;2159:15:62;;;;;16437:18:181;;2159:39:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;-1:-1:-1;;;2121:163:62;;16801:2:181;2121:163:62;;;16783:21:181;16840:2;16820:18;;;16813:30;16879:34;16859:18;;;16852:62;-1:-1:-1;;;16930:18:181;;;16923:52;16992:19;;2121:163:62;16599:418:181;2121:163:62;2321:62;;-1:-1:-1;;;;;17214:32:181;;2321:62:62;;;17196:51:181;17263:18;;;17256:34;;;2294:90:62;;2314:5;;-1:-1:-1;;;2344:22:62;17169:18:181;;2321:62:62;;;;-1:-1:-1;;2321:62:62;;;;;;;;;;;;;;-1:-1:-1;;;;;2321:62:62;-1:-1:-1;;;;;;2321:62:62;;;;;;;;;;2294:19;:90::i;2433:117:47:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:47::1;::::0;;2521:22:::1;719:10:66::0;2530:12:47::1;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;1767:106::-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:47;;17503:2:181;1828:38:47;;;17485:21:181;17542:2;17522:18;;;17515:30;-1:-1:-1;;;17561:18:181;;;17554:46;17617:18;;1828:38:47;17301:340:181;1828:38:47;1767:106::o;1355:203:62:-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;1455:96::-;1355:203;;;;:::o;4704:487:171:-;4754:9;4934:16;4928:23;;4946:3;4919:33;4912:41;4905:49;;4895:255;;5054:10;5048:4;5041:24;5135:4;5129;5122:18;4895:255;-1:-1:-1;5175:3:171;5168:11;;;;5164:19;;4704:487::o;4399:285:94:-;4471:1;4460:8;:12;;;:45;;;;-1:-1:-1;368:4:171;4476:29:94;;;;;4460:45;:72;;;-1:-1:-1;473:19:94;4509:23;;;;;4460:72;4456:145;;;4553:48;;-1:-1:-1;;;4553:48:94;;;;;;;;;;;4456:145;4611:10;:30;;-1:-1:-1;;4611:30:94;-1:-1:-1;;;;;4611:30:94;;;;;4656:21;;17817:1:181;17806:21;;;17788:40;;4656:21:94;;17776:2:181;17761:18;4656:21:94;;;;;;;4399:285;:::o;34692:2121:88:-;34818:6;34836:19;34889:1;34868:9;:18;;;:22;;;34865:1869;;;-1:-1:-1;;;;;34989:17:88;34949:58;;;;35079:2;35058:23;;;35021:61;;368:4:171;35096:58:88;35150:3;35129:24;;;35096:58;;35415:22;;;35222:3;35201:24;;;35168:58;;35498:22;;;35297:3;35276:24;;;;35240:61;;;35455:25;34949:30;35629:55;35656:9;35667:16;35629:26;:55::i;:::-;35602:82;;35720:19;35701:16;:38;35698:81;;;-1:-1:-1;35760:19:88;35698:81;35981:22;35961:16;:42;35957:695;;36062:148;36088:66;36093:36;36114:15;36093:18;:36;:::i;:::-;36131:22;36088:4;:66::i;:::-;36176:16;36062:4;:148::i;:::-;36044:166;;:15;:166;:::i;:::-;36022:189;;35957:695;;;36456:180;36482:72;36487:36;36505:18;36487:15;:36;:::i;:::-;36525:28;36531:22;368:4:171;36525:28:88;:::i;36482:72::-;36577:41;36596:22;36577:16;:41;:::i;36456:180::-;36435:201;;:18;:201;:::i;:::-;36413:224;;35957:695;34891:1771;;;;;;34865:1869;;;-1:-1:-1;36704:18:88;;34865:1869;36750:56;36782:9;36793:12;36750:31;:56::i;7568:1940:94:-;7910:31;;:::i;:::-;7943:23;7978:28;8009:43;8013:21;8036:15;8009:3;:43::i;:::-;8086:29;;;;7978:74;;-1:-1:-1;8130:20:94;;;;:63;;;8176:17;-1:-1:-1;;;;;8154:39:94;:18;-1:-1:-1;;;;;8154:39:94;;;8130:63;8126:327;;;8365:63;8370:17;-1:-1:-1;;;;;8365:63:94;8389:38;8393:16;8411:15;8389:3;:38::i;8365:63::-;8304:42;8309:18;-1:-1:-1;;;;;8304:42:94;8329:16;8304:4;:42::i;:::-;8256:15;:29;;;:90;;;;:::i;:::-;:172;;;;:::i;:::-;8209:233;;8126:327;8473:32;8509:26;;8508:263;;8543:228;8561:165;8583:57;8588:15;:29;;;8618:21;8583:4;:57::i;:::-;8681:15;:31;;;8658:20;:54;;;;:::i;:::-;-1:-1:-1;;;;;8561:165:94;:4;:165::i;:::-;8741:20;8543:4;:228::i;:::-;8508:263;;;8539:1;8508:263;8473:298;;8782:27;8877:13;-1:-1:-1;;;;;8812:78:94;8850:24;8812:15;:35;;;:62;;;;:::i;:::-;:78;;;;:::i;:::-;8782:108;;8917:266;;;;;;;;8951:15;:24;;;8917:266;;;;;;9063:15;-1:-1:-1;;;;;8917:266:94;;;;;9110:20;-1:-1:-1;;;;;8917:266:94;;;;;9159:13;8917:266;;;;9010:19;8917:266;;;8900:283;;8463:731;;9223:21;9248:1;9223:26;9222:279;;9257:244;9275:181;9303:57;9308:15;:29;;;9338:21;9303:4;:57::i;:::-;9297:63;;368:4:171;9297:63:94;:::i;:::-;9411:15;:31;;;9378:14;:30;;;:64;;;;:::i;9275:181::-;9470:21;9257:4;:244::i;:::-;9222:279;;;9253:1;9222:279;9204:297;;7968:1540;;7568:1940;;;;;;;;;;;:::o;6417:375::-;6562:21;6647:137;6665:85;6670:11;:24;;;-1:-1:-1;;;;;6665:85:94;6714:11;:35;;;6696:15;:53;;;;:::i;6665:85::-;6764:10;6647:4;:137::i;:::-;6611:11;:25;;;:174;;;;:::i;795:103:172:-;841:14;:12;:14::i;:::-;876:15;865:8;:26;795:103::o;63176:3599:88:-;63290:23;63315:27;63354:26;63383:14;:12;:14::i;:::-;63407:45;;;;;;;;63441:11;63407:45;-1:-1:-1;;;;;63407:45:88;;;;-1:-1:-1;;;;;;;;63407:45:88;;;;;;;;-1:-1:-1;;;63407:45:88;;;;;;;;;;;63354:43;;-1:-1:-1;63407:31:88;63483:11;:9;:11::i;:::-;63462:32;;63505:26;;:::i;:::-;63541:27;;;63602:15;;63578:21;;;:39;;;63645:22;;-1:-1:-1;;;;;63627:40:88;:15;;;:40;368:4:171;63677:23:88;;;:29;63541:15;;63742:59;;63559:9;;63742:25;:59::i;:::-;-1:-1:-1;;;;;;;;;;;1276:18:170;63878:22:88;64060:32;;;:16;1276:13:170;64060:32:88;;;;;;;1539:13:170;;;;;;;;:18;63717:84:88;;-1:-1:-1;1276:18:170;64113:1954:88;64144:16;64120:5;:21;;;:40;64113:1954;;;64274:19;;;:59;;;64314:19;64297:14;:36;64274:59;64335:5;64270:70;64434:37;;;;:21;:37;;;;;;;;64433:38;;:59;;-1:-1:-1;64475:17:88;;64433:59;64429:414;;;-1:-1:-1;1908:7:170;1934:14;;;64581:16:88;1934:14:170;;;;;;;;:19;;;64760:32:88;;;:16;:32;;;;;1539:13:170;;;;;;;;;:18;64820:8:88;;64429:414;64972:24;64999:32;;;:16;:32;;;;;;;;2335:14:170;;;;;;;;:19;65071:32:88;;;65067:43;;65105:5;;;65067:43;-1:-1:-1;;;;;65257:16:88;;65170:13;65257:16;;;:9;:16;;;;;;;;65230:43;;;;;;;;;;;;;;;;;;;;;65202:12;;65230:43;;65320:67;;65202:12;;65371:15;65320:22;:67::i;:::-;65287:100;;65424:32;65429:10;65441:14;65424:4;:32::i;:::-;65401:20;;;:55;65517:21;;;;65498:40;;:16;:40;:::i;:::-;65470:25;;;:68;65690:19;;;;65711:35;;65748:25;;;;65641:259;;65676:98;;65690:19;;-1:-1:-1;;;;;65676:98:88;:13;:98::i;:::-;65792:19;;65857:29;;;;65829:10;;-1:-1:-1;;;;;65641:259:88;:17;:259::i;:::-;65637:374;;;65928:68;65960:5;65967:8;65977:11;65990:5;65928:31;:68::i;:::-;65920:76;;65637:374;66040:16;66025:31;;64162:1905;;;;64113:1954;;;66196:235;66263:5;:15;;;66292:5;:21;;;66327:5;:21;;;66362:10;66386:12;:35;;;66196:53;:235::i;:::-;-1:-1:-1;66522:21:88;;;;66504:15;:39;66631:21;;;;66611:41;;66607:93;;66661:39;;-1:-1:-1;;;66661:39:88;;;;;;;;;;;66607:93;66719:5;:21;;;66742:5;:25;;;66711:57;;;;;;;;;;;63176:3599;;;;;:::o;13002:556::-;13232:4;13248:17;13268:69;13282:16;13300:15;13317:19;13268:13;:69::i;:::-;13248:89;-1:-1:-1;13364:14:88;;;;;:143;;;13484:22;-1:-1:-1;;;;;13476:31:88;13382:75;13434:10;13421;13388:5;-1:-1:-1;;;;;13388:15:88;;13412:4;13388:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;:56;;;;:::i;:::-;13447:9;13382:4;:75::i;:::-;:125;13364:143;13347:182;;;13525:4;13518:11;;;;;13347:182;13546:5;13539:12;;;13002:556;;;;;;;;:::o;44423:1034::-;-1:-1:-1;;;;;;;;;;;;;;;;;44791:19:88;;44787:41;;44812:15;44787:3;:41::i;:::-;44765:63;;44864:19;;;;44860:41;;44885:15;44860:3;:41::i;:::-;44838:19;;;:63;;;44988:24;;;;:188;;-1:-1:-1;45154:11:88;:21;45043:19;;;;45064:35;;45101:25;;;;-1:-1:-1;;;;;45154:21:88;;;;45029:98;;45043:19;45064:35;45029:98;:13;:98::i;:::-;:147;44988:188;44984:246;;;45194:36;;-1:-1:-1;;;45194:36:88;;;;;;;;;;;44984:246;-1:-1:-1;;;;;45282:16:88;;;;;;:9;:16;;;;;;;;:27;;;;;;;;;;;;;45325:95;45347:15;45364;45381:38;45385:16;45364:15;45381:3;:38::i;:::-;45325:95;;;14632:25:181;;;14688:2;14673:18;;14666:34;;;;14716:18;;;14709:34;14620:2;14605:18;45325:95:88;;;;;;;-1:-1:-1;45442:8:88;;44423:1034;-1:-1:-1;;;;;44423:1034:88:o;1470:197::-;1588:12;1651:13;1615:33;1620:10;1632:15;-1:-1:-1;;;;;1615:33:88;:4;:33::i;:::-;:49;;;;:::i;45550:226::-;45694:4;45764;45744:16;45718:23;45731:10;45718;:23;:::i;:::-;:42;;;;:::i;:::-;:50;;;45550:226;-1:-1:-1;;;;;45550:226:88:o;2511:205:171:-;2615:9;;;2559;2641:5;;:14;;;;;2654:1;2650;:5;2641:14;2640:36;;;;2665:1;2661;:5;:14;;;;;2674:1;2670;:5;2661:14;2635:78;;;2686:27;;-1:-1:-1;;;2686:27:171;;;;;;;;;;;2190:205;2294:9;;;2238;2320:5;;:14;;;;;2333:1;2329;:5;2320:14;2319:36;;;;2344:1;2340;:5;:14;;;;;2353:1;2349;:5;2340:14;2314:78;;;2365:27;;-1:-1:-1;;;2365:27:171;;;;;;;;;;;3678:121;3727:8;368:4;3767:9;3771:1;3774;3767:3;:9::i;:::-;:23;;;;;:::i;:::-;;;3678:121;-1:-1:-1;;;3678:121:171:o;34159:424:88:-;34286:24;34322:18;34343:89;34357:16;34375:9;:25;;;34402:9;:29;;;34343:13;:89::i;:::-;34322:110;-1:-1:-1;34462:15:88;;34461:115;;34497:79;34502:10;34559:16;;34527:3;-1:-1:-1;;;;;34527:14:88;;34550:4;34527:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34514:42;;:10;:42;:::i;:::-;:61;;;;:::i;34497:79::-;34461:115;;;34493:1;34442:134;34159:424;-1:-1:-1;;;;34159:424:88:o;777:132:171:-;820:6;-1:-1:-1;;;838:1:171;:12;834:50;;859:25;;-1:-1:-1;;;859:25:171;;;;;;;;;;;834:50;-1:-1:-1;904:1:171;777:132::o;2819:350:94:-;2900:18;;:::i;:::-;2934:35;;-1:-1:-1;;;;;2934:40:94;:35;:40;2930:205;;3017:1;2990:24;;;:28;;;368:4:171;3032:49:94;;3095:25;;;:29;-1:-1:-1;3151:11:94;2819:350::o;58789:378:88:-;58917:30;;:::i;:::-;58973:21;58988:5;58973:14;:21::i;:::-;58959:35;;59032:65;59056:11;59069:15;59086:10;59032:23;:65::i;:::-;-1:-1:-1;;;;;59004:93:88;:25;;;:93;-1:-1:-1;;;;;59107:53:88;;;;;59004:11;58789:378;-1:-1:-1;;58789:378:88:o;59261:3570::-;59435:20;;:::i;:::-;59548:24;59582:28;59620:23;59653:21;59694:12;59709:120;59736:8;:19;;;59757:11;:35;;;59794:11;:25;;;-1:-1:-1;;;;;59709:120:88;:13;:120::i;:::-;59694:135;;59839:23;59865:56;59870:5;:25;;;59897:5;:23;;;59865:4;:56::i;:::-;59839:82;;60064:479;60292:15;60285:4;:22;:66;;;;-1:-1:-1;60336:15:88;;;;60311:22;60318:15;60311:4;:22;:::i;:::-;:40;60285:66;60284:182;;60431:35;60436:4;60442:5;:23;;;60431:4;:35::i;:::-;60284:182;;;60375:53;60387:5;:15;;;60380:4;:22;;;;:::i;:::-;60404:5;:23;;;60375:4;:53::i;:::-;60484:49;60491:8;:19;;;60512:5;:20;;;60484:6;:49::i;60064:479::-;60641:25;;;;59931:612;;-1:-1:-1;;;;1473:9:171;;;1469:24;1462:32;60618:66:88;;60754:17;60774:47;60779:16;60797:5;:23;;;60774:4;:47::i;:::-;60754:67;;60877:65;60899:9;60910:4;60916:11;:25;;;60877:21;:65::i;:::-;-1:-1:-1;;;;;60832:110:88;;;60848:25;;;60832:110;61001:35;;60832:110;;-1:-1:-1;60970:82:88;;60990:9;;60970:82;;:19;:82::i;:::-;60952:100;;61154:44;61159:16;61177:5;:20;;;61154:4;:44::i;:::-;61235:19;;61131:67;;-1:-1:-1;61212:42:88;;61208:90;;;61279:19;;;-1:-1:-1;61208:90:88;61407:19;;61383:43;;:97;;;;;61465:15;61443:8;:19;;;:37;61383:97;61366:240;;;61528:16;61535:9;61528:4;:16;:::i;:::-;61504:5;:20;;:40;;;;;;;:::i;:::-;;;-1:-1:-1;61576:19:88;;;;;-1:-1:-1;61366:240:88;59684:1932;;;61651:24;61678:5;:21;;;61651:48;;61818:23;61888:280;61954:5;61973;:15;;;62002:11;62027:16;62057:8;:19;;;62091:25;62100:15;62091:8;:25::i;:::-;62090:26;;;:::i;:::-;62130:13;62157:1;61888:52;:280::i;:::-;61851:317;;;;-1:-1:-1;62265:206:88;62294:5;62313:8;62335:11;62361:30;62370:20;62361:8;:30::i;:::-;62360:31;;;:::i;:::-;62406:25;62415:15;62406:8;:25::i;:::-;62405:26;;;:::i;:::-;62445:16;62265:15;:206::i;:::-;;62626:15;62601:5;:21;;:40;;;;;;;:::i;:::-;;;-1:-1:-1;62651:25:88;;;:49;;62680:20;;62651:25;:49;;62680:20;;62651:49;:::i;:::-;;;-1:-1:-1;62710:21:88;;;:41;;62735:16;;62710:21;:41;;62735:16;;62710:41;:::i;:::-;;;-1:-1:-1;62761:21:88;;;:40;;62786:15;;62761:21;:40;;62786:15;;62761:40;:::i;:::-;;;-1:-1:-1;62819:5:88;;59261:3570;-1:-1:-1;;;;;;;;;;59261:3570:88:o;41240:691::-;41486:7;41554:201;41587:22;41623:10;41647:16;41677:9;:25;;;41716:9;:29;;;41554:19;:201::i;:::-;41804:24;41818:9;41804:13;:24::i;:::-;41906:18;41919:4;41906:12;:18::i;:::-;41899:25;41240:691;-1:-1:-1;;;;;;41240:691:88:o;941:175:62:-;1050:58;;-1:-1:-1;;;;;17214:32:181;;1050:58:62;;;17196:51:181;17263:18;;;17256:34;;;1023:86:62;;1043:5;;-1:-1:-1;;;1073:23:62;17169:18:181;;1050:58:62;17022:274:181;2601:224:170;2673:4;2693:2;2699:1;2693:7;2689:30;;2709:10;;-1:-1:-1;;;2709:10:170;;;;;;;;;;;2689:30;2737:10;:14;;;;;;;;;;:19;:24;;;:52;;-1:-1:-1;2765:10:170;:14;;;;;;;;;;:19;;;:24;;2737:52;:80;;;-1:-1:-1;;2793:10:170;:13;;;;;;;;;;;;:18;;;:24;;2601:224::o;5614:457:94:-;5736:21;5810:13;5837:12;;;;;:25;;-1:-1:-1;5853:9:94;;;5837:25;5833:232;;;6004:4;5978:23;-1:-1:-1;;;;;5978:23:94;;:7;:23;:::i;:::-;:30;;;;:::i;:::-;5954:55;-1:-1:-1;6023:31:94;5954:55;6023:31;;:::i;:::-;;;5833:232;5614:457;;;;;;:::o;39515:1359:88:-;39872:27;;:::i;:::-;39964:24;;;;;39901:23;40187:39;;;:11;:39;;;;;;;40117:260;;40167:5;;40240:38;40244:16;40262:15;40240:3;:38::i;:::-;-1:-1:-1;;;;;40293:24:88;;;40292:75;;40348:19;40117:16;:260::i;40292:75::-;40321:11;:24;;;40117:16;:260::i;:::-;-1:-1:-1;;;;;40090:287:88;:24;;;:287;40441:35;40457:5;40090:11;40441:15;:35::i;:::-;40575:292;40608:9;40631:11;:35;;;40680:21;40715:16;40745:15;40774:18;40806:11;:24;;;40844:13;40575:19;:292::i;:::-;40543:324;;;;-1:-1:-1;39515:1359:88;-1:-1:-1;;;;;;;;;;39515:1359:88:o;442:110:87:-;491:7;524:1;514:7;:11;513:36;;541:7;513:36;;;529:1;506:43;442:110;-1:-1:-1;;442:110:87:o;15395:1592:88:-;15499:14;15515:19;15536:14;15552:18;15588:14;15604:19;15627:3;-1:-1:-1;;;;;15627:12:88;;15648:4;15627:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15587:67;;;;15673:18;15683:7;15673:9;:18::i;:::-;15664:27;;15714:35;15728:7;15737:11;15714:13;:35::i;:::-;15701:48;;15806:26;15835:14;:12;:14::i;:::-;15886:15;;15806:43;;-1:-1:-1;15859:24:88;15976:141;15806:43;16020:54;15806:43;15886:15;16020:25;:54::i;:::-;16076:16;16094:1;16097;16100;16103;16106;15976:19;:141::i;:::-;15945:172;;-1:-1:-1;15945:172:88;-1:-1:-1;16128:25:88;16156:170;15945:172;;16251:16;16269:11;:9;:11::i;:::-;16282;:34;-1:-1:-1;;;16282:34:88;;-1:-1:-1;;;;;16282:34:88;16156:53;:170::i;:::-;16128:198;;16482:111;16509:16;16527:9;:25;;;16554:9;:29;;;16482:13;:111::i;:::-;16443:36;16452:27;16443:6;:36;:::i;:::-;:150;;;;:::i;:::-;16434:159;;16789:17;16770:16;16778:7;16770;:16::i;:::-;:36;;;;:::i;:::-;16756:50;;16900:11;16891:6;:20;16887:93;;;16920:60;;-1:-1:-1;;;16920:60:88;;;;;;;;;;;16887:93;15577:1410;;;;;;15395:1592;;;;;:::o;509:133:171:-;552:6;-1:-1:-1;;;570:1:171;:13;566:51;;592:25;;-1:-1:-1;;;592:25:171;;;;;;;;;;;3844:479:31;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:31;;;;;;;;;;-1:-1:-1;;;3970:336:31;;;;;;;:::i;5173:642:62:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:62;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:62;;20649:2:181;5697:111:62;;;20631:21:181;20688:2;20668:18;;;20661:30;20727:34;20707:18;;;20700:62;-1:-1:-1;;;20778:18:181;;;20771:40;20828:19;;5697:111:62;20447:406:181;1945:106:47;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:47;;21060:2:181;2003:41:47;;;21042:21:181;21099:2;21079:18;;;21072:30;-1:-1:-1;;;21118:18:181;;;21111:50;21178:18;;2003:41:47;20858:344:181;5107:368:94;5224:22;5307:150;5329:9;:25;;;-1:-1:-1;;;;;5307:150:94;5372:71;5385:8;-1:-1:-1;;;;;5377:17:94;5415:9;:21;;;-1:-1:-1;;;;;5397:39:94;:15;:39;368:4:171;5372::94;:71::i;2186:115:47:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:14:::0;;-1:-1:-1;;2245:14:47::1;::::0;::::1;::::0;;2274:20:::1;719:10:66::0;2281:12:47::1;640:96:66::0;2832:207:171;2920:13;;;2880:8;2947:13;;;:47;;-1:-1:-1;2965:6:171;;;;;:28;;;2991:1;2979;2975;:5;;;;;:::i;:::-;;:18;;2965:28;2943:87;;;3003:27;;-1:-1:-1;;;3003:27:171;;;;;;;;;;;4001:509;4053:9;4230:1;4226;4222:6;4218:14;4215:1;4212:21;4209:1;4205:29;4202:225;;;4332:10;4326:4;4319:24;4412:4;4406;4399:18;4202:225;-1:-1:-1;4497:3:171;4486:9;;4459:19;;;4452:27;4445:35;4482:19;;;4441:61;;4001:509::o;1944:373:88:-;2062:18;2101:43;2106:20;2113:13;2106:4;:20;:::i;:::-;2128:15;-1:-1:-1;;;;;2101:43:88;:4;:43::i;:::-;2088:56;;2266:4;2206:57;2220:10;2232:15;2249:13;2206;:57::i;:::-;:64;2202:113;;;2294:12;;1944:373;;;;;:::o;13754:422::-;13987:135;14022:22;14046:10;14058:16;14076:15;14093:19;13987:21;:135::i;:::-;13983:186;;;14131:38;;-1:-1:-1;;;14131:38:88;;;;;;;;;;;13983:186;13754:422;;;;;:::o;36873:166::-;36952:7;1239:19:47;:17;:19::i;:::-;36998:34:88::1;37003:15;37020:11;36998:4;:34::i;:::-;36978:16;;:54;;;;;;;:::i;:::-;;;;;;;36971:61;;1268:1:47;36873:166:88::0;;;:::o;57639:429::-;57832:19;57865:14;;;;;:46;;;57901:10;57883:15;;:28;57865:46;57861:201;;;57927:27;;;;:16;:27;;;;;:48;;57962:12;57927:34;:48::i;:::-;-1:-1:-1;;;57996:25:88;;;;-1:-1:-1;57996:11:88;:25;;;;;57989:32;;;57996:25;57639:429::o;4120:176:94:-;-1:-1:-1;;;;;4214:22:94;;;;;;:12;:22;;;;;;;;;:36;;;;;;;;;;;;-1:-1:-1;;;;;4214:36:94;;;-1:-1:-1;;;4214:36:94;-1:-1:-1;;;;;4214:36:94;;;-1:-1:-1;;;4214:36:94;-1:-1:-1;;;;;;4214:36:94;;;;;;;;;;;;;;;;;;;;;;;;;4265:24;;;;;4227:8;;4265:24;:::i;665:206:87:-;739:7;;774:20;782:11;774:20;:::i;:::-;754:40;;818:10;808:7;:20;807:61;;846:20;859:7;846:10;:20;:::i;:::-;844:23;;;:::i;554:109::-;601:7;634:1;624:7;:11;623:37;;651:8;652:7;651:8;:::i;:::-;623:37;;2407:149:70;2465:13;2497:52;-1:-1:-1;;;;;2509:22:70;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:70;;1918:47;;-1:-1:-1;;;1975:6:70;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:70;;;;;;;;;-1:-1:-1;;;2000:6:70;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:70;;;;;;;;-1:-1:-1;2030:9:70;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:70;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:70;;;;;;;;-1:-1:-1;2141:1:70;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:70;;2162:55;;;;-1:-1:-1;;;2162:55:70;;21550:2:181;2162:55:70;;;21532:21:181;;;21569:18;;;21562:30;21628:34;21608:18;;;21601:62;21680:18;;2162:55:70;21348:356:181;4109:223:65;4242:12;4273:52;4295:6;4303:4;4309:1;4312:12;4273:21;:52::i;6052:1709:171:-;6127:9;6209:1;6223:45;;;;6314:1;6332:53;;;;6439:9;;;6469:61;;;;6590:1;6585:6;;6432:181;;6469:61;6507:1;6502:6;;6432:181;;6653:1;6650;6646:9;6735:1;6732;6728:9;6723:14;;6693:1018;6760:1;6693:1018;;;6868:1;6865;6861:9;6907:1;6902:3;6898:11;6895:83;;;6950:1;6947;6940:12;6895:83;7026:4;7022:2;7018:13;7071:2;7062:7;7059:15;7056:87;;;7115:1;7112;7105:12;7056:87;7173:15;;;;-1:-1:-1;;7216:9:171;;;7213:476;;;7273:1;7270;7266:9;7352:1;7348;7344:2;7340:10;7337:17;7330:25;7325:1;7318:9;7311:17;7307:49;7304:129;;;7401:1;7398;7391:12;7304:129;7485:4;7481:2;7477:13;7534:2;7525:7;7522:15;7519:95;;;7582:1;7579;7572:12;7519:95;7648:15;;;;-1:-1:-1;;7213:476:171;6800:1;6797;6793:9;6788:14;;6693:1018;;;6697:62;6307:1422;;6332:53;6366:1;6361:6;;6307:1422;;6202:1541;;6223:45;6253:1;6248:6;;6202:1541;;6052:1709;;;;;:::o;5166:446:65:-;5331:12;5388:5;5363:21;:30;;5355:81;;;;-1:-1:-1;;;5355:81:65;;21911:2:181;5355:81:65;;;21893:21:181;21950:2;21930:18;;;21923:30;21989:34;21969:18;;;21962:62;-1:-1:-1;;;22040:18:181;;;22033:36;22086:19;;5355:81:65;21709:402:181;5355:81:65;5447:12;5461:23;5488:6;-1:-1:-1;;;;;5488:11:65;5507:5;5514:4;5488:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:73;;;;5536:69;5563:6;5571:7;5580:10;5592:12;5536:26;:69::i;:::-;5529:76;5166:446;-1:-1:-1;;;;;;;5166:446:65:o;7672:628::-;7852:12;7880:7;7876:418;;;7907:10;:17;7928:1;7907:22;7903:286;;-1:-1:-1;;;;;1702:19:65;;;8114:60;;;;-1:-1:-1;;;8114:60:65;;22610:2:181;8114:60:65;;;22592:21:181;22649:2;22629:18;;;22622:30;22688:31;22668:18;;;22661:59;22737:18;;8114:60:65;22408:353:181;8114:60:65;-1:-1:-1;8209:10:65;8202:17;;7876:418;8250:33;8258:10;8270:12;8981:17;;:21;8977:379;;9209:10;9203:17;9265:15;9252:10;9248:2;9244:19;9237:44;8977:379;9332:12;9325:20;;-1:-1:-1;;;9325:20:65;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:181:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:181;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:181;;604:42;;594:70;;660:1;657;650:12;675:254;743:6;751;804:2;792:9;783:7;779:23;775:32;772:52;;;820:1;817;810:12;772:52;856:9;843:23;833:33;;885:38;919:2;908:9;904:18;885:38;:::i;:::-;875:48;;675:254;;;;;:::o;1498:180::-;1557:6;1610:2;1598:9;1589:7;1585:23;1581:32;1578:52;;;1626:1;1623;1616:12;1578:52;-1:-1:-1;1649:23:181;;1498:180;-1:-1:-1;1498:180:181:o;1865:118::-;1951:5;1944:13;1937:21;1930:5;1927:32;1917:60;;1973:1;1970;1963:12;1988:315;2053:6;2061;2114:2;2102:9;2093:7;2089:23;2085:32;2082:52;;;2130:1;2127;2120:12;2082:52;2153:29;2172:9;2153:29;:::i;:::-;2143:39;;2232:2;2221:9;2217:18;2204:32;2245:28;2267:5;2245:28;:::i;:::-;2292:5;2282:15;;;1988:315;;;;;:::o;2493:248::-;2561:6;2569;2622:2;2610:9;2601:7;2597:23;2593:32;2590:52;;;2638:1;2635;2628:12;2590:52;-1:-1:-1;;2661:23:181;;;2731:2;2716:18;;;2703:32;;-1:-1:-1;2493:248:181:o;3005:186::-;3064:6;3117:2;3105:9;3096:7;3092:23;3088:32;3085:52;;;3133:1;3130;3123:12;3085:52;3156:29;3175:9;3156:29;:::i;3196:254::-;3264:6;3272;3325:2;3313:9;3304:7;3300:23;3296:32;3293:52;;;3341:1;3338;3331:12;3293:52;3364:29;3383:9;3364:29;:::i;:::-;3354:39;3440:2;3425:18;;;;3412:32;;-1:-1:-1;;;3196:254:181:o;3971:127::-;4032:10;4027:3;4023:20;4020:1;4013:31;4063:4;4060:1;4053:15;4087:4;4084:1;4077:15;4103:902;4157:5;4210:3;4203:4;4195:6;4191:17;4187:27;4177:55;;4228:1;4225;4218:12;4177:55;4264:6;4251:20;4290:4;-1:-1:-1;;;;;4350:2:181;4346;4343:10;4340:36;;;4356:18;;:::i;:::-;4402:2;4399:1;4395:10;4434:2;4428:9;4497:2;4493:7;4488:2;4484;4480:11;4476:25;4468:6;4464:38;4552:6;4540:10;4537:22;4532:2;4520:10;4517:18;4514:46;4511:72;;;4563:18;;:::i;:::-;4599:2;4592:22;4649:18;;;4725:15;;;4721:24;;;4683:15;;;;-1:-1:-1;4757:15:181;;;4754:35;;;4785:1;4782;4775:12;4754:35;4821:2;4813:6;4809:15;4798:26;;4833:142;4849:6;4844:3;4841:15;4833:142;;;4915:17;;4903:30;;4953:12;;;;4866;;;;4833:142;;5010:416;5103:6;5111;5164:2;5152:9;5143:7;5139:23;5135:32;5132:52;;;5180:1;5177;5170:12;5132:52;5216:9;5203:23;5193:33;;5277:2;5266:9;5262:18;5249:32;-1:-1:-1;;;;;5296:6:181;5293:30;5290:50;;;5336:1;5333;5326:12;5290:50;5359:61;5412:7;5403:6;5392:9;5388:22;5359:61;:::i;:::-;5349:71;;;5010:416;;;;;:::o;6481:220::-;-1:-1:-1;;;;;6662:32:181;;;;6644:51;;6632:2;6617:18;;6481:220::o;7053:389::-;7127:6;7135;7143;7196:2;7184:9;7175:7;7171:23;7167:32;7164:52;;;7212:1;7209;7202:12;7164:52;7235:29;7254:9;7235:29;:::i;:::-;7225:39;;7283:38;7317:2;7306:9;7302:18;7283:38;:::i;:::-;7273:48;;7371:2;7360:9;7356:18;7343:32;7384:28;7406:5;7384:28;:::i;:::-;7431:5;7421:15;;;7053:389;;;;;:::o;8179:470::-;8272:6;8280;8288;8296;8304;8357:3;8345:9;8336:7;8332:23;8328:33;8325:53;;;8374:1;8371;8364:12;8325:53;8397:29;8416:9;8397:29;:::i;:::-;8387:39;;8445:38;8479:2;8468:9;8464:18;8445:38;:::i;:::-;8435:48;;8502:38;8536:2;8525:9;8521:18;8502:38;:::i;:::-;8179:470;;;;-1:-1:-1;8492:48:181;;8587:2;8572:18;;8559:32;;-1:-1:-1;8638:3:181;8623:19;8610:33;;8179:470;-1:-1:-1;;8179:470:181:o;8859:260::-;8927:6;8935;8988:2;8976:9;8967:7;8963:23;8959:32;8956:52;;;9004:1;9001;8994:12;8956:52;9027:29;9046:9;9027:29;:::i;:::-;9017:39;;9075:38;9109:2;9098:9;9094:18;9075:38;:::i;9580:847::-;9700:6;9708;9716;9769:2;9757:9;9748:7;9744:23;9740:32;9737:52;;;9785:1;9782;9775:12;9737:52;9825:9;9812:23;-1:-1:-1;;;;;9895:2:181;9887:6;9884:14;9881:34;;;9911:1;9908;9901:12;9881:34;9949:6;9938:9;9934:22;9924:32;;9994:7;9987:4;9983:2;9979:13;9975:27;9965:55;;10016:1;10013;10006:12;9965:55;10056:2;10043:16;10082:2;10074:6;10071:14;10068:34;;;10098:1;10095;10088:12;10068:34;10153:7;10146:4;10136:6;10133:1;10129:14;10125:2;10121:23;10117:34;10114:47;10111:67;;;10174:1;10171;10164:12;10111:67;10205:4;10197:13;;;;-1:-1:-1;10229:6:181;-1:-1:-1;10273:20:181;;;10260:34;;10306:16;;;10303:36;;;10335:1;10332;10325:12;10303:36;;10358:63;10413:7;10402:8;10391:9;10387:24;10358:63;:::i;:::-;10348:73;;;9580:847;;;;;:::o;12102:127::-;12163:10;12158:3;12154:20;12151:1;12144:31;12194:4;12191:1;12184:15;12218:4;12215:1;12208:15;12234:128;12301:9;;;12322:11;;;12319:37;;;12336:18;;:::i;12367:125::-;12432:9;;;12453:10;;;12450:36;;;12466:18;;:::i;12497:168::-;12570:9;;;12601;;12618:15;;;12612:22;;12598:37;12588:71;;12639:18;;:::i;12670:127::-;12731:10;12726:3;12722:20;12719:1;12712:31;12762:4;12759:1;12752:15;12786:4;12783:1;12776:15;12802:217;12842:1;12868;12858:132;;12912:10;12907:3;12903:20;12900:1;12893:31;12947:4;12944:1;12937:15;12975:4;12972:1;12965:15;12858:132;-1:-1:-1;13004:9:181;;12802:217::o;13024:375::-;-1:-1:-1;;;;;13282:15:181;;;13264:34;;13334:15;;;;13329:2;13314:18;;13307:43;13381:2;13366:18;;13359:34;;;;13214:2;13199:18;;13024:375::o;13820:184::-;13890:6;13943:2;13931:9;13922:7;13918:23;13914:32;13911:52;;;13959:1;13956;13949:12;13911:52;-1:-1:-1;13982:16:181;;13820:184;-1:-1:-1;13820:184:181:o;14298:127::-;14359:10;14354:3;14350:20;14347:1;14340:31;14390:4;14387:1;14380:15;14414:4;14411:1;14404:15;14754:466;-1:-1:-1;;;;;15035:15:181;;;15017:34;;15087:15;;;15082:2;15067:18;;15060:43;15139:15;;15134:2;15119:18;;15112:43;15198:14;;15191:22;15186:2;15171:18;;15164:50;14966:3;14951:19;;14754:466::o;15225:216::-;15289:9;;;15317:11;;;15264:3;15347:9;;15375:10;;15371:19;;15400:10;;15392:19;;15368:44;15365:70;;;15415:18;;:::i;:::-;15365:70;;15225:216;;;;:::o;15446:136::-;15481:3;-1:-1:-1;;;15502:22:181;;15499:48;;15527:18;;:::i;:::-;-1:-1:-1;15567:1:181;15563:13;;15446:136::o;15836:244::-;15914:6;15922;15975:2;15963:9;15954:7;15950:23;15946:32;15943:52;;;15991:1;15988;15981:12;15943:52;-1:-1:-1;;16014:16:181;;16070:2;16055:18;;;16049:25;16014:16;;16049:25;;-1:-1:-1;15836:244:181:o;16085:200::-;16151:9;;;16124:4;16179:9;;16207:10;;16219:12;;;16203:29;16242:12;;;16234:21;;16200:56;16197:82;;;16259:18;;:::i;17839:183::-;-1:-1:-1;;;;;17958:10:181;;;17946;;;17942:27;;17981:12;;;17978:38;;;17996:18;;:::i;18027:182::-;-1:-1:-1;;;;;18134:10:181;;;18146;;;18130:27;;18169:11;;;18166:37;;;18183:18;;:::i;18534:185::-;-1:-1:-1;;;;;18655:10:181;;;18643;;;18639:27;;18678:12;;;18675:38;;;18693:18;;:::i;18724:250::-;18809:1;18819:113;18833:6;18830:1;18827:13;18819:113;;;18909:11;;;18903:18;18890:11;;;18883:39;18855:2;18848:10;18819:113;;;-1:-1:-1;;18966:1:181;18948:16;;18941:27;18724:250::o;18979:812::-;-1:-1:-1;;;19385:3:181;19378:38;19360:3;19445:6;19439:13;19461:75;19529:6;19524:2;19519:3;19515:12;19508:4;19500:6;19496:17;19461:75;:::i;:::-;-1:-1:-1;;;19595:2:181;19555:16;;;19587:11;;;19580:40;19645:13;;19667:76;19645:13;19729:2;19721:11;;19714:4;19702:17;;19667:76;:::i;:::-;19763:17;19782:2;19759:26;;18979:812;-1:-1:-1;;;;18979:812:181:o;19796:396::-;19945:2;19934:9;19927:21;19908:4;19977:6;19971:13;20020:6;20015:2;20004:9;20000:18;19993:34;20036:79;20108:6;20103:2;20092:9;20088:18;20083:2;20075:6;20071:15;20036:79;:::i;:::-;20176:2;20155:15;-1:-1:-1;;20151:29:181;20136:45;;;;20183:2;20132:54;;19796:396;-1:-1:-1;;19796:396:181:o;20197:245::-;20264:6;20317:2;20305:9;20296:7;20292:23;20288:32;20285:52;;;20333:1;20330;20323:12;20285:52;20365:9;20359:16;20384:28;20406:5;20384:28;:::i;21207:136::-;21246:3;21274:5;21264:39;;21283:18;;:::i;:::-;-1:-1:-1;;;21319:18:181;;21207:136::o;22116:287::-;22245:3;22283:6;22277:13;22299:66;22358:6;22353:3;22346:4;22338:6;22334:17;22299:66;:::i;:::-;22381:16;;;;;22116:287;-1:-1:-1;;22116:287:181:o",
    "linkReferences": {},
    "immutableReferences": {
      "41561": [
        {
          "start": 2455,
          "length": 32
        },
        {
          "start": 3918,
          "length": 32
        },
        {
          "start": 4798,
          "length": 32
        },
        {
          "start": 5891,
          "length": 32
        },
        {
          "start": 7702,
          "length": 32
        },
        {
          "start": 8558,
          "length": 32
        },
        {
          "start": 8689,
          "length": 32
        },
        {
          "start": 9278,
          "length": 32
        },
        {
          "start": 9467,
          "length": 32
        },
        {
          "start": 10860,
          "length": 32
        },
        {
          "start": 12528,
          "length": 32
        },
        {
          "start": 12744,
          "length": 32
        },
        {
          "start": 13481,
          "length": 32
        },
        {
          "start": 13640,
          "length": 32
        },
        {
          "start": 17299,
          "length": 32
        },
        {
          "start": 18663,
          "length": 32
        }
      ],
      "41565": [
        {
          "start": 1662,
          "length": 32
        },
        {
          "start": 4462,
          "length": 32
        }
      ],
      "41569": [
        {
          "start": 2586,
          "length": 32
        },
        {
          "start": 9325,
          "length": 32
        },
        {
          "start": 11048,
          "length": 32
        }
      ],
      "41573": [
        {
          "start": 2663,
          "length": 32
        },
        {
          "start": 4507,
          "length": 32
        },
        {
          "start": 4719,
          "length": 32
        },
        {
          "start": 5288,
          "length": 32
        },
        {
          "start": 11499,
          "length": 32
        },
        {
          "start": 16553,
          "length": 32
        }
      ],
      "41576": [
        {
          "start": 1195,
          "length": 32
        },
        {
          "start": 5334,
          "length": 32
        },
        {
          "start": 11448,
          "length": 32
        },
        {
          "start": 16519,
          "length": 32
        }
      ],
      "41579": [
        {
          "start": 1921,
          "length": 32
        },
        {
          "start": 19817,
          "length": 32
        }
      ],
      "41594": [
        {
          "start": 2009,
          "length": 32
        },
        {
          "start": 3963,
          "length": 32
        },
        {
          "start": 5938,
          "length": 32
        },
        {
          "start": 12573,
          "length": 32
        },
        {
          "start": 12789,
          "length": 32
        },
        {
          "start": 13528,
          "length": 32
        },
        {
          "start": 13679,
          "length": 32
        }
      ],
      "41597": [
        {
          "start": 8851,
          "length": 32
        },
        {
          "start": 15098,
          "length": 32
        }
      ],
      "41600": [
        {
          "start": 9061,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "EPOCH_DURATION()": "a70b9f0c",
    "EPOCH_FIX_DELAY()": "472132f0",
    "EPOCH_FIX_TIMEOUT()": "19f1039c",
    "activeLimitPriceTicks(uint256)": "683f81a1",
    "addLimitPriceTick(uint256,uint256)": "44a3c664",
    "buffer()": "edaafe20",
    "calculateRebateFactorForPriceTick(uint256)": "cb6238c8",
    "cancelLimitOrder()": "2202ce8c",
    "cash(address)": "b6dc16f6",
    "cdm()": "e2dfb317",
    "claimFees()": "d294f093",
    "claimUndelegatedCredit(uint256)": "2b2368a2",
    "createLimitOrder(uint256)": "2906f94e",
    "creditWithholder()": "bf404a41",
    "delegateCredit(uint256)": "93f9eb35",
    "deposit(address,uint256)": "47e7ef24",
    "enterEmergencyMode()": "9844afd2",
    "epochs(uint256)": "c6b61e4c",
    "exchange(uint256,uint256)": "d4b7eac3",
    "exchangePreview(uint256,uint256)": "88439aea",
    "getCurrentEpoch()": "b97dd9e2",
    "getGlobalIRS()": "eb953449",
    "getLimitOrder(uint256,uint256)": "2af8992b",
    "getPositionIRS(address)": "dbe6b31c",
    "getPriceTick(uint256)": "51f813ec",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasPermission(address,address)": "cde68041",
    "hasRole(bytes32,address)": "91d14854",
    "limitOrderFloor()": "dc2ec249",
    "limitOrders(uint256)": "a3e2b495",
    "liquidatePositions(address[],uint256[])": "df10f687",
    "liquidationConfig()": "1c580ad5",
    "modifyCollateralAndDebt(address,address,address,int256,int256)": "c75a4b5e",
    "modifyPermission(address,address,bool)": "8309dbdd",
    "modifyPermission(address,bool)": "d9c70f57",
    "oracle()": "7dc0d1d0",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "pausedAt()": "2e55d0f2",
    "positions(address)": "55f57510",
    "protocolFee()": "b0e21e8a",
    "removeLimitPriceTick(uint256)": "ef0563fb",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setParameter(bytes32,uint256)": "723507be",
    "setPermissionAgent(address,bool)": "280c37ef",
    "setUp(address)": "3f2601ef",
    "shares(address)": "ce7c2ac2",
    "sharesQueuedByEpoch(uint256,address)": "14815a6d",
    "spotPrice()": "398482d8",
    "supportsInterface(bytes4)": "01ffc9a7",
    "token()": "fc0c546a",
    "tokenScale()": "342c02b1",
    "totalAccruedFees()": "ba95534c",
    "totalCreditClaimable()": "5fe83c7b",
    "totalNormalDebt()": "842c311e",
    "totalShares()": "3a98ef39",
    "undelegateCredit(uint256,uint256[])": "6e5e741e",
    "unpause()": "3f4ba83a",
    "vaultConfig()": "7cc34bb4",
    "virtualIRS(address)": "8051ba75",
    "withdraw(address,uint256)": "f3fef3a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CDPVault__addLimitPriceTick_invalidPriceTickOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__addLimitPriceTick_limitPriceTickOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__calculateAssetsAndLiabilities_insufficientAssets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__cancelLimitOrder_limitOrderDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__checkEmergencyMode_entered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__claimUndelegatedCredit_epochNotClaimable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__claimUndelegatedCredit_epochNotFixed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitOrderAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitOrderFloor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitPriceTickNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__delegateCredit_creditAmountTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__exchange_notEnoughExchanged\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__liquidatePosition_notUnsafe\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__liquidatePositions_argLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_maxUtilizationRatio\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_noPermission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_notSafe\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyPosition_debtFloor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__setParameter_unrecognizedParameter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InterestRateModel__setBaseRate_invalidBaseRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ItemInList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ItemNotInList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__add_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__mul_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__sub_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toInt256_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toUint64_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permission__modifyPermission_notPermitted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"AddLimitPriceTick\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"CancelLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesRedeemed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditClaimed\",\"type\":\"uint256\"}],\"name\":\"ClaimUndelegatedCredit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"CreateLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditDelegated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesIssued\",\"type\":\"uint256\"}],\"name\":\"DelegateCredit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRedeemed\",\"type\":\"uint256\"}],\"name\":\"Exchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRedeemed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"}],\"name\":\"ExecuteLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralReleased\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"normalDebtRepaid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"}],\"name\":\"LiquidatePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"}],\"name\":\"ModifyCollateralAndDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"grant\",\"type\":\"bool\"}],\"name\":\"ModifyPermission\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalNormalDebt\",\"type\":\"uint256\"}],\"name\":\"ModifyPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"RemoveLimitPriceTick\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"baseRate\",\"type\":\"int64\"}],\"name\":\"SetBaseRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SetGlobalIRS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"SetParameter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"grant\",\"type\":\"bool\"}],\"name\":\"SetPermittedAgent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"}],\"name\":\"SetPositionIRS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"estimatedClaim\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimableAtEpoch\",\"type\":\"uint256\"}],\"name\":\"UndelegateCredit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EPOCH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EPOCH_FIX_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EPOCH_FIX_TIMEOUT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"name\":\"activeLimitPriceTicks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextLimitPriceTick\",\"type\":\"uint256\"}],\"name\":\"addLimitPriceTick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buffer\",\"outputs\":[{\"internalType\":\"contract IBuffer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"name\":\"calculateRebateFactorForPriceTick\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"cash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cdm\",\"outputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feesClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimForEpoch\",\"type\":\"uint256\"}],\"name\":\"claimUndelegatedCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"createLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditWithholder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditAmount\",\"type\":\"uint256\"}],\"name\":\"delegateCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cashAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterEmergencyMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"epochs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCreditClaimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCreditWithheld\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSharesQueued\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"claimRatio\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"estimatedCreditClaimPerShare\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"upperLimitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditToExchange\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralExchanged\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"upperLimitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditToExchange\",\"type\":\"uint256\"}],\"name\":\"exchangePreview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralExchanged\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentEpoch\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalIRS\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"baseRate\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"lastUpdated\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"rateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"averageRebate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"globalAccruedRebate\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.GlobalIRS\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getLimitOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"}],\"name\":\"getPositionIRS\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"snapshotRateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"rebateFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"accruedRebate\",\"type\":\"uint128\"}],\"internalType\":\"struct InterestRateModel.PositionIRS\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPriceTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitOrderFloor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"}],\"name\":\"limitOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"repayAmounts\",\"type\":\"uint256[]\"}],\"name\":\"liquidatePositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationConfig\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"liquidationPenalty\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationDiscount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"targetHealthFactor\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"}],\"name\":\"modifyCollateralAndDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"modifyPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"modifyPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"normalDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"removeLimitPriceTick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"setParameter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"setPermissionAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"unwinderFactory\",\"type\":\"address\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"sharesQueuedByEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesQueued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spotPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAccruedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCreditClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalNormalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"prevQueuedEpochs\",\"type\":\"uint256[]\"}],\"name\":\"undelegateCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"estimatedClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableAtEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixableUntilEpoch\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultConfig\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"debtFloor\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"liquidationRatio\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"globalLiquidationRatio\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"}],\"name\":\"virtualIRS\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"rateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"accruedRebate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"globalAccruedRebate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addLimitPriceTick(uint256,uint256)\":{\"details\":\"Requires caller to have 'TICK_MANAGER_ROLE' role\",\"params\":{\"limitPriceTick\":\"The limit price tick to add [wad]\",\"nextLimitPriceTick\":\"The next (higher) limit price tick (0 if there's no higher price tick) [wad]\"}},\"calculateRebateFactorForPriceTick(uint256)\":{\"params\":{\"priceTick\":\"Price tick from which to derive the rebate factor from [wad]\"},\"returns\":{\"_0\":\"_ Rebate factor [wad]\"}},\"claimUndelegatedCredit(uint256)\":{\"details\":\"The undelegated amount of credit can be claimed after the epoch fix delay has passed\",\"params\":{\"claimForEpoch\":\"Epoch at which the undelegation was initiated\"},\"returns\":{\"creditAmount\":\"Amount of credit undelegated [wad]\"}},\"createLimitOrder(uint256)\":{\"params\":{\"limitPriceTick\":\"Limit price tick of the limit order (between 1.0 and 100) [wad]\"}},\"delegateCredit(uint256)\":{\"details\":\"The caller needs to permit this contract to transfer credit on their behalf\",\"params\":{\"creditAmount\":\"Amount of credit to delegate [wad]\"},\"returns\":{\"sharesAmount\":\"Amount of shares issued [wad]\"}},\"deposit(address,uint256)\":{\"details\":\"The caller needs to approve this contract to transfer tokens on their behalf\",\"params\":{\"amount\":\"Amount of tokens to deposit [tokenScale]\",\"to\":\"Address of the user to attribute the cash to\"},\"returns\":{\"cashAmount\":\"Amount of cash deposited [wad]\"}},\"enterEmergencyMode()\":{\"details\":\"This method will revert if the vault has already been paused\"},\"exchange(uint256,uint256)\":{\"params\":{\"creditToExchange\":\"Amount of credit to exchange for collateral [wad]\",\"upperLimitPriceTick\":\"Upper limit price tick (> 1.0) [wad]\"},\"returns\":{\"collateralExchanged\":\"Amount of collateral exchanged [wad]\",\"creditExchanged\":\"Amount of credit exchanged [wad]\"}},\"exchangePreview(uint256,uint256)\":{\"params\":{\"creditToExchange\":\"Amount of credit to exchange for collateral [wad]\",\"upperLimitPriceTick\":\"Upper limit price tick (> 1.0) [wad]\"},\"returns\":{\"collateralExchanged\":\"Amount of collateral exchanged [wad]\",\"creditExchanged\":\"Amount of credit exchanged [wad]\"}},\"getCurrentEpoch()\":{\"returns\":{\"currentEpoch\":\"Current epoch\"}},\"getGlobalIRS()\":{\"returns\":{\"_0\":\"_ Global interest rate state\"}},\"getLimitOrder(uint256,uint256)\":{\"params\":{\"index\":\"Index of the limit order in the linked list\",\"priceTick\":\"Price tick of the limit order\"},\"returns\":{\"limitOrderId\":\"Limit order id\"}},\"getPositionIRS(address)\":{\"params\":{\"position\":\"Address of position (owner)\"},\"returns\":{\"_0\":\"_ Interest rate state of the position\"}},\"getPriceTick(uint256)\":{\"params\":{\"index\":\"Index of the price tick in the linked list\"},\"returns\":{\"isActive\":\"Whether the price tick is active\",\"priceTick\":\"Price tick [wad]\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasPermission(address,address)\":{\"params\":{\"caller\":\"Address of the caller\",\"owner\":\"Address of the owner\"},\"returns\":{\"_0\":\"_ whether `caller` has the permission\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"liquidatePositions(address[],uint256[])\":{\"details\":\"The liquidator has to approve the vault to transfer the sum of `repayAmounts`.\",\"params\":{\"owners\":\"Owners of the positions to liquidate\",\"repayAmounts\":\"Amounts the liquidator wants to repay for each position [wad]\"}},\"modifyCollateralAndDebt(address,address,address,int256,int256)\":{\"details\":\"Checks that the global debt ceiling and the vault's debt ceiling have not been exceeded via the CDM, - that the Position is still safe after the modification, - that the msg.sender has the permission of the owner to decrease the collateral-to-debt ratio, - that the msg.sender has the permission of the collateralizer to put up new collateral, - that the msg.sender has the permission of the creditor to settle debt with their credit, - that that the vault debt floor is exceeded - that the vault minimum collateralization ratio is met, otherwise it will transition into emergency mode\",\"params\":{\"collateralizer\":\"Address of who puts up or receives the collateral delta\",\"creditor\":\"Address of who provides or receives the credit delta for the debt delta\",\"deltaCollateral\":\"Amount of collateral to put up (+) or to remove (-) from the position [wad]\",\"deltaNormalDebt\":\"Amount of normalized debt (gross, before rate is applied) to generate (+) or to settle (-) on this position [wad]\",\"owner\":\"Address of the owner of the position\"}},\"modifyPermission(address,address,bool)\":{\"params\":{\"caller\":\"Address of the caller to grant or revoke permission for\",\"owner\":\"Address of the owner\",\"permitted\":\"Whether to grant or revoke permission\"}},\"modifyPermission(address,bool)\":{\"params\":{\"caller\":\"Address of the caller to grant or revoke permission for\",\"permitted\":\"Whether to grant or revoke permission\"}},\"pause()\":{\"details\":\"Sender has to be allowed to call this method\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeLimitPriceTick(uint256)\":{\"details\":\"Requires caller to have 'TICK_MANAGER_ROLE' role\",\"params\":{\"limitPriceTick\":\"limit price tick to remove [wad]\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setParameter(bytes32,uint256)\":{\"details\":\"Sender has to be allowed to call this method\",\"params\":{\"data\":\"New value to set for the variable [wad]\",\"parameter\":\"Name of the variable to set\"}},\"setPermissionAgent(address,bool)\":{\"params\":{\"agent\":\"Address of the agent to grant or revoke permission for\",\"permitted\":\"Whether to grant or revoke permission\"}},\"spotPrice()\":{\"returns\":{\"_0\":\"_ Current spot price of the collateral token [wad]\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"undelegateCredit(uint256,uint256[])\":{\"details\":\"Transfer an estimated amount of credit to be undelegated to the credit withholder contract\",\"params\":{\"prevQueuedEpochs\":\"Array of stale epochs for which shares were queued\",\"shareAmount\":\"Amount of shares to redeem [wad]\"},\"returns\":{\"claimableAtEpoch\":\"Epoch at which the undelegated credit can be claimed by the delegator\",\"currentEpoch\":\"Epoch at which the undelegation was initiated\",\"estimatedClaim\":\"Estimated amount of withdrawable credit, if no bad debt is accrued [wad]\",\"fixableUntilEpoch\":\"Epoch at which the credit claim of the epoch has to be fixed by\"}},\"unpause()\":{\"details\":\"Sender has to be allowed to call this method\"},\"virtualIRS(address)\":{\"params\":{\"position\":\"Address of the position to return the accrued rebate for\"},\"returns\":{\"accruedRebate\":\"The accrued rebate of a position [wad]\",\"globalAccruedRebate\":\"The global accrued rebate [wad]\",\"rateAccumulator\":\"Current global rate accumulator [wad]\"}},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"Amount of tokens to withdraw [wad]\",\"to\":\"Address of the user to withdraw tokens to\"},\"returns\":{\"tokenAmount\":\"Amount of tokens withdrawn [tokenScale]\"}}},\"title\":\"CDPVault_TypeA\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"EPOCH_DURATION()\":{\"notice\":\"Number of seconds in an epoch [seconds]\"},\"EPOCH_FIX_DELAY()\":{\"notice\":\"Number of epochs that have to pass until an epoch claim can be fixed\"},\"EPOCH_FIX_TIMEOUT()\":{\"notice\":\"Number of epochs for which an epoch claim can be fixed\"},\"activeLimitPriceTicks(uint256)\":{\"notice\":\"Map specifying if a given price tick is active [wad]\"},\"addLimitPriceTick(uint256,uint256)\":{\"notice\":\"Adds a new price tick to the limit price tick linked list\"},\"buffer()\":{\"notice\":\"Global surplus and debt Buffer\"},\"calculateRebateFactorForPriceTick(uint256)\":{\"notice\":\"Calculates the rebate factor for a given price tick\"},\"cancelLimitOrder()\":{\"notice\":\"Cancels an existing limit order for a given position (user)\"},\"cash(address)\":{\"notice\":\"Map specifying the cash balances a user has [wad]\"},\"cdm()\":{\"notice\":\"CDM (Credit and Debt Manager)\"},\"claimFees()\":{\"notice\":\"Sends accrued protocol fees to the Buffer\"},\"claimUndelegatedCredit(uint256)\":{\"notice\":\"Claims the undelegated amount of credit. If the claim has not been fixed within the timeout then the resulting credit claim will be 0 (it will not revert).\"},\"createLimitOrder(uint256)\":{\"notice\":\"Creates a new limit order for a given position (user). The price tick represents a fee on the current oracle price of the collateral asset for which it can be redeemed for Stablecoin\"},\"creditWithholder()\":{\"notice\":\"Withholder for amounts of credit to be undelegated (claims that are fixed or are about to be fixed)\"},\"delegateCredit(uint256)\":{\"notice\":\"Delegates credit to this contract\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits collateral tokens into this contract and increases a users cash balance\"},\"enterEmergencyMode()\":{\"notice\":\"Triggers the emergency mode by pausing the vault if global collateralization ratio is below the emergency threshold\"},\"epochs(uint256)\":{\"notice\":\"Map of epochs\"},\"exchange(uint256,uint256)\":{\"notice\":\"Exchange credit for collateral\"},\"exchangePreview(uint256,uint256)\":{\"notice\":\"Preview exchanging credit for collateral\"},\"getCurrentEpoch()\":{\"notice\":\"Computes the current epoch based on the block.timestamp and the duration of an epoch\"},\"getGlobalIRS()\":{\"notice\":\"Returns the global interest rate state\"},\"getLimitOrder(uint256,uint256)\":{\"notice\":\"Returns a limit order id at an index in the limit order linked list (sorted from oldest to newest)\"},\"getPositionIRS(address)\":{\"notice\":\"Returns the interest rate state of a position\"},\"getPriceTick(uint256)\":{\"notice\":\"Returns a price tick at an index in the price tick linked list (sorted from lowest to highest)\"},\"hasPermission(address,address)\":{\"notice\":\"Checks if `caller` has the permission to perform an action on behalf of `owner`\"},\"limitOrderFloor()\":{\"notice\":\"Minimum principal amount of a limit order [wad]\"},\"limitOrders(uint256)\":{\"notice\":\"Map of limit order makers\"},\"liquidatePositions(address[],uint256[])\":{\"notice\":\"Liquidates multiple unsafe positions by selling as much collateral as required to cover the debt in order to make the positions safe again. The collateral can be bought at a discount (`liquidationDiscount`) to the current spot price. The liquidator has to provide the amount he wants repay or sell (`repayAmounts`) for each position. From that repay amount a penalty (`liquidationPenalty`) is subtracted to mitigate against profitable self liquidations. If the available collateral of a position is not sufficient to cover the debt the vault is able to apply for a bail out from the global Buffer, any residual bad debt not covered by the  Buffer will be attributed to the credit delegators.\"},\"liquidationConfig()\":{\"notice\":\"Liquidation configuration\"},\"modifyCollateralAndDebt(address,address,address,int256,int256)\":{\"notice\":\"Modifies a Position's collateral and debt balances\"},\"modifyPermission(address,address,bool)\":{\"notice\":\"Gives or revokes the permission for `caller` to perform an action on behalf of `owner`\"},\"modifyPermission(address,bool)\":{\"notice\":\"Gives or revokes the permission for `caller` to perform an action on behalf of `msg.sender`\"},\"oracle()\":{\"notice\":\"Oracle of the collateral token\"},\"pause()\":{\"notice\":\"Pauses the contract\"},\"positions(address)\":{\"notice\":\"Map of user positions\"},\"protocolFee()\":{\"notice\":\"Portion of interest that goes to the protocol [wad]\"},\"removeLimitPriceTick(uint256)\":{\"notice\":\"Removes limit price tick\"},\"setParameter(bytes32,uint256)\":{\"notice\":\"Sets various variables for this contract\"},\"setPermissionAgent(address,bool)\":{\"notice\":\"Gives or revokes the permission for the `agent` to modify the permissions of `msg.sender`\"},\"shares(address)\":{\"notice\":\"Number of shares currently issued to a delegator [wad]\"},\"sharesQueuedByEpoch(uint256,address)\":{\"notice\":\"Number of shares that have been queued for undelegation for a specific epoch by a delegator [wad]\"},\"spotPrice()\":{\"notice\":\"Returns the current spot price of the collateral token\"},\"token()\":{\"notice\":\"collateral token\"},\"tokenScale()\":{\"notice\":\"Collateral token's decimals scale (10 ** decimals)\"},\"totalAccruedFees()\":{\"notice\":\"Total current amount of accrued protocol fees [wad]\"},\"totalCreditClaimable()\":{\"notice\":\"Total credit claimable by undelegating delegators in all fixed epochs [wad]\"},\"totalNormalDebt()\":{\"notice\":\"Sum of backed normalized debt over all positions [wad]\"},\"totalShares()\":{\"notice\":\"Total number of shares currently issued to delegators [wad]\"},\"undelegateCredit(uint256,uint256[])\":{\"notice\":\"Signals (initiates) the undelegation of credit from this vault\"},\"unpause()\":{\"notice\":\"Unpauses the contract\"},\"vaultConfig()\":{\"notice\":\"CDPVault configuration\"},\"virtualIRS(address)\":{\"notice\":\"Returns the current global rate accumulator, global accrued rebate and the accrued rebate of a position\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws collateral tokens from this contract and decreases a users cash balance\"}},\"notice\":\"A CDP-style vault for depositing collateral and drawing credit against it. TypeA vaults are liquidated permissionlessly by selling as much collateral of an unsafe position until it meets a targeted collateralization ratio again. Any shortfall from liquidation not being able to be recovered by selling the available collateral is covered by the global Buffer or the Credit Delegators.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CDPVault_TypeA.sol\":\"CDPVault_TypeA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/CDM.sol\":{\"keccak256\":\"0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99\",\"dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L\"]},\"src/CDPVault.sol\":{\"keccak256\":\"0xb59663a5a96b5abe638f2fb4a5e4d0918a41607cbaee2e974ab2317f271be131\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4292cb1e12fe471b852e223ce612c5c666cdaac948f1b2803e45edc2ea8c213\",\"dweb:/ipfs/QmNykUHbviSx2HKe6v45qU7B7wjC5Fre3xunPYCAjdcZMx\"]},\"src/CDPVault_TypeA.sol\":{\"keccak256\":\"0x295d22000f94f24713ca284f6a5cedd1a32deaa9fe125622dbebd011f2be31aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d9c0b0f59e9bae0a036b325b16cb999de39b33d08637986ef93ff31a8d11cd7\",\"dweb:/ipfs/QmbgTUAes12DrcbTac6TRfpvM9iEdRp4Zx7XJPowGrcMBR\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x681ca8dbbb9637f112fd4668dd549380579f269e3c60af2e84578192f4cfeda8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b4b3abe1c4c38c8ea7c5f1ed9e4d5d1a4cedeadbf65b466a3ca96ebbdb2b77\",\"dweb:/ipfs/Qmd1RVYuiiESg4rwWVR2qB9zSxQvpfqbtPJxGagP6KES6L\"]},\"src/interfaces/IBuffer.sol\":{\"keccak256\":\"0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff\",\"dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/ICDPVault.sol\":{\"keccak256\":\"0x7ce3b81164802c14566697092c69fb355d9c31ab846dfc8d90edd5d6a6eb68e3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://343c84ea42c9846dc3907a6ca2d4c55df6e0cbaea7a83ed2c7458174560a86d6\",\"dweb:/ipfs/QmWcAoAFQYL7YzeFnd5t4HMHxEZHiFirsNHJGL7FoBCkF6\"]},\"src/interfaces/ICDPVault_TypeA.sol\":{\"keccak256\":\"0x67e73a065253428bf75f8541da4b1530e4bae6c57ffb17520aba4a48aa132b5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94911a895e5a455a2eb23eea973a36c847f27dd1a3ee7a34470bc226751f0aa6\",\"dweb:/ipfs/Qmcv7WBZnEnm6zjYBGZFikYeyjnMyPb65XEA8cBUkXZ9BR\"]},\"src/interfaces/ICDPVault_TypeA_Factory.sol\":{\"keccak256\":\"0x9ea6fe3a8b5d6ab2f041c72b6058e1e59b3df5e12d54ccc845a27f90f45ddf01\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c805f1c1b060173d445de751c4a8565232938ad23a6d200c08b99eb634679638\",\"dweb:/ipfs/QmSajnrXMZHMwYF8Y2C6obNp1K7bq2XjexdkqcVoHDFhGm\"]},\"src/interfaces/IInterestRateModel.sol\":{\"keccak256\":\"0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599\",\"dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da\",\"dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF\"]},\"src/interfaces/IPause.sol\":{\"keccak256\":\"0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec\",\"dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]},\"src/utils/DoubleLinkedList.sol\":{\"keccak256\":\"0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb\",\"dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/utils/Pause.sol\":{\"keccak256\":\"0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1\",\"dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL\"]},\"src/utils/Permission.sol\":{\"keccak256\":\"0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb\",\"dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__addLimitPriceTick_invalidPriceTickOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__addLimitPriceTick_limitPriceTickOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__calculateAssetsAndLiabilities_insufficientAssets"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__cancelLimitOrder_limitOrderDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__checkEmergencyMode_entered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__claimUndelegatedCredit_epochNotClaimable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__claimUndelegatedCredit_epochNotFixed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitOrderAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitOrderFloor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitPriceTickNotActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__delegateCredit_creditAmountTooSmall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__exchange_notEnoughExchanged"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__liquidatePosition_notUnsafe"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__liquidatePositions_argLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_maxUtilizationRatio"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_noPermission"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_notSafe"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyPosition_debtFloor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__setParameter_unrecognizedParameter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IdIsZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InterestRateModel__setBaseRate_invalidBaseRate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ItemInList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ItemNotInList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__add_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__mul_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__sub_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toInt256_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toUint64_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Permission__modifyPermission_notPermitted"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddLimitPriceTick",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CancelLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "sharesRedeemed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "creditClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimUndelegatedCredit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CreateLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "creditDelegated",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "sharesIssued",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateCredit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "redeemer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "collateralRedeemed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Exchange",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "collateralRedeemed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecuteLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "collateralReleased",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "normalDebtRepaid",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LiquidatePosition",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyCollateralAndDebt",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authorizer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "grant",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyPermission",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalNormalDebt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyPosition",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemoveLimitPriceTick",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int64",
              "name": "baseRate",
              "type": "int64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetBaseRate",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "SetGlobalIRS",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "parameter",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "data",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetParameter",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "grant",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetPermittedAgent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetPositionIRS",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "shareAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "estimatedClaim",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "claimableAtEpoch",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UndelegateCredit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EPOCH_DURATION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EPOCH_FIX_DELAY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EPOCH_FIX_TIMEOUT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "activeLimitPriceTicks",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextLimitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLimitPriceTick"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "buffer",
          "outputs": [
            {
              "internalType": "contract IBuffer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateRebateFactorForPriceTick",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelLimitOrder"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cdm",
          "outputs": [
            {
              "internalType": "contract ICDM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "feesClaimed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimForEpoch",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimUndelegatedCredit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createLimitOrder"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creditWithholder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateCredit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sharesAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cashAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enterEmergencyMode"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "epochs",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalCreditClaimable",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalCreditWithheld",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSharesQueued",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "claimRatio",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "estimatedCreditClaimPerShare",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "upperLimitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditToExchange",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exchange",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralExchanged",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "upperLimitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditToExchange",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exchangePreview",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralExchanged",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentEpoch",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentEpoch",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGlobalIRS",
          "outputs": [
            {
              "internalType": "struct InterestRateModel.GlobalIRS",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int64",
                  "name": "baseRate",
                  "type": "int64"
                },
                {
                  "internalType": "uint64",
                  "name": "lastUpdated",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "rateAccumulator",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "averageRebate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "globalAccruedRebate",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLimitOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionIRS",
          "outputs": [
            {
              "internalType": "struct InterestRateModel.PositionIRS",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "snapshotRateAccumulator",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "rebateFactor",
                  "type": "uint64"
                },
                {
                  "internalType": "uint128",
                  "name": "accruedRebate",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriceTick",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasPermission",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "limitOrderFloor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "limitOrders",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "repayAmounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidatePositions"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidationConfig",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "liquidationPenalty",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidationDiscount",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "targetHealthFactor",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyCollateralAndDebt"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyPermission"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyPermission"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "contract IOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pausedAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "positions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "normalDebt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLimitPriceTick"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "parameter",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "data",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setParameter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPermissionAgent"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "unwinderFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "shares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesQueuedByEpoch",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sharesQueued",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "spotPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAccruedFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalCreditClaimable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalNormalDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shareAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "prevQueuedEpochs",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegateCredit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "estimatedClaim",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentEpoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimableAtEpoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fixableUntilEpoch",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultConfig",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "debtFloor",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "liquidationRatio",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "globalLiquidationRatio",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "virtualIRS",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "rateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "accruedRebate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "globalAccruedRebate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addLimitPriceTick(uint256,uint256)": {
            "details": "Requires caller to have 'TICK_MANAGER_ROLE' role",
            "params": {
              "limitPriceTick": "The limit price tick to add [wad]",
              "nextLimitPriceTick": "The next (higher) limit price tick (0 if there's no higher price tick) [wad]"
            }
          },
          "calculateRebateFactorForPriceTick(uint256)": {
            "params": {
              "priceTick": "Price tick from which to derive the rebate factor from [wad]"
            },
            "returns": {
              "_0": "_ Rebate factor [wad]"
            }
          },
          "claimUndelegatedCredit(uint256)": {
            "details": "The undelegated amount of credit can be claimed after the epoch fix delay has passed",
            "params": {
              "claimForEpoch": "Epoch at which the undelegation was initiated"
            },
            "returns": {
              "creditAmount": "Amount of credit undelegated [wad]"
            }
          },
          "createLimitOrder(uint256)": {
            "params": {
              "limitPriceTick": "Limit price tick of the limit order (between 1.0 and 100) [wad]"
            }
          },
          "delegateCredit(uint256)": {
            "details": "The caller needs to permit this contract to transfer credit on their behalf",
            "params": {
              "creditAmount": "Amount of credit to delegate [wad]"
            },
            "returns": {
              "sharesAmount": "Amount of shares issued [wad]"
            }
          },
          "deposit(address,uint256)": {
            "details": "The caller needs to approve this contract to transfer tokens on their behalf",
            "params": {
              "amount": "Amount of tokens to deposit [tokenScale]",
              "to": "Address of the user to attribute the cash to"
            },
            "returns": {
              "cashAmount": "Amount of cash deposited [wad]"
            }
          },
          "enterEmergencyMode()": {
            "details": "This method will revert if the vault has already been paused"
          },
          "exchange(uint256,uint256)": {
            "params": {
              "creditToExchange": "Amount of credit to exchange for collateral [wad]",
              "upperLimitPriceTick": "Upper limit price tick (> 1.0) [wad]"
            },
            "returns": {
              "collateralExchanged": "Amount of collateral exchanged [wad]",
              "creditExchanged": "Amount of credit exchanged [wad]"
            }
          },
          "exchangePreview(uint256,uint256)": {
            "params": {
              "creditToExchange": "Amount of credit to exchange for collateral [wad]",
              "upperLimitPriceTick": "Upper limit price tick (> 1.0) [wad]"
            },
            "returns": {
              "collateralExchanged": "Amount of collateral exchanged [wad]",
              "creditExchanged": "Amount of credit exchanged [wad]"
            }
          },
          "getCurrentEpoch()": {
            "returns": {
              "currentEpoch": "Current epoch"
            }
          },
          "getGlobalIRS()": {
            "returns": {
              "_0": "_ Global interest rate state"
            }
          },
          "getLimitOrder(uint256,uint256)": {
            "params": {
              "index": "Index of the limit order in the linked list",
              "priceTick": "Price tick of the limit order"
            },
            "returns": {
              "limitOrderId": "Limit order id"
            }
          },
          "getPositionIRS(address)": {
            "params": {
              "position": "Address of position (owner)"
            },
            "returns": {
              "_0": "_ Interest rate state of the position"
            }
          },
          "getPriceTick(uint256)": {
            "params": {
              "index": "Index of the price tick in the linked list"
            },
            "returns": {
              "isActive": "Whether the price tick is active",
              "priceTick": "Price tick [wad]"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasPermission(address,address)": {
            "params": {
              "caller": "Address of the caller",
              "owner": "Address of the owner"
            },
            "returns": {
              "_0": "_ whether `caller` has the permission"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "liquidatePositions(address[],uint256[])": {
            "details": "The liquidator has to approve the vault to transfer the sum of `repayAmounts`.",
            "params": {
              "owners": "Owners of the positions to liquidate",
              "repayAmounts": "Amounts the liquidator wants to repay for each position [wad]"
            }
          },
          "modifyCollateralAndDebt(address,address,address,int256,int256)": {
            "details": "Checks that the global debt ceiling and the vault's debt ceiling have not been exceeded via the CDM, - that the Position is still safe after the modification, - that the msg.sender has the permission of the owner to decrease the collateral-to-debt ratio, - that the msg.sender has the permission of the collateralizer to put up new collateral, - that the msg.sender has the permission of the creditor to settle debt with their credit, - that that the vault debt floor is exceeded - that the vault minimum collateralization ratio is met, otherwise it will transition into emergency mode",
            "params": {
              "collateralizer": "Address of who puts up or receives the collateral delta",
              "creditor": "Address of who provides or receives the credit delta for the debt delta",
              "deltaCollateral": "Amount of collateral to put up (+) or to remove (-) from the position [wad]",
              "deltaNormalDebt": "Amount of normalized debt (gross, before rate is applied) to generate (+) or to settle (-) on this position [wad]",
              "owner": "Address of the owner of the position"
            }
          },
          "modifyPermission(address,address,bool)": {
            "params": {
              "caller": "Address of the caller to grant or revoke permission for",
              "owner": "Address of the owner",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "modifyPermission(address,bool)": {
            "params": {
              "caller": "Address of the caller to grant or revoke permission for",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "pause()": {
            "details": "Sender has to be allowed to call this method"
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "removeLimitPriceTick(uint256)": {
            "details": "Requires caller to have 'TICK_MANAGER_ROLE' role",
            "params": {
              "limitPriceTick": "limit price tick to remove [wad]"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "setParameter(bytes32,uint256)": {
            "details": "Sender has to be allowed to call this method",
            "params": {
              "data": "New value to set for the variable [wad]",
              "parameter": "Name of the variable to set"
            }
          },
          "setPermissionAgent(address,bool)": {
            "params": {
              "agent": "Address of the agent to grant or revoke permission for",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "spotPrice()": {
            "returns": {
              "_0": "_ Current spot price of the collateral token [wad]"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "undelegateCredit(uint256,uint256[])": {
            "details": "Transfer an estimated amount of credit to be undelegated to the credit withholder contract",
            "params": {
              "prevQueuedEpochs": "Array of stale epochs for which shares were queued",
              "shareAmount": "Amount of shares to redeem [wad]"
            },
            "returns": {
              "claimableAtEpoch": "Epoch at which the undelegated credit can be claimed by the delegator",
              "currentEpoch": "Epoch at which the undelegation was initiated",
              "estimatedClaim": "Estimated amount of withdrawable credit, if no bad debt is accrued [wad]",
              "fixableUntilEpoch": "Epoch at which the credit claim of the epoch has to be fixed by"
            }
          },
          "unpause()": {
            "details": "Sender has to be allowed to call this method"
          },
          "virtualIRS(address)": {
            "params": {
              "position": "Address of the position to return the accrued rebate for"
            },
            "returns": {
              "accruedRebate": "The accrued rebate of a position [wad]",
              "globalAccruedRebate": "The global accrued rebate [wad]",
              "rateAccumulator": "Current global rate accumulator [wad]"
            }
          },
          "withdraw(address,uint256)": {
            "params": {
              "amount": "Amount of tokens to withdraw [wad]",
              "to": "Address of the user to withdraw tokens to"
            },
            "returns": {
              "tokenAmount": "Amount of tokens withdrawn [tokenScale]"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "EPOCH_DURATION()": {
            "notice": "Number of seconds in an epoch [seconds]"
          },
          "EPOCH_FIX_DELAY()": {
            "notice": "Number of epochs that have to pass until an epoch claim can be fixed"
          },
          "EPOCH_FIX_TIMEOUT()": {
            "notice": "Number of epochs for which an epoch claim can be fixed"
          },
          "activeLimitPriceTicks(uint256)": {
            "notice": "Map specifying if a given price tick is active [wad]"
          },
          "addLimitPriceTick(uint256,uint256)": {
            "notice": "Adds a new price tick to the limit price tick linked list"
          },
          "buffer()": {
            "notice": "Global surplus and debt Buffer"
          },
          "calculateRebateFactorForPriceTick(uint256)": {
            "notice": "Calculates the rebate factor for a given price tick"
          },
          "cancelLimitOrder()": {
            "notice": "Cancels an existing limit order for a given position (user)"
          },
          "cash(address)": {
            "notice": "Map specifying the cash balances a user has [wad]"
          },
          "cdm()": {
            "notice": "CDM (Credit and Debt Manager)"
          },
          "claimFees()": {
            "notice": "Sends accrued protocol fees to the Buffer"
          },
          "claimUndelegatedCredit(uint256)": {
            "notice": "Claims the undelegated amount of credit. If the claim has not been fixed within the timeout then the resulting credit claim will be 0 (it will not revert)."
          },
          "createLimitOrder(uint256)": {
            "notice": "Creates a new limit order for a given position (user). The price tick represents a fee on the current oracle price of the collateral asset for which it can be redeemed for Stablecoin"
          },
          "creditWithholder()": {
            "notice": "Withholder for amounts of credit to be undelegated (claims that are fixed or are about to be fixed)"
          },
          "delegateCredit(uint256)": {
            "notice": "Delegates credit to this contract"
          },
          "deposit(address,uint256)": {
            "notice": "Deposits collateral tokens into this contract and increases a users cash balance"
          },
          "enterEmergencyMode()": {
            "notice": "Triggers the emergency mode by pausing the vault if global collateralization ratio is below the emergency threshold"
          },
          "epochs(uint256)": {
            "notice": "Map of epochs"
          },
          "exchange(uint256,uint256)": {
            "notice": "Exchange credit for collateral"
          },
          "exchangePreview(uint256,uint256)": {
            "notice": "Preview exchanging credit for collateral"
          },
          "getCurrentEpoch()": {
            "notice": "Computes the current epoch based on the block.timestamp and the duration of an epoch"
          },
          "getGlobalIRS()": {
            "notice": "Returns the global interest rate state"
          },
          "getLimitOrder(uint256,uint256)": {
            "notice": "Returns a limit order id at an index in the limit order linked list (sorted from oldest to newest)"
          },
          "getPositionIRS(address)": {
            "notice": "Returns the interest rate state of a position"
          },
          "getPriceTick(uint256)": {
            "notice": "Returns a price tick at an index in the price tick linked list (sorted from lowest to highest)"
          },
          "hasPermission(address,address)": {
            "notice": "Checks if `caller` has the permission to perform an action on behalf of `owner`"
          },
          "limitOrderFloor()": {
            "notice": "Minimum principal amount of a limit order [wad]"
          },
          "limitOrders(uint256)": {
            "notice": "Map of limit order makers"
          },
          "liquidatePositions(address[],uint256[])": {
            "notice": "Liquidates multiple unsafe positions by selling as much collateral as required to cover the debt in order to make the positions safe again. The collateral can be bought at a discount (`liquidationDiscount`) to the current spot price. The liquidator has to provide the amount he wants repay or sell (`repayAmounts`) for each position. From that repay amount a penalty (`liquidationPenalty`) is subtracted to mitigate against profitable self liquidations. If the available collateral of a position is not sufficient to cover the debt the vault is able to apply for a bail out from the global Buffer, any residual bad debt not covered by the  Buffer will be attributed to the credit delegators."
          },
          "liquidationConfig()": {
            "notice": "Liquidation configuration"
          },
          "modifyCollateralAndDebt(address,address,address,int256,int256)": {
            "notice": "Modifies a Position's collateral and debt balances"
          },
          "modifyPermission(address,address,bool)": {
            "notice": "Gives or revokes the permission for `caller` to perform an action on behalf of `owner`"
          },
          "modifyPermission(address,bool)": {
            "notice": "Gives or revokes the permission for `caller` to perform an action on behalf of `msg.sender`"
          },
          "oracle()": {
            "notice": "Oracle of the collateral token"
          },
          "pause()": {
            "notice": "Pauses the contract"
          },
          "positions(address)": {
            "notice": "Map of user positions"
          },
          "protocolFee()": {
            "notice": "Portion of interest that goes to the protocol [wad]"
          },
          "removeLimitPriceTick(uint256)": {
            "notice": "Removes limit price tick"
          },
          "setParameter(bytes32,uint256)": {
            "notice": "Sets various variables for this contract"
          },
          "setPermissionAgent(address,bool)": {
            "notice": "Gives or revokes the permission for the `agent` to modify the permissions of `msg.sender`"
          },
          "shares(address)": {
            "notice": "Number of shares currently issued to a delegator [wad]"
          },
          "sharesQueuedByEpoch(uint256,address)": {
            "notice": "Number of shares that have been queued for undelegation for a specific epoch by a delegator [wad]"
          },
          "spotPrice()": {
            "notice": "Returns the current spot price of the collateral token"
          },
          "token()": {
            "notice": "collateral token"
          },
          "tokenScale()": {
            "notice": "Collateral token's decimals scale (10 ** decimals)"
          },
          "totalAccruedFees()": {
            "notice": "Total current amount of accrued protocol fees [wad]"
          },
          "totalCreditClaimable()": {
            "notice": "Total credit claimable by undelegating delegators in all fixed epochs [wad]"
          },
          "totalNormalDebt()": {
            "notice": "Sum of backed normalized debt over all positions [wad]"
          },
          "totalShares()": {
            "notice": "Total number of shares currently issued to delegators [wad]"
          },
          "undelegateCredit(uint256,uint256[])": {
            "notice": "Signals (initiates) the undelegation of credit from this vault"
          },
          "unpause()": {
            "notice": "Unpauses the contract"
          },
          "vaultConfig()": {
            "notice": "CDPVault configuration"
          },
          "virtualIRS(address)": {
            "notice": "Returns the current global rate accumulator, global accrued rebate and the accrued rebate of a position"
          },
          "withdraw(address,uint256)": {
            "notice": "Withdraws collateral tokens from this contract and decreases a users cash balance"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/CDPVault_TypeA.sol": "CDPVault_TypeA"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/CDM.sol": {
        "keccak256": "0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5",
        "urls": [
          "bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99",
          "dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L"
        ],
        "license": "MIT"
      },
      "src/CDPVault.sol": {
        "keccak256": "0xb59663a5a96b5abe638f2fb4a5e4d0918a41607cbaee2e974ab2317f271be131",
        "urls": [
          "bzz-raw://b4292cb1e12fe471b852e223ce612c5c666cdaac948f1b2803e45edc2ea8c213",
          "dweb:/ipfs/QmNykUHbviSx2HKe6v45qU7B7wjC5Fre3xunPYCAjdcZMx"
        ],
        "license": "MIT"
      },
      "src/CDPVault_TypeA.sol": {
        "keccak256": "0x295d22000f94f24713ca284f6a5cedd1a32deaa9fe125622dbebd011f2be31aa",
        "urls": [
          "bzz-raw://7d9c0b0f59e9bae0a036b325b16cb999de39b33d08637986ef93ff31a8d11cd7",
          "dweb:/ipfs/QmbgTUAes12DrcbTac6TRfpvM9iEdRp4Zx7XJPowGrcMBR"
        ],
        "license": "MIT"
      },
      "src/InterestRateModel.sol": {
        "keccak256": "0x681ca8dbbb9637f112fd4668dd549380579f269e3c60af2e84578192f4cfeda8",
        "urls": [
          "bzz-raw://89b4b3abe1c4c38c8ea7c5f1ed9e4d5d1a4cedeadbf65b466a3ca96ebbdb2b77",
          "dweb:/ipfs/Qmd1RVYuiiESg4rwWVR2qB9zSxQvpfqbtPJxGagP6KES6L"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBuffer.sol": {
        "keccak256": "0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f",
        "urls": [
          "bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff",
          "dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault.sol": {
        "keccak256": "0x7ce3b81164802c14566697092c69fb355d9c31ab846dfc8d90edd5d6a6eb68e3",
        "urls": [
          "bzz-raw://343c84ea42c9846dc3907a6ca2d4c55df6e0cbaea7a83ed2c7458174560a86d6",
          "dweb:/ipfs/QmWcAoAFQYL7YzeFnd5t4HMHxEZHiFirsNHJGL7FoBCkF6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_TypeA.sol": {
        "keccak256": "0x67e73a065253428bf75f8541da4b1530e4bae6c57ffb17520aba4a48aa132b5b",
        "urls": [
          "bzz-raw://94911a895e5a455a2eb23eea973a36c847f27dd1a3ee7a34470bc226751f0aa6",
          "dweb:/ipfs/Qmcv7WBZnEnm6zjYBGZFikYeyjnMyPb65XEA8cBUkXZ9BR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_TypeA_Factory.sol": {
        "keccak256": "0x9ea6fe3a8b5d6ab2f041c72b6058e1e59b3df5e12d54ccc845a27f90f45ddf01",
        "urls": [
          "bzz-raw://c805f1c1b060173d445de751c4a8565232938ad23a6d200c08b99eb634679638",
          "dweb:/ipfs/QmSajnrXMZHMwYF8Y2C6obNp1K7bq2XjexdkqcVoHDFhGm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IInterestRateModel.sol": {
        "keccak256": "0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055",
        "urls": [
          "bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599",
          "dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417",
        "urls": [
          "bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da",
          "dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPause.sol": {
        "keccak256": "0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d",
        "urls": [
          "bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec",
          "dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/utils/DoubleLinkedList.sol": {
        "keccak256": "0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691",
        "urls": [
          "bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb",
          "dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/utils/Pause.sol": {
        "keccak256": "0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19",
        "urls": [
          "bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1",
          "dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL"
        ],
        "license": "MIT"
      },
      "src/utils/Permission.sol": {
        "keccak256": "0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1",
        "urls": [
          "bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb",
          "dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/CDPVault_TypeA.sol",
    "id": 47014,
    "exportedSymbols": {
      "CDPVault": [
        45136
      ],
      "CDPVault_TypeA": [
        47013
      ],
      "ICDPVault_TypeA": [
        49207
      ],
      "VAULT_CONFIG_ROLE": [
        41471
      ],
      "WAD": [
        131190
      ],
      "calculateDebt": [
        41503
      ],
      "max": [
        131282
      ],
      "min": [
        131258,
        131270
      ],
      "wdiv": [
        131452
      ],
      "wmul": [
        131405,
        131428
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9548:90",
    "nodes": [
      {
        "id": 46507,
        "nodeType": "PragmaDirective",
        "src": "32:24:90",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 46509,
        "nodeType": "ImportDirective",
        "src": "58:65:90",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDPVault_TypeA.sol",
        "file": "./interfaces/ICDPVault_TypeA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47014,
        "sourceUnit": 49208,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46508,
              "name": "ICDPVault_TypeA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49207,
              "src": "66:15:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46515,
        "nodeType": "ImportDirective",
        "src": "125:59:90",
        "nodes": [],
        "absolutePath": "src/utils/Math.sol",
        "file": "./utils/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47014,
        "sourceUnit": 131480,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46510,
              "name": "WAD",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131190,
              "src": "133:3:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46511,
              "name": "max",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131282,
              "src": "138:3:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46512,
              "name": "min",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "143:3:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46513,
              "name": "wmul",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "148:4:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46514,
              "name": "wdiv",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131452,
              "src": "154:4:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46519,
        "nodeType": "ImportDirective",
        "src": "186:74:90",
        "nodes": [],
        "absolutePath": "src/CDPVault.sol",
        "file": "./CDPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47014,
        "sourceUnit": 45137,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46516,
              "name": "CDPVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45136,
              "src": "194:8:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46517,
              "name": "VAULT_CONFIG_ROLE",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41471,
              "src": "204:17:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46518,
              "name": "calculateDebt",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41503,
              "src": "223:13:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47013,
        "nodeType": "ContractDefinition",
        "src": "697:8882:90",
        "nodes": [
          {
            "id": 46531,
            "nodeType": "StructDefinition",
            "src": "936:755:90",
            "nodes": [],
            "canonicalName": "CDPVault_TypeA.LiquidationConfig",
            "members": [
              {
                "constant": false,
                "id": 46526,
                "mutability": "mutable",
                "name": "liquidationPenalty",
                "nameLocation": "1156:18:90",
                "nodeType": "VariableDeclaration",
                "scope": 46531,
                "src": "1149:25:90",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 46525,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1149:6:90",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46528,
                "mutability": "mutable",
                "name": "liquidationDiscount",
                "nameLocation": "1401:19:90",
                "nodeType": "VariableDeclaration",
                "scope": 46531,
                "src": "1394:26:90",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 46527,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1394:6:90",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46530,
                "mutability": "mutable",
                "name": "targetHealthFactor",
                "nameLocation": "1666:18:90",
                "nodeType": "VariableDeclaration",
                "scope": 46531,
                "src": "1659:25:90",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 46529,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1659:6:90",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "LiquidationConfig",
            "nameLocation": "943:17:90",
            "scope": 47013,
            "visibility": "public"
          },
          {
            "id": 46535,
            "nodeType": "VariableDeclaration",
            "src": "1738:42:90",
            "nodes": [],
            "baseFunctions": [
              49197
            ],
            "constant": false,
            "documentation": {
              "id": 46532,
              "nodeType": "StructuredDocumentation",
              "src": "1696:37:90",
              "text": "@notice Liquidation configuration"
            },
            "functionSelector": "1c580ad5",
            "mutability": "mutable",
            "name": "liquidationConfig",
            "nameLocation": "1763:17:90",
            "scope": 47013,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_LiquidationConfig_$46531_storage",
              "typeString": "struct CDPVault_TypeA.LiquidationConfig"
            },
            "typeName": {
              "id": 46534,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46533,
                "name": "LiquidationConfig",
                "nameLocations": [
                  "1738:17:90"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46531,
                "src": "1738:17:90"
              },
              "referencedDeclaration": 46531,
              "src": "1738:17:90",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LiquidationConfig_$46531_storage_ptr",
                "typeString": "struct CDPVault_TypeA.LiquidationConfig"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46541,
            "nodeType": "EventDefinition",
            "src": "1966:60:90",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4327e67d6578eb2c9293fb22f9334006073ac1397c7100f5dd5adca09ad71c08",
            "name": "SetParameter",
            "nameLocation": "1972:12:90",
            "parameters": {
              "id": 46540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46537,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "parameter",
                  "nameLocation": "2001:9:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 46541,
                  "src": "1985:25:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46536,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46539,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2020:4:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 46541,
                  "src": "2012:12:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2012:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1984:41:90"
            }
          },
          {
            "id": 46551,
            "nodeType": "EventDefinition",
            "src": "2031:170:90",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "af85375785266ad47da85c55124ba0385734bea8ba2f64633f03fb0c6cfe3dcd",
            "name": "LiquidatePosition",
            "nameLocation": "2037:17:90",
            "parameters": {
              "id": 46550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46543,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "position",
                  "nameLocation": "2080:8:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 46551,
                  "src": "2064:24:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46545,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collateralReleased",
                  "nameLocation": "2106:18:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 46551,
                  "src": "2098:26:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2098:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46547,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "normalDebtRepaid",
                  "nameLocation": "2142:16:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 46551,
                  "src": "2134:24:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46549,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "liquidator",
                  "nameLocation": "2184:10:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 46551,
                  "src": "2168:26:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2168:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2054:146:90"
            }
          },
          {
            "id": 46553,
            "nodeType": "ErrorDefinition",
            "src": "2386:53:90",
            "nodes": [],
            "errorSelector": "8dd691e7",
            "name": "CDPVault__setParameter_unrecognizedParameter",
            "nameLocation": "2392:44:90",
            "parameters": {
              "id": 46552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2436:2:90"
            }
          },
          {
            "id": 46555,
            "nodeType": "ErrorDefinition",
            "src": "2444:46:90",
            "nodes": [],
            "errorSelector": "f87e38e9",
            "name": "CDPVault__liquidatePosition_notUnsafe",
            "nameLocation": "2450:37:90",
            "parameters": {
              "id": 46554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2487:2:90"
            }
          },
          {
            "id": 46557,
            "nodeType": "ErrorDefinition",
            "src": "2495:55:90",
            "nodes": [],
            "errorSelector": "71e61896",
            "name": "CDPVault__liquidatePositions_argLengthMismatch",
            "nameLocation": "2501:46:90",
            "parameters": {
              "id": 46556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2547:2:90"
            }
          },
          {
            "id": 46566,
            "nodeType": "FunctionDefinition",
            "src": "2739:49:90",
            "nodes": [],
            "body": {
              "id": 46565,
              "nodeType": "Block",
              "src": "2786:2:90",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46562,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46559,
                    "src": "2777:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 46563,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46561,
                  "name": "CDPVault",
                  "nameLocations": [
                    "2768:8:90"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45136,
                  "src": "2768:8:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "2768:17:90"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46559,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "2759:7:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 46566,
                  "src": "2751:15:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2751:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2750:17:90"
            },
            "returnParameters": {
              "id": 46564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2786:0:90"
            },
            "scope": 47013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46699,
            "nodeType": "FunctionDefinition",
            "src": "3204:1188:90",
            "nodes": [],
            "body": {
              "id": 46698,
              "nodeType": "Block",
              "src": "3310:1082:90",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 46581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46579,
                      "name": "parameter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46569,
                      "src": "3324:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "64656274466c6f6f72",
                      "id": 46580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3337:11:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_882a95125fa4bd801f304c644a87130a26fa98ddfa1b031d75506e8dfbe69cc9",
                        "typeString": "literal_string \"debtFloor\""
                      },
                      "value": "debtFloor"
                    },
                    "src": "3324:24:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 46593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 46591,
                        "name": "parameter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46569,
                        "src": "3406:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "6c69717569646174696f6e526174696f",
                        "id": 46592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3419:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6357d4d2914da0df51253d6e777ada9c3e70ccd4e04fbe5afa73eb98bdc3cd8",
                          "typeString": "literal_string \"liquidationRatio\""
                        },
                        "value": "liquidationRatio"
                      },
                      "src": "3406:31:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 46605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46603,
                          "name": "parameter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46569,
                          "src": "3501:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "676c6f62616c4c69717569646174696f6e526174696f",
                          "id": 46604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3514:24:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d64336b4535ac8a0cbf3caa3bf3c121b674e35d0911fa5b1266f1d4f017efdc5",
                            "typeString": "literal_string \"globalLiquidationRatio\""
                          },
                          "value": "globalLiquidationRatio"
                        },
                        "src": "3501:37:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 46617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 46615,
                            "name": "parameter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46569,
                            "src": "3608:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "6c696d69744f72646572466c6f6f72",
                            "id": 46616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3621:17:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5ac1448d4ed7d5aa927c19115171b47f6e73b1a097b5518e69d49dead5d18a01",
                              "typeString": "literal_string \"limitOrderFloor\""
                            },
                            "value": "limitOrderFloor"
                          },
                          "src": "3608:30:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 46624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 46622,
                              "name": "parameter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46569,
                              "src": "3863:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "6261736552617465",
                              "id": 46623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3876:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9e36a3cc7d8c812d07501dd19dabeb3d8317632e6467a793e3650c433de4b57b",
                                "typeString": "literal_string \"baseRate\""
                              },
                              "value": "baseRate"
                            },
                            "src": "3863:23:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 46648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 46646,
                                "name": "parameter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46569,
                                "src": "3975:9:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "6c69717569646174696f6e50656e616c7479",
                                "id": 46647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3988:20:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_117df10b147bdac104270fa76682c9aa64b008e4d7be1b043175a35deafe045f",
                                  "typeString": "literal_string \"liquidationPenalty\""
                                },
                                "value": "liquidationPenalty"
                              },
                              "src": "3975:33:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 46660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 46658,
                                  "name": "parameter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46569,
                                  "src": "4080:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "6c69717569646174696f6e446973636f756e74",
                                  "id": 46659,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4093:21:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f390efe37200fe7b16ad1c68b8df89dea950ec11b1821e7d0c93f3a330c29382",
                                    "typeString": "literal_string \"liquidationDiscount\""
                                  },
                                  "value": "liquidationDiscount"
                                },
                                "src": "4080:34:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "id": 46672,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 46670,
                                    "name": "parameter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46569,
                                    "src": "4187:9:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "7461726765744865616c7468466163746f72",
                                    "id": 46671,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4200:20:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_cf74caa4270547041b3a8926d672afaddec218a5e588227d09bafd7a03fd2e4d",
                                      "typeString": "literal_string \"targetHealthFactor\""
                                    },
                                    "value": "targetHealthFactor"
                                  },
                                  "src": "4187:33:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 46682,
                                      "name": "CDPVault__setParameter_unrecognizedParameter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46553,
                                      "src": "4295:44:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 46683,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4295:46:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 46684,
                                  "nodeType": "RevertStatement",
                                  "src": "4288:53:90"
                                },
                                "id": 46685,
                                "nodeType": "IfStatement",
                                "src": "4183:158:90",
                                "trueBody": {
                                  "expression": {
                                    "id": 46680,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "id": 46673,
                                        "name": "liquidationConfig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46535,
                                        "src": "4222:17:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_LiquidationConfig_$46531_storage",
                                          "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                                        }
                                      },
                                      "id": 46675,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "4240:18:90",
                                      "memberName": "targetHealthFactor",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 46530,
                                      "src": "4222:36:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "id": 46678,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46571,
                                          "src": "4268:4:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 46677,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4261:6:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        },
                                        "typeName": {
                                          "id": 46676,
                                          "name": "uint64",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4261:6:90",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 46679,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4261:12:90",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "src": "4222:51:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "id": 46681,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4222:51:90"
                                }
                              },
                              "id": 46686,
                              "nodeType": "IfStatement",
                              "src": "4076:265:90",
                              "trueBody": {
                                "expression": {
                                  "id": 46668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 46661,
                                      "name": "liquidationConfig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46535,
                                      "src": "4116:17:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LiquidationConfig_$46531_storage",
                                        "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                                      }
                                    },
                                    "id": 46663,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberLocation": "4134:19:90",
                                    "memberName": "liquidationDiscount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46528,
                                    "src": "4116:37:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "id": 46666,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46571,
                                        "src": "4163:4:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 46665,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4156:6:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint64_$",
                                        "typeString": "type(uint64)"
                                      },
                                      "typeName": {
                                        "id": 46664,
                                        "name": "uint64",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4156:6:90",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 46667,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4156:12:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "src": "4116:52:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "id": 46669,
                                "nodeType": "ExpressionStatement",
                                "src": "4116:52:90"
                              }
                            },
                            "id": 46687,
                            "nodeType": "IfStatement",
                            "src": "3971:370:90",
                            "trueBody": {
                              "expression": {
                                "id": 46656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 46649,
                                    "name": "liquidationConfig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46535,
                                    "src": "4010:17:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LiquidationConfig_$46531_storage",
                                      "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                                    }
                                  },
                                  "id": 46651,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "4028:18:90",
                                  "memberName": "liquidationPenalty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46526,
                                  "src": "4010:36:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 46654,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46571,
                                      "src": "4056:4:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 46653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4049:6:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint64_$",
                                      "typeString": "type(uint64)"
                                    },
                                    "typeName": {
                                      "id": 46652,
                                      "name": "uint64",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4049:6:90",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 46655,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4049:12:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "4010:51:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 46657,
                              "nodeType": "ExpressionStatement",
                              "src": "4010:51:90"
                            }
                          },
                          "id": 46688,
                          "nodeType": "IfStatement",
                          "src": "3859:482:90",
                          "trueBody": {
                            "expression": {
                              "arguments": [
                                {
                                  "condition": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 46632,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 46626,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46571,
                                          "src": "3902:4:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 46629,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "3915:7:90",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 46628,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "3915:7:90",
                                                  "typeDescriptions": {}
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                }
                                              ],
                                              "id": 46627,
                                              "name": "type",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -27,
                                              "src": "3910:4:90",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                                "typeString": "function () pure"
                                              }
                                            },
                                            "id": 46630,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3910:13:90",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                                              "typeString": "type(uint256)"
                                            }
                                          },
                                          "id": 46631,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "3924:3:90",
                                          "memberName": "max",
                                          "nodeType": "MemberAccess",
                                          "src": "3910:17:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "3902:25:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 46633,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3901:27:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 46640,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46571,
                                            "src": "3949:4:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 46639,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3942:6:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          },
                                          "typeName": {
                                            "id": 46638,
                                            "name": "uint64",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3942:6:90",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 46641,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3942:12:90",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      ],
                                      "id": 46637,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3936:5:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int64_$",
                                        "typeString": "type(int64)"
                                      },
                                      "typeName": {
                                        "id": 46636,
                                        "name": "int64",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3936:5:90",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 46642,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3936:19:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int64",
                                      "typeString": "int64"
                                    }
                                  },
                                  "id": 46643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "3901:54:90",
                                  "trueExpression": {
                                    "id": 46635,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "-",
                                    "prefix": true,
                                    "src": "3931:2:90",
                                    "subExpression": {
                                      "hexValue": "31",
                                      "id": 46634,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3932:1:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_minus_1_by_1",
                                      "typeString": "int_const -1"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int64",
                                    "typeString": "int64"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int64",
                                    "typeString": "int64"
                                  }
                                ],
                                "id": 46625,
                                "name": "_setBaseRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48085,
                                "src": "3888:12:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_int64_$returns$__$",
                                  "typeString": "function (int64)"
                                }
                              },
                              "id": 46644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3888:68:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 46645,
                            "nodeType": "ExpressionStatement",
                            "src": "3888:68:90"
                          }
                        },
                        "id": 46689,
                        "nodeType": "IfStatement",
                        "src": "3604:737:90",
                        "trueBody": {
                          "expression": {
                            "id": 46620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 46618,
                              "name": "limitOrderFloor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41699,
                              "src": "3640:15:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 46619,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46571,
                              "src": "3658:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3640:22:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 46621,
                          "nodeType": "ExpressionStatement",
                          "src": "3640:22:90"
                        }
                      },
                      "id": 46690,
                      "nodeType": "IfStatement",
                      "src": "3497:844:90",
                      "trueBody": {
                        "expression": {
                          "id": 46613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 46606,
                              "name": "vaultConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41614,
                              "src": "3540:11:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultConfig_$41610_storage",
                                "typeString": "struct CDPVault.VaultConfig storage ref"
                              }
                            },
                            "id": 46608,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3552:22:90",
                            "memberName": "globalLiquidationRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41609,
                            "src": "3540:34:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 46611,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46571,
                                "src": "3584:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 46610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3577:6:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 46609,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "3577:6:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3577:12:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "3540:49:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 46614,
                        "nodeType": "ExpressionStatement",
                        "src": "3540:49:90"
                      }
                    },
                    "id": 46691,
                    "nodeType": "IfStatement",
                    "src": "3402:939:90",
                    "trueBody": {
                      "expression": {
                        "id": 46601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 46594,
                            "name": "vaultConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41614,
                            "src": "3439:11:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VaultConfig_$41610_storage",
                              "typeString": "struct CDPVault.VaultConfig storage ref"
                            }
                          },
                          "id": 46596,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "3451:16:90",
                          "memberName": "liquidationRatio",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41606,
                          "src": "3439:28:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 46599,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46571,
                              "src": "3477:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 46598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3470:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 46597,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "3470:6:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3470:12:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "3439:43:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 46602,
                      "nodeType": "ExpressionStatement",
                      "src": "3439:43:90"
                    }
                  },
                  "id": 46692,
                  "nodeType": "IfStatement",
                  "src": "3320:1021:90",
                  "trueBody": {
                    "expression": {
                      "id": 46589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "id": 46582,
                          "name": "vaultConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41614,
                          "src": "3350:11:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultConfig_$41610_storage",
                            "typeString": "struct CDPVault.VaultConfig storage ref"
                          }
                        },
                        "id": 46584,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "3362:9:90",
                        "memberName": "debtFloor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41603,
                        "src": "3350:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 46587,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46571,
                            "src": "3382:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 46586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3374:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 46585,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "3374:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3374:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "3350:37:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 46590,
                    "nodeType": "ExpressionStatement",
                    "src": "3350:37:90"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46694,
                        "name": "parameter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46569,
                        "src": "4369:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 46695,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46571,
                        "src": "4380:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46693,
                      "name": "SetParameter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46541,
                      "src": "4356:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 46696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4356:29:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46697,
                  "nodeType": "EmitStatement",
                  "src": "4351:34:90"
                }
              ]
            },
            "baseFunctions": [
              49188
            ],
            "documentation": {
              "id": 46567,
              "nodeType": "StructuredDocumentation",
              "src": "2976:223:90",
              "text": "@notice Sets various variables for this contract\n @dev Sender has to be allowed to call this method\n @param parameter Name of the variable to set\n @param data New value to set for the variable [wad]"
            },
            "functionSelector": "723507be",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46574,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46573,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "3268:13:90"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33535,
                  "src": "3268:13:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "3268:13:90"
              },
              {
                "arguments": [
                  {
                    "id": 46576,
                    "name": "VAULT_CONFIG_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41471,
                    "src": "3291:17:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 46577,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46575,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3282:8:90"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31953,
                  "src": "3282:8:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "3282:27:90"
              }
            ],
            "name": "setParameter",
            "nameLocation": "3213:12:90",
            "parameters": {
              "id": 46572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46569,
                  "mutability": "mutable",
                  "name": "parameter",
                  "nameLocation": "3234:9:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 46699,
                  "src": "3226:17:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46568,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3226:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46571,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3253:4:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 46699,
                  "src": "3245:12:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3245:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3225:33:90"
            },
            "returnParameters": {
              "id": 46578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3310:0:90"
            },
            "scope": 47013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47012,
            "nodeType": "FunctionDefinition",
            "src": "5576:4001:90",
            "nodes": [],
            "body": {
              "id": 47011,
              "nodeType": "Block",
              "src": "5685:3892:90",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 46711,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46703,
                        "src": "5699:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 46712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5706:6:90",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5699:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 46713,
                        "name": "repayAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46706,
                        "src": "5716:12:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 46714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5729:6:90",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5716:19:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5699:36:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46719,
                  "nodeType": "IfStatement",
                  "src": "5695:97:90",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46716,
                        "name": "CDPVault__liquidatePositions_argLengthMismatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46557,
                        "src": "5744:46:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5744:48:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46718,
                    "nodeType": "RevertStatement",
                    "src": "5737:55:90"
                  }
                },
                {
                  "assignments": [
                    46722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46722,
                      "mutability": "mutable",
                      "name": "globalIRS",
                      "nameLocation": "5820:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 47011,
                      "src": "5803:26:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GlobalIRS_$47917_memory_ptr",
                        "typeString": "struct InterestRateModel.GlobalIRS"
                      },
                      "typeName": {
                        "id": 46721,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46720,
                          "name": "GlobalIRS",
                          "nameLocations": [
                            "5803:9:90"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47917,
                          "src": "5803:9:90"
                        },
                        "referencedDeclaration": 47917,
                        "src": "5803:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalIRS_$47917_storage_ptr",
                          "typeString": "struct InterestRateModel.GlobalIRS"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46725,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46723,
                      "name": "getGlobalIRS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47996,
                      "src": "5832:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_GlobalIRS_$47917_memory_ptr_$",
                        "typeString": "function () view returns (struct InterestRateModel.GlobalIRS memory)"
                      }
                    },
                    "id": 46724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5832:14:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GlobalIRS_$47917_memory_ptr",
                      "typeString": "struct InterestRateModel.GlobalIRS memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5803:43:90"
                },
                {
                  "assignments": [
                    46728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46728,
                      "mutability": "mutable",
                      "name": "vaultConfig_",
                      "nameLocation": "5875:12:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 47011,
                      "src": "5856:31:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultConfig_$41610_memory_ptr",
                        "typeString": "struct CDPVault.VaultConfig"
                      },
                      "typeName": {
                        "id": 46727,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46726,
                          "name": "VaultConfig",
                          "nameLocations": [
                            "5856:11:90"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41610,
                          "src": "5856:11:90"
                        },
                        "referencedDeclaration": 41610,
                        "src": "5856:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultConfig_$41610_storage_ptr",
                          "typeString": "struct CDPVault.VaultConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46730,
                  "initialValue": {
                    "id": 46729,
                    "name": "vaultConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41614,
                    "src": "5890:11:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultConfig_$41610_storage",
                      "typeString": "struct CDPVault.VaultConfig storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5856:45:90"
                },
                {
                  "assignments": [
                    46733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46733,
                      "mutability": "mutable",
                      "name": "liquidationConfig_",
                      "nameLocation": "5936:18:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 47011,
                      "src": "5911:43:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidationConfig_$46531_memory_ptr",
                        "typeString": "struct CDPVault_TypeA.LiquidationConfig"
                      },
                      "typeName": {
                        "id": 46732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46731,
                          "name": "LiquidationConfig",
                          "nameLocations": [
                            "5911:17:90"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46531,
                          "src": "5911:17:90"
                        },
                        "referencedDeclaration": 46531,
                        "src": "5911:17:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidationConfig_$46531_storage_ptr",
                          "typeString": "struct CDPVault_TypeA.LiquidationConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46735,
                  "initialValue": {
                    "id": 46734,
                    "name": "liquidationConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46535,
                    "src": "5957:17:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidationConfig_$46531_storage",
                      "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5911:63:90"
                },
                {
                  "assignments": [
                    46737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46737,
                      "mutability": "mutable",
                      "name": "spotPrice_",
                      "nameLocation": "5992:10:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 47011,
                      "src": "5984:18:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46736,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5984:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46740,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46738,
                      "name": "spotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43453,
                      "src": "6005:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 46739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6005:11:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5984:32:90"
                },
                {
                  "assignments": [
                    46743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46743,
                      "mutability": "mutable",
                      "name": "cache",
                      "nameLocation": "6048:5:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 47011,
                      "src": "6027:26:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                        "typeString": "struct CDPVault.ExchangeCache"
                      },
                      "typeName": {
                        "id": 46742,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46741,
                          "name": "ExchangeCache",
                          "nameLocations": [
                            "6027:13:90"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44531,
                          "src": "6027:13:90"
                        },
                        "referencedDeclaration": 44531,
                        "src": "6027:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$44531_storage_ptr",
                          "typeString": "struct CDPVault.ExchangeCache"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46744,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6027:26:90"
                },
                {
                  "expression": {
                    "id": 46749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46745,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46743,
                        "src": "6063:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 46747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6069:9:90",
                      "memberName": "globalIRS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44512,
                      "src": "6063:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GlobalIRS_$47917_memory_ptr",
                        "typeString": "struct InterestRateModel.GlobalIRS memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46748,
                      "name": "globalIRS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46722,
                      "src": "6081:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GlobalIRS_$47917_memory_ptr",
                        "typeString": "struct InterestRateModel.GlobalIRS memory"
                      }
                    },
                    "src": "6063:27:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GlobalIRS_$47917_memory_ptr",
                      "typeString": "struct InterestRateModel.GlobalIRS memory"
                    }
                  },
                  "id": 46750,
                  "nodeType": "ExpressionStatement",
                  "src": "6063:27:90"
                },
                {
                  "expression": {
                    "id": 46755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46751,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46743,
                        "src": "6100:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 46753,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6106:15:90",
                      "memberName": "totalNormalDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44514,
                      "src": "6100:21:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46754,
                      "name": "totalNormalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41617,
                      "src": "6124:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6100:39:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46756,
                  "nodeType": "ExpressionStatement",
                  "src": "6100:39:90"
                },
                {
                  "expression": {
                    "id": 46762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46757,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46743,
                        "src": "6149:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 46759,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6155:9:90",
                      "memberName": "debtFloor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44522,
                      "src": "6149:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 46760,
                        "name": "vaultConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41614,
                        "src": "6167:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultConfig_$41610_storage",
                          "typeString": "struct CDPVault.VaultConfig storage ref"
                        }
                      },
                      "id": 46761,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6179:9:90",
                      "memberName": "debtFloor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41603,
                      "src": "6167:21:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "6149:39:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46763,
                  "nodeType": "ExpressionStatement",
                  "src": "6149:39:90"
                },
                {
                  "expression": {
                    "id": 46772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46764,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46743,
                        "src": "6198:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 46766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6204:14:90",
                      "memberName": "settlementRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44524,
                      "src": "6198:20:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46768,
                          "name": "spotPrice_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46737,
                          "src": "6226:10:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 46769,
                            "name": "liquidationConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46535,
                            "src": "6238:17:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LiquidationConfig_$46531_storage",
                              "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                            }
                          },
                          "id": 46770,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6256:19:90",
                          "memberName": "liquidationDiscount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46528,
                          "src": "6238:37:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 46767,
                        "name": "wmul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          131405,
                          131428
                        ],
                        "referencedDeclaration": 131405,
                        "src": "6221:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 46771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6221:55:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6198:78:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46773,
                  "nodeType": "ExpressionStatement",
                  "src": "6198:78:90"
                },
                {
                  "expression": {
                    "id": 46779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46774,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46743,
                        "src": "6286:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 46776,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6292:17:90",
                      "memberName": "settlementPenalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44526,
                      "src": "6286:23:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 46777,
                        "name": "liquidationConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46535,
                        "src": "6312:17:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidationConfig_$46531_storage",
                          "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                        }
                      },
                      "id": 46778,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6330:18:90",
                      "memberName": "liquidationPenalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46526,
                      "src": "6312:36:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "6286:62:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46780,
                  "nodeType": "ExpressionStatement",
                  "src": "6286:62:90"
                },
                {
                  "assignments": [
                    46782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46782,
                      "mutability": "mutable",
                      "name": "rateAccumulator",
                      "nameLocation": "6366:15:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 47011,
                      "src": "6359:22:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 46781,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "6359:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46788,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46784,
                        "name": "globalIRS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46722,
                        "src": "6410:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalIRS_$47917_memory_ptr",
                          "typeString": "struct InterestRateModel.GlobalIRS memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 46785,
                          "name": "cache",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46743,
                          "src": "6421:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                            "typeString": "struct CDPVault.ExchangeCache memory"
                          }
                        },
                        "id": 46786,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6427:15:90",
                        "memberName": "totalNormalDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44514,
                        "src": "6421:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalIRS_$47917_memory_ptr",
                          "typeString": "struct InterestRateModel.GlobalIRS memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46783,
                      "name": "_calculateRateAccumulator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        43320,
                        48121
                      ],
                      "referencedDeclaration": 43320,
                      "src": "6384:25:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_GlobalIRS_$47917_memory_ptr_$_t_uint256_$returns$_t_uint64_$",
                        "typeString": "function (struct InterestRateModel.GlobalIRS memory,uint256) view returns (uint64)"
                      }
                    },
                    "id": 46787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6384:59:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6359:84:90"
                },
                {
                  "body": {
                    "id": 46949,
                    "nodeType": "Block",
                    "src": "6491:2010:90",
                    "statements": [
                      {
                        "assignments": [
                          46797
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 46797,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "6513:5:90",
                            "nodeType": "VariableDeclaration",
                            "scope": 46949,
                            "src": "6505:13:90",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 46796,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6505:7:90",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 46801,
                        "initialValue": {
                          "baseExpression": {
                            "id": 46798,
                            "name": "owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46703,
                            "src": "6521:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 46800,
                          "indexExpression": {
                            "id": 46799,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46790,
                            "src": "6528:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6521:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6505:25:90"
                      },
                      {
                        "condition": {
                          "id": 46815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6548:46:90",
                          "subExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 46813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 46807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 46802,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46797,
                                    "src": "6550:5:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 46805,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6567:1:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 46804,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6559:7:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 46803,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6559:7:90",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 46806,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6559:10:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "6550:19:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 46812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 46808,
                                      "name": "repayAmounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46706,
                                      "src": "6573:12:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 46810,
                                    "indexExpression": {
                                      "id": 46809,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46790,
                                      "src": "6586:1:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6573:15:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 46811,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6592:1:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6573:20:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6550:43:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 46814,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6549:45:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 46944,
                        "nodeType": "IfStatement",
                        "src": "6544:1915:90",
                        "trueBody": {
                          "id": 46943,
                          "nodeType": "Block",
                          "src": "6596:1863:90",
                          "statements": [
                            {
                              "assignments": [
                                46818
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 46818,
                                  "mutability": "mutable",
                                  "name": "position",
                                  "nameLocation": "6630:8:90",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 46943,
                                  "src": "6614:24:90",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                                    "typeString": "struct CDPVault.Position"
                                  },
                                  "typeName": {
                                    "id": 46817,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 46816,
                                      "name": "Position",
                                      "nameLocations": [
                                        "6614:8:90"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 41670,
                                      "src": "6614:8:90"
                                    },
                                    "referencedDeclaration": 41670,
                                    "src": "6614:8:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Position_$41670_storage_ptr",
                                      "typeString": "struct CDPVault.Position"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 46822,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 46819,
                                  "name": "positions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41676,
                                  "src": "6641:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$41670_storage_$",
                                    "typeString": "mapping(address => struct CDPVault.Position storage ref)"
                                  }
                                },
                                "id": 46821,
                                "indexExpression": {
                                  "id": 46820,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46797,
                                  "src": "6651:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6641:16:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Position_$41670_storage",
                                  "typeString": "struct CDPVault.Position storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6614:43:90"
                            },
                            {
                              "assignments": [
                                46825
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 46825,
                                  "mutability": "mutable",
                                  "name": "positionIRS",
                                  "nameLocation": "6694:11:90",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 46943,
                                  "src": "6675:30:90",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PositionIRS_$47928_memory_ptr",
                                    "typeString": "struct InterestRateModel.PositionIRS"
                                  },
                                  "typeName": {
                                    "id": 46824,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 46823,
                                      "name": "PositionIRS",
                                      "nameLocations": [
                                        "6675:11:90"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 47928,
                                      "src": "6675:11:90"
                                    },
                                    "referencedDeclaration": 47928,
                                    "src": "6675:11:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PositionIRS_$47928_storage_ptr",
                                      "typeString": "struct InterestRateModel.PositionIRS"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 46832,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 46827,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46797,
                                    "src": "6731:5:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 46828,
                                      "name": "position",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46818,
                                      "src": "6738:8:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                                        "typeString": "struct CDPVault.Position memory"
                                      }
                                    },
                                    "id": 46829,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6747:10:90",
                                    "memberName": "normalDebt",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 41669,
                                    "src": "6738:19:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 46830,
                                    "name": "rateAccumulator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46782,
                                    "src": "6759:15:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "id": 46826,
                                  "name": "_getUpdatedPositionIRS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44567,
                                  "src": "6708:22:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint64_$returns$_t_struct$_PositionIRS_$47928_memory_ptr_$",
                                    "typeString": "function (address,uint256,uint64) view returns (struct InterestRateModel.PositionIRS memory)"
                                  }
                                },
                                "id": 46831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6708:67:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PositionIRS_$47928_memory_ptr",
                                  "typeString": "struct InterestRateModel.PositionIRS memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6675:100:90"
                            },
                            {
                              "assignments": [
                                46834
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 46834,
                                  "mutability": "mutable",
                                  "name": "debt",
                                  "nameLocation": "6866:4:90",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 46943,
                                  "src": "6858:12:90",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 46833,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6858:7:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 46842,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 46836,
                                      "name": "position",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46818,
                                      "src": "6887:8:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                                        "typeString": "struct CDPVault.Position memory"
                                      }
                                    },
                                    "id": 46837,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6896:10:90",
                                    "memberName": "normalDebt",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 41669,
                                    "src": "6887:19:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 46838,
                                    "name": "rateAccumulator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46782,
                                    "src": "6908:15:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 46839,
                                      "name": "positionIRS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46825,
                                      "src": "6925:11:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PositionIRS_$47928_memory_ptr",
                                        "typeString": "struct InterestRateModel.PositionIRS memory"
                                      }
                                    },
                                    "id": 46840,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6937:13:90",
                                    "memberName": "accruedRebate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 47927,
                                    "src": "6925:25:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "id": 46835,
                                  "name": "calculateDebt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41503,
                                  "src": "6873:13:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint64_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint64,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 46841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6873:78:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6858:93:90"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 46854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 46845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 46843,
                                    "name": "spotPrice_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46737,
                                    "src": "7035:10:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 46844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7049:1:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "7035:15:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 46847,
                                      "name": "debt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46834,
                                      "src": "7093:4:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 46848,
                                        "name": "position",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46818,
                                        "src": "7099:8:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                                          "typeString": "struct CDPVault.Position memory"
                                        }
                                      },
                                      "id": 46849,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7108:10:90",
                                      "memberName": "collateral",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 41667,
                                      "src": "7099:19:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 46850,
                                      "name": "spotPrice_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46737,
                                      "src": "7120:10:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 46851,
                                        "name": "vaultConfig_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46728,
                                        "src": "7132:12:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_VaultConfig_$41610_memory_ptr",
                                          "typeString": "struct CDPVault.VaultConfig memory"
                                        }
                                      },
                                      "id": 46852,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7145:16:90",
                                      "memberName": "liquidationRatio",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 41606,
                                      "src": "7132:29:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    ],
                                    "id": 46846,
                                    "name": "_isCollateralized",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 43791,
                                    "src": "7054:17:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (uint256,uint256,uint256,uint256) pure returns (bool)"
                                    }
                                  },
                                  "id": 46853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7054:125:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "7035:144:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 46858,
                              "nodeType": "IfStatement",
                              "src": "7031:196:90",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 46855,
                                    "name": "CDPVault__liquidatePosition_notUnsafe",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46555,
                                    "src": "7188:37:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 46856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7188:39:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 46857,
                                "nodeType": "RevertStatement",
                                "src": "7181:46:90"
                              }
                            },
                            {
                              "assignments": [
                                46860
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 46860,
                                  "mutability": "mutable",
                                  "name": "maxDebtToRecover",
                                  "nameLocation": "7440:16:90",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 46943,
                                  "src": "7432:24:90",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 46859,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7432:7:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 46861,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7432:24:90"
                            },
                            {
                              "id": 46918,
                              "nodeType": "Block",
                              "src": "7474:642:90",
                              "statements": [
                                {
                                  "assignments": [
                                    46863
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 46863,
                                      "mutability": "mutable",
                                      "name": "nominator",
                                      "nameLocation": "7500:9:90",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 46918,
                                      "src": "7492:17:90",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "typeName": {
                                        "id": 46862,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7492:7:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 46864,
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7492:17:90"
                                },
                                {
                                  "id": 46887,
                                  "nodeType": "Block",
                                  "src": "7527:234:90",
                                  "statements": [
                                    {
                                      "assignments": [
                                        46866
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 46866,
                                          "mutability": "mutable",
                                          "name": "collateralValue",
                                          "nameLocation": "7553:15:90",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 46887,
                                          "src": "7545:23:90",
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 46865,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7545:7:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 46876,
                                      "initialValue": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 46869,
                                                  "name": "position",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 46818,
                                                  "src": "7581:8:90",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                                                    "typeString": "struct CDPVault.Position memory"
                                                  }
                                                },
                                                "id": 46870,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "7590:10:90",
                                                "memberName": "collateral",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 41667,
                                                "src": "7581:19:90",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "id": 46871,
                                                "name": "spotPrice_",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 46737,
                                                "src": "7602:10:90",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 46868,
                                              "name": "wmul",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [
                                                131405,
                                                131428
                                              ],
                                              "referencedDeclaration": 131405,
                                              "src": "7576:4:90",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 46872,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "7576:37:90",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 46873,
                                              "name": "vaultConfig_",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 46728,
                                              "src": "7615:12:90",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_VaultConfig_$41610_memory_ptr",
                                                "typeString": "struct CDPVault.VaultConfig memory"
                                              }
                                            },
                                            "id": 46874,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7628:16:90",
                                            "memberName": "liquidationRatio",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 41606,
                                            "src": "7615:29:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            }
                                          ],
                                          "id": 46867,
                                          "name": "wdiv",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 131452,
                                          "src": "7571:4:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 46875,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7571:74:90",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "7545:100:90"
                                    },
                                    {
                                      "expression": {
                                        "id": 46885,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 46877,
                                          "name": "nominator",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46863,
                                          "src": "7663:9:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 46884,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 46879,
                                                  "name": "liquidationConfig_",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 46733,
                                                  "src": "7680:18:90",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LiquidationConfig_$46531_memory_ptr",
                                                    "typeString": "struct CDPVault_TypeA.LiquidationConfig memory"
                                                  }
                                                },
                                                "id": 46880,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "7699:18:90",
                                                "memberName": "targetHealthFactor",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 46530,
                                                "src": "7680:37:90",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint64",
                                                  "typeString": "uint64"
                                                }
                                              },
                                              {
                                                "id": 46881,
                                                "name": "debt",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 46834,
                                                "src": "7719:4:90",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint64",
                                                  "typeString": "uint64"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 46878,
                                              "name": "wmul",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [
                                                131405,
                                                131428
                                              ],
                                              "referencedDeclaration": 131405,
                                              "src": "7675:4:90",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 46882,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "7675:49:90",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 46883,
                                            "name": "collateralValue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46866,
                                            "src": "7727:15:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "7675:67:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7663:79:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 46886,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7663:79:90"
                                    }
                                  ]
                                },
                                {
                                  "assignments": [
                                    46889
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 46889,
                                      "mutability": "mutable",
                                      "name": "discountRatio",
                                      "nameLocation": "7786:13:90",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 46918,
                                      "src": "7778:21:90",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "typeName": {
                                        "id": 46888,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7778:7:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 46896,
                                  "initialValue": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 46891,
                                          "name": "vaultConfig_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46728,
                                          "src": "7807:12:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_VaultConfig_$41610_memory_ptr",
                                            "typeString": "struct CDPVault.VaultConfig memory"
                                          }
                                        },
                                        "id": 46892,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7820:16:90",
                                        "memberName": "liquidationRatio",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 41606,
                                        "src": "7807:29:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 46893,
                                          "name": "liquidationConfig_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46733,
                                          "src": "7838:18:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LiquidationConfig_$46531_memory_ptr",
                                            "typeString": "struct CDPVault_TypeA.LiquidationConfig memory"
                                          }
                                        },
                                        "id": 46894,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7857:19:90",
                                        "memberName": "liquidationDiscount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 46528,
                                        "src": "7838:38:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        },
                                        {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      ],
                                      "id": 46890,
                                      "name": "wmul",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        131405,
                                        131428
                                      ],
                                      "referencedDeclaration": 131405,
                                      "src": "7802:4:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 46895,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7802:75:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7778:99:90"
                                },
                                {
                                  "assignments": [
                                    46898
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 46898,
                                      "mutability": "mutable",
                                      "name": "denominator",
                                      "nameLocation": "7903:11:90",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 46918,
                                      "src": "7895:19:90",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "typeName": {
                                        "id": 46897,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7895:7:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 46910,
                                  "initialValue": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 46909,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 46900,
                                            "name": "liquidationConfig_",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46733,
                                            "src": "7922:18:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LiquidationConfig_$46531_memory_ptr",
                                              "typeString": "struct CDPVault_TypeA.LiquidationConfig memory"
                                            }
                                          },
                                          "id": 46901,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "7941:18:90",
                                          "memberName": "targetHealthFactor",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 46530,
                                          "src": "7922:37:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 46902,
                                            "name": "cache",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46743,
                                            "src": "7961:5:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                                              "typeString": "struct CDPVault.ExchangeCache memory"
                                            }
                                          },
                                          "id": 46903,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "7967:17:90",
                                          "memberName": "settlementPenalty",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 44526,
                                          "src": "7961:23:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 46899,
                                        "name": "wmul",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          131405,
                                          131428
                                        ],
                                        "referencedDeclaration": 131405,
                                        "src": "7917:4:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 46904,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7917:68:90",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 46906,
                                          "name": "WAD",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 131190,
                                          "src": "8013:3:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 46907,
                                          "name": "discountRatio",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46889,
                                          "src": "8018:13:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 46905,
                                        "name": "wdiv",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 131452,
                                        "src": "8008:4:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 46908,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8008:24:90",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7917:115:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7895:137:90"
                                },
                                {
                                  "expression": {
                                    "id": 46916,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 46911,
                                      "name": "maxDebtToRecover",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46860,
                                      "src": "8050:16:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "id": 46913,
                                          "name": "nominator",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46863,
                                          "src": "8074:9:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 46914,
                                          "name": "denominator",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46898,
                                          "src": "8085:11:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 46912,
                                        "name": "wdiv",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 131452,
                                        "src": "8069:4:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 46915,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8069:28:90",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8050:47:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 46917,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8050:47:90"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "id": 46932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 46919,
                                    "name": "cache",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46743,
                                    "src": "8210:5:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                                      "typeString": "struct CDPVault.ExchangeCache memory"
                                    }
                                  },
                                  "id": 46921,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8216:19:90",
                                  "memberName": "maxCreditToExchange",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 44528,
                                  "src": "8210:25:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 46923,
                                        "name": "repayAmounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46706,
                                        "src": "8242:12:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 46925,
                                      "indexExpression": {
                                        "id": 46924,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46790,
                                        "src": "8255:1:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8242:15:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 46927,
                                          "name": "maxDebtToRecover",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46860,
                                          "src": "8264:16:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 46928,
                                            "name": "cache",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46743,
                                            "src": "8282:5:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                                              "typeString": "struct CDPVault.ExchangeCache memory"
                                            }
                                          },
                                          "id": 46929,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "8288:17:90",
                                          "memberName": "settlementPenalty",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 44526,
                                          "src": "8282:23:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 46926,
                                        "name": "wdiv",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 131452,
                                        "src": "8259:4:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 46930,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8259:47:90",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 46922,
                                    "name": "min",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      131258,
                                      131270
                                    ],
                                    "referencedDeclaration": 131258,
                                    "src": "8238:3:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 46931,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8238:69:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8210:97:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 46933,
                              "nodeType": "ExpressionStatement",
                              "src": "8210:97:90"
                            },
                            {
                              "expression": {
                                "id": 46941,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 46934,
                                  "name": "cache",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46743,
                                  "src": "8368:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                                    "typeString": "struct CDPVault.ExchangeCache memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 46936,
                                      "name": "cache",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46743,
                                      "src": "8408:5:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                                        "typeString": "struct CDPVault.ExchangeCache memory"
                                      }
                                    },
                                    {
                                      "id": 46937,
                                      "name": "position",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46818,
                                      "src": "8415:8:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                                        "typeString": "struct CDPVault.Position memory"
                                      }
                                    },
                                    {
                                      "id": 46938,
                                      "name": "positionIRS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46825,
                                      "src": "8425:11:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PositionIRS_$47928_memory_ptr",
                                        "typeString": "struct InterestRateModel.PositionIRS memory"
                                      }
                                    },
                                    {
                                      "id": 46939,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46797,
                                      "src": "8438:5:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                                        "typeString": "struct CDPVault.ExchangeCache memory"
                                      },
                                      {
                                        "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                                        "typeString": "struct CDPVault.Position memory"
                                      },
                                      {
                                        "typeIdentifier": "t_struct$_PositionIRS_$47928_memory_ptr",
                                        "typeString": "struct InterestRateModel.PositionIRS memory"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 46935,
                                    "name": "_settleDebtAndReleaseCollateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44805,
                                    "src": "8376:31:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ExchangeCache_$44531_memory_ptr_$_t_struct$_Position_$41670_memory_ptr_$_t_struct$_PositionIRS_$47928_memory_ptr_$_t_address_$returns$_t_struct$_ExchangeCache_$44531_memory_ptr_$",
                                      "typeString": "function (struct CDPVault.ExchangeCache memory,struct CDPVault.Position memory,struct InterestRateModel.PositionIRS memory,address) returns (struct CDPVault.ExchangeCache memory)"
                                    }
                                  },
                                  "id": 46940,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8376:68:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                                    "typeString": "struct CDPVault.ExchangeCache memory"
                                  }
                                },
                                "src": "8368:76:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                                  "typeString": "struct CDPVault.ExchangeCache memory"
                                }
                              },
                              "id": 46942,
                              "nodeType": "ExpressionStatement",
                              "src": "8368:76:90"
                            }
                          ]
                        }
                      },
                      {
                        "id": 46948,
                        "nodeType": "UncheckedBlock",
                        "src": "8473:18:90",
                        "statements": [
                          {
                            "expression": {
                              "id": 46946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8485:3:90",
                              "subExpression": {
                                "id": 46945,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46790,
                                "src": "8487:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 46947,
                            "nodeType": "ExpressionStatement",
                            "src": "8485:3:90"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46792,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46790,
                      "src": "6470:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 46793,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46703,
                        "src": "6474:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 46794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6481:6:90",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6474:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6470:17:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46950,
                  "initializationExpression": {
                    "assignments": [
                      46790
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 46790,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6467:1:90",
                        "nodeType": "VariableDeclaration",
                        "scope": 46950,
                        "src": "6459:9:90",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 46789,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6459:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 46791,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6459:9:90"
                  },
                  "nodeType": "ForStatement",
                  "src": "6454:2047:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46952,
                          "name": "cache",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46743,
                          "src": "8697:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                            "typeString": "struct CDPVault.ExchangeCache memory"
                          }
                        },
                        "id": 46953,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8703:9:90",
                        "memberName": "globalIRS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44512,
                        "src": "8697:15:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalIRS_$47917_memory_ptr",
                          "typeString": "struct InterestRateModel.GlobalIRS memory"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46954,
                            "name": "cache",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46743,
                            "src": "8726:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                              "typeString": "struct CDPVault.ExchangeCache memory"
                            }
                          },
                          "id": 46955,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8732:15:90",
                          "memberName": "accruedInterest",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44520,
                          "src": "8726:21:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 46957,
                                "name": "cache",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46743,
                                "src": "8755:5:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                                  "typeString": "struct CDPVault.ExchangeCache memory"
                                }
                              },
                              "id": 46958,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8761:15:90",
                              "memberName": "creditExchanged",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44518,
                              "src": "8755:21:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 46962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 46959,
                                "name": "WAD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 131190,
                                "src": "8778:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 46960,
                                  "name": "cache",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46743,
                                  "src": "8784:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                                    "typeString": "struct CDPVault.ExchangeCache memory"
                                  }
                                },
                                "id": 46961,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8790:17:90",
                                "memberName": "settlementPenalty",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44526,
                                "src": "8784:23:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8778:29:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 46956,
                            "name": "wmul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              131405,
                              131428
                            ],
                            "referencedDeclaration": 131405,
                            "src": "8750:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 46963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8750:58:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8726:82:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46965,
                          "name": "cache",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46743,
                          "src": "8822:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                            "typeString": "struct CDPVault.ExchangeCache memory"
                          }
                        },
                        "id": 46966,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8828:15:90",
                        "memberName": "totalNormalDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44514,
                        "src": "8822:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46967,
                        "name": "spotPrice_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46737,
                        "src": "8857:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46968,
                          "name": "vaultConfig_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46728,
                          "src": "8881:12:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultConfig_$41610_memory_ptr",
                            "typeString": "struct CDPVault.VaultConfig memory"
                          }
                        },
                        "id": 46969,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8894:22:90",
                        "memberName": "globalLiquidationRatio",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41609,
                        "src": "8881:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalIRS_$47917_memory_ptr",
                          "typeString": "struct InterestRateModel.GlobalIRS memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 46951,
                      "name": "_checkForEmergencyModeAndStoreGlobalIRSAndCollectFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43571,
                      "src": "8630:53:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_GlobalIRS_$47917_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
                        "typeString": "function (struct InterestRateModel.GlobalIRS memory,uint256,uint256,uint256,uint64) returns (uint256)"
                      }
                    },
                    "id": 46970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8630:296:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46971,
                  "nodeType": "ExpressionStatement",
                  "src": "8630:296:90"
                },
                {
                  "expression": {
                    "id": 46975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46972,
                      "name": "totalNormalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41617,
                      "src": "8994:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 46973,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46743,
                        "src": "9012:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 46974,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9018:15:90",
                      "memberName": "totalNormalDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44514,
                      "src": "9012:21:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8994:39:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46976,
                  "nodeType": "ExpressionStatement",
                  "src": "8994:39:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46980,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9132:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9136:6:90",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9132:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46984,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9152:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CDPVault_TypeA_$47013",
                              "typeString": "contract CDPVault_TypeA"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CDPVault_TypeA_$47013",
                              "typeString": "contract CDPVault_TypeA"
                            }
                          ],
                          "id": 46983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9144:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46982,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9144:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9144:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46986,
                          "name": "cache",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46743,
                          "src": "9159:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                            "typeString": "struct CDPVault.ExchangeCache memory"
                          }
                        },
                        "id": 46987,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9165:15:90",
                        "memberName": "creditExchanged",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44518,
                        "src": "9159:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46977,
                        "name": "cdm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41561,
                        "src": "9114:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDM_$48682",
                          "typeString": "contract ICDM"
                        }
                      },
                      "id": 46979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9118:13:90",
                      "memberName": "modifyBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48681,
                      "src": "9114:17:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 46988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9114:67:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46989,
                  "nodeType": "ExpressionStatement",
                  "src": "9114:67:90"
                },
                {
                  "expression": {
                    "id": 46996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46990,
                        "name": "cash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41665,
                        "src": "9261:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 46993,
                      "indexExpression": {
                        "expression": {
                          "id": 46991,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9266:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9270:6:90",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9266:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9261:16:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 46994,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46743,
                        "src": "9281:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 46995,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9287:19:90",
                      "memberName": "collateralExchanged",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44516,
                      "src": "9281:25:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9261:45:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46997,
                  "nodeType": "ExpressionStatement",
                  "src": "9261:45:90"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 46998,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46743,
                        "src": "9430:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 46999,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9436:14:90",
                      "memberName": "accruedBadDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44530,
                      "src": "9430:20:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 47000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9454:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9430:25:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47010,
                  "nodeType": "IfStatement",
                  "src": "9426:145:90",
                  "trueBody": {
                    "id": 47009,
                    "nodeType": "Block",
                    "src": "9457:114:90",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 47005,
                                "name": "cache",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46743,
                                "src": "9538:5:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeCache_$44531_memory_ptr",
                                  "typeString": "struct CDPVault.ExchangeCache memory"
                                }
                              },
                              "id": 47006,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9544:14:90",
                              "memberName": "accruedBadDebt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44530,
                              "src": "9538:20:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 47002,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41569,
                              "src": "9523:6:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBuffer_$48624",
                                "typeString": "contract IBuffer"
                              }
                            },
                            "id": 47004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9530:7:90",
                            "memberName": "bailOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48623,
                            "src": "9523:14:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 47007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9523:36:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 47008,
                        "nodeType": "ExpressionStatement",
                        "src": "9523:36:90"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              49206
            ],
            "documentation": {
              "id": 46700,
              "nodeType": "StructuredDocumentation",
              "src": "4579:992:90",
              "text": "@notice Liquidates multiple unsafe positions by selling as much collateral as required to cover the debt in\n order to make the positions safe again. The collateral can be bought at a discount (`liquidationDiscount`) to\n the current spot price. The liquidator has to provide the amount he wants repay or sell (`repayAmounts`) for\n each position. From that repay amount a penalty (`liquidationPenalty`) is subtracted to mitigate against\n profitable self liquidations. If the available collateral of a position is not sufficient to cover the debt\n the vault is able to apply for a bail out from the global Buffer, any residual bad debt not covered by the \n Buffer will be attributed to the credit delegators.\n @dev The liquidator has to approve the vault to transfer the sum of `repayAmounts`.\n @param owners Owners of the positions to liquidate\n @param repayAmounts Amounts the liquidator wants to repay for each position [wad]"
            },
            "functionSelector": "df10f687",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46709,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46708,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "5671:13:90"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33535,
                  "src": "5671:13:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "5671:13:90"
              }
            ],
            "name": "liquidatePositions",
            "nameLocation": "5585:18:90",
            "parameters": {
              "id": 46707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46703,
                  "mutability": "mutable",
                  "name": "owners",
                  "nameLocation": "5623:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 47012,
                  "src": "5604:25:90",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 46701,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5604:7:90",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 46702,
                    "nodeType": "ArrayTypeName",
                    "src": "5604:9:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46706,
                  "mutability": "mutable",
                  "name": "repayAmounts",
                  "nameLocation": "5648:12:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 47012,
                  "src": "5631:29:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 46704,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5631:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 46705,
                    "nodeType": "ArrayTypeName",
                    "src": "5631:9:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5603:58:90"
            },
            "returnParameters": {
              "id": 46710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5685:0:90"
            },
            "scope": 47013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46521,
              "name": "CDPVault",
              "nameLocations": [
                "724:8:90"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45136,
              "src": "724:8:90"
            },
            "id": 46522,
            "nodeType": "InheritanceSpecifier",
            "src": "724:8:90"
          },
          {
            "baseName": {
              "id": 46523,
              "name": "ICDPVault_TypeA",
              "nameLocations": [
                "734:15:90"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49207,
              "src": "734:15:90"
            },
            "id": 46524,
            "nodeType": "InheritanceSpecifier",
            "src": "734:15:90"
          }
        ],
        "canonicalName": "CDPVault_TypeA",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46520,
          "nodeType": "StructuredDocumentation",
          "src": "262:435:90",
          "text": "@title CDPVault_TypeA\n @notice A CDP-style vault for depositing collateral and drawing credit against it.\n TypeA vaults are liquidated permissionlessly by selling as much collateral of an unsafe position until it meets\n a targeted collateralization ratio again. Any shortfall from liquidation not being able to be recovered\n by selling the available collateral is covered by the global Buffer or the Credit Delegators."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47013,
          49207,
          45136,
          48975,
          48340,
          131698,
          49660,
          131542,
          49632,
          33608,
          32230,
          37491,
          37503,
          32428,
          36317
        ],
        "name": "CDPVault_TypeA",
        "nameLocation": "706:14:90",
        "scope": 47014,
        "usedErrors": [
          41789,
          41791,
          41793,
          41795,
          41797,
          41799,
          41801,
          41803,
          41805,
          41807,
          41809,
          41811,
          41813,
          41815,
          41817,
          41819,
          46553,
          46555,
          46557,
          47946,
          130901,
          130903,
          130905,
          131175,
          131177,
          131179,
          131181,
          131183,
          131567
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 90
}