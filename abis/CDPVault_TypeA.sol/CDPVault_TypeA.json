{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CDPVault__addLimitPriceTick_invalidPriceTickOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__addLimitPriceTick_limitPriceTickOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__cancelLimitOrder_limitOrderDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__checkEmergencyMode_entered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitOrderAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitOrderFloor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitPriceTickNotActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__exchange_notEnoughExchanged",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__liquidatePosition_notUnsafe",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__liquidatePositions_argLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_maxUtilizationRatio",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_noPermission",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_notSafe",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyPosition_debtFloor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__setParameter_unrecognizedParameter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IdIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InterestRateModel__setBaseRate_invalidBaseRate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ItemInList",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ItemNotInList",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__add_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__mul_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__sub_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toInt256_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toUint64_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Permission__modifyPermission_notPermitted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "AddLimitPriceTick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "CancelLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "CreateLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRedeemed",
          "type": "uint256"
        }
      ],
      "name": "Exchange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRedeemed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        }
      ],
      "name": "ExecuteLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralReleased",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "normalDebtRepaid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        }
      ],
      "name": "LiquidatePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        }
      ],
      "name": "ModifyCollateralAndDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "grant",
          "type": "bool"
        }
      ],
      "name": "ModifyPermission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalNormalDebt",
          "type": "uint256"
        }
      ],
      "name": "ModifyPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "RemoveLimitPriceTick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int64",
          "name": "baseRate",
          "type": "int64"
        }
      ],
      "name": "SetBaseRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SetGlobalIRS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "parameter",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "SetParameter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "grant",
          "type": "bool"
        }
      ],
      "name": "SetPermittedAgent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "snapshotRateAccumulator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accruedRebate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rebateFactor",
          "type": "uint256"
        }
      ],
      "name": "SetPositionIRS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "name": "activeLimitPriceTicks",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextLimitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "addLimitPriceTick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buffer",
      "outputs": [
        {
          "internalType": "contract IBuffer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "name": "calculateRebateFactorForPriceTick",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cdm",
      "outputs": [
        {
          "internalType": "contract ICDM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feesClaimed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "createLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cashAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enterEmergencyMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "upperLimitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditToExchange",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralExchanged",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "upperLimitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditToExchange",
          "type": "uint256"
        }
      ],
      "name": "exchangePreview",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralExchanged",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGlobalIRS",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int64",
              "name": "baseRate",
              "type": "int64"
            },
            {
              "internalType": "uint64",
              "name": "lastUpdated",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "rateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "averageRebate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "globalAccruedRebate",
              "type": "uint256"
            }
          ],
          "internalType": "struct InterestRateModel.GlobalIRS",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getLimitOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        }
      ],
      "name": "getPositionIRS",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "snapshotRateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "rebateFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "accruedRebate",
              "type": "uint128"
            }
          ],
          "internalType": "struct InterestRateModel.PositionIRS",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getPriceTick",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "hasPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitOrderFloor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        }
      ],
      "name": "limitOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "repayAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "liquidatePositions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationConfig",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "liquidationPenalty",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "liquidationDiscount",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "targetHealthFactor",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        }
      ],
      "name": "modifyCollateralAndDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "modifyPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "modifyPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pausedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "normalDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "removeLimitPriceTick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "parameter",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "setParameter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "setPermissionAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spotPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAccruedFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalNormalDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultConfig",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "debtFloor",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "liquidationRatio",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "globalLiquidationRatio",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        }
      ],
      "name": "virtualIRS",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "rateAccumulator",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "accruedRebate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "globalAccruedRebate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "672:8780:90:-:0;;;2714:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;996:7:47;:15;;-1:-1:-1;;996:15:47;;;9271:45:88;;;-1:-1:-1;;;9271:45:88;;;;2752:7:90;;-1:-1:-1;;;;;9271:43:88;;;;;:45;;;;;996:15:47;;9271:45:88;;;;;;;;1006:5:47;9271:43:88;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9076:240;;;;;;;;-1:-1:-1;;;;;9076:240:88;;;;;;;;;;;;;-1:-1:-1;9076:240:88;;-1:-1:-1;9076:240:88;-1:-1:-1;672:8780:90;;-1:-1:-1;672:8780:90;14:131:188;-1:-1:-1;;;;;89:31:188;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:251::-;220:6;273:2;261:9;252:7;248:23;244:32;241:52;;;289:1;286;279:12;241:52;321:9;315:16;340:31;365:5;340:31;:::i;:::-;390:5;150:251;-1:-1:-1;;;150:251:188:o;406:966::-;603:6;611;619;627;635;643;651;659;712:3;700:9;691:7;687:23;683:33;680:53;;;729:1;726;719:12;680:53;761:9;755:16;780:31;805:5;780:31;:::i;:::-;880:2;865:18;;859:25;830:5;;-1:-1:-1;893:33:188;859:25;893:33;:::i;:::-;997:2;982:18;;976:25;945:7;;-1:-1:-1;1010:33:188;976:25;1010:33;:::i;:::-;1114:2;1099:18;;1093:25;1062:7;;-1:-1:-1;1127:33:188;1093:25;1127:33;:::i;:::-;1226:3;1211:19;;1205:26;1271:3;1256:19;;1250:26;1316:3;1301:19;;1295:26;1361:3;1346:19;;;1340:26;406:966;;;;-1:-1:-1;406:966:188;;1179:7;;1205:26;;1295;;-1:-1:-1;1340:26:188;-1:-1:-1;406:966:188;-1:-1:-1;;;406:966:188:o;:::-;672:8780:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102c15760003560e01c8063842c311e1161017d578063d294f093116100d9578063df10f68711610092578063df10f68714610769578063e2dfb3171461077c578063eb953449146107a3578063edaafe20146107ff578063ef0563fb14610826578063f3fef3a314610839578063fc0c546a1461084c57600080fd5b8063d294f093146106d3578063d4b7eac3146106db578063d547741f146106ee578063d9c70f5714610701578063dbe6b31c14610714578063dc2ec2491461076057600080fd5b8063a3e2b49511610136578063a3e2b49514610612578063b0e21e8a14610632578063b6dc16f614610659578063ba95534c14610679578063c75a4b5e14610682578063cb6238c814610695578063cde68041146106c057600080fd5b8063842c311e146105cb5780638456cb59146105d457806388439aea146105dc57806391d14854146105ef5780639844afd214610602578063a217fddf1461060a57600080fd5b8063398482d81161022c5780635c975abb116101e55780635c975abb146104ad578063683f81a1146104b8578063723507be146104db5780637cc34bb4146104ee5780637dc0d1d01461054c5780638051ba75146105805780638309dbdd146105b857600080fd5b8063398482d8146104135780633f4ba83a1461041b57806344a3c6641461042357806347e7ef241461043657806351f813ec1461044957806355f575101461047157600080fd5b80632906f94e1161027e5780632906f94e146103975780632af8992b146103aa5780632e55d0f2146103bd5780632f2ff15d146103c6578063342c02b1146103d957806336568abe1461040057600080fd5b806301ffc9a7146102c65780630a9254e4146102ee5780631c580ad5146102f85780632202ce8c1461034b578063248a9ca314610353578063280c37ef14610384575b600080fd5b6102d96102d4366004613e9a565b610873565b60405190151581526020015b60405180910390f35b6102f66108aa565b005b601354610321906001600160401b0380821691600160401b8104821691600160801b9091041683565b604080516001600160401b03948516815292841660208401529216918101919091526060016102e5565b6102f6610904565b610376610361366004613ec4565b60009081526020819052604090206001015490565b6040519081526020016102e5565b6102f6610392366004613f02565b6109cd565b6102f66103a5366004613ec4565b610a44565b6103766103b8366004613f39565b610b7d565b61037660025481565b6102f66103d4366004613f5b565b610bcb565b6103767f000000000000000000000000000000000000000000000000000000000000000081565b6102f661040e366004613f5b565b610bf5565b610376610c78565b6102f6610d2f565b6102f6610431366004613f39565b610d69565b610376610444366004613f87565b610ea2565b61045c610457366004613ec4565b610f44565b604080519283529015156020830152016102e5565b61049861047f366004613fb1565b600d602052600090815260409020805460019091015482565b604080519283526020830191909152016102e5565b60015460ff166102d9565b6102d96104c6366004613ec4565b600e6020526000908152604090205460ff1681565b6102f66104e9366004613f39565b610fa0565b60095461051d906001600160801b038116906001600160401b03600160801b8204811691600160c01b90041683565b604080516001600160801b0390941684526001600160401b0392831660208501529116908201526060016102e5565b6105737f000000000000000000000000000000000000000000000000000000000000000081565b6040516102e59190613fcc565b61059361058e366004613fb1565b611204565b604080516001600160401b0390941684526020840192909252908201526060016102e5565b6102f66105c6366004613fe0565b611294565b610376600a5481565b6102f6611363565b6104986105ea366004613f39565b611395565b6102d96105fd366004613f5b565b6113b8565b6102f66113e1565b610376600081565b610376610620366004613ec4565b60116020526000908152604090205481565b6103767f000000000000000000000000000000000000000000000000000000000000000081565b610376610667366004613fb1565b600c6020526000908152604090205481565b610376600b5481565b6102f6610690366004614027565b611433565b6106a86106a3366004613ec4565b611848565b6040516001600160401b0390911681526020016102e5565b6102d96106ce36600461407c565b6118cf565b61037661191d565b6104986106e9366004613f39565b6119cb565b6102f66106fc366004613f5b565b611ad3565b6102f661070f366004613f02565b611af8565b610727610722366004613fb1565b611b5b565b6040805182516001600160401b03908116825260208085015190911690820152918101516001600160801b0316908201526060016102e5565b61037660125481565b6102f66107773660046140bc565b611bc6565b6105737f000000000000000000000000000000000000000000000000000000000000000081565b6107ab6120b4565b6040516102e59190600060a082019050825160070b825260208301516001600160401b0380821660208501528060408601511660408501525050606083015160608301526080830151608083015292915050565b6105737f000000000000000000000000000000000000000000000000000000000000000081565b6102f6610834366004613ec4565b61210b565b610376610847366004613f87565b61218d565b6105737f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216637965db0b60e01b14806108a457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006108b46120b4565b905080602001516001600160401b03166000146108d057600080fd5b6108db60003361221c565b6001600160401b0342166020820152670de0b6b3a76400006040820152610901816122a0565b50565b336000818152601160205260408120549081900361093557604051630573b42560e51b815260040160405180910390fd5b600081815260106020526040902061094d908361232e565b600082815260116020908152604080832083905533808452600d909252822060010154600a546109999361097f610c78565b600954600160c01b90046001600160401b031660006123af565b505060405133915082907f6f36e2a381bc87c87bcc2043deb0a5cdf9a6d87eb14cbe13cf0f1fe39f324dd990600090a35050565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815194855291840192909252908201527f6501e8bfa2d3e686d62fe2c0c3275df594494583b0a63a70b7452d3eeb712bd6906060015b60405180910390a15050565b6000818152600e602052604090205460ff16610a735760405163da4b118b60e01b815260040160405180910390fd5b336000908152600d6020526040902060010154601254811015610aa9576040516305c0093760e21b815260040160405180910390fd5b3360008181526011602052604090205415610ad75760405163345c017d60e01b815260040160405180910390fd5b600081815260116020908152604080832086905585835260108083528184208480528084529184206001015493879052909152610b1591839061247a565b610b483383600a546000610b27610c78565b600954600160c01b90046001600160401b0316610b438a611848565b6123af565b505060405133915084907f85d7690ee90733d849878d2bbbd5bf047e442ce2d045c0308a58cfd2ce53031590600090a3505050565b6000828152601060209081526040808320838052909152812054905b828114610bc45760008481526010602090815260408083208584529091529020549150600101610b99565b5092915050565b600082815260208190526040902060010154610be681612547565b610bf0838361221c565b505050565b6001600160a01b0381163314610c6a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610c748282612551565b5050565b604051632cbf04c160e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632cbf04c190610ce7907f000000000000000000000000000000000000000000000000000000000000000090600401613fcc565b6020604051808303816000875af1158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a91906141d5565b905090565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610d5981612547565b610d616125b6565b506000600255565b610d71612602565b7ff96f3d6876b63665360200e15ed8964960110cbbd99e917fb50ad1e576f538ac610d9b81612547565b670de0b6b3a7640000831080610db957508268056bc75e2d63100000105b15610dd7576040516336bbc25960e01b815260040160405180910390fd5b60008052600f6020526000805160206144988339815191525480158015610dfd57508215155b80610e1a57508215801590610e1a575082841180610e1a57508281115b80610e3257506000838152600f602052604090205484105b15610e50576040516346b0cc7160e11b815260040160405180910390fd5b610e5c600f858561247a565b6000848152600e6020526040808220805460ff191660011790555185917f3907a47dfbf148deb99efcd854a68497cbdc2a2db8488083ecb842ad6bde91a891a250505050565b6000610eac612602565b610ee16001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308561264a565b610f0b827f00000000000000000000000000000000000000000000000000000000000000006126a8565b6001600160a01b0384166000908152600c6020526040812080549293508392909190610f38908490614204565b90915550909392505050565b6000808052600f6020526000805160206144988339815191525490805b838114610f84576000838152600f60205260409020600101549250600101610f61565b50506000818152600e6020526040902054909260ff9091169150565b610fa8612602565b7f7e2be3cffb06427cbcb9b1d12d4b78adcf14a2bf640e9bbdeb54bb711b65ec71610fd281612547565b82683232b13a233637b7b960b91b0361100557600980546001600160801b0319166001600160801b0384161790556111c5565b826f6c69717569646174696f6e526174696f60801b03611049576009805467ffffffffffffffff60801b1916600160801b6001600160401b038516021790556111c5565b8275676c6f62616c4c69717569646174696f6e526174696f60501b0361108e57600980546001600160c01b0316600160c01b6001600160401b038516021790556111c5565b826e3634b6b4ba27b93232b9233637b7b960891b036110b15760128290556111c5565b8267626173655261746560c01b036110e2576110dd60001983146110d557826126f7565b6000196126f7565b6111c5565b82716c69717569646174696f6e50656e616c747960701b0361111f576013805467ffffffffffffffff19166001600160401b0384161790556111c5565b82721b1a5c5d5a59185d1a5bdb911a5cd8dbdd5b9d606a1b03611166576013805467ffffffffffffffff60401b1916600160401b6001600160401b038516021790556111c5565b82713a30b933b2ba2432b0b63a342330b1ba37b960711b036111ac576013805467ffffffffffffffff60801b1916600160801b6001600160401b038516021790556111c5565b604051638dd691e760e01b815260040160405180910390fd5b827f4327e67d6578eb2c9293fb22f9334006073ac1397c7100f5dd5adca09ad71c08836040516111f791815260200190565b60405180910390a2505050565b6000806000806112126120b4565b600a54909150611222828261279f565b945061123782868360008060008060006128b2565b506080810151935091506001600160a01b0386161561128b5761127f61125c87611b5b565b6001600160a01b0388166000908152600d60205260409020600101548790612a51565b6001600160801b031693505b50509193909250565b6001600160a01b03831633148015906112d157506001600160a01b038316600090815260046020908152604080832033845290915290205460ff16155b156112ef57604051638743d2ff60e01b815260040160405180910390fd5b6001600160a01b0383811660009081526003602090815260408083209386168352929052819020805460ff1916831515179055517fdcf2bd5a4c47afeb1792d170f6f5e6e528e30c6b546fffe62b697a11f8953b2b90611356903390869086908690614217565b60405180910390a1505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61138d81612547565b610901612a8c565b60008033156113a357600080fd5b6113ad8484612a9a565b915091509250929050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6113e9612602565b6000806113f66000611204565b600954929450925061142691600160c01b90046001600160401b0316905061141c610c78565b600a548585612d20565b15610c7457610c74612a8c565b60008113806114425750600082125b8015611455575061145385336118cf565b155b806114725750600082138015611472575061147084336118cf565b155b8061148f575060008112801561148f575061148d83336118cf565b155b156114ad57604051634c26249960e01b815260040160405180910390fd5b6001600160a01b0385166000908152600d6020908152604080832081518083018352815481526001909101548184015281516060810183526009546001600160801b03811682526001600160401b03600160801b8204811695830195909552600160c01b900490931691830191909152600a54909261152a610c78565b905060008060006115498c8860200151878b888b6040015160006123af565b92509250925061155d8c88848c8c8a612e30565b9650600088138061156e5750600089125b80156115b157506115af6115988860200151846000015185604001516001600160801b0316612f37565b8851602089015187906001600160401b0316612f57565b155b156115cf57604051633f66923d60e01b815260040160405180910390fd5b6001600160a01b038b166000908152600c60205260409020546115f2908a612f7a565b6001600160a01b038c166000908152600c60205260409020556116158589612fbf565b945084600a819055506000816001600160801b031661164185604001516001600160401b03168b613004565b61164b9190614241565b905060008113156116dd57604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906116a69030908f908690600401614269565b600060405180830381600087803b1580156116c057600080fd5b505af11580156116d4573d6000803e3d6000fd5b50505050611771565b6000811215611771576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ac2ce9bc8c306117208561428d565b6040518463ffffffff1660e01b815260040161173e93929190614269565b600060405180830381600087803b15801561175857600080fd5b505af115801561176c573d6000803e3d6000fd5b505050505b60008913156117d9576000611786858861302e565b90506001600160401b037f000000000000000000000000000000000000000000000000000000000000000060401c16808211156117d6576040516329b823dd60e21b815260040160405180910390fd5b50505b8a6001600160a01b03168c6001600160a01b03168e6001600160a01b03167f7ce3e27b99e7e2e42f0ddcb6f6679a25081a5fd4ca991bcd05c45e54daa997088d8d604051611831929190918252602082015260400190565b60405180910390a450505050505050505050505050565b6000670de0b6b3a764000082101561186257506000919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160801b0381169060801c6118c76118c2670de0b6b3a76400006118b3856118ae838a6142a9565b613103565b6118bd9085614204565b6126a8565b613131565b949350505050565b6000816001600160a01b0316836001600160a01b0316148061191657506001600160a01b0380841660009081526003602090815260408083209386168352929052205460ff165b9392505050565b600b80546000909155604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906119969030907f0000000000000000000000000000000000000000000000000000000000000000908690600401614269565b600060405180830381600087803b1580156119b057600080fd5b505af11580156119c4573d6000803e3d6000fd5b5050505090565b6000806119d88484612a9a565b90925090508115611a6657604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc90611a3390339030908790600401614269565b600060405180830381600087803b158015611a4d57600080fd5b505af1158015611a61573d6000803e3d6000fd5b505050505b8015611a9157336000908152600c602052604081208054839290611a8b908490614204565b90915550505b604080518381526020810183905233917f26981b9aefbb0f732b0264bd34c255e831001eb50b06bc85b32cc39e14389721910160405180910390a29250929050565b600082815260208190526040902060010154611aee81612547565b610bf08383612551565b3360008181526003602090815260408083206001600160a01b038716845290915290819020805460ff1916841515179055517fdcf2bd5a4c47afeb1792d170f6f5e6e528e30c6b546fffe62b697a11f8953b2b91610a3891819086908690614217565b611b63613df3565b6001600160a01b038216600090815260086020908152604091829020825160608101845290546001600160401b038082168352600160401b82041692820192909252600160801b9091046001600160801b0316918101919091526108a49061315b565b611bce612602565b80518214611bef576040516338f30c4b60e11b815260040160405180910390fd5b6000611bf96120b4565b60408051606080820183526009546001600160801b03811683526001600160401b03600160801b8083048216602080870191909152600160c01b909304821685870152855193840186526013548083168552600160401b810483169385019390935290910416928101929092529192506000611c73610c78565b9050611c7d613e13565b848152600a5460208201526009546001600160801b031660a0820152601354611cb7908390600160401b90046001600160401b0316613103565b60c08201526013546001600160401b031660e08201526020810151600090611ce090879061279f565b905060005b88811015611f095760008a8a83818110611d0157611d016142bc565b9050602002016020810190611d169190613fb1565b90506001600160a01b0381161580611d475750888281518110611d3b57611d3b6142bc565b60200260200101516000145b611f00576001600160a01b0381166000908152600d60209081526040808320815180830190925280548252600101549181018290529190611d8a90849087613192565b90506000611daa83602001518784604001516001600160801b0316612f37565b9050871580611dd15750611dd18184600001518a8d602001516001600160401b0316612f57565b15611def5760405163f87e38e960e01b815260040160405180910390fd5b6000806000611e18611e0587600001518d613103565b8e602001516001600160401b03166126a8565b905080611e328d604001516001600160401b031686613103565b611e3c91906142a9565b9150506000611e658d602001516001600160401b03168d602001516001600160401b0316613103565b90506000611e7b670de0b6b3a7640000836126a8565b611e968e604001516001600160401b03168d60e00151613103565b611ea091906142a9565b9050611eac83826126a8565b9350505050611ee78d8781518110611ec657611ec66142bc565b6020026020010151611edc838b60e001516126a8565b808218908211021890565b610100890152611ef9888585886131d1565b9750505050505b50600101611ce5565b50611f518260000151611f3284606001518560e00151670de0b6b3a76400006118ae91906142a9565b8460800151611f419190614204565b846020015186896040015161340b565b506020820151600a556060820151604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ac2ce9bc91611fae913391309190600401614269565b600060405180830381600087803b158015611fc857600080fd5b505af1158015611fdc573d6000803e3d6000fd5b505050604080840151336000908152600c60205291822080549193509190612005908490614204565b9091555050610120820151156120a957610120820151604051630bd0dedd60e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632f437b74906024016020604051808303816000875af1158015612083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a791906141d5565b505b505050505050505050565b6120bc613e6c565b506040805160a081018252600554600781810b83526001600160401b03600160401b830481166020850152600160801b9092049091169282019290925260065460608201529054608082015290565b612113612602565b7ff96f3d6876b63665360200e15ed8964960110cbbd99e917fb50ad1e576f538ac61213d81612547565b6000828152600e60205260409020805460ff1916905561215e600f8361232e565b60405182907f343776161924dfe02a29fdf57e6087e2d25ca11fe703785a80632e9ab88c88a190600090a25050565b6000612197612602565b336000908152600c6020526040812080548492906121b69084906142a9565b909155506121e69050827f0000000000000000000000000000000000000000000000000000000000000000613103565b90506108a46001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848361343e565b61222682826113b8565b610c74576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561225c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516005805460208401516040808601516001600160401b03908116600160801b0267ffffffffffffffff60801b19938216600160401b026001600160801b03199095169190961617929092171692909217905560608201516006556080820151600755517f9334cbdde649ebcbf798eaa08c381dc574197dc53947470a9be908dbcccc330190600090a150565b60008181526020838152604091829020825180840190935280548352600101549082015261235c838361346e565b6123795760405163564e265760e11b815260040160405180910390fd5b60208082018051835160009081529590925260408086206001908101939093559251905185528285205591835282208281550155565b6123b7613e6c565b6123bf613df3565b60006123c96120b4565b92506123d48a611b5b565b915060006123e2848a61279f565b90506123ef83828c612a51565b6001600160801b031660408401526001600160401b0316825261242e6000881261241a576000612423565b6124238861428d565b8a84604001516134dc565b6001600160801b03166040840152905060006124508b85858c8e8d888c613527565b909450905061246b84826124648c8c612fbf565b8a8a61340b565b50509750975097945050505050565b612484838361346e565b156124a257604051631e2bbc4f60e11b815260040160405180910390fd5b80158015906124b857506124b6838261346e565b155b156124d65760405163564e265760e11b815260040160405180910390fd5b6000818152602084905260409020805490839055811580156125075750600082815260208590526040902060010154155b156125215760008281526020859052604090206001018390555b600081815260209490945260408085206001908101859055938552909320928355910155565b61090181336135b5565b61255b82826113b8565b15610c74576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6125be61360e565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516125f89190613fcc565b60405180910390a1565b60015460ff16156126485760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610c61565b565b6126a2846323b872dd60e01b85858560405160240161266b93929190614269565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613657565b50505050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a7640000021582026126e55763bcbede656000526004601cfd5b50670de0b6b3a7640000919091020490565b60008160070b1380156127155750670de0b6b3a7640000600782900b125b8061272b5750670de0b6b8c1e505ce600782900b135b156127495760405163947800ab60e01b815260040160405180910390fd5b6005805467ffffffffffffffff19166001600160401b038316179055604051600782900b81527fcb1621676ff5c8c9deff7ffc0af9b2c296851bc5b191381ac07d97e82ec03fe69060200160405180910390a150565b6000806000846000015160070b12156128a4576001600160401b037f000000000000000000000000000000000000000000000000000000000000000081811691604082901c1690670de0b6b3a764000064ffffffffff608083901c811682019260a881901c821683019260d09190911c90911601600061281f8a8a61302e565b90508481111561282c5750835b8581116128605761284f61284961284386856142a9565b886126a8565b82613103565b6128599085614204565b9650612899565b61288c61288261287084866142a9565b6118bd89670de0b6b3a76400006142a9565b6118ae88846142a9565b6128969083614204565b96505b5050505050506128a8565b5082515b6118c7848261372c565b6128ba613e6c565b6000806128c78988612fbf565b60608c0151909150871515806128ef5750856001600160401b0316876001600160401b031614155b1561293a5761290b866001600160401b03166118ae8b8b612fbf565b61291e886001600160401b03168b613103565b8d6060015161292d91906142a9565b6129379190614204565b90505b60008a1561297f5761297a6129746129568f606001518e6126a8565b8f604001518f61296691906142d2565b6001600160401b0316613103565b84613103565b612982565b60005b90506000866001600160801b0316828f608001516129a09190614204565b6129aa91906142a9565b90506040518060a001604052808f6000015160070b8152602001426001600160401b031681526020018e6001600160401b03168152602001848152602001828152509550505089600014612a3d57612a38612a32612a0c8e606001518d6126a8565b612a1e90670de0b6b3a76400006142a9565b8e60400151876040015161296691906142d2565b8b613103565b612a40565b60005b925050509850989650505050505050565b6000612a7d612a7785602001516001600160401b031686600001518661296691906142d2565b83613103565b84604001516118c791906142f2565b612a9461376a565b42600255565b6000806000612aa76120b4565b604080516060810182526009546001600160801b03811682526001600160401b03600160801b820481166020840152600160c01b90910416918101919091529091506000612af3610c78565b9050612afd613e13565b838152600a546020820181905283516001600160801b031660a0830152670de0b6b3a764000060e0830152600090612b3690869061279f565b600080516020614498833981519152546000818152601060209081526040808320838052909152902054919250905b8984606001511015612cba57811580612b7d57508a82115b612cba576000828152600e602052604090205460ff161580612b9d575080155b15612bd157506000908152600f60209081526040808320600101548084526010835281842084805290925290912054612b65565b6000828152601060209081526040808320848452909152902054818103612bf85750612cba565b6001600160a01b0382166000908152600d602090815260408083208151808301909252805482526001015491810182905284929091612c3990849089613192565b9050612c458987613103565b60c08901526060880151612c59908f6142a9565b610100890152602082015181516040830151612c9a92612c839290916001600160801b0316612f37565b835160208d01518c906001600160401b0316612f57565b15612cae57612cab888383866131d1565b97505b83945050505050612b65565b612cd7846000015185608001518660200151888a6040015161340b565b506020840151600a5560608401518a14612d0457604051633e6c5e0f60e01b815260040160405180910390fd5b8360600151846040015198509850505050505050509250929050565b600080612d2e858585612f37565b90508015801590612e125750866001600160401b0316612e107f0000000000000000000000000000000000000000000000000000000000000000887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401612db59190613fcc565b602060405180830381865afa158015612dd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612df691906141d5565b612e009190614312565b612e0a919061433f565b836126a8565b105b15612e21576001915050612e27565b60009150505b95945050505050565b60408051808201909152600080825260208201528551612e509085612fbf565b86526020860151612e619084612fbf565b6020870181905215801590612e9a57506009546020870151865160408801516001600160801b0393841693612e9893929116612f37565b105b15612eb857604051634b2c23a160e11b815260040160405180910390fd5b6001600160a01b0387166000818152600d6020908152604090912088518155908801516001909101557f71671d6112ff9270f1553ebc8fbf767a3221090f1002c7047475b6fa8f5801cd8585612f0e8682612fbf565b6040805193845260208401929092529082015260600160405180910390a2509395945050505050565b600081612f4d85856001600160401b0316613103565b6118c791906142a9565b60008482612f658587614312565b612f6f919061433f565b101595945050505050565b808203600082138015612f8c57508281115b80612fa15750600082128015612fa157508281105b156108a45760405163e942b9ed60e01b815260040160405180910390fd5b818101600082138015612fd157508281105b80612fe65750600082128015612fe657508281115b156108a4576040516354012a2960e11b815260040160405180910390fd5b6000670de0b6b3a764000061301984846137a5565b8161302657613026614329565b059392505050565b6000806130448385604001518660800151612f37565b905080156130f9576130f481600b547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c3536e7306040518263ffffffff1660e01b815260040161309f9190613fcc565b602060405180830381865afa1580156130bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130e091906141d5565b6130ea9085614204565b6118bd91906142a9565b6118c7565b6000949350505050565b6000816000190483118202156131215763c4c5d7f56000526004601cfd5b50670de0b6b3a764000091020490565b6000600160401b8210613157576040516302217c1560e11b815260040160405180910390fd5b5090565b613163613df3565b81516001600160401b031660000361315757600060208301819052670de0b6b3a7640000835260408301525090565b61319a613df3565b6131a384611b5b565b90506131b0818385612a51565b6001600160801b031660408201526001600160401b03909116815292915050565b6131d9613e13565b6000806000806000613201896020015189600001518a604001516001600160801b0316612f37565b905060006132188b61010001518c60e00151613103565b905061327e8183118015613238575060a08c015161323683856142a9565b105b61324f5761324a838d60e001516126a8565b61326c565b61326c8c60a001518461326291906142a9565b8d60e001516126a8565b611edc8c600001518e60c001516137ee565b6101008c01519091508181118183180218955060006132a1878d60e00151613103565b90506132b281848c604001516134dc565b6001600160801b0390811660408d01528b519195506132d49183918716613824565b94506132e4878d60c001516126a8565b8b519096508611156132f5578a5195505b8a51861480156133085750848b60200151115b156133345761331781846142a9565b8c610120018181516133299190614204565b90525060208b015194505b505050600089602001519050600061336c888c600001518b858e6020015161335b8a613860565b6133649061428d565b896000613527565b908c5290506133a1888b8b61338089613860565b6133899061428d565b61339289613860565b61339b9061428d565b87612e30565b50838b6020018181516133b491906142a9565b90525060408b0180518691906133cb908390614204565b90525060608b0180518791906133e2908390614204565b90525060808b0180518291906133f9908390614204565b905250999a9950505050505050505050565b600061342282848689604001518a60800151613886565b61342b866122a0565b613434856138b8565b9695505050505050565b6040516001600160a01b038316602482015260448101829052610bf090849063a9059cbb60e01b9060640161266b565b6000816000036134915760405163ee7efd5760e01b815260040160405180910390fd5b6000828152602084905260409020541515806134bd575060008281526020849052604090206001015415155b8061191657505060008080526020929092526040909120600101541490565b60008184158015906134ed57508315155b1561351f57836135066001600160801b03851687614312565b613510919061433f565b915061351c8282614361565b90505b935093915050565b61352f613e6c565b60208781015160008b815260119092526040822054613573908c906135548a8a612fbf565b6001600160401b03881615613569578761390b565b8c6020015161390b565b6001600160401b031660208a015261358b8b8a613951565b6135a38a8a600001518a8a8a868f602001518c6128b2565b909c909b509950505050505050505050565b6135bf82826113b8565b610c74576135cc81613a00565b6135d7836020613a12565b6040516020016135e89291906143a5565b60408051601f198184030181529082905262461bcd60e51b8252610c6191600401614414565b60015460ff166126485760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610c61565b60006136ac826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613bad9092919063ffffffff16565b90508051600014806136cd5750808060200190518101906136cd9190614447565b610bf05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c61565b600061191683604001516001600160401b03166118ae846001600160401b031686602001516001600160401b03164203670de0b6b3a7640000613bbc565b613772612602565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336125eb565b81810260008312806137d0575081158015906137d05750828282816137cc576137cc614329565b0514155b156108a457604051631eed389360e01b815260040160405180910390fd5b60008160001904831182021561380c5763c4c5d7f56000526004601cfd5b50670de0b6b3a7640000910281810615159190040190565b60006138426138338386614204565b846001600160401b03166126a8565b905083613850828585612f37565b1015611916576001019392505050565b6000600160ff1b821061315757604051632db27c5360e01b815260040160405180910390fd5b6138938585858585612d20565b156138b157604051632ce9f52360e01b815260040160405180910390fd5b5050505050565b60006138c2612602565b6138ec827f0000000000000000000000000000000000000000000000000000000000000000613103565b600b60008282546138fd9190614204565b92505081905590505b919050565b80831580159061391c575082601254115b156118c7576000848152601060205260409020613939908661232e565b50505060009182525060116020526040812081905590565b6001600160a01b0382166000818152600860209081526040918290208451815486840151878601516001600160801b03908116600160801b81026001600160401b03938416600160401b81026001600160801b031990961694909616938417949094179190911692909217909355845192835292820192909252918201527f491dea4b757c9c18e4b668fc545a09f969bd7a6ca7c9f79bb5f53a1e996aeac89060600160405180910390a25050565b60606108a46001600160a01b03831660145b60606000613a21836002614312565b613a2c906002614204565b6001600160401b03811115613a4357613a436140a6565b6040519080825280601f01601f191660200182016040528015613a6d576020820181803683370190505b509050600360fc1b81600081518110613a8857613a886142bc565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613ab757613ab76142bc565b60200101906001600160f81b031916908160001a9053506000613adb846002614312565b613ae6906001614204565b90505b6001811115613b5e576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613b1a57613b1a6142bc565b1a60f81b828281518110613b3057613b306142bc565b60200101906001600160f81b031916908160001a90535060049490941c93613b5781614464565b9050613ae9565b5083156119165760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610c61565b60606118c78484600085613c7a565b6000828015613c6e57848015613c6357600185168015613bde57869350613be2565b8493505b50600284046002860495505b8515613c5d578687028760801c15613c0557600080fd5b81810181811015613c1557600080fd5b8690049750506001861615613c52578684028488820414158815151615613c3b57600080fd5b81810181811015613c4b57600080fd5b8690049450505b600286049550613bee565b50613c68565b600092505b50613c72565b8291505b509392505050565b606082471015613cdb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610c61565b600080866001600160a01b03168587604051613cf7919061447b565b60006040518083038185875af1925050503d8060008114613d34576040519150601f19603f3d011682016040523d82523d6000602084013e613d39565b606091505b5091509150613d4a87838387613d55565b979650505050505050565b60608315613dc4578251600003613dbd576001600160a01b0385163b613dbd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c61565b50816118c7565b6118c78383815115613dd95781518083602001fd5b8060405162461bcd60e51b8152600401610c619190614414565b604080516060810182526000808252602082018190529181019190915290565b604051806101400160405280613e27613e6c565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b600060208284031215613eac57600080fd5b81356001600160e01b03198116811461191657600080fd5b600060208284031215613ed657600080fd5b5035919050565b80356001600160a01b038116811461390657600080fd5b801515811461090157600080fd5b60008060408385031215613f1557600080fd5b613f1e83613edd565b91506020830135613f2e81613ef4565b809150509250929050565b60008060408385031215613f4c57600080fd5b50508035926020909101359150565b60008060408385031215613f6e57600080fd5b82359150613f7e60208401613edd565b90509250929050565b60008060408385031215613f9a57600080fd5b613fa383613edd565b946020939093013593505050565b600060208284031215613fc357600080fd5b61191682613edd565b6001600160a01b0391909116815260200190565b600080600060608486031215613ff557600080fd5b613ffe84613edd565b925061400c60208501613edd565b9150604084013561401c81613ef4565b809150509250925092565b600080600080600060a0868803121561403f57600080fd5b61404886613edd565b945061405660208701613edd565b935061406460408701613edd565b94979396509394606081013594506080013592915050565b6000806040838503121561408f57600080fd5b61409883613edd565b9150613f7e60208401613edd565b634e487b7160e01b600052604160045260246000fd5b6000806000604084860312156140d157600080fd5b83356001600160401b03808211156140e857600080fd5b818601915086601f8301126140fc57600080fd5b81358181111561410b57600080fd5b602088818360051b860101111561412157600080fd5b80840196508195508088013593508284111561413c57600080fd5b838801935088601f85011261415057600080fd5b8335915082821115614164576141646140a6565b8160051b604051601f19603f83011681018181108682111715614189576141896140a6565b60405292835281830193508481018201928a8411156141a757600080fd5b948201945b838610156141c5578535855294820194938201936141ac565b8096505050505050509250925092565b6000602082840312156141e757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156108a4576108a46141ee565b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b8082018281126000831280158216821582161715614261576142616141ee565b505092915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000600160ff1b82016142a2576142a26141ee565b5060000390565b818103818111156108a4576108a46141ee565b634e487b7160e01b600052603260045260246000fd5b6001600160401b03828116828216039080821115610bc457610bc46141ee565b6001600160801b03818116838216019080821115610bc457610bc46141ee565b80820281158282048414176108a4576108a46141ee565b634e487b7160e01b600052601260045260246000fd5b60008261435c57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160801b03828116828216039080821115610bc457610bc46141ee565b60005b8381101561439c578181015183820152602001614384565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516143d7816017850160208801614381565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351614408816028840160208801614381565b01602801949350505050565b6020815260008251806020840152614433816040850160208701614381565b601f01601f19169190910160400192915050565b60006020828403121561445957600080fd5b815161191681613ef4565b600081614473576144736141ee565b506000190190565b6000825161448d818460208701614381565b919091019291505056fef4803e074bd026baaf6ed2e288c9515f68c72fb7216eebdd7cae1718a53ec376a2646970667358221220a6ff50e4219136875f287408e49cc60e6eb077d67124da88d8500764d781431264736f6c63430008130033",
    "sourceMap": "672:8780:90:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:31;;;;;;:::i;:::-;;:::i;:::-;;;470:14:188;;463:22;445:41;;433:2;418:18;2732:202:31;;;;;;;;9329:405:88;;;:::i;:::-;;1713:42:90;;;;;-1:-1:-1;;;;;1713:42:90;;;;-1:-1:-1;;;1713:42:90;;;;;-1:-1:-1;;;1713:42:90;;;;;;;;;;-1:-1:-1;;;;;748:15:188;;;730:34;;800:15;;;795:2;780:18;;773:43;852:15;;832:18;;;825:43;;;;681:2;666:18;1713:42:90;497:377:188;35440:696:88;;;:::i;4504:129:31:-;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;;;;1210:25:188;;;1198:2;1183:18;4504:129:31;1064:177:188;2861:194:180;;;;;;:::i;:::-;;:::i;34095:1263:88:-;;;;;;:::i;:::-;;:::i;30582:330::-;;;;;;:::i;:::-;;:::i;585:23:179:-;;;;;;4929:145:31;;;;;;:::i;:::-;;:::i;3393:35:88:-;;;;;6038:214:31;;;;;;:::i;:::-;;:::i;17877:97:88:-;;;:::i;1173:99:179:-;;;:::i;32092:1248:88:-;;;;;;:::i;:::-;;:::i;12298:250::-;;;;;;:::i;:::-;;:::i;29953:344::-;;;;;;:::i;:::-;;:::i;:::-;;;;3173:25:188;;;3241:14;;3234:22;3229:2;3214:18;;3207:50;3146:18;29953:344:88;3005:258:188;6027:51:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3633:25:188;;;3689:2;3674:18;;3667:34;;;;3606:18;6027:51:88;3459:248:188;1615:84:47;1685:7;;;;1615:84;;6173:72:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3179:1188:90;;;;;;:::i;:::-;;:::i;5434:30:88:-;;;;;-1:-1:-1;;;;;5434:30:88;;;-1:-1:-1;;;;;;;;5434:30:88;;;;;-1:-1:-1;;;5434:30:88;;;;;;;;;-1:-1:-1;;;;;4181:32:188;;;4163:51;;-1:-1:-1;;;;;4287:15:188;;;4282:2;4267:18;;4260:43;4339:15;;4319:18;;;4312:43;4151:2;4136:18;5434:30:88;3965:396:188;3137:31:88;;;;;;;;;;;;:::i;16557:724::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4809:31:188;;;4791:50;;4872:2;4857:18;;4850:34;;;;4900:18;;;4893:34;4779:2;4764:18;16557:724:88;4591:342:188;2268::180;;;;;;:::i;:::-;;:::i;5569:30:88:-;;;;;;998:73:179;;;:::i;46234:294:88:-;;;;;;:::i;:::-;;:::i;3021:145:31:-;;;;;;:::i;:::-;;:::i;11412:320:88:-;;;:::i;2153:49:31:-;;2198:4;2153:49;;6659:69:88;;;;;;:::i;:::-;;;;;;;;;;;;;;3502:36;;;;;5800:53;;;;;;:::i;:::-;;;;;;;;;;;;;;5673:31;;;;;;26100:3390;;;;;;:::i;:::-;;:::i;31110:330::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5969:31:188;;;5951:50;;5939:2;5924:18;31110:330:88;5807:200:188;3297:149:180;;;;;;:::i;:::-;;:::i;17345:209:88:-;;;:::i;46873:633::-;;;;;;:::i;:::-;;:::i;5354:147:31:-;;;;;;:::i;:::-;;:::i;1776:200:180:-;;;;;;:::i;:::-;;:::i;3632:148:96:-;;;;;;:::i;:::-;;:::i;:::-;;;;6542:13:188;;-1:-1:-1;;;;;6538:22:188;;;6520:41;;6621:4;6609:17;;;6603:24;6599:33;;;6577:20;;;6570:63;6681:17;;;6675:24;-1:-1:-1;;;;;6671:50:188;6649:20;;;6642:80;6471:2;6456:18;3632:148:96;6277:451:188;6798:30:88;;;;;;5449:4001:90;;;;;;:::i;:::-;;:::i;3059:25:88:-;;;;;3361:97:96;;;:::i;:::-;;;;;;8829:4:188;8871:3;8860:9;8856:19;8848:27;;8922:6;8916:13;8913:1;8902:28;8891:9;8884:47;8978:4;8970:6;8966:17;8960:24;-1:-1:-1;;;;;9077:2:188;9063:12;9059:21;9052:4;9041:9;9037:20;9030:51;9149:2;9141:4;9133:6;9129:17;9123:24;9119:33;9112:4;9101:9;9097:20;9090:63;;;9209:4;9201:6;9197:17;9191:24;9184:4;9173:9;9169:20;9162:54;9272:4;9264:6;9260:17;9254:24;9247:4;9236:9;9232:20;9225:54;8681:604;;;;;3221:31:88;;;;;33512:268;;;;;;:::i;:::-;;:::i;12837:235::-;;;;;;:::i;:::-;;:::i;3291:29::-;;;;;2732:202:31;2817:4;-1:-1:-1;;;;;;2840:47:31;;-1:-1:-1;;;2840:47:31;;:87;;-1:-1:-1;;;;;;;;;;937:40:73;;;2891:36:31;2833:94;2732:202;-1:-1:-1;;2732:202:31:o;9329:405:88:-;9371:26;9400:14;:12;:14::i;:::-;9371:43;;9428:9;:21;;;-1:-1:-1;;;;;9428:26:88;9453:1;9428:26;9424:40;;9456:8;;;9424:40;9512:42;2198:4:31;9543:10:88;9512;:42::i;:::-;-1:-1:-1;;;;;9628:15:88;9597:47;:21;;;:47;368:4:178;9654:25:88;;;:39;9703:24;9597:9;9703:13;:24::i;:::-;9361:373;9329:405::o;35440:696::-;35528:10;35485:20;35569:25;;;:11;:25;;;;;;;35608:14;;;35604:78;;35631:51;;-1:-1:-1;;;35631:51:88;;;;;;;;;;;35604:78;35692:27;;;;:16;:27;;;;;:48;;35727:12;35692:34;:48::i;:::-;35757:25;;;;:11;:25;;;;;;;;35750:32;;;35876:10;35900:21;;;:9;:21;;;;;:32;;;35946:15;;35839:235;;35990:11;:9;:11::i;:::-;36015;:34;-1:-1:-1;;;36015:34:88;;-1:-1:-1;;;;;36015:34:88;;35839:23;:235::i;:::-;-1:-1:-1;;36090:39:88;;36118:10;;-1:-1:-1;36107:9:88;;36090:39;;;;;35475:661;;35440:696::o;2861:194:180:-;2956:10;2939:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2939:35:180;;;;;;;;;;;;:47;;-1:-1:-1;;2939:47:180;;;;;;;;;;3001;;9973:34:188;;;10023:18;;;10016:43;;;;10075:18;;;10068:50;3001:47:180;;9923:2:188;9908:18;3001:47:180;;;;;;;;2861:194;;:::o;34095:1263:88:-;34167:37;;;;:21;:37;;;;;;;;34162:115;;34225:52;;-1:-1:-1;;;34225:52:88;;;;;;;;;;;34162:115;34327:10;34296:18;34317:21;;;:9;:21;;;;;:32;;;34363:15;;:28;-1:-1:-1;34359:97:88;;;34412:44;;-1:-1:-1;;;34412:44:88;;;;;;;;;;;34359:97;34518:10;34475:20;34543:25;;;:11;:25;;;;;;:30;34539:107;;34594:52;;-1:-1:-1;;;34594:52:88;;;;;;;;;;;34539:107;34746:25;;;;:11;:25;;;;;;;;:42;;;34929:32;;;:16;:32;;;;;;1276:13:177;;;;;;;;;:18;;;34875:32:88;;;;;;;:97;;34746:25;;34875:39;:97::i;:::-;35030:261;35067:10;35091;35115:15;;35144:1;35159:11;:9;:11::i;:::-;35184;:34;-1:-1:-1;;;35184:34:88;;-1:-1:-1;;;;;35184:34:88;35232:49;35266:14;35232:33;:49::i;:::-;35030:23;:261::i;:::-;-1:-1:-1;;35307:44:88;;35340:10;;-1:-1:-1;35324:14:88;;35307:44;;;;;34152:1206;;34095:1263;:::o;30582:330::-;30662:20;30709:27;;;:16;:27;;;;;;;;1539:13:177;;;;;;;;:18;;30756:150:88;30777:5;30772:1;:10;30756:150;;30815:27;;;;:16;:27;;;;;;;;2335:14:177;;;;;;;;:19;30800:64:88;-1:-1:-1;30890:3:88;;30756:150;;;;30582:330;;;;:::o;4929:145:31:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:31;;719:10:66;6133:23:31;6125:83;;;;-1:-1:-1;;;6125:83:31;;10331:2:188;6125:83:31;;;10313:21:188;10370:2;10350:18;;;10343:30;10409:34;10389:18;;;10382:62;-1:-1:-1;;;10460:18:188;;;10453:45;10515:19;;6125:83:31;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;17877:97:88:-;17940:27;;-1:-1:-1;;;17940:27:88;;17914:7;;-1:-1:-1;;;;;17940:6:88;:11;;;;:27;;17960:5;;17940:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17933:34;;17877:97;:::o;1173:99:179:-;313:24;2631:16:31;2642:4;2631:10;:16::i;:::-;1233:10:179::1;:8;:10::i;:::-;-1:-1:-1::0;1264:1:179::1;1253:8;:12:::0;1173:99::o;32092:1248:88:-;1239:19:47;:17;:19::i;:::-;1075:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;32275:9:88::2;32258:14;:26;:56;;;;32300:14;32288:9;:26;32258:56;32254:135;;;32335:54;;-1:-1:-1::0;;;32335:54:88::2;;;;;;;;;;;32254:135;32439:28;1276:13:177::0;;32470:16:88::2;1276:13:177::0;;-1:-1:-1;;;;;;;;;;;1276:18:177;32593:25:88;;:52;::::2;;;-1:-1:-1::0;32622:23:88;;::::2;32593:52;32592:317;;;-1:-1:-1::0;32766:23:88;;;::::2;::::0;:129:::2;;;32828:18;32811:14;:35;32810:84;;;;32875:18;32852:20;:41;32810:84;32592:498;;;-1:-1:-1::0;2309:7:177;2335:14;;;33046:16:88::2;2335:14:177::0;;;;;:19;33029:14:88::2;:61;32592:498;32506:653;;;33108:51;;-1:-1:-1::0;;;33108:51:88::2;;;;;;;;;;;32506:653;33170:59;:16;33194:14:::0;33210:18;33170:23:::2;:59::i;:::-;33239:37;::::0;;;:21:::2;:37;::::0;;;;;:44;;-1:-1:-1;;33239:44:88::2;33279:4;33239:44;::::0;;33299:33;33261:14;;33299:33:::2;::::0;::::2;32244:1096;1268:1:47::1;32092:1248:88::0;;:::o;12298:250::-;12375:18;1239:19:47;:17;:19::i;:::-;12405:57:88::1;-1:-1:-1::0;;;;;12405:5:88::1;:22;12428:10;12448:4;12455:6:::0;12405:22:::1;:57::i;:::-;12485:24;12490:6;12498:10;12485:4;:24::i;:::-;-1:-1:-1::0;;;;;12519:8:88;::::1;;::::0;;;:4:::1;:8;::::0;;;;:22;;12472:37;;-1:-1:-1;12472:37:88;;12519:8;;;:22:::1;::::0;12472:37;;12519:22:::1;:::i;:::-;::::0;;;-1:-1:-1;12298:250:88;;;-1:-1:-1;;;12298:250:88:o;29953:344::-;30013:17;1276:13:177;;;30069:16:88;1276:13:177;;-1:-1:-1;;;;;;;;;;;1276:18:177;;30013:17:88;30105:133;30126:5;30121:1;:10;30105:133;;1908:7:177;1934:14;;;30161:16:88;1934:14:177;;;;;:19;;;30149:47:88;-1:-1:-1;30222:3:88;;30105:133;;;-1:-1:-1;;30258:32:88;;;;:21;:32;;;;;;30280:9;;30258:32;;;;;-1:-1:-1;29953:344:88:o;3179:1188:90:-;1239:19:47;:17;:19::i;:::-;1006:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;3299:9:90::2;-1:-1:-1::0;;;3299:24:90;3295:1021:::2;;3325:11;:37:::0;;-1:-1:-1;;;;;;3325:37:90::2;-1:-1:-1::0;;;;;3325:37:90;::::2;;::::0;;3295:1021:::2;;;3381:9;-1:-1:-1::0;;;3381:31:90;3377:939:::2;;3414:11;:43:::0;;-1:-1:-1;;;;3414:43:90::2;-1:-1:-1::0;;;;;;;;3414:43:90;::::2;;;::::0;;3377:939:::2;;;3476:9;-1:-1:-1::0;;;3476:37:90;3472:844:::2;;3515:11;:49:::0;;-1:-1:-1;;;;;3515:49:90::2;-1:-1:-1::0;;;;;;;;3515:49:90;::::2;;;::::0;;3472:844:::2;;;3583:9;-1:-1:-1::0;;;3583:30:90;3579:737:::2;;3615:15;:22:::0;;;3579:737:::2;;;3838:9;-1:-1:-1::0;;;3838:23:90;3834:482:::2;;3863:68;-1:-1:-1::0;;3877:4:90::2;:25;3876:54;;3924:4;3863:12;:68::i;3876:54::-;-1:-1:-1::0;;3863:12:90::2;:68::i;:::-;3834:482;;;3950:9;-1:-1:-1::0;;;3950:33:90;3946:370:::2;;3985:17;:51:::0;;-1:-1:-1;;3985:51:90::2;-1:-1:-1::0;;;;;3985:51:90;::::2;;::::0;;3946:370:::2;;;4055:9;-1:-1:-1::0;;;4055:34:90;4051:265:::2;;4091:17;:52:::0;;-1:-1:-1;;;;4091:52:90::2;-1:-1:-1::0;;;;;;;;4091:52:90;::::2;;;::::0;;4051:265:::2;;;4162:9;-1:-1:-1::0;;;4162:33:90;4158:158:::2;;4197:17;:51:::0;;-1:-1:-1;;;;4197:51:90::2;-1:-1:-1::0;;;;;;;;4197:51:90;::::2;;;::::0;;4158:158:::2;;;4270:46;;-1:-1:-1::0;;;4270:46:90::2;;;;;;;;;;;4158:158;4344:9;4331:29;4355:4;4331:29;;;;1210:25:188::0;;1198:2;1183:18;;1064:177;4331:29:90::2;;;;;;;;1268:1:47::1;3179:1188:90::0;;:::o;16557:724:88:-;16634:22;16658:21;16681:27;16725:26;16754:14;:12;:14::i;:::-;16805:15;;16725:43;;-1:-1:-1;16848:54:88;16725:43;16805:15;16848:25;:54::i;:::-;16830:72;;16928:80;16948:9;16959:15;16976:16;16994:1;16997;17000;17003;17006;16928:19;:80::i;:::-;-1:-1:-1;17040:29:88;;;;;-1:-1:-1;16912:96:88;-1:-1:-1;;;;;;17083:22:88;;;17079:196;;17136:128;17177:24;17192:8;17177:14;:24::i;:::-;-1:-1:-1;;;;;17220:19:88;;;;;;:9;:19;;;;;:30;;;17203:15;;17136:23;:128::i;:::-;-1:-1:-1;;;;;17120:144:88;;;17079:196;16715:566;;16557:724;;;;;:::o;2268:342:180:-;-1:-1:-1;;;;;2364:19:180;;2373:10;2364:19;;;;:59;;-1:-1:-1;;;;;;2388:23:180;;;;;;:16;:23;;;;;;;;2412:10;2388:35;;;;;;;;;;2387:36;2364:59;2360:127;;;2444:43;;-1:-1:-1;;;2444:43:180;;;;;;;;;;;2360:127;-1:-1:-1;;;;;2497:17:180;;;;;;;:10;:17;;;;;;;;:25;;;;;;;;;;;:37;;-1:-1:-1;;2497:37:180;;;;;;;2549:54;;;;;2566:10;;2497:17;;:25;;:37;;2549:54;:::i;:::-;;;;;;;;2268:342;;;:::o;998:73:179:-;313:24;2631:16:31;2642:4;2631:10;:16::i;:::-;1056:8:179::1;:6;:8::i;46234:294:88:-:0;46354:23;;46422:10;:24;46418:38;;46448:8;;;46418:38;46473:48;46483:19;46504:16;46473:9;:48::i;:::-;46466:55;;;;46234:294;;;;;:::o;3021:145:31:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:31;;;;;;;;;;;;;;;3021:145::o;11412:320:88:-;1239:19:47;:17;:19::i;:::-;11476:22:88::1;11501:27:::0;11532:22:::1;11551:1;11532:10;:22::i;:::-;11603:11;:34:::0;11475:79;;-1:-1:-1;11475:79:88;-1:-1:-1;11568:147:88::1;::::0;-1:-1:-1;;;11603:34:88;::::1;-1:-1:-1::0;;;;;11603:34:88::1;::::0;-1:-1:-1;11639:11:88::1;:9;:11::i;:::-;11652:15;;11669;11686:19;11568:21;:147::i;:::-;11564:161;;;11717:8;:6;:8::i;26100:3390::-:0;26443:1;26425:15;:19;:42;;;;26466:1;26448:15;:19;26425:42;26424:81;;;;;26473:32;26487:5;26494:10;26473:13;:32::i;:::-;26472:33;26424:81;:278;;;;26654:1;26636:15;:19;:65;;;;;26660:41;26674:14;26690:10;26660:13;:41::i;:::-;26659:42;26636:65;26424:454;;;;26836:1;26818:15;:19;:59;;;;;26842:35;26856:8;26866:10;26842:13;:35::i;:::-;26841:36;26818:59;26303:641;;;26896:48;;-1:-1:-1;;;26896:48:88;;;;;;;;;;;26303:641;-1:-1:-1;;;;;26982:16:88;;26955:24;26982:16;;;:9;:16;;;;;;;;26955:43;;;;;;;;;;;;;;;;;;;;27008:45;;;;;;;27042:11;27008:45;-1:-1:-1;;;;;27008:45:88;;;;-1:-1:-1;;;;;;;;27008:45:88;;;;;;;;;;;-1:-1:-1;;;27008:45:88;;;;;;;;;;;;27090:15;;26955:43;;27136:11;:9;:11::i;:::-;27115:32;;27267:26;27295:30;27327:21;27352:232;27389:5;27408:8;:19;;;27441:16;27471:15;27500:10;27524:12;:35;;;27573:1;27352:23;:232::i;:::-;27266:318;;;;;;27649:97;27665:5;27672:8;27682:11;27695:15;27712;27729:16;27649:15;:97::i;:::-;27638:108;;27860:1;27842:15;:19;:42;;;;27883:1;27865:15;:19;27842:42;27841:308;;;;;27890:259;27925:98;27939:8;:19;;;27960:11;:35;;;27997:11;:25;;;-1:-1:-1;;;;;27925:98:88;:13;:98::i;:::-;28041:19;;28106:29;;;;28078:10;;-1:-1:-1;;;;;27890:259:88;:17;:259::i;:::-;27889:260;27841:308;27824:386;;;28167:43;;-1:-1:-1;;;28167:43:88;;;;;;;;;;;27824:386;-1:-1:-1;;;;;28312:20:88;;;;;;:4;:20;;;;;;28308:42;;28334:15;28308:3;:42::i;:::-;-1:-1:-1;;;;;28285:20:88;;;;;;:4;:20;;;;;:65;28379:38;28383:16;28401:15;28379:3;:38::i;:::-;28360:57;;28446:16;28428:15;:34;;;;28642:16;28727:13;-1:-1:-1;;;;;28719:22:88;28661:48;28666:9;:25;;;-1:-1:-1;;;;;28661:48:88;28693:15;28661:4;:48::i;:::-;:81;;;;:::i;:::-;28642:100;;28768:1;28756:9;:13;28752:219;;;28785:62;;-1:-1:-1;;;28785:62:88;;-1:-1:-1;;;;;28785:3:88;:17;;;;:62;;28811:4;;28818:8;;28836:9;;28785:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28752:219;;;28880:1;28868:9;:13;28864:107;;;-1:-1:-1;;;;;28897:3:88;:17;;28915:8;28933:4;28948:10;28949:9;28948:10;:::i;:::-;28897:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28864:107;29041:1;29023:15;:19;29020:357;;;29058:24;29085:55;29112:9;29123:16;29085:26;:55::i;:::-;29058:82;-1:-1:-1;;;;;;29191:17:88;29212:2;29191:23;29154:61;29232:38;;;29229:138;;;29297:55;;-1:-1:-1;;;29297:55:88;;;;;;;;;;;29229:138;29044:333;;29020:357;29440:8;-1:-1:-1;;;;;29393:90:88;29424:14;-1:-1:-1;;;;;29393:90:88;29417:5;-1:-1:-1;;;;;29393:90:88;;29450:15;29467;29393:90;;;;;;3633:25:188;;;3689:2;3674:18;;3667:34;3621:2;3606:18;;3459:248;29393:90:88;;;;;;;;26293:3197;;;;;;;;26100:3390;;;;;:::o;31110:330::-;31193:6;368:4:178;31215:9:88;:15;31211:29;;;-1:-1:-1;31239:1:88;;31110:330;-1:-1:-1;31110:330:88:o;31211:29::-;31279:12;-1:-1:-1;;;;;31250:42:88;;;31346:3;31330:19;31367:66;31376:56;368:4:178;31398:33:88;31250:42;31415:15;368:4:178;31415:9:88;:15;:::i;:::-;31398:4;:33::i;:::-;31386:45;;:9;:45;:::i;:::-;31376:4;:56::i;:::-;31367:8;:66::i;:::-;31360:73;31110:330;-1:-1:-1;;;;31110:330:88:o;3297:149:180:-;3372:4;3404:6;-1:-1:-1;;;;;3395:15:180;:5;-1:-1:-1;;;;;3395:15:180;;:44;;;-1:-1:-1;;;;;;3414:17:180;;;;;;;:10;:17;;;;;;;;:25;;;;;;;;;;;;3395:44;3388:51;3297:149;-1:-1:-1;;;3297:149:180:o;17345:209:88:-;17429:16;;;17384:19;17455:20;;;17485:62;;-1:-1:-1;;;17485:62:88;;-1:-1:-1;;;;;17485:3:88;:17;;;;:62;;17511:4;;17526:6;;17429:16;;17485:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17345:209;:::o;46873:633::-;46986:23;47011:27;47091:48;47101:19;47122:16;47091:9;:48::i;:::-;47050:89;;-1:-1:-1;47050:89:88;-1:-1:-1;47209:19:88;;47205:86;;47230:61;;-1:-1:-1;;;47230:61:88;;-1:-1:-1;;;;;47230:3:88;:17;;;;:61;;47248:10;;47268:4;;47275:15;;47230:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47205:86;47305:23;;47301:68;;47335:10;47330:16;;;;:4;:16;;;;;:39;;47350:19;;47330:16;:39;;47350:19;;47330:39;:::i;:::-;;;;-1:-1:-1;;47301:68:88;47385:58;;;3633:25:188;;;3689:2;3674:18;;3667:34;;;47394:10:88;;47385:58;;3606:18:188;47385:58:88;;;;;;;46873:633;;;;;:::o;5354:147:31:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;1776:200:180:-:0;1864:10;1853:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;1853:30:180;;;;;;;;;;;:42;;-1:-1:-1;;1853:42:180;;;;;;;1910:59;;;;;1864:10;;1853:30;;:42;;1910:59;:::i;3632:148:96:-;3695:18;;:::i;:::-;-1:-1:-1;;;;;3750:22:96;;;;;;:12;:22;;;;;;;;;3732:41;;;;;;;;;-1:-1:-1;;;;;3732:41:96;;;;;-1:-1:-1;;;3732:41:96;;;;;;;;;;-1:-1:-1;;;3732:41:96;;;-1:-1:-1;;;;;3732:41:96;;;;;;;;;;:17;:41::i;5449:4001:90:-;1239:19:47;:17;:19::i;:::-;5589::90;;5572:36;::::1;5568:97;;5617:48;;-1:-1:-1::0;;;5617:48:90::1;;;;;;;;;;;5568:97;5676:26;5705:14;:12;:14::i;:::-;5729:45;::::0;;::::1;::::0;;::::1;::::0;;5763:11:::1;5729:45:::0;-1:-1:-1;;;;;5729:45:90;::::1;::::0;;-1:-1:-1;;;;;;;;5729:45:90;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;;-1:-1:-1;;;5729:45:90;;::::1;::::0;::::1;::::0;;;;5784:63;;;;::::1;::::0;;5830:17:::1;5784:63:::0;;;::::1;::::0;;-1:-1:-1;;;5784:63:90;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;;::::0;;;;;;;5676:43;;-1:-1:-1;5729:31:90::1;5878:11;:9;:11::i;:::-;5857:32;;5900:26;;:::i;:::-;5936:27:::0;;;5997:15:::1;::::0;5973:21:::1;::::0;::::1;:39:::0;6040:11:::1;:21:::0;-1:-1:-1;;;;;6040:21:90::1;6022:15;::::0;::::1;:39:::0;6111:17:::1;:37:::0;6094:55:::1;::::0;6099:10;;-1:-1:-1;;;6111:37:90;::::1;-1:-1:-1::0;;;;;6111:37:90::1;6094:4;:55::i;:::-;6071:20;::::0;::::1;:78:::0;6185:17:::1;:36:::0;-1:-1:-1;;;;;6185:36:90::1;6159:23;::::0;::::1;:62:::0;6294:21:::1;::::0;::::1;::::0;6185:36:::1;::::0;6257:59:::1;::::0;6283:9;;6257:25:::1;:59::i;:::-;6232:84;;6332:9;6327:2047;6343:17:::0;;::::1;6327:2047;;;6378:13;6394:6;;6401:1;6394:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6378:25:::0;-1:-1:-1;;;;;;6423:19:90;::::1;::::0;;:43:::1;;;6446:12;6459:1;6446:15;;;;;;;;:::i;:::-;;;;;;;6465:1;6446:20;6423:43;6417:1915;;-1:-1:-1::0;;;;;6514:16:90;::::1;6487:24;6514:16:::0;;;:9:::1;:16;::::0;;;;;;;6487:43;;;;::::1;::::0;;;;;;;::::1;;::::0;;;::::1;::::0;;;;:24;6581:67:::1;::::0;6524:5;;6632:15;6581:22:::1;:67::i;:::-;6548:100;;6731:12;6746:78;6760:8;:19;;;6781:15;6798:11;:25;;;-1:-1:-1::0;;;;;6746:78:90::1;:13;:78::i;:::-;6731:93:::0;-1:-1:-1;6908:15:90;;;:144:::1;;;6927:125;6966:4;6972:8;:19;;;6993:10;7005:12;:29;;;-1:-1:-1::0;;;;;6927:125:90::1;:17;:125::i;:::-;6904:196;;;7061:39;;-1:-1:-1::0;;;7061:39:90::1;;;;;;;;;;;6904:196;7305:24;7365:17:::0;7418:23:::1;7444:74;7449:37;7454:8;:19;;;7475:10;7449:4;:37::i;:::-;7488:12;:29;;;-1:-1:-1::0;;;;;7444:74:90::1;:4;:74::i;:::-;7418:100;;7600:15;7548:49;7553:18;:37;;;-1:-1:-1::0;;;;;7548:49:90::1;7592:4;7548;:49::i;:::-;:67;;;;:::i;:::-;7536:79;;7400:234;7651:21;7675:75;7680:12;:29;;;-1:-1:-1::0;;;;;7675:75:90::1;7711:18;:38;;;-1:-1:-1::0;;;;;7675:75:90::1;:4;:75::i;:::-;7651:99;;7768:19;7881:24;368:4:178;7891:13:90;7881:4;:24::i;:::-;7790:68;7795:18;:37;;;-1:-1:-1::0;;;;;7790:68:90::1;7834:5;:23;;;7790:4;:68::i;:::-;:115;;;;:::i;:::-;7768:137;;7942:28;7947:9;7958:11;7942:4;:28::i;:::-;7923:47;;7347:642;;;8111:69;8115:12;8128:1;8115:15;;;;;;;;:::i;:::-;;;;;;;8132:47;8137:16;8155:5;:23;;;8132:4;:47::i;:::-;1473:9:178::0;;;1484:8;;-1:-1:-1;1469:24:178;1462:32;;1357:145;8111:69:90::1;8083:25;::::0;::::1;:97:::0;8249:68:::1;8083:5:::0;8288:8;8298:11;8311:5;8249:31:::1;:68::i;:::-;8241:76;;6469:1863;;;;6417:1915;-1:-1:-1::0;8358:3:90::1;;6327:2047;;;;8503:296;8570:5;:15;;;8623:58;8628:5;:21;;;8657:5;:23;;;368:4:178;8651:29:90;;;;:::i;8623:58::-;8599:5;:21;;;:82;;;;:::i;:::-;8695:5;:21;;;8730:10;8754:12;:35;;;8503:53;:296::i;:::-;-1:-1:-1::0;8885:21:90::1;::::0;::::1;::::0;8867:15:::1;:39:::0;9032:21:::1;::::0;::::1;::::0;8987:67:::1;::::0;-1:-1:-1;;;8987:67:90;;-1:-1:-1;;;;;8987:3:90::1;:17;::::0;::::1;::::0;:67:::1;::::0;9005:10:::1;::::0;9025:4:::1;::::0;9032:21;8987:67:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;9154:25:90::1;::::0;;::::1;::::0;9139:10:::1;9134:16;::::0;;;:4:::1;:16;::::0;;;;:45;;9154:25;;-1:-1:-1;9134:16:90;;:45:::1;::::0;9154:25;;9134:45:::1;:::i;:::-;::::0;;;-1:-1:-1;;9303:20:90::1;::::0;::::1;::::0;:25;9299:145:::1;;9411:20;::::0;::::1;::::0;9396:36:::1;::::0;-1:-1:-1;;;9396:36:90;;::::1;::::0;::::1;1210:25:188::0;;;;9396:6:90::1;-1:-1:-1::0;;;;;9396:14:90::1;::::0;::::1;::::0;1183:18:188;;9396:36:90::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9299:145;5558:3892;;;;;;5449:4001:::0;;;:::o;3361:97:96:-;3406:16;;:::i;:::-;-1:-1:-1;3434:17:96;;;;;;;;3441:10;3434:17;;;;;;;-1:-1:-1;;;;;;;;3434:17:96;;;;;;;;-1:-1:-1;;;3434:17:96;;;;;;;;;;;;;;;;;;;;;;;;;;3361:97::o;33512:268:88:-;1239:19:47;:17;:19::i;:::-;1075:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;33667:5:88::2;33627:37:::0;;;:21:::2;:37;::::0;;;;:45;;-1:-1:-1;;33627:45:88::2;::::0;;33682:39:::2;:16;33649:14:::0;33682:23:::2;:39::i;:::-;33736:36;::::0;33757:14;;33736:36:::2;::::0;;;::::2;1268:1:47::1;33512:268:88::0;:::o;12837:235::-;12915:19;1239::47;:17;:19::i;:::-;12951:10:88::1;12946:16;::::0;;;:4:::1;:16;::::0;;;;:26;;12966:6;;12946:16;:26:::1;::::0;12966:6;;12946:26:::1;:::i;:::-;::::0;;;-1:-1:-1;12996:24:88::1;::::0;-1:-1:-1;13001:6:88;13009:10:::1;12996:4;:24::i;:::-;12982:38:::0;-1:-1:-1;13030:35:88::1;-1:-1:-1::0;;;;;13030:5:88::1;:18;13049:2:::0;12982:38;13030:18:::1;:35::i;7587:233:31:-:0;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:31;;;;;;;;;:36;;-1:-1:-1;;7708:36:31;7740:4;7708:36;;;7790:12;719:10:66;;640:96;7790:12:31;-1:-1:-1;;;;;7763:40:31;7781:7;-1:-1:-1;;;;;7763:40:31;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;3894:128:96:-;3964:22;;:10;:22;;;;;;;;;;;-1:-1:-1;;;;;3964:22:96;;;-1:-1:-1;;;3964:22:96;-1:-1:-1;;;;3964:22:96;;;-1:-1:-1;;;3964:22:96;-1:-1:-1;;;;;;3964:22:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4001:14;;;3964:22;;4001:14;3894:128;:::o;3063:290:177:-;3129:16;3148:14;;;;;;;;;;;;3129:33;;;;;;;;;;;;;;;;;;;3177:18;3148:4;3159:2;3177:8;:18::i;:::-;3172:47;;3204:15;;-1:-1:-1;;;3204:15:177;;;;;;;;;;;3172:47;3258:9;;;;;;3240;;3229:10;:21;;;;;;;;;;;:26;;;;:38;;;;3306:9;;3288;;3277:21;;;;;:38;3332:14;;;;;3325:21;;;;;3063:290::o;21591:1736:88:-;21888:26;;:::i;:::-;21916:30;;:::i;:::-;21948:21;21998:14;:12;:14::i;:::-;21986:26;;22036:21;22051:5;22036:14;:21::i;:::-;22022:35;;22295:22;22320:59;22346:9;22357:21;22320:25;:59::i;:::-;22295:84;;22425:71;22449:11;22462:15;22479:16;22425:23;:71::i;:::-;-1:-1:-1;;;;;22397:99:88;:25;;;:99;-1:-1:-1;;;;;22506:53:88;;;22624:143;22506:35;22660:19;;22659:53;;22711:1;22659:53;;;22691:16;22692:15;22691:16;:::i;:::-;22714;22732:11;:25;;;22624:21;:143::i;:::-;-1:-1:-1;;;;;22579:188:88;22595:25;;;22579:188;;-1:-1:-1;22778:23:88;22842:283;22908:5;22927:9;22595:11;22975:21;23010:16;23040:15;22579:188;23096:19;22842:52;:283::i;:::-;22811:314;;-1:-1:-1;22811:314:88;-1:-1:-1;23136:184:88;22811:314;;23231:43;23235:21;23258:15;23231:3;:43::i;:::-;23276:10;23288:22;23136:53;:184::i;:::-;;21976:1351;21591:1736;;;;;;;;;;;:::o;3915:473:177:-;3999:18;4008:4;4014:2;3999:8;:18::i;:::-;3995:43;;;4026:12;;-1:-1:-1;;;4026:12:177;;;;;;;;;;;3995:43;4052:9;;;;;:34;;;4066:20;4075:4;4081;4066:8;:20::i;:::-;4065:21;4052:34;4048:62;;;4095:15;;-1:-1:-1;;;4095:15:177;;;;;;;;;;;4048:62;4120:12;4135:16;;;;;;;;;;:21;;4166:26;;;;4206:9;;:39;;;;-1:-1:-1;4219:10:177;:16;;;;;;;;;;:21;;;:26;4206:39;4202:71;;;4247:10;:16;;;;;;;;;;:21;;:26;;;4202:71;4283:10;:16;;;;;;;;;;;;:21;;;;:26;;;4319:14;;;;;;:26;;;4355:19;;:26;3915:473::o;3460:103:31:-;3526:30;3537:4;719:10:66;3526::31;:30::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:31;;;;;;;;;;:37;;-1:-1:-1;;8112:37:31;;;8168:40;719:10:66;;8112:12:31;;8168:40;;8144:5;8168:40;7991:234;;:::o;2433:117:47:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:47::1;::::0;;2521:22:::1;719:10:66::0;2530:12:47::1;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;1767:106::-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:47;;13133:2:188;1828:38:47;;;13115:21:188;13172:2;13152:18;;;13145:30;-1:-1:-1;;;13191:18:188;;;13184:46;13247:18;;1828:38:47;12931:340:188;1828:38:47;1767:106::o;1355:203:62:-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1482:68:62;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:62;-1:-1:-1;;;;;;1482:68:62;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;4704:487:178:-;4754:9;4934:16;4928:23;;4946:3;4919:33;4912:41;4905:49;;4895:255;;5054:10;5048:4;5041:24;5135:4;5129;5122:18;4895:255;-1:-1:-1;5175:3:178;5168:11;;;;5164:19;;4704:487::o;4597:285:96:-;4669:1;4658:8;:12;;;:45;;;;-1:-1:-1;368:4:178;4674:29:96;;;;;4658:45;:72;;;-1:-1:-1;473:19:96;4707:23;;;;;4658:72;4654:145;;;4751:48;;-1:-1:-1;;;4751:48:96;;;;;;;;;;;4654:145;4809:10;:30;;-1:-1:-1;;4809:30:96;-1:-1:-1;;;;;4809:30:96;;;;;4854:21;;13447:1:188;13436:21;;;13418:40;;4854:21:96;;13406:2:188;13391:18;4854:21:96;;;;;;;4597:285;:::o;13796:2121:88:-;13922:6;13940:19;13993:1;13972:9;:18;;;:22;;;13969:1869;;;-1:-1:-1;;;;;14093:17:88;14053:58;;;;14183:2;14162:23;;;14125:61;;368:4:178;14200:58:88;14254:3;14233:24;;;14200:58;;14519:22;;;14326:3;14305:24;;;14272:58;;14602:22;;;14401:3;14380:24;;;;14344:61;;;14559:25;14053:30;14733:55;14760:9;14771:16;14733:26;:55::i;:::-;14706:82;;14824:19;14805:16;:38;14802:81;;;-1:-1:-1;14864:19:88;14802:81;15085:22;15065:16;:42;15061:695;;15166:148;15192:66;15197:36;15218:15;15197:18;:36;:::i;:::-;15235:22;15192:4;:66::i;:::-;15280:16;15166:4;:148::i;:::-;15148:166;;:15;:166;:::i;:::-;15126:189;;15061:695;;;15560:180;15586:72;15591:36;15609:18;15591:15;:36;:::i;:::-;15629:28;15635:22;368:4:178;15629:28:88;:::i;15586:72::-;15681:41;15700:22;15681:16;:41;:::i;15560:180::-;15539:201;;:18;:201;:::i;:::-;15517:224;;15061:695;13995:1771;;;;;;13969:1869;;;-1:-1:-1;15808:18:88;;13969:1869;15854:56;15886:9;15897:12;15854:31;:56::i;7766:1940:96:-;8108:31;;:::i;:::-;8141:23;8176:28;8207:43;8211:21;8234:15;8207:3;:43::i;:::-;8284:29;;;;8176:74;;-1:-1:-1;8328:20:96;;;;:63;;;8374:17;-1:-1:-1;;;;;8352:39:96;:18;-1:-1:-1;;;;;8352:39:96;;;8328:63;8324:327;;;8563:63;8568:17;-1:-1:-1;;;;;8563:63:96;8587:38;8591:16;8609:15;8587:3;:38::i;8563:63::-;8502:42;8507:18;-1:-1:-1;;;;;8502:42:96;8527:16;8502:4;:42::i;:::-;8454:15;:29;;;:90;;;;:::i;:::-;:172;;;;:::i;:::-;8407:233;;8324:327;8671:32;8707:26;;8706:263;;8741:228;8759:165;8781:57;8786:15;:29;;;8816:21;8781:4;:57::i;:::-;8879:15;:31;;;8856:20;:54;;;;:::i;:::-;-1:-1:-1;;;;;8759:165:96;:4;:165::i;:::-;8939:20;8741:4;:228::i;:::-;8706:263;;;8737:1;8706:263;8671:298;;8980:27;9075:13;-1:-1:-1;;;;;9010:78:96;9048:24;9010:15;:35;;;:62;;;;:::i;:::-;:78;;;;:::i;:::-;8980:108;;9115:266;;;;;;;;9149:15;:24;;;9115:266;;;;;;9261:15;-1:-1:-1;;;;;9115:266:96;;;;;9308:20;-1:-1:-1;;;;;9115:266:96;;;;;9357:13;9115:266;;;;9208:19;9115:266;;;9098:283;;8661:731;;9421:21;9446:1;9421:26;9420:279;;9455:244;9473:181;9501:57;9506:15;:29;;;9536:21;9501:4;:57::i;:::-;9495:63;;368:4:178;9495:63:96;:::i;:::-;9609:15;:31;;;9576:14;:30;;;:64;;;;:::i;9473:181::-;9668:21;9455:4;:244::i;:::-;9420:279;;;9451:1;9420:279;9402:297;;8166:1540;;7766:1940;;;;;;;;;;;:::o;6615:375::-;6760:21;6845:137;6863:85;6868:11;:24;;;-1:-1:-1;;;;;6863:85:96;6912:11;:35;;;6894:15;:53;;;;:::i;6863:85::-;6962:10;6845:4;:137::i;:::-;6809:11;:25;;;:174;;;;:::i;795:103:179:-;841:14;:12;:14::i;:::-;876:15;865:8;:26;795:103::o;42280:3599:88:-;42394:23;42419:27;42458:26;42487:14;:12;:14::i;:::-;42511:45;;;;;;;;42545:11;42511:45;-1:-1:-1;;;;;42511:45:88;;;;-1:-1:-1;;;;;;;;42511:45:88;;;;;;;;-1:-1:-1;;;42511:45:88;;;;;;;;;;;42458:43;;-1:-1:-1;42511:31:88;42587:11;:9;:11::i;:::-;42566:32;;42609:26;;:::i;:::-;42645:27;;;42706:15;;42682:21;;;:39;;;42749:22;;-1:-1:-1;;;;;42731:40:88;:15;;;:40;368:4:178;42781:23:88;;;:29;42645:15;;42846:59;;42663:9;;42846:25;:59::i;:::-;-1:-1:-1;;;;;;;;;;;1276:18:177;42982:22:88;43164:32;;;:16;1276:13:177;43164:32:88;;;;;;;1539:13:177;;;;;;;;:18;42821:84:88;;-1:-1:-1;1276:18:177;43217:1954:88;43248:16;43224:5;:21;;;:40;43217:1954;;;43378:19;;;:59;;;43418:19;43401:14;:36;43378:59;43439:5;43374:70;43538:37;;;;:21;:37;;;;;;;;43537:38;;:59;;-1:-1:-1;43579:17:88;;43537:59;43533:414;;;-1:-1:-1;1908:7:177;1934:14;;;43685:16:88;1934:14:177;;;;;;;;:19;;;43864:32:88;;;:16;:32;;;;;1539:13:177;;;;;;;;;:18;43924:8:88;;43533:414;44076:24;44103:32;;;:16;:32;;;;;;;;2335:14:177;;;;;;;;:19;44175:32:88;;;44171:43;;44209:5;;;44171:43;-1:-1:-1;;;;;44361:16:88;;44274:13;44361:16;;;:9;:16;;;;;;;;44334:43;;;;;;;;;;;;;;;;;;;;;44306:12;;44334:43;;44424:67;;44306:12;;44475:15;44424:22;:67::i;:::-;44391:100;;44528:32;44533:10;44545:14;44528:4;:32::i;:::-;44505:20;;;:55;44621:21;;;;44602:40;;:16;:40;:::i;:::-;44574:25;;;:68;44794:19;;;;44815:35;;44852:25;;;;44745:259;;44780:98;;44794:19;;-1:-1:-1;;;;;44780:98:88;:13;:98::i;:::-;44896:19;;44961:29;;;;44933:10;;-1:-1:-1;;;;;44745:259:88;:17;:259::i;:::-;44741:374;;;45032:68;45064:5;45071:8;45081:11;45094:5;45032:31;:68::i;:::-;45024:76;;44741:374;45144:16;45129:31;;43266:1905;;;;43217:1954;;;45300:235;45367:5;:15;;;45396:5;:21;;;45431:5;:21;;;45466:10;45490:12;:35;;;45300:53;:235::i;:::-;-1:-1:-1;45626:21:88;;;;45608:15;:39;45735:21;;;;45715:41;;45711:93;;45765:39;;-1:-1:-1;;;45765:39:88;;;;;;;;;;;45711:93;45823:5;:21;;;45846:5;:25;;;45815:57;;;;;;;;;;;42280:3599;;;;;:::o;10018:556::-;10248:4;10264:17;10284:69;10298:16;10316:15;10333:19;10284:13;:69::i;:::-;10264:89;-1:-1:-1;10380:14:88;;;;;:143;;;10500:22;-1:-1:-1;;;;;10492:31:88;10398:75;10450:10;10437;10404:5;-1:-1:-1;;;;;10404:15:88;;10428:4;10404:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;:56;;;;:::i;:::-;10463:9;10398:4;:75::i;:::-;:125;10380:143;10363:182;;;10541:4;10534:11;;;;;10363:182;10562:5;10555:12;;;10018:556;;;;;;;;:::o;23527:1034::-;-1:-1:-1;;;;;;;;;;;;;;;;;23895:19:88;;23891:41;;23916:15;23891:3;:41::i;:::-;23869:63;;23968:19;;;;23964:41;;23989:15;23964:3;:41::i;:::-;23942:19;;;:63;;;24092:24;;;;:188;;-1:-1:-1;24258:11:88;:21;24147:19;;;;24168:35;;24205:25;;;;-1:-1:-1;;;;;24258:21:88;;;;24133:98;;24147:19;24168:35;24133:98;:13;:98::i;:::-;:147;24092:188;24088:246;;;24298:36;;-1:-1:-1;;;24298:36:88;;;;;;;;;;;24088:246;-1:-1:-1;;;;;24386:16:88;;;;;;:9;:16;;;;;;;;:27;;;;;;;;;;;;;24429:95;24451:15;24468;24485:38;24489:16;24468:15;24485:3;:38::i;:::-;24429:95;;;14569:25:188;;;14625:2;14610:18;;14603:34;;;;14653:18;;;14646:34;14557:2;14542:18;24429:95:88;;;;;;;-1:-1:-1;24546:8:88;;23527:1034;-1:-1:-1;;;;;23527:1034:88:o;1466:197::-;1584:12;1647:13;1611:33;1616:10;1628:15;-1:-1:-1;;;;;1611:33:88;:4;:33::i;:::-;:49;;;;:::i;24654:226::-;24798:4;24868;24848:16;24822:23;24835:10;24822;:23;:::i;:::-;:42;;;;:::i;:::-;:50;;;24654:226;-1:-1:-1;;;;;24654:226:88:o;2511:205:178:-;2615:9;;;2559;2641:5;;:14;;;;;2654:1;2650;:5;2641:14;2640:36;;;;2665:1;2661;:5;:14;;;;;2674:1;2670;:5;2661:14;2635:78;;;2686:27;;-1:-1:-1;;;2686:27:178;;;;;;;;;;;2190:205;2294:9;;;2238;2320:5;;:14;;;;;2333:1;2329;:5;2320:14;2319:36;;;;2344:1;2340;:5;:14;;;;;2353:1;2349;:5;2340:14;2314:78;;;2365:27;;-1:-1:-1;;;2365:27:178;;;;;;;;;;;3678:121;3727:8;368:4;3767:9;3771:1;3774;3767:3;:9::i;:::-;:23;;;;;:::i;:::-;;;3678:121;-1:-1:-1;;;3678:121:178:o;13263:424:88:-;13390:24;13426:18;13447:89;13461:16;13479:9;:25;;;13506:9;:29;;;13447:13;:89::i;:::-;13426:110;-1:-1:-1;13566:15:88;;13565:115;;13601:79;13606:10;13663:16;;13631:3;-1:-1:-1;;;;;13631:14:88;;13654:4;13631:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13618:42;;:10;:42;:::i;:::-;:61;;;;:::i;13601:79::-;13565:115;;;13597:1;13546:134;13263:424;-1:-1:-1;;;;13263:424:88:o;3233:443:178:-;3283:9;3436:1;3432;3428:6;3424:14;3421:1;3418:21;3415:1;3411:29;3408:227;;;3539:10;3533:4;3526:24;3620:4;3614;3607:18;3408:227;-1:-1:-1;3664:3:178;3653:9;;3649:19;;3233:443::o;777:132::-;820:6;-1:-1:-1;;;838:1:178;:12;834:50;;859:25;;-1:-1:-1;;;859:25:178;;;;;;;;;;;834:50;-1:-1:-1;904:1:178;777:132::o;2905:350:96:-;2986:18;;:::i;:::-;3020:35;;-1:-1:-1;;;;;3020:40:96;:35;:40;3016:205;;3103:1;3076:24;;;:28;;;368:4:178;3118:49:96;;3181:25;;;:29;-1:-1:-1;3237:11:96;2905:350::o;37893:378:88:-;38021:30;;:::i;:::-;38077:21;38092:5;38077:14;:21::i;:::-;38063:35;;38136:65;38160:11;38173:15;38190:10;38136:23;:65::i;:::-;-1:-1:-1;;;;;38108:93:88;:25;;;:93;-1:-1:-1;;;;;38211:53:88;;;;;38108:11;37893:378;-1:-1:-1;;37893:378:88:o;38365:3570::-;38539:20;;:::i;:::-;38652:24;38686:28;38724:23;38757:21;38798:12;38813:120;38840:8;:19;;;38861:11;:35;;;38898:11;:25;;;-1:-1:-1;;;;;38813:120:88;:13;:120::i;:::-;38798:135;;38943:23;38969:56;38974:5;:25;;;39001:5;:23;;;38969:4;:56::i;:::-;38943:82;;39168:479;39396:15;39389:4;:22;:66;;;;-1:-1:-1;39440:15:88;;;;39415:22;39422:15;39415:4;:22;:::i;:::-;:40;39389:66;39388:182;;39535:35;39540:4;39546:5;:23;;;39535:4;:35::i;:::-;39388:182;;;39479:53;39491:5;:15;;;39484:4;:22;;;;:::i;:::-;39508:5;:23;;;39479:4;:53::i;:::-;39588:49;39595:8;:19;;;39616:5;:20;;;39588:6;:49::i;39168:479::-;39745:25;;;;39035:612;;-1:-1:-1;;;;1473:9:178;;;1469:24;1462:32;39722:66:88;;39858:17;39878:47;39883:16;39901:5;:23;;;39878:4;:47::i;:::-;39858:67;;39981:65;40003:9;40014:4;40020:11;:25;;;39981:21;:65::i;:::-;-1:-1:-1;;;;;39936:110:88;;;39952:25;;;39936:110;40105:35;;39936:110;;-1:-1:-1;40074:82:88;;40094:9;;40074:82;;:19;:82::i;:::-;40056:100;;40258:44;40263:16;40281:5;:20;;;40258:4;:44::i;:::-;40339:19;;40235:67;;-1:-1:-1;40316:42:88;;40312:90;;;40383:19;;;-1:-1:-1;40312:90:88;40511:19;;40487:43;;:97;;;;;40569:15;40547:8;:19;;;:37;40487:97;40470:240;;;40632:16;40639:9;40632:4;:16;:::i;:::-;40608:5;:20;;:40;;;;;;;:::i;:::-;;;-1:-1:-1;40680:19:88;;;;;-1:-1:-1;40470:240:88;38788:1932;;;40755:24;40782:5;:21;;;40755:48;;40922:23;40992:280;41058:5;41077;:15;;;41106:11;41131:16;41161:8;:19;;;41195:25;41204:15;41195:8;:25::i;:::-;41194:26;;;:::i;:::-;41234:13;41261:1;40992:52;:280::i;:::-;40955:317;;;;-1:-1:-1;41369:206:88;41398:5;41417:8;41439:11;41465:30;41474:20;41465:8;:30::i;:::-;41464:31;;;:::i;:::-;41510:25;41519:15;41510:8;:25::i;:::-;41509:26;;;:::i;:::-;41549:16;41369:15;:206::i;:::-;;41730:15;41705:5;:21;;:40;;;;;;;:::i;:::-;;;-1:-1:-1;41755:25:88;;;:49;;41784:20;;41755:25;:49;;41784:20;;41755:49;:::i;:::-;;;-1:-1:-1;41814:21:88;;;:41;;41839:16;;41814:21;:41;;41839:16;;41814:41;:::i;:::-;;;-1:-1:-1;41865:21:88;;;:40;;41890:15;;41865:21;:40;;41890:15;;41865:40;:::i;:::-;;;-1:-1:-1;41923:5:88;;38365:3570;-1:-1:-1;;;;;;;;;;38365:3570:88:o;20344:691::-;20590:7;20658:201;20691:22;20727:10;20751:16;20781:9;:25;;;20820:9;:29;;;20658:19;:201::i;:::-;20908:24;20922:9;20908:13;:24::i;:::-;21010:18;21023:4;21010:12;:18::i;:::-;21003:25;20344:691;-1:-1:-1;;;;;;20344:691:88:o;941:175:62:-;1050:58;;-1:-1:-1;;;;;14883:32:188;;1050:58:62;;;14865:51:188;14932:18;;;14925:34;;;1023:86:62;;1043:5;;-1:-1:-1;;;1073:23:62;14838:18:188;;1050:58:62;14691:274:188;2601:224:177;2673:4;2693:2;2699:1;2693:7;2689:30;;2709:10;;-1:-1:-1;;;2709:10:177;;;;;;;;;;;2689:30;2737:10;:14;;;;;;;;;;:19;:24;;;:52;;-1:-1:-1;2765:10:177;:14;;;;;;;;;;:19;;;:24;;2737:52;:80;;;-1:-1:-1;;2793:10:177;:13;;;;;;;;;;;;:18;;;:24;;2601:224::o;5812:457:96:-;5934:21;6008:13;6035:12;;;;;:25;;-1:-1:-1;6051:9:96;;;6035:25;6031:232;;;6202:4;6176:23;-1:-1:-1;;;;;6176:23:96;;:7;:23;:::i;:::-;:30;;;;:::i;:::-;6152:55;-1:-1:-1;6221:31:96;6152:55;6221:31;;:::i;:::-;;;6031:232;5812:457;;;;;;:::o;18619:1359:88:-;18976:27;;:::i;:::-;19068:24;;;;;19005:23;19291:39;;;:11;:39;;;;;;;19221:260;;19271:5;;19344:38;19348:16;19366:15;19344:3;:38::i;:::-;-1:-1:-1;;;;;19397:24:88;;;19396:75;;19452:19;19221:16;:260::i;19396:75::-;19425:11;:24;;;19221:16;:260::i;:::-;-1:-1:-1;;;;;19194:287:88;:24;;;:287;19545:35;19561:5;19194:11;19545:15;:35::i;:::-;19679:292;19712:9;19735:11;:35;;;19784:21;19819:16;19849:15;19878:18;19910:11;:24;;;19948:13;19679:19;:292::i;:::-;19647:324;;;;-1:-1:-1;18619:1359:88;-1:-1:-1;;;;;;;;;;18619:1359:88:o;3844:479:31:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:31;;;;;;;;;;-1:-1:-1;;;3970:336:31;;;;;;;:::i;1945:106:47:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:47;;16835:2:188;2003:41:47;;;16817:21:188;16874:2;16854:18;;;16847:30;-1:-1:-1;;;16893:18:188;;;16886:50;16953:18;;2003:41:47;16633:344:188;5173:642:62;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:62;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:62;;17434:2:188;5697:111:62;;;17416:21:188;17473:2;17453:18;;;17446:30;17512:34;17492:18;;;17485:62;-1:-1:-1;;;17563:18:188;;;17556:40;17613:19;;5697:111:62;17232:406:188;5305:368:96;5422:22;5505:150;5527:9;:25;;;-1:-1:-1;;;;;5505:150:96;5570:71;5583:8;-1:-1:-1;;;;;5575:17:96;5613:9;:21;;;-1:-1:-1;;;;;5595:39:96;:15;:39;368:4:178;5570::96;:71::i;2186:115:47:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:14:::0;;-1:-1:-1;;2245:14:47::1;::::0;::::1;::::0;;2274:20:::1;719:10:66::0;2281:12:47::1;640:96:66::0;2832:207:178;2920:13;;;2880:8;2947:13;;;:47;;-1:-1:-1;2965:6:178;;;;;:28;;;2991:1;2979;2975;:5;;;;;:::i;:::-;;:18;;2965:28;2943:87;;;3003:27;;-1:-1:-1;;;3003:27:178;;;;;;;;;;;4001:509;4053:9;4230:1;4226;4222:6;4218:14;4215:1;4212:21;4209:1;4205:29;4202:225;;;4332:10;4326:4;4319:24;4412:4;4406;4399:18;4202:225;-1:-1:-1;4497:3:178;4486:9;;4459:19;;;4452:27;4445:35;4482:19;;;4441:61;;4001:509::o;1940:373:88:-;2058:18;2097:43;2102:20;2109:13;2102:4;:20;:::i;:::-;2124:15;-1:-1:-1;;;;;2097:43:88;:4;:43::i;:::-;2084:56;;2262:4;2202:57;2216:10;2228:15;2245:13;2202;:57::i;:::-;:64;2198:113;;;2290:12;;1940:373;;;;;:::o;509:133:178:-;552:6;-1:-1:-1;;;570:1:178;:13;566:51;;592:25;;-1:-1:-1;;;592:25:178;;;;;;;;;;;10770:422:88;11003:135;11038:22;11062:10;11074:16;11092:15;11109:19;11003:21;:135::i;:::-;10999:186;;;11147:38;;-1:-1:-1;;;11147:38:88;;;;;;;;;;;10999:186;10770:422;;;;;:::o;15977:166::-;16056:7;1239:19:47;:17;:19::i;:::-;16102:34:88::1;16107:15;16124:11;16102:4;:34::i;:::-;16082:16;;:54;;;;;;;:::i;:::-;;;;;;;16075:61;;1268:1:47;15977:166:88::0;;;:::o;36743:429::-;36936:19;36969:14;;;;;:46;;;37005:10;36987:15;;:28;36969:46;36965:201;;;37031:27;;;;:16;:27;;;;;:48;;37066:12;37031:34;:48::i;:::-;-1:-1:-1;;;37100:25:88;;;;-1:-1:-1;37100:11:88;:25;;;;;37093:32;;;37100:25;36743:429::o;4206:288:96:-;-1:-1:-1;;;;;4300:22:96;;;;;;:12;:22;;;;;;;;;:36;;;;;;;;;;;;-1:-1:-1;;;;;4300:36:96;;;-1:-1:-1;;;4300:36:96;;-1:-1:-1;;;;;4300:36:96;;;-1:-1:-1;;;4300:36:96;;-1:-1:-1;;;;;;4300:36:96;;;;;;;;;;;;;;;;;;;;;;;;;4351:136;;17880:34:188;;;17930:18;;;17923:60;;;;17999:18;;;17992:43;4351:136:96;;17831:2:188;17816:18;4351:136:96;;;;;;;4206:288;;:::o;2407:149:70:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:70;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:70;;1918:47;;-1:-1:-1;;;1975:6:70;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:70;;;;;;;;;-1:-1:-1;;;2000:6:70;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:70;;;;;;;;-1:-1:-1;2030:9:70;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:70;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:70;;;;;;;;-1:-1:-1;2141:1:70;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:70;;2162:55;;;;-1:-1:-1;;;2162:55:70;;18389:2:188;2162:55:70;;;18371:21:188;;;18408:18;;;18401:30;18467:34;18447:18;;;18440:62;18519:18;;2162:55:70;18187:356:188;4109:223:65;4242:12;4273:52;4295:6;4303:4;4309:1;4312:12;4273:21;:52::i;6052:1709:178:-;6127:9;6209:1;6223:45;;;;6314:1;6332:53;;;;6439:9;;;6469:61;;;;6590:1;6585:6;;6432:181;;6469:61;6507:1;6502:6;;6432:181;;6653:1;6650;6646:9;6735:1;6732;6728:9;6723:14;;6693:1018;6760:1;6693:1018;;;6868:1;6865;6861:9;6907:1;6902:3;6898:11;6895:83;;;6950:1;6947;6940:12;6895:83;7026:4;7022:2;7018:13;7071:2;7062:7;7059:15;7056:87;;;7115:1;7112;7105:12;7056:87;7173:15;;;;-1:-1:-1;;7216:9:178;;;7213:476;;;7273:1;7270;7266:9;7352:1;7348;7344:2;7340:10;7337:17;7330:25;7325:1;7318:9;7311:17;7307:49;7304:129;;;7401:1;7398;7391:12;7304:129;7485:4;7481:2;7477:13;7534:2;7525:7;7522:15;7519:95;;;7582:1;7579;7572:12;7519:95;7648:15;;;;-1:-1:-1;;7213:476:178;6800:1;6797;6793:9;6788:14;;6693:1018;;;6697:62;6307:1422;;6332:53;6366:1;6361:6;;6307:1422;;6202:1541;;6223:45;6253:1;6248:6;;6202:1541;;6052:1709;;;;;:::o;5166:446:65:-;5331:12;5388:5;5363:21;:30;;5355:81;;;;-1:-1:-1;;;5355:81:65;;18750:2:188;5355:81:65;;;18732:21:188;18789:2;18769:18;;;18762:30;18828:34;18808:18;;;18801:62;-1:-1:-1;;;18879:18:188;;;18872:36;18925:19;;5355:81:65;18548:402:188;5355:81:65;5447:12;5461:23;5488:6;-1:-1:-1;;;;;5488:11:65;5507:5;5514:4;5488:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:73;;;;5536:69;5563:6;5571:7;5580:10;5592:12;5536:26;:69::i;:::-;5529:76;5166:446;-1:-1:-1;;;;;;;5166:446:65:o;7672:628::-;7852:12;7880:7;7876:418;;;7907:10;:17;7928:1;7907:22;7903:286;;-1:-1:-1;;;;;1702:19:65;;;8114:60;;;;-1:-1:-1;;;8114:60:65;;19449:2:188;8114:60:65;;;19431:21:188;19488:2;19468:18;;;19461:30;19527:31;19507:18;;;19500:59;19576:18;;8114:60:65;19247:353:188;8114:60:65;-1:-1:-1;8209:10:65;8202:17;;7876:418;8250:33;8258:10;8270:12;8981:17;;:21;8977:379;;9209:10;9203:17;9265:15;9252:10;9248:2;9244:19;9237:44;8977:379;9332:12;9325:20;;-1:-1:-1;;;9325:20:65;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:188:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:188;;209:43;;199:71;;266:1;263;256:12;879:180;938:6;991:2;979:9;970:7;966:23;962:32;959:52;;;1007:1;1004;997:12;959:52;-1:-1:-1;1030:23:188;;879:180;-1:-1:-1;879:180:188:o;1246:173::-;1314:20;;-1:-1:-1;;;;;1363:31:188;;1353:42;;1343:70;;1409:1;1406;1399:12;1424:118;1510:5;1503:13;1496:21;1489:5;1486:32;1476:60;;1532:1;1529;1522:12;1547:315;1612:6;1620;1673:2;1661:9;1652:7;1648:23;1644:32;1641:52;;;1689:1;1686;1679:12;1641:52;1712:29;1731:9;1712:29;:::i;:::-;1702:39;;1791:2;1780:9;1776:18;1763:32;1804:28;1826:5;1804:28;:::i;:::-;1851:5;1841:15;;;1547:315;;;;;:::o;2052:248::-;2120:6;2128;2181:2;2169:9;2160:7;2156:23;2152:32;2149:52;;;2197:1;2194;2187:12;2149:52;-1:-1:-1;;2220:23:188;;;2290:2;2275:18;;;2262:32;;-1:-1:-1;2052:248:188:o;2487:254::-;2555:6;2563;2616:2;2604:9;2595:7;2591:23;2587:32;2584:52;;;2632:1;2629;2622:12;2584:52;2668:9;2655:23;2645:33;;2697:38;2731:2;2720:9;2716:18;2697:38;:::i;:::-;2687:48;;2487:254;;;;;:::o;2746:::-;2814:6;2822;2875:2;2863:9;2854:7;2850:23;2846:32;2843:52;;;2891:1;2888;2881:12;2843:52;2914:29;2933:9;2914:29;:::i;:::-;2904:39;2990:2;2975:18;;;;2962:32;;-1:-1:-1;;;2746:254:188:o;3268:186::-;3327:6;3380:2;3368:9;3359:7;3355:23;3351:32;3348:52;;;3396:1;3393;3386:12;3348:52;3419:29;3438:9;3419:29;:::i;4366:220::-;-1:-1:-1;;;;;4547:32:188;;;;4529:51;;4517:2;4502:18;;4366:220::o;4938:389::-;5012:6;5020;5028;5081:2;5069:9;5060:7;5056:23;5052:32;5049:52;;;5097:1;5094;5087:12;5049:52;5120:29;5139:9;5120:29;:::i;:::-;5110:39;;5168:38;5202:2;5191:9;5187:18;5168:38;:::i;:::-;5158:48;;5256:2;5245:9;5241:18;5228:32;5269:28;5291:5;5269:28;:::i;:::-;5316:5;5306:15;;;4938:389;;;;;:::o;5332:470::-;5425:6;5433;5441;5449;5457;5510:3;5498:9;5489:7;5485:23;5481:33;5478:53;;;5527:1;5524;5517:12;5478:53;5550:29;5569:9;5550:29;:::i;:::-;5540:39;;5598:38;5632:2;5621:9;5617:18;5598:38;:::i;:::-;5588:48;;5655:38;5689:2;5678:9;5674:18;5655:38;:::i;:::-;5332:470;;;;-1:-1:-1;5645:48:188;;5740:2;5725:18;;5712:32;;-1:-1:-1;5791:3:188;5776:19;5763:33;;5332:470;-1:-1:-1;;5332:470:188:o;6012:260::-;6080:6;6088;6141:2;6129:9;6120:7;6116:23;6112:32;6109:52;;;6157:1;6154;6147:12;6109:52;6180:29;6199:9;6180:29;:::i;:::-;6170:39;;6228:38;6262:2;6251:9;6247:18;6228:38;:::i;6733:127::-;6794:10;6789:3;6785:20;6782:1;6775:31;6825:4;6822:1;6815:15;6849:4;6846:1;6839:15;6865:1589;6985:6;6993;7001;7054:2;7042:9;7033:7;7029:23;7025:32;7022:52;;;7070:1;7067;7060:12;7022:52;7110:9;7097:23;-1:-1:-1;;;;;7180:2:188;7172:6;7169:14;7166:34;;;7196:1;7193;7186:12;7166:34;7234:6;7223:9;7219:22;7209:32;;7279:7;7272:4;7268:2;7264:13;7260:27;7250:55;;7301:1;7298;7291:12;7250:55;7341:2;7328:16;7367:2;7359:6;7356:14;7353:34;;;7383:1;7380;7373:12;7353:34;7406:4;7459:7;7454:2;7444:6;7441:1;7437:14;7433:2;7429:23;7425:32;7422:45;7419:65;;;7480:1;7477;7470:12;7419:65;7511:2;7507;7503:11;7493:21;;7533:6;7523:16;;7592:2;7581:9;7577:18;7564:32;7548:48;;7621:2;7611:8;7608:16;7605:36;;;7637:1;7634;7627:12;7605:36;7675:8;7664:9;7660:24;7650:34;;7722:7;7715:4;7711:2;7707:13;7703:27;7693:55;;7744:1;7741;7734:12;7693:55;7780:2;7767:16;7757:26;;7802:2;7798;7795:10;7792:36;;;7808:18;;:::i;:::-;7854:2;7851:1;7847:10;7886:2;7880:9;7949:2;7945:7;7940:2;7936;7932:11;7928:25;7920:6;7916:38;8004:6;7992:10;7989:22;7984:2;7972:10;7969:18;7966:46;7963:72;;;8015:18;;:::i;:::-;8051:2;8044:22;8101:18;;;8135:15;;;;-1:-1:-1;8177:11:188;;;8173:20;;;8205:19;;;8202:39;;;8237:1;8234;8227:12;8202:39;8261:11;;;;8281:142;8297:6;8292:3;8289:15;8281:142;;;8363:17;;8351:30;;8314:12;;;;8401;;;;8281:142;;;8442:6;8432:16;;;;;;;;6865:1589;;;;;:::o;10753:184::-;10823:6;10876:2;10864:9;10855:7;10851:23;10847:32;10844:52;;;10892:1;10889;10882:12;10844:52;-1:-1:-1;10915:16:188;;10753:184;-1:-1:-1;10753:184:188:o;10942:127::-;11003:10;10998:3;10994:20;10991:1;10984:31;11034:4;11031:1;11024:15;11058:4;11055:1;11048:15;11074:125;11139:9;;;11160:10;;;11157:36;;;11173:18;;:::i;11204:466::-;-1:-1:-1;;;;;11485:15:188;;;11467:34;;11537:15;;;11532:2;11517:18;;11510:43;11589:15;;11584:2;11569:18;;11562:43;11648:14;;11641:22;11636:2;11621:18;;11614:50;11416:3;11401:19;;11204:466::o;11675:216::-;11739:9;;;11767:11;;;11714:3;11797:9;;11825:10;;11821:19;;11850:10;;11842:19;;11818:44;11815:70;;;11865:18;;:::i;:::-;11815:70;;11675:216;;;;:::o;11896:375::-;-1:-1:-1;;;;;12154:15:188;;;12136:34;;12206:15;;;;12201:2;12186:18;;12179:43;12253:2;12238:18;;12231:34;;;;12086:2;12071:18;;11896:375::o;12276:136::-;12311:3;-1:-1:-1;;;12332:22:188;;12329:48;;12357:18;;:::i;:::-;-1:-1:-1;12397:1:188;12393:13;;12276:136::o;12666:128::-;12733:9;;;12754:11;;;12751:37;;;12768:18;;:::i;12799:127::-;12860:10;12855:3;12851:20;12848:1;12841:31;12891:4;12888:1;12881:15;12915:4;12912:1;12905:15;13469:183;-1:-1:-1;;;;;13588:10:188;;;13576;;;13572:27;;13611:12;;;13608:38;;;13626:18;;:::i;13657:182::-;-1:-1:-1;;;;;13764:10:188;;;13776;;;13760:27;;13799:11;;;13796:37;;;13813:18;;:::i;13844:168::-;13917:9;;;13948;;13965:15;;;13959:22;;13945:37;13935:71;;13986:18;;:::i;14017:127::-;14078:10;14073:3;14069:20;14066:1;14059:31;14109:4;14106:1;14099:15;14133:4;14130:1;14123:15;14149:217;14189:1;14215;14205:132;;14259:10;14254:3;14250:20;14247:1;14240:31;14294:4;14291:1;14284:15;14322:4;14319:1;14312:15;14205:132;-1:-1:-1;14351:9:188;;14149:217::o;14970:185::-;-1:-1:-1;;;;;15091:10:188;;;15079;;;15075:27;;15114:12;;;15111:38;;;15129:18;;:::i;15160:250::-;15245:1;15255:113;15269:6;15266:1;15263:13;15255:113;;;15345:11;;;15339:18;15326:11;;;15319:39;15291:2;15284:10;15255:113;;;-1:-1:-1;;15402:1:188;15384:16;;15377:27;15160:250::o;15415:812::-;-1:-1:-1;;;15821:3:188;15814:38;15796:3;15881:6;15875:13;15897:75;15965:6;15960:2;15955:3;15951:12;15944:4;15936:6;15932:17;15897:75;:::i;:::-;-1:-1:-1;;;16031:2:188;15991:16;;;16023:11;;;16016:40;16081:13;;16103:76;16081:13;16165:2;16157:11;;16150:4;16138:17;;16103:76;:::i;:::-;16199:17;16218:2;16195:26;;15415:812;-1:-1:-1;;;;15415:812:188:o;16232:396::-;16381:2;16370:9;16363:21;16344:4;16413:6;16407:13;16456:6;16451:2;16440:9;16436:18;16429:34;16472:79;16544:6;16539:2;16528:9;16524:18;16519:2;16511:6;16507:15;16472:79;:::i;:::-;16612:2;16591:15;-1:-1:-1;;16587:29:188;16572:45;;;;16619:2;16568:54;;16232:396;-1:-1:-1;;16232:396:188:o;16982:245::-;17049:6;17102:2;17090:9;17081:7;17077:23;17073:32;17070:52;;;17118:1;17115;17108:12;17070:52;17150:9;17144:16;17169:28;17191:5;17169:28;:::i;18046:136::-;18085:3;18113:5;18103:39;;18122:18;;:::i;:::-;-1:-1:-1;;;18158:18:188;;18046:136::o;18955:287::-;19084:3;19122:6;19116:13;19138:66;19197:6;19192:3;19185:4;19177:6;19173:17;19138:66;:::i;:::-;19220:16;;;;;18955:287;-1:-1:-1;;18955:287:188:o",
    "linkReferences": {},
    "immutableReferences": {
      "41561": [
        {
          "start": 1921,
          "length": 32
        },
        {
          "start": 5741,
          "length": 32
        },
        {
          "start": 5872,
          "length": 32
        },
        {
          "start": 6461,
          "length": 32
        },
        {
          "start": 6650,
          "length": 32
        },
        {
          "start": 8054,
          "length": 32
        },
        {
          "start": 12373,
          "length": 32
        }
      ],
      "41565": [
        {
          "start": 1361,
          "length": 32
        },
        {
          "start": 3218,
          "length": 32
        }
      ],
      "41569": [
        {
          "start": 2052,
          "length": 32
        },
        {
          "start": 6508,
          "length": 32
        },
        {
          "start": 8242,
          "length": 32
        }
      ],
      "41573": [
        {
          "start": 2129,
          "length": 32
        },
        {
          "start": 3263,
          "length": 32
        },
        {
          "start": 3769,
          "length": 32
        },
        {
          "start": 8693,
          "length": 32
        },
        {
          "start": 11627,
          "length": 32
        }
      ],
      "41576": [
        {
          "start": 990,
          "length": 32
        },
        {
          "start": 3815,
          "length": 32
        },
        {
          "start": 8642,
          "length": 32
        },
        {
          "start": 11593,
          "length": 32
        }
      ],
      "41579": [
        {
          "start": 1591,
          "length": 32
        },
        {
          "start": 14536,
          "length": 32
        }
      ],
      "41582": [
        {
          "start": 6034,
          "length": 32
        },
        {
          "start": 10172,
          "length": 32
        }
      ],
      "41585": [
        {
          "start": 6244,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "activeLimitPriceTicks(uint256)": "683f81a1",
    "addLimitPriceTick(uint256,uint256)": "44a3c664",
    "buffer()": "edaafe20",
    "calculateRebateFactorForPriceTick(uint256)": "cb6238c8",
    "cancelLimitOrder()": "2202ce8c",
    "cash(address)": "b6dc16f6",
    "cdm()": "e2dfb317",
    "claimFees()": "d294f093",
    "createLimitOrder(uint256)": "2906f94e",
    "deposit(address,uint256)": "47e7ef24",
    "enterEmergencyMode()": "9844afd2",
    "exchange(uint256,uint256)": "d4b7eac3",
    "exchangePreview(uint256,uint256)": "88439aea",
    "getGlobalIRS()": "eb953449",
    "getLimitOrder(uint256,uint256)": "2af8992b",
    "getPositionIRS(address)": "dbe6b31c",
    "getPriceTick(uint256)": "51f813ec",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasPermission(address,address)": "cde68041",
    "hasRole(bytes32,address)": "91d14854",
    "limitOrderFloor()": "dc2ec249",
    "limitOrders(uint256)": "a3e2b495",
    "liquidatePositions(address[],uint256[])": "df10f687",
    "liquidationConfig()": "1c580ad5",
    "modifyCollateralAndDebt(address,address,address,int256,int256)": "c75a4b5e",
    "modifyPermission(address,address,bool)": "8309dbdd",
    "modifyPermission(address,bool)": "d9c70f57",
    "oracle()": "7dc0d1d0",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "pausedAt()": "2e55d0f2",
    "positions(address)": "55f57510",
    "protocolFee()": "b0e21e8a",
    "removeLimitPriceTick(uint256)": "ef0563fb",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setParameter(bytes32,uint256)": "723507be",
    "setPermissionAgent(address,bool)": "280c37ef",
    "setUp()": "0a9254e4",
    "spotPrice()": "398482d8",
    "supportsInterface(bytes4)": "01ffc9a7",
    "token()": "fc0c546a",
    "tokenScale()": "342c02b1",
    "totalAccruedFees()": "ba95534c",
    "totalNormalDebt()": "842c311e",
    "unpause()": "3f4ba83a",
    "vaultConfig()": "7cc34bb4",
    "virtualIRS(address)": "8051ba75",
    "withdraw(address,uint256)": "f3fef3a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CDPVault__addLimitPriceTick_invalidPriceTickOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__addLimitPriceTick_limitPriceTickOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__cancelLimitOrder_limitOrderDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__checkEmergencyMode_entered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitOrderAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitOrderFloor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitPriceTickNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__exchange_notEnoughExchanged\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__liquidatePosition_notUnsafe\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__liquidatePositions_argLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_maxUtilizationRatio\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_noPermission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_notSafe\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyPosition_debtFloor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__setParameter_unrecognizedParameter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InterestRateModel__setBaseRate_invalidBaseRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ItemInList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ItemNotInList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__add_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__mul_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__sub_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toInt256_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toUint64_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permission__modifyPermission_notPermitted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"AddLimitPriceTick\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"CancelLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"CreateLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRedeemed\",\"type\":\"uint256\"}],\"name\":\"Exchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRedeemed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"}],\"name\":\"ExecuteLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralReleased\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"normalDebtRepaid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"}],\"name\":\"LiquidatePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"}],\"name\":\"ModifyCollateralAndDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"grant\",\"type\":\"bool\"}],\"name\":\"ModifyPermission\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalNormalDebt\",\"type\":\"uint256\"}],\"name\":\"ModifyPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"RemoveLimitPriceTick\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"baseRate\",\"type\":\"int64\"}],\"name\":\"SetBaseRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SetGlobalIRS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"SetParameter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"grant\",\"type\":\"bool\"}],\"name\":\"SetPermittedAgent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"snapshotRateAccumulator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accruedRebate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebateFactor\",\"type\":\"uint256\"}],\"name\":\"SetPositionIRS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"name\":\"activeLimitPriceTicks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextLimitPriceTick\",\"type\":\"uint256\"}],\"name\":\"addLimitPriceTick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buffer\",\"outputs\":[{\"internalType\":\"contract IBuffer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"name\":\"calculateRebateFactorForPriceTick\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"cash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cdm\",\"outputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feesClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"createLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cashAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterEmergencyMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"upperLimitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditToExchange\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralExchanged\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"upperLimitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditToExchange\",\"type\":\"uint256\"}],\"name\":\"exchangePreview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralExchanged\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalIRS\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"baseRate\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"lastUpdated\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"rateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"averageRebate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"globalAccruedRebate\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.GlobalIRS\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getLimitOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"}],\"name\":\"getPositionIRS\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"snapshotRateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"rebateFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"accruedRebate\",\"type\":\"uint128\"}],\"internalType\":\"struct InterestRateModel.PositionIRS\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPriceTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitOrderFloor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"}],\"name\":\"limitOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"repayAmounts\",\"type\":\"uint256[]\"}],\"name\":\"liquidatePositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationConfig\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"liquidationPenalty\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationDiscount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"targetHealthFactor\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"}],\"name\":\"modifyCollateralAndDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"modifyPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"modifyPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"normalDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"removeLimitPriceTick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"setParameter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"setPermissionAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spotPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAccruedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalNormalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultConfig\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"debtFloor\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"liquidationRatio\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"globalLiquidationRatio\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"}],\"name\":\"virtualIRS\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"rateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"accruedRebate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"globalAccruedRebate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addLimitPriceTick(uint256,uint256)\":{\"details\":\"Requires caller to have 'TICK_MANAGER_ROLE' role\",\"params\":{\"limitPriceTick\":\"The limit price tick to add [wad]\",\"nextLimitPriceTick\":\"The next (higher) limit price tick (0 if there's no higher price tick) [wad]\"}},\"calculateRebateFactorForPriceTick(uint256)\":{\"params\":{\"priceTick\":\"Price tick from which to derive the rebate factor from [wad]\"},\"returns\":{\"_0\":\"_ Rebate factor [wad]\"}},\"createLimitOrder(uint256)\":{\"params\":{\"limitPriceTick\":\"Limit price tick of the limit order (between 1.0 and 100) [wad]\"}},\"deposit(address,uint256)\":{\"details\":\"The caller needs to approve this contract to transfer tokens on their behalf\",\"params\":{\"amount\":\"Amount of tokens to deposit [tokenScale]\",\"to\":\"Address of the user to attribute the cash to\"},\"returns\":{\"cashAmount\":\"Amount of cash deposited [wad]\"}},\"enterEmergencyMode()\":{\"details\":\"This method will revert if the vault has already been paused\"},\"exchange(uint256,uint256)\":{\"params\":{\"creditToExchange\":\"Amount of credit to exchange for collateral [wad]\",\"upperLimitPriceTick\":\"Upper limit price tick (> 1.0) [wad]\"},\"returns\":{\"collateralExchanged\":\"Amount of collateral exchanged [wad]\",\"creditExchanged\":\"Amount of credit exchanged [wad]\"}},\"exchangePreview(uint256,uint256)\":{\"params\":{\"creditToExchange\":\"Amount of credit to exchange for collateral [wad]\",\"upperLimitPriceTick\":\"Upper limit price tick (> 1.0) [wad]\"},\"returns\":{\"collateralExchanged\":\"Amount of collateral exchanged [wad]\",\"creditExchanged\":\"Amount of credit exchanged [wad]\"}},\"getGlobalIRS()\":{\"returns\":{\"_0\":\"_ Global interest rate state\"}},\"getLimitOrder(uint256,uint256)\":{\"params\":{\"index\":\"Index of the limit order in the linked list\",\"priceTick\":\"Price tick of the limit order\"},\"returns\":{\"limitOrderId\":\"Limit order id\"}},\"getPositionIRS(address)\":{\"params\":{\"position\":\"Address of position (owner)\"},\"returns\":{\"_0\":\"_ Interest rate state of the position\"}},\"getPriceTick(uint256)\":{\"params\":{\"index\":\"Index of the price tick in the linked list\"},\"returns\":{\"isActive\":\"Whether the price tick is active\",\"priceTick\":\"Price tick [wad]\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasPermission(address,address)\":{\"params\":{\"caller\":\"Address of the caller\",\"owner\":\"Address of the owner\"},\"returns\":{\"_0\":\"_ whether `caller` has the permission\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"liquidatePositions(address[],uint256[])\":{\"details\":\"The liquidator has to approve the vault to transfer the sum of `repayAmounts`.\",\"params\":{\"owners\":\"Owners of the positions to liquidate\",\"repayAmounts\":\"Amounts the liquidator wants to repay for each position [wad]\"}},\"modifyCollateralAndDebt(address,address,address,int256,int256)\":{\"details\":\"Checks that the global debt ceiling and the vault's debt ceiling have not been exceeded via the CDM, - that the Position is still safe after the modification, - that the msg.sender has the permission of the owner to decrease the collateral-to-debt ratio, - that the msg.sender has the permission of the collateralizer to put up new collateral, - that the msg.sender has the permission of the creditor to settle debt with their credit, - that that the vault debt floor is exceeded - that the vault minimum collateralization ratio is met, otherwise it will transition into emergency mode\",\"params\":{\"collateralizer\":\"Address of who puts up or receives the collateral delta\",\"creditor\":\"Address of who provides or receives the credit delta for the debt delta\",\"deltaCollateral\":\"Amount of collateral to put up (+) or to remove (-) from the position [wad]\",\"deltaNormalDebt\":\"Amount of normalized debt (gross, before rate is applied) to generate (+) or to settle (-) on this position [wad]\",\"owner\":\"Address of the owner of the position\"}},\"modifyPermission(address,address,bool)\":{\"params\":{\"caller\":\"Address of the caller to grant or revoke permission for\",\"owner\":\"Address of the owner\",\"permitted\":\"Whether to grant or revoke permission\"}},\"modifyPermission(address,bool)\":{\"params\":{\"caller\":\"Address of the caller to grant or revoke permission for\",\"permitted\":\"Whether to grant or revoke permission\"}},\"pause()\":{\"details\":\"Sender has to be allowed to call this method\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeLimitPriceTick(uint256)\":{\"details\":\"Requires caller to have 'TICK_MANAGER_ROLE' role\",\"params\":{\"limitPriceTick\":\"limit price tick to remove [wad]\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setParameter(bytes32,uint256)\":{\"details\":\"Sender has to be allowed to call this method\",\"params\":{\"data\":\"New value to set for the variable [wad]\",\"parameter\":\"Name of the variable to set\"}},\"setPermissionAgent(address,bool)\":{\"params\":{\"agent\":\"Address of the agent to grant or revoke permission for\",\"permitted\":\"Whether to grant or revoke permission\"}},\"spotPrice()\":{\"returns\":{\"_0\":\"_ Current spot price of the collateral token [wad]\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unpause()\":{\"details\":\"Sender has to be allowed to call this method\"},\"virtualIRS(address)\":{\"params\":{\"position\":\"Address of the position to return the accrued rebate for\"},\"returns\":{\"accruedRebate\":\"The accrued rebate of a position [wad]\",\"globalAccruedRebate\":\"The global accrued rebate [wad]\",\"rateAccumulator\":\"Current global rate accumulator [wad]\"}},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"Amount of tokens to withdraw [wad]\",\"to\":\"Address of the user to withdraw tokens to\"},\"returns\":{\"tokenAmount\":\"Amount of tokens withdrawn [tokenScale]\"}}},\"title\":\"CDPVault_TypeA\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activeLimitPriceTicks(uint256)\":{\"notice\":\"Map specifying if a given price tick is active [wad]\"},\"addLimitPriceTick(uint256,uint256)\":{\"notice\":\"Adds a new price tick to the limit price tick linked list\"},\"buffer()\":{\"notice\":\"Global surplus and debt Buffer\"},\"calculateRebateFactorForPriceTick(uint256)\":{\"notice\":\"Calculates the rebate factor for a given price tick\"},\"cancelLimitOrder()\":{\"notice\":\"Cancels an existing limit order for a given position (user)\"},\"cash(address)\":{\"notice\":\"Map specifying the cash balances a user has [wad]\"},\"cdm()\":{\"notice\":\"CDM (Credit and Debt Manager)\"},\"claimFees()\":{\"notice\":\"Sends accrued protocol fees to the Buffer\"},\"createLimitOrder(uint256)\":{\"notice\":\"Creates a new limit order for a given position (user). The price tick represents a fee on the current oracle price of the collateral asset for which it can be redeemed for Stablecoin\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits collateral tokens into this contract and increases a users cash balance\"},\"enterEmergencyMode()\":{\"notice\":\"Triggers the emergency mode by pausing the vault if global collateralization ratio is below the emergency threshold\"},\"exchange(uint256,uint256)\":{\"notice\":\"Exchange credit for collateral\"},\"exchangePreview(uint256,uint256)\":{\"notice\":\"Preview exchanging credit for collateral\"},\"getGlobalIRS()\":{\"notice\":\"Returns the global interest rate state\"},\"getLimitOrder(uint256,uint256)\":{\"notice\":\"Returns a limit order id at an index in the limit order linked list (sorted from oldest to newest)\"},\"getPositionIRS(address)\":{\"notice\":\"Returns the interest rate state of a position\"},\"getPriceTick(uint256)\":{\"notice\":\"Returns a price tick at an index in the price tick linked list (sorted from lowest to highest)\"},\"hasPermission(address,address)\":{\"notice\":\"Checks if `caller` has the permission to perform an action on behalf of `owner`\"},\"limitOrderFloor()\":{\"notice\":\"Minimum principal amount of a limit order [wad]\"},\"limitOrders(uint256)\":{\"notice\":\"Map of limit order makers\"},\"liquidatePositions(address[],uint256[])\":{\"notice\":\"Liquidates multiple unsafe positions by selling as much collateral as required to cover the debt in order to make the positions safe again. The collateral can be bought at a discount (`liquidationDiscount`) to the current spot price. The liquidator has to provide the amount he wants repay or sell (`repayAmounts`) for each position. From that repay amount a penalty (`liquidationPenalty`) is subtracted to mitigate against profitable self liquidations. If the available collateral of a position is not sufficient to cover the debt the vault is able to apply for a bail out from the global Buffer.\"},\"liquidationConfig()\":{\"notice\":\"Liquidation configuration\"},\"modifyCollateralAndDebt(address,address,address,int256,int256)\":{\"notice\":\"Modifies a Position's collateral and debt balances\"},\"modifyPermission(address,address,bool)\":{\"notice\":\"Gives or revokes the permission for `caller` to perform an action on behalf of `owner`\"},\"modifyPermission(address,bool)\":{\"notice\":\"Gives or revokes the permission for `caller` to perform an action on behalf of `msg.sender`\"},\"oracle()\":{\"notice\":\"Oracle of the collateral token\"},\"pause()\":{\"notice\":\"Pauses the contract\"},\"positions(address)\":{\"notice\":\"Map of user positions\"},\"protocolFee()\":{\"notice\":\"Portion of interest that goes to the protocol [wad]\"},\"removeLimitPriceTick(uint256)\":{\"notice\":\"Removes limit price tick\"},\"setParameter(bytes32,uint256)\":{\"notice\":\"Sets various variables for this contract\"},\"setPermissionAgent(address,bool)\":{\"notice\":\"Gives or revokes the permission for the `agent` to modify the permissions of `msg.sender`\"},\"spotPrice()\":{\"notice\":\"Returns the current spot price of the collateral token\"},\"token()\":{\"notice\":\"collateral token\"},\"tokenScale()\":{\"notice\":\"Collateral token's decimals scale (10 ** decimals)\"},\"totalAccruedFees()\":{\"notice\":\"Total current amount of accrued protocol fees [wad]\"},\"totalNormalDebt()\":{\"notice\":\"Sum of backed normalized debt over all positions [wad]\"},\"unpause()\":{\"notice\":\"Unpauses the contract\"},\"vaultConfig()\":{\"notice\":\"CDPVault configuration\"},\"virtualIRS(address)\":{\"notice\":\"Returns the current global rate accumulator, global accrued rebate and the accrued rebate of a position\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws collateral tokens from this contract and decreases a users cash balance\"}},\"notice\":\"A CDP-style vault for depositing collateral and drawing credit against it. TypeA vaults are liquidated permissionlessly by selling as much collateral of an unsafe position until it meets a targeted collateralization ratio again. Any shortfall from liquidation not being able to be recovered by selling the available collateral is covered by the global Buffer.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CDPVault_TypeA.sol\":\"CDPVault_TypeA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/CDM.sol\":{\"keccak256\":\"0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99\",\"dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L\"]},\"src/CDPVault.sol\":{\"keccak256\":\"0x373d283b9009254d6a6fa17040cdb2f9fb1c9c32002b1afbd52e6c2427be61fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2c258cf3716bbae56c91230d5e7feca68cb7629abe6570d02dbaf73f3660284\",\"dweb:/ipfs/QmcAAwisqK12cNfECG5sHeptPco2LXo293QGmCNv7ZATkH\"]},\"src/CDPVault_TypeA.sol\":{\"keccak256\":\"0xbd7cc837031c9d621e409b30d31604656b46c23c4abd6201f4b4bbab7f654a34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ca9024bb0b2402b5731f44bb525d6c739471dc6369a70e7c5ba286f5fd77fd2\",\"dweb:/ipfs/QmW6oRcRwL6GV7m77gnqpdPJtN9FgfHVtgteoEAzpsGGnE\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e\",\"dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT\"]},\"src/interfaces/IBuffer.sol\":{\"keccak256\":\"0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff\",\"dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/ICDPVault.sol\":{\"keccak256\":\"0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f\",\"dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE\"]},\"src/interfaces/ICDPVault_FactoryBase.sol\":{\"keccak256\":\"0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e\",\"dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD\"]},\"src/interfaces/ICDPVault_TypeA.sol\":{\"keccak256\":\"0x67e73a065253428bf75f8541da4b1530e4bae6c57ffb17520aba4a48aa132b5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94911a895e5a455a2eb23eea973a36c847f27dd1a3ee7a34470bc226751f0aa6\",\"dweb:/ipfs/Qmcv7WBZnEnm6zjYBGZFikYeyjnMyPb65XEA8cBUkXZ9BR\"]},\"src/interfaces/IInterestRateModel.sol\":{\"keccak256\":\"0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599\",\"dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da\",\"dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF\"]},\"src/interfaces/IPause.sol\":{\"keccak256\":\"0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec\",\"dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]},\"src/utils/DoubleLinkedList.sol\":{\"keccak256\":\"0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb\",\"dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/utils/Pause.sol\":{\"keccak256\":\"0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1\",\"dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL\"]},\"src/utils/Permission.sol\":{\"keccak256\":\"0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb\",\"dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__addLimitPriceTick_invalidPriceTickOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__addLimitPriceTick_limitPriceTickOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__cancelLimitOrder_limitOrderDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__checkEmergencyMode_entered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitOrderAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitOrderFloor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitPriceTickNotActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__exchange_notEnoughExchanged"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__liquidatePosition_notUnsafe"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__liquidatePositions_argLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_maxUtilizationRatio"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_noPermission"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_notSafe"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyPosition_debtFloor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__setParameter_unrecognizedParameter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IdIsZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InterestRateModel__setBaseRate_invalidBaseRate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ItemInList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ItemNotInList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__add_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__mul_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__sub_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toInt256_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toUint64_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Permission__modifyPermission_notPermitted"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddLimitPriceTick",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CancelLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CreateLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "redeemer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "collateralRedeemed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Exchange",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "collateralRedeemed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecuteLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "collateralReleased",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "normalDebtRepaid",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LiquidatePosition",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyCollateralAndDebt",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authorizer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "grant",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyPermission",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalNormalDebt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyPosition",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemoveLimitPriceTick",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int64",
              "name": "baseRate",
              "type": "int64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetBaseRate",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "SetGlobalIRS",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "parameter",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "data",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetParameter",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "grant",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetPermittedAgent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "snapshotRateAccumulator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "accruedRebate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rebateFactor",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetPositionIRS",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "activeLimitPriceTicks",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextLimitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLimitPriceTick"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "buffer",
          "outputs": [
            {
              "internalType": "contract IBuffer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateRebateFactorForPriceTick",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelLimitOrder"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cdm",
          "outputs": [
            {
              "internalType": "contract ICDM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "feesClaimed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createLimitOrder"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cashAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enterEmergencyMode"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "upperLimitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditToExchange",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exchange",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralExchanged",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "upperLimitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditToExchange",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exchangePreview",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralExchanged",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGlobalIRS",
          "outputs": [
            {
              "internalType": "struct InterestRateModel.GlobalIRS",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int64",
                  "name": "baseRate",
                  "type": "int64"
                },
                {
                  "internalType": "uint64",
                  "name": "lastUpdated",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "rateAccumulator",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "averageRebate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "globalAccruedRebate",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLimitOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionIRS",
          "outputs": [
            {
              "internalType": "struct InterestRateModel.PositionIRS",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "snapshotRateAccumulator",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "rebateFactor",
                  "type": "uint64"
                },
                {
                  "internalType": "uint128",
                  "name": "accruedRebate",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriceTick",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasPermission",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "limitOrderFloor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "limitOrders",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "repayAmounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidatePositions"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidationConfig",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "liquidationPenalty",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidationDiscount",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "targetHealthFactor",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyCollateralAndDebt"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyPermission"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyPermission"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "contract IOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pausedAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "positions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "normalDebt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLimitPriceTick"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "parameter",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "data",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setParameter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPermissionAgent"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "spotPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAccruedFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalNormalDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultConfig",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "debtFloor",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "liquidationRatio",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "globalLiquidationRatio",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "virtualIRS",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "rateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "accruedRebate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "globalAccruedRebate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addLimitPriceTick(uint256,uint256)": {
            "details": "Requires caller to have 'TICK_MANAGER_ROLE' role",
            "params": {
              "limitPriceTick": "The limit price tick to add [wad]",
              "nextLimitPriceTick": "The next (higher) limit price tick (0 if there's no higher price tick) [wad]"
            }
          },
          "calculateRebateFactorForPriceTick(uint256)": {
            "params": {
              "priceTick": "Price tick from which to derive the rebate factor from [wad]"
            },
            "returns": {
              "_0": "_ Rebate factor [wad]"
            }
          },
          "createLimitOrder(uint256)": {
            "params": {
              "limitPriceTick": "Limit price tick of the limit order (between 1.0 and 100) [wad]"
            }
          },
          "deposit(address,uint256)": {
            "details": "The caller needs to approve this contract to transfer tokens on their behalf",
            "params": {
              "amount": "Amount of tokens to deposit [tokenScale]",
              "to": "Address of the user to attribute the cash to"
            },
            "returns": {
              "cashAmount": "Amount of cash deposited [wad]"
            }
          },
          "enterEmergencyMode()": {
            "details": "This method will revert if the vault has already been paused"
          },
          "exchange(uint256,uint256)": {
            "params": {
              "creditToExchange": "Amount of credit to exchange for collateral [wad]",
              "upperLimitPriceTick": "Upper limit price tick (> 1.0) [wad]"
            },
            "returns": {
              "collateralExchanged": "Amount of collateral exchanged [wad]",
              "creditExchanged": "Amount of credit exchanged [wad]"
            }
          },
          "exchangePreview(uint256,uint256)": {
            "params": {
              "creditToExchange": "Amount of credit to exchange for collateral [wad]",
              "upperLimitPriceTick": "Upper limit price tick (> 1.0) [wad]"
            },
            "returns": {
              "collateralExchanged": "Amount of collateral exchanged [wad]",
              "creditExchanged": "Amount of credit exchanged [wad]"
            }
          },
          "getGlobalIRS()": {
            "returns": {
              "_0": "_ Global interest rate state"
            }
          },
          "getLimitOrder(uint256,uint256)": {
            "params": {
              "index": "Index of the limit order in the linked list",
              "priceTick": "Price tick of the limit order"
            },
            "returns": {
              "limitOrderId": "Limit order id"
            }
          },
          "getPositionIRS(address)": {
            "params": {
              "position": "Address of position (owner)"
            },
            "returns": {
              "_0": "_ Interest rate state of the position"
            }
          },
          "getPriceTick(uint256)": {
            "params": {
              "index": "Index of the price tick in the linked list"
            },
            "returns": {
              "isActive": "Whether the price tick is active",
              "priceTick": "Price tick [wad]"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasPermission(address,address)": {
            "params": {
              "caller": "Address of the caller",
              "owner": "Address of the owner"
            },
            "returns": {
              "_0": "_ whether `caller` has the permission"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "liquidatePositions(address[],uint256[])": {
            "details": "The liquidator has to approve the vault to transfer the sum of `repayAmounts`.",
            "params": {
              "owners": "Owners of the positions to liquidate",
              "repayAmounts": "Amounts the liquidator wants to repay for each position [wad]"
            }
          },
          "modifyCollateralAndDebt(address,address,address,int256,int256)": {
            "details": "Checks that the global debt ceiling and the vault's debt ceiling have not been exceeded via the CDM, - that the Position is still safe after the modification, - that the msg.sender has the permission of the owner to decrease the collateral-to-debt ratio, - that the msg.sender has the permission of the collateralizer to put up new collateral, - that the msg.sender has the permission of the creditor to settle debt with their credit, - that that the vault debt floor is exceeded - that the vault minimum collateralization ratio is met, otherwise it will transition into emergency mode",
            "params": {
              "collateralizer": "Address of who puts up or receives the collateral delta",
              "creditor": "Address of who provides or receives the credit delta for the debt delta",
              "deltaCollateral": "Amount of collateral to put up (+) or to remove (-) from the position [wad]",
              "deltaNormalDebt": "Amount of normalized debt (gross, before rate is applied) to generate (+) or to settle (-) on this position [wad]",
              "owner": "Address of the owner of the position"
            }
          },
          "modifyPermission(address,address,bool)": {
            "params": {
              "caller": "Address of the caller to grant or revoke permission for",
              "owner": "Address of the owner",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "modifyPermission(address,bool)": {
            "params": {
              "caller": "Address of the caller to grant or revoke permission for",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "pause()": {
            "details": "Sender has to be allowed to call this method"
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "removeLimitPriceTick(uint256)": {
            "details": "Requires caller to have 'TICK_MANAGER_ROLE' role",
            "params": {
              "limitPriceTick": "limit price tick to remove [wad]"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "setParameter(bytes32,uint256)": {
            "details": "Sender has to be allowed to call this method",
            "params": {
              "data": "New value to set for the variable [wad]",
              "parameter": "Name of the variable to set"
            }
          },
          "setPermissionAgent(address,bool)": {
            "params": {
              "agent": "Address of the agent to grant or revoke permission for",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "spotPrice()": {
            "returns": {
              "_0": "_ Current spot price of the collateral token [wad]"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "unpause()": {
            "details": "Sender has to be allowed to call this method"
          },
          "virtualIRS(address)": {
            "params": {
              "position": "Address of the position to return the accrued rebate for"
            },
            "returns": {
              "accruedRebate": "The accrued rebate of a position [wad]",
              "globalAccruedRebate": "The global accrued rebate [wad]",
              "rateAccumulator": "Current global rate accumulator [wad]"
            }
          },
          "withdraw(address,uint256)": {
            "params": {
              "amount": "Amount of tokens to withdraw [wad]",
              "to": "Address of the user to withdraw tokens to"
            },
            "returns": {
              "tokenAmount": "Amount of tokens withdrawn [tokenScale]"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "activeLimitPriceTicks(uint256)": {
            "notice": "Map specifying if a given price tick is active [wad]"
          },
          "addLimitPriceTick(uint256,uint256)": {
            "notice": "Adds a new price tick to the limit price tick linked list"
          },
          "buffer()": {
            "notice": "Global surplus and debt Buffer"
          },
          "calculateRebateFactorForPriceTick(uint256)": {
            "notice": "Calculates the rebate factor for a given price tick"
          },
          "cancelLimitOrder()": {
            "notice": "Cancels an existing limit order for a given position (user)"
          },
          "cash(address)": {
            "notice": "Map specifying the cash balances a user has [wad]"
          },
          "cdm()": {
            "notice": "CDM (Credit and Debt Manager)"
          },
          "claimFees()": {
            "notice": "Sends accrued protocol fees to the Buffer"
          },
          "createLimitOrder(uint256)": {
            "notice": "Creates a new limit order for a given position (user). The price tick represents a fee on the current oracle price of the collateral asset for which it can be redeemed for Stablecoin"
          },
          "deposit(address,uint256)": {
            "notice": "Deposits collateral tokens into this contract and increases a users cash balance"
          },
          "enterEmergencyMode()": {
            "notice": "Triggers the emergency mode by pausing the vault if global collateralization ratio is below the emergency threshold"
          },
          "exchange(uint256,uint256)": {
            "notice": "Exchange credit for collateral"
          },
          "exchangePreview(uint256,uint256)": {
            "notice": "Preview exchanging credit for collateral"
          },
          "getGlobalIRS()": {
            "notice": "Returns the global interest rate state"
          },
          "getLimitOrder(uint256,uint256)": {
            "notice": "Returns a limit order id at an index in the limit order linked list (sorted from oldest to newest)"
          },
          "getPositionIRS(address)": {
            "notice": "Returns the interest rate state of a position"
          },
          "getPriceTick(uint256)": {
            "notice": "Returns a price tick at an index in the price tick linked list (sorted from lowest to highest)"
          },
          "hasPermission(address,address)": {
            "notice": "Checks if `caller` has the permission to perform an action on behalf of `owner`"
          },
          "limitOrderFloor()": {
            "notice": "Minimum principal amount of a limit order [wad]"
          },
          "limitOrders(uint256)": {
            "notice": "Map of limit order makers"
          },
          "liquidatePositions(address[],uint256[])": {
            "notice": "Liquidates multiple unsafe positions by selling as much collateral as required to cover the debt in order to make the positions safe again. The collateral can be bought at a discount (`liquidationDiscount`) to the current spot price. The liquidator has to provide the amount he wants repay or sell (`repayAmounts`) for each position. From that repay amount a penalty (`liquidationPenalty`) is subtracted to mitigate against profitable self liquidations. If the available collateral of a position is not sufficient to cover the debt the vault is able to apply for a bail out from the global Buffer."
          },
          "liquidationConfig()": {
            "notice": "Liquidation configuration"
          },
          "modifyCollateralAndDebt(address,address,address,int256,int256)": {
            "notice": "Modifies a Position's collateral and debt balances"
          },
          "modifyPermission(address,address,bool)": {
            "notice": "Gives or revokes the permission for `caller` to perform an action on behalf of `owner`"
          },
          "modifyPermission(address,bool)": {
            "notice": "Gives or revokes the permission for `caller` to perform an action on behalf of `msg.sender`"
          },
          "oracle()": {
            "notice": "Oracle of the collateral token"
          },
          "pause()": {
            "notice": "Pauses the contract"
          },
          "positions(address)": {
            "notice": "Map of user positions"
          },
          "protocolFee()": {
            "notice": "Portion of interest that goes to the protocol [wad]"
          },
          "removeLimitPriceTick(uint256)": {
            "notice": "Removes limit price tick"
          },
          "setParameter(bytes32,uint256)": {
            "notice": "Sets various variables for this contract"
          },
          "setPermissionAgent(address,bool)": {
            "notice": "Gives or revokes the permission for the `agent` to modify the permissions of `msg.sender`"
          },
          "spotPrice()": {
            "notice": "Returns the current spot price of the collateral token"
          },
          "token()": {
            "notice": "collateral token"
          },
          "tokenScale()": {
            "notice": "Collateral token's decimals scale (10 ** decimals)"
          },
          "totalAccruedFees()": {
            "notice": "Total current amount of accrued protocol fees [wad]"
          },
          "totalNormalDebt()": {
            "notice": "Sum of backed normalized debt over all positions [wad]"
          },
          "unpause()": {
            "notice": "Unpauses the contract"
          },
          "vaultConfig()": {
            "notice": "CDPVault configuration"
          },
          "virtualIRS(address)": {
            "notice": "Returns the current global rate accumulator, global accrued rebate and the accrued rebate of a position"
          },
          "withdraw(address,uint256)": {
            "notice": "Withdraws collateral tokens from this contract and decreases a users cash balance"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/CDPVault_TypeA.sol": "CDPVault_TypeA"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/CDM.sol": {
        "keccak256": "0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5",
        "urls": [
          "bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99",
          "dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L"
        ],
        "license": "MIT"
      },
      "src/CDPVault.sol": {
        "keccak256": "0x373d283b9009254d6a6fa17040cdb2f9fb1c9c32002b1afbd52e6c2427be61fc",
        "urls": [
          "bzz-raw://b2c258cf3716bbae56c91230d5e7feca68cb7629abe6570d02dbaf73f3660284",
          "dweb:/ipfs/QmcAAwisqK12cNfECG5sHeptPco2LXo293QGmCNv7ZATkH"
        ],
        "license": "MIT"
      },
      "src/CDPVault_TypeA.sol": {
        "keccak256": "0xbd7cc837031c9d621e409b30d31604656b46c23c4abd6201f4b4bbab7f654a34",
        "urls": [
          "bzz-raw://9ca9024bb0b2402b5731f44bb525d6c739471dc6369a70e7c5ba286f5fd77fd2",
          "dweb:/ipfs/QmW6oRcRwL6GV7m77gnqpdPJtN9FgfHVtgteoEAzpsGGnE"
        ],
        "license": "MIT"
      },
      "src/InterestRateModel.sol": {
        "keccak256": "0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb",
        "urls": [
          "bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e",
          "dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBuffer.sol": {
        "keccak256": "0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f",
        "urls": [
          "bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff",
          "dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault.sol": {
        "keccak256": "0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d",
        "urls": [
          "bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f",
          "dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_FactoryBase.sol": {
        "keccak256": "0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717",
        "urls": [
          "bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e",
          "dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_TypeA.sol": {
        "keccak256": "0x67e73a065253428bf75f8541da4b1530e4bae6c57ffb17520aba4a48aa132b5b",
        "urls": [
          "bzz-raw://94911a895e5a455a2eb23eea973a36c847f27dd1a3ee7a34470bc226751f0aa6",
          "dweb:/ipfs/Qmcv7WBZnEnm6zjYBGZFikYeyjnMyPb65XEA8cBUkXZ9BR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IInterestRateModel.sol": {
        "keccak256": "0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055",
        "urls": [
          "bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599",
          "dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417",
        "urls": [
          "bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da",
          "dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPause.sol": {
        "keccak256": "0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d",
        "urls": [
          "bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec",
          "dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/utils/DoubleLinkedList.sol": {
        "keccak256": "0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691",
        "urls": [
          "bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb",
          "dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/utils/Pause.sol": {
        "keccak256": "0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19",
        "urls": [
          "bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1",
          "dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL"
        ],
        "license": "MIT"
      },
      "src/utils/Permission.sol": {
        "keccak256": "0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1",
        "urls": [
          "bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb",
          "dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/CDPVault_TypeA.sol",
    "id": 45869,
    "exportedSymbols": {
      "CDPVault": [
        43991
      ],
      "CDPVault_TypeA": [
        45868
      ],
      "ICDPVault_TypeA": [
        49762
      ],
      "VAULT_CONFIG_ROLE": [
        41471
      ],
      "WAD": [
        129076
      ],
      "calculateDebt": [
        41503
      ],
      "max": [
        129168
      ],
      "min": [
        129144,
        129156
      ],
      "wdiv": [
        129338
      ],
      "wmul": [
        129291,
        129314
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9421:90",
    "nodes": [
      {
        "id": 45362,
        "nodeType": "PragmaDirective",
        "src": "32:24:90",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 45364,
        "nodeType": "ImportDirective",
        "src": "58:65:90",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDPVault_TypeA.sol",
        "file": "./interfaces/ICDPVault_TypeA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45869,
        "sourceUnit": 49763,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45363,
              "name": "ICDPVault_TypeA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49762,
              "src": "66:15:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45370,
        "nodeType": "ImportDirective",
        "src": "125:59:90",
        "nodes": [],
        "absolutePath": "src/utils/Math.sol",
        "file": "./utils/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45869,
        "sourceUnit": 129366,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45365,
              "name": "WAD",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 129076,
              "src": "133:3:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45366,
              "name": "max",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 129168,
              "src": "138:3:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45367,
              "name": "min",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "143:3:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45368,
              "name": "wmul",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "148:4:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45369,
              "name": "wdiv",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 129338,
              "src": "154:4:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45374,
        "nodeType": "ImportDirective",
        "src": "186:74:90",
        "nodes": [],
        "absolutePath": "src/CDPVault.sol",
        "file": "./CDPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45869,
        "sourceUnit": 43992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45371,
              "name": "CDPVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43991,
              "src": "194:8:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45372,
              "name": "VAULT_CONFIG_ROLE",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41471,
              "src": "204:17:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45373,
              "name": "calculateDebt",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41503,
              "src": "223:13:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45868,
        "nodeType": "ContractDefinition",
        "src": "672:8780:90",
        "nodes": [
          {
            "id": 45386,
            "nodeType": "StructDefinition",
            "src": "911:755:90",
            "nodes": [],
            "canonicalName": "CDPVault_TypeA.LiquidationConfig",
            "members": [
              {
                "constant": false,
                "id": 45381,
                "mutability": "mutable",
                "name": "liquidationPenalty",
                "nameLocation": "1131:18:90",
                "nodeType": "VariableDeclaration",
                "scope": 45386,
                "src": "1124:25:90",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 45380,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1124:6:90",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45383,
                "mutability": "mutable",
                "name": "liquidationDiscount",
                "nameLocation": "1376:19:90",
                "nodeType": "VariableDeclaration",
                "scope": 45386,
                "src": "1369:26:90",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 45382,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1369:6:90",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45385,
                "mutability": "mutable",
                "name": "targetHealthFactor",
                "nameLocation": "1641:18:90",
                "nodeType": "VariableDeclaration",
                "scope": 45386,
                "src": "1634:25:90",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 45384,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1634:6:90",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "LiquidationConfig",
            "nameLocation": "918:17:90",
            "scope": 45868,
            "visibility": "public"
          },
          {
            "id": 45390,
            "nodeType": "VariableDeclaration",
            "src": "1713:42:90",
            "nodes": [],
            "baseFunctions": [
              49752
            ],
            "constant": false,
            "documentation": {
              "id": 45387,
              "nodeType": "StructuredDocumentation",
              "src": "1671:37:90",
              "text": "@notice Liquidation configuration"
            },
            "functionSelector": "1c580ad5",
            "mutability": "mutable",
            "name": "liquidationConfig",
            "nameLocation": "1738:17:90",
            "scope": 45868,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_LiquidationConfig_$45386_storage",
              "typeString": "struct CDPVault_TypeA.LiquidationConfig"
            },
            "typeName": {
              "id": 45389,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45388,
                "name": "LiquidationConfig",
                "nameLocations": [
                  "1713:17:90"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45386,
                "src": "1713:17:90"
              },
              "referencedDeclaration": 45386,
              "src": "1713:17:90",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LiquidationConfig_$45386_storage_ptr",
                "typeString": "struct CDPVault_TypeA.LiquidationConfig"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45396,
            "nodeType": "EventDefinition",
            "src": "1941:60:90",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4327e67d6578eb2c9293fb22f9334006073ac1397c7100f5dd5adca09ad71c08",
            "name": "SetParameter",
            "nameLocation": "1947:12:90",
            "parameters": {
              "id": 45395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45392,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "parameter",
                  "nameLocation": "1976:9:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 45396,
                  "src": "1960:25:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45391,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45394,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1995:4:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 45396,
                  "src": "1987:12:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1959:41:90"
            }
          },
          {
            "id": 45406,
            "nodeType": "EventDefinition",
            "src": "2006:170:90",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "af85375785266ad47da85c55124ba0385734bea8ba2f64633f03fb0c6cfe3dcd",
            "name": "LiquidatePosition",
            "nameLocation": "2012:17:90",
            "parameters": {
              "id": 45405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45398,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "position",
                  "nameLocation": "2055:8:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 45406,
                  "src": "2039:24:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2039:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45400,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collateralReleased",
                  "nameLocation": "2081:18:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 45406,
                  "src": "2073:26:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "normalDebtRepaid",
                  "nameLocation": "2117:16:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 45406,
                  "src": "2109:24:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45404,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "liquidator",
                  "nameLocation": "2159:10:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 45406,
                  "src": "2143:26:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2029:146:90"
            }
          },
          {
            "id": 45408,
            "nodeType": "ErrorDefinition",
            "src": "2361:53:90",
            "nodes": [],
            "errorSelector": "8dd691e7",
            "name": "CDPVault__setParameter_unrecognizedParameter",
            "nameLocation": "2367:44:90",
            "parameters": {
              "id": 45407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2411:2:90"
            }
          },
          {
            "id": 45410,
            "nodeType": "ErrorDefinition",
            "src": "2419:46:90",
            "nodes": [],
            "errorSelector": "f87e38e9",
            "name": "CDPVault__liquidatePosition_notUnsafe",
            "nameLocation": "2425:37:90",
            "parameters": {
              "id": 45409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2462:2:90"
            }
          },
          {
            "id": 45412,
            "nodeType": "ErrorDefinition",
            "src": "2470:55:90",
            "nodes": [],
            "errorSelector": "71e61896",
            "name": "CDPVault__liquidatePositions_argLengthMismatch",
            "nameLocation": "2476:46:90",
            "parameters": {
              "id": 45411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2522:2:90"
            }
          },
          {
            "id": 45421,
            "nodeType": "FunctionDefinition",
            "src": "2714:49:90",
            "nodes": [],
            "body": {
              "id": 45420,
              "nodeType": "Block",
              "src": "2761:2:90",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 45417,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45414,
                    "src": "2752:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 45418,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 45416,
                  "name": "CDPVault",
                  "nameLocations": [
                    "2743:8:90"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43991,
                  "src": "2743:8:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "2743:17:90"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45414,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "2734:7:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 45421,
                  "src": "2726:15:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2726:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2725:17:90"
            },
            "returnParameters": {
              "id": 45419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2761:0:90"
            },
            "scope": 45868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45554,
            "nodeType": "FunctionDefinition",
            "src": "3179:1188:90",
            "nodes": [],
            "body": {
              "id": 45553,
              "nodeType": "Block",
              "src": "3285:1082:90",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 45436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45434,
                      "name": "parameter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45424,
                      "src": "3299:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "64656274466c6f6f72",
                      "id": 45435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3312:11:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_882a95125fa4bd801f304c644a87130a26fa98ddfa1b031d75506e8dfbe69cc9",
                        "typeString": "literal_string \"debtFloor\""
                      },
                      "value": "debtFloor"
                    },
                    "src": "3299:24:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 45448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 45446,
                        "name": "parameter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45424,
                        "src": "3381:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "6c69717569646174696f6e526174696f",
                        "id": 45447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3394:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6357d4d2914da0df51253d6e777ada9c3e70ccd4e04fbe5afa73eb98bdc3cd8",
                          "typeString": "literal_string \"liquidationRatio\""
                        },
                        "value": "liquidationRatio"
                      },
                      "src": "3381:31:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 45460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45458,
                          "name": "parameter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45424,
                          "src": "3476:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "676c6f62616c4c69717569646174696f6e526174696f",
                          "id": 45459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3489:24:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d64336b4535ac8a0cbf3caa3bf3c121b674e35d0911fa5b1266f1d4f017efdc5",
                            "typeString": "literal_string \"globalLiquidationRatio\""
                          },
                          "value": "globalLiquidationRatio"
                        },
                        "src": "3476:37:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 45472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 45470,
                            "name": "parameter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45424,
                            "src": "3583:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "6c696d69744f72646572466c6f6f72",
                            "id": 45471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3596:17:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5ac1448d4ed7d5aa927c19115171b47f6e73b1a097b5518e69d49dead5d18a01",
                              "typeString": "literal_string \"limitOrderFloor\""
                            },
                            "value": "limitOrderFloor"
                          },
                          "src": "3583:30:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 45479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 45477,
                              "name": "parameter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45424,
                              "src": "3838:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "6261736552617465",
                              "id": 45478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3851:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9e36a3cc7d8c812d07501dd19dabeb3d8317632e6467a793e3650c433de4b57b",
                                "typeString": "literal_string \"baseRate\""
                              },
                              "value": "baseRate"
                            },
                            "src": "3838:23:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 45503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 45501,
                                "name": "parameter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45424,
                                "src": "3950:9:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "6c69717569646174696f6e50656e616c7479",
                                "id": 45502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3963:20:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_117df10b147bdac104270fa76682c9aa64b008e4d7be1b043175a35deafe045f",
                                  "typeString": "literal_string \"liquidationPenalty\""
                                },
                                "value": "liquidationPenalty"
                              },
                              "src": "3950:33:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 45515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 45513,
                                  "name": "parameter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45424,
                                  "src": "4055:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "6c69717569646174696f6e446973636f756e74",
                                  "id": 45514,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4068:21:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f390efe37200fe7b16ad1c68b8df89dea950ec11b1821e7d0c93f3a330c29382",
                                    "typeString": "literal_string \"liquidationDiscount\""
                                  },
                                  "value": "liquidationDiscount"
                                },
                                "src": "4055:34:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "id": 45527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 45525,
                                    "name": "parameter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45424,
                                    "src": "4162:9:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "7461726765744865616c7468466163746f72",
                                    "id": 45526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4175:20:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_cf74caa4270547041b3a8926d672afaddec218a5e588227d09bafd7a03fd2e4d",
                                      "typeString": "literal_string \"targetHealthFactor\""
                                    },
                                    "value": "targetHealthFactor"
                                  },
                                  "src": "4162:33:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 45537,
                                      "name": "CDPVault__setParameter_unrecognizedParameter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45408,
                                      "src": "4270:44:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 45538,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4270:46:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 45539,
                                  "nodeType": "RevertStatement",
                                  "src": "4263:53:90"
                                },
                                "id": 45540,
                                "nodeType": "IfStatement",
                                "src": "4158:158:90",
                                "trueBody": {
                                  "expression": {
                                    "id": 45535,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "id": 45528,
                                        "name": "liquidationConfig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45390,
                                        "src": "4197:17:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_LiquidationConfig_$45386_storage",
                                          "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                                        }
                                      },
                                      "id": 45530,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "4215:18:90",
                                      "memberName": "targetHealthFactor",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 45385,
                                      "src": "4197:36:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "id": 45533,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45426,
                                          "src": "4243:4:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 45532,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4236:6:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        },
                                        "typeName": {
                                          "id": 45531,
                                          "name": "uint64",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4236:6:90",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 45534,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4236:12:90",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "src": "4197:51:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "id": 45536,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4197:51:90"
                                }
                              },
                              "id": 45541,
                              "nodeType": "IfStatement",
                              "src": "4051:265:90",
                              "trueBody": {
                                "expression": {
                                  "id": 45523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 45516,
                                      "name": "liquidationConfig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45390,
                                      "src": "4091:17:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LiquidationConfig_$45386_storage",
                                        "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                                      }
                                    },
                                    "id": 45518,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberLocation": "4109:19:90",
                                    "memberName": "liquidationDiscount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 45383,
                                    "src": "4091:37:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "id": 45521,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45426,
                                        "src": "4138:4:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 45520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4131:6:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint64_$",
                                        "typeString": "type(uint64)"
                                      },
                                      "typeName": {
                                        "id": 45519,
                                        "name": "uint64",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4131:6:90",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 45522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4131:12:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "src": "4091:52:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "id": 45524,
                                "nodeType": "ExpressionStatement",
                                "src": "4091:52:90"
                              }
                            },
                            "id": 45542,
                            "nodeType": "IfStatement",
                            "src": "3946:370:90",
                            "trueBody": {
                              "expression": {
                                "id": 45511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 45504,
                                    "name": "liquidationConfig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45390,
                                    "src": "3985:17:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LiquidationConfig_$45386_storage",
                                      "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                                    }
                                  },
                                  "id": 45506,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "4003:18:90",
                                  "memberName": "liquidationPenalty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 45381,
                                  "src": "3985:36:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 45509,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45426,
                                      "src": "4031:4:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 45508,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4024:6:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint64_$",
                                      "typeString": "type(uint64)"
                                    },
                                    "typeName": {
                                      "id": 45507,
                                      "name": "uint64",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4024:6:90",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 45510,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4024:12:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "3985:51:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 45512,
                              "nodeType": "ExpressionStatement",
                              "src": "3985:51:90"
                            }
                          },
                          "id": 45543,
                          "nodeType": "IfStatement",
                          "src": "3834:482:90",
                          "trueBody": {
                            "expression": {
                              "arguments": [
                                {
                                  "condition": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 45487,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 45481,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45426,
                                          "src": "3877:4:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 45484,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "3890:7:90",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 45483,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "3890:7:90",
                                                  "typeDescriptions": {}
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                }
                                              ],
                                              "id": 45482,
                                              "name": "type",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -27,
                                              "src": "3885:4:90",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                                "typeString": "function () pure"
                                              }
                                            },
                                            "id": 45485,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3885:13:90",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                                              "typeString": "type(uint256)"
                                            }
                                          },
                                          "id": 45486,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "3899:3:90",
                                          "memberName": "max",
                                          "nodeType": "MemberAccess",
                                          "src": "3885:17:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "3877:25:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 45488,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3876:27:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 45495,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45426,
                                            "src": "3924:4:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 45494,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3917:6:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          },
                                          "typeName": {
                                            "id": 45493,
                                            "name": "uint64",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3917:6:90",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 45496,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3917:12:90",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      ],
                                      "id": 45492,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3911:5:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int64_$",
                                        "typeString": "type(int64)"
                                      },
                                      "typeName": {
                                        "id": 45491,
                                        "name": "int64",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3911:5:90",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 45497,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3911:19:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int64",
                                      "typeString": "int64"
                                    }
                                  },
                                  "id": 45498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "3876:54:90",
                                  "trueExpression": {
                                    "id": 45490,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "-",
                                    "prefix": true,
                                    "src": "3906:2:90",
                                    "subExpression": {
                                      "hexValue": "31",
                                      "id": 45489,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3907:1:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_minus_1_by_1",
                                      "typeString": "int_const -1"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int64",
                                    "typeString": "int64"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int64",
                                    "typeString": "int64"
                                  }
                                ],
                                "id": 45480,
                                "name": "_setBaseRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48624,
                                "src": "3863:12:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_int64_$returns$__$",
                                  "typeString": "function (int64)"
                                }
                              },
                              "id": 45499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3863:68:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 45500,
                            "nodeType": "ExpressionStatement",
                            "src": "3863:68:90"
                          }
                        },
                        "id": 45544,
                        "nodeType": "IfStatement",
                        "src": "3579:737:90",
                        "trueBody": {
                          "expression": {
                            "id": 45475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 45473,
                              "name": "limitOrderFloor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41644,
                              "src": "3615:15:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 45474,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45426,
                              "src": "3633:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3615:22:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 45476,
                          "nodeType": "ExpressionStatement",
                          "src": "3615:22:90"
                        }
                      },
                      "id": 45545,
                      "nodeType": "IfStatement",
                      "src": "3472:844:90",
                      "trueBody": {
                        "expression": {
                          "id": 45468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 45461,
                              "name": "vaultConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41599,
                              "src": "3515:11:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultConfig_$41595_storage",
                                "typeString": "struct CDPVault.VaultConfig storage ref"
                              }
                            },
                            "id": 45463,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3527:22:90",
                            "memberName": "globalLiquidationRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41594,
                            "src": "3515:34:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 45466,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45426,
                                "src": "3559:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 45465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3552:6:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 45464,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "3552:6:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3552:12:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "3515:49:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 45469,
                        "nodeType": "ExpressionStatement",
                        "src": "3515:49:90"
                      }
                    },
                    "id": 45546,
                    "nodeType": "IfStatement",
                    "src": "3377:939:90",
                    "trueBody": {
                      "expression": {
                        "id": 45456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 45449,
                            "name": "vaultConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41599,
                            "src": "3414:11:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VaultConfig_$41595_storage",
                              "typeString": "struct CDPVault.VaultConfig storage ref"
                            }
                          },
                          "id": 45451,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "3426:16:90",
                          "memberName": "liquidationRatio",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41591,
                          "src": "3414:28:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 45454,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45426,
                              "src": "3452:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 45453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3445:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 45452,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "3445:6:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3445:12:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "3414:43:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 45457,
                      "nodeType": "ExpressionStatement",
                      "src": "3414:43:90"
                    }
                  },
                  "id": 45547,
                  "nodeType": "IfStatement",
                  "src": "3295:1021:90",
                  "trueBody": {
                    "expression": {
                      "id": 45444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "id": 45437,
                          "name": "vaultConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41599,
                          "src": "3325:11:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultConfig_$41595_storage",
                            "typeString": "struct CDPVault.VaultConfig storage ref"
                          }
                        },
                        "id": 45439,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "3337:9:90",
                        "memberName": "debtFloor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41588,
                        "src": "3325:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 45442,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45426,
                            "src": "3357:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 45441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3349:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 45440,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "3349:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3349:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "3325:37:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 45445,
                    "nodeType": "ExpressionStatement",
                    "src": "3325:37:90"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45549,
                        "name": "parameter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45424,
                        "src": "4344:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 45550,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45426,
                        "src": "4355:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45548,
                      "name": "SetParameter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45396,
                      "src": "4331:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 45551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4331:29:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45552,
                  "nodeType": "EmitStatement",
                  "src": "4326:34:90"
                }
              ]
            },
            "baseFunctions": [
              49743
            ],
            "documentation": {
              "id": 45422,
              "nodeType": "StructuredDocumentation",
              "src": "2951:223:90",
              "text": "@notice Sets various variables for this contract\n @dev Sender has to be allowed to call this method\n @param parameter Name of the variable to set\n @param data New value to set for the variable [wad]"
            },
            "functionSelector": "723507be",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45429,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45428,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "3243:13:90"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33535,
                  "src": "3243:13:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "3243:13:90"
              },
              {
                "arguments": [
                  {
                    "id": 45431,
                    "name": "VAULT_CONFIG_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41471,
                    "src": "3266:17:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 45432,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45430,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3257:8:90"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31953,
                  "src": "3257:8:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "3257:27:90"
              }
            ],
            "name": "setParameter",
            "nameLocation": "3188:12:90",
            "parameters": {
              "id": 45427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45424,
                  "mutability": "mutable",
                  "name": "parameter",
                  "nameLocation": "3209:9:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 45554,
                  "src": "3201:17:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45423,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3201:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45426,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3228:4:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 45554,
                  "src": "3220:12:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3220:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3200:33:90"
            },
            "returnParameters": {
              "id": 45433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3285:0:90"
            },
            "scope": 45868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45867,
            "nodeType": "FunctionDefinition",
            "src": "5449:4001:90",
            "nodes": [],
            "body": {
              "id": 45866,
              "nodeType": "Block",
              "src": "5558:3892:90",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 45566,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45558,
                        "src": "5572:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 45567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5579:6:90",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5572:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 45568,
                        "name": "repayAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45561,
                        "src": "5589:12:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 45569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5602:6:90",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5589:19:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5572:36:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45574,
                  "nodeType": "IfStatement",
                  "src": "5568:97:90",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45571,
                        "name": "CDPVault__liquidatePositions_argLengthMismatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45412,
                        "src": "5617:46:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 45572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5617:48:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 45573,
                    "nodeType": "RevertStatement",
                    "src": "5610:55:90"
                  }
                },
                {
                  "assignments": [
                    45577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45577,
                      "mutability": "mutable",
                      "name": "globalIRS",
                      "nameLocation": "5693:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 45866,
                      "src": "5676:26:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GlobalIRS_$48444_memory_ptr",
                        "typeString": "struct InterestRateModel.GlobalIRS"
                      },
                      "typeName": {
                        "id": 45576,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45575,
                          "name": "GlobalIRS",
                          "nameLocations": [
                            "5676:9:90"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 48444,
                          "src": "5676:9:90"
                        },
                        "referencedDeclaration": 48444,
                        "src": "5676:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalIRS_$48444_storage_ptr",
                          "typeString": "struct InterestRateModel.GlobalIRS"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45580,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45578,
                      "name": "getGlobalIRS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48529,
                      "src": "5705:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_GlobalIRS_$48444_memory_ptr_$",
                        "typeString": "function () view returns (struct InterestRateModel.GlobalIRS memory)"
                      }
                    },
                    "id": 45579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5705:14:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GlobalIRS_$48444_memory_ptr",
                      "typeString": "struct InterestRateModel.GlobalIRS memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5676:43:90"
                },
                {
                  "assignments": [
                    45583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45583,
                      "mutability": "mutable",
                      "name": "vaultConfig_",
                      "nameLocation": "5748:12:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 45866,
                      "src": "5729:31:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultConfig_$41595_memory_ptr",
                        "typeString": "struct CDPVault.VaultConfig"
                      },
                      "typeName": {
                        "id": 45582,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45581,
                          "name": "VaultConfig",
                          "nameLocations": [
                            "5729:11:90"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41595,
                          "src": "5729:11:90"
                        },
                        "referencedDeclaration": 41595,
                        "src": "5729:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultConfig_$41595_storage_ptr",
                          "typeString": "struct CDPVault.VaultConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45585,
                  "initialValue": {
                    "id": 45584,
                    "name": "vaultConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41599,
                    "src": "5763:11:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultConfig_$41595_storage",
                      "typeString": "struct CDPVault.VaultConfig storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5729:45:90"
                },
                {
                  "assignments": [
                    45588
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45588,
                      "mutability": "mutable",
                      "name": "liquidationConfig_",
                      "nameLocation": "5809:18:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 45866,
                      "src": "5784:43:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidationConfig_$45386_memory_ptr",
                        "typeString": "struct CDPVault_TypeA.LiquidationConfig"
                      },
                      "typeName": {
                        "id": 45587,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45586,
                          "name": "LiquidationConfig",
                          "nameLocations": [
                            "5784:17:90"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45386,
                          "src": "5784:17:90"
                        },
                        "referencedDeclaration": 45386,
                        "src": "5784:17:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidationConfig_$45386_storage_ptr",
                          "typeString": "struct CDPVault_TypeA.LiquidationConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45590,
                  "initialValue": {
                    "id": 45589,
                    "name": "liquidationConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45390,
                    "src": "5830:17:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidationConfig_$45386_storage",
                      "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5784:63:90"
                },
                {
                  "assignments": [
                    45592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45592,
                      "mutability": "mutable",
                      "name": "spotPrice_",
                      "nameLocation": "5865:10:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 45866,
                      "src": "5857:18:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45591,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5857:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45595,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45593,
                      "name": "spotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42308,
                      "src": "5878:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 45594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5878:11:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5857:32:90"
                },
                {
                  "assignments": [
                    45598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45598,
                      "mutability": "mutable",
                      "name": "cache",
                      "nameLocation": "5921:5:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 45866,
                      "src": "5900:26:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                        "typeString": "struct CDPVault.ExchangeCache"
                      },
                      "typeName": {
                        "id": 45597,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45596,
                          "name": "ExchangeCache",
                          "nameLocations": [
                            "5900:13:90"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43386,
                          "src": "5900:13:90"
                        },
                        "referencedDeclaration": 43386,
                        "src": "5900:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$43386_storage_ptr",
                          "typeString": "struct CDPVault.ExchangeCache"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45599,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5900:26:90"
                },
                {
                  "expression": {
                    "id": 45604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45600,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "5936:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 45602,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5942:9:90",
                      "memberName": "globalIRS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43367,
                      "src": "5936:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GlobalIRS_$48444_memory_ptr",
                        "typeString": "struct InterestRateModel.GlobalIRS memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45603,
                      "name": "globalIRS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45577,
                      "src": "5954:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GlobalIRS_$48444_memory_ptr",
                        "typeString": "struct InterestRateModel.GlobalIRS memory"
                      }
                    },
                    "src": "5936:27:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GlobalIRS_$48444_memory_ptr",
                      "typeString": "struct InterestRateModel.GlobalIRS memory"
                    }
                  },
                  "id": 45605,
                  "nodeType": "ExpressionStatement",
                  "src": "5936:27:90"
                },
                {
                  "expression": {
                    "id": 45610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45606,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "5973:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 45608,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5979:15:90",
                      "memberName": "totalNormalDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43369,
                      "src": "5973:21:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45609,
                      "name": "totalNormalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41602,
                      "src": "5997:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5973:39:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45611,
                  "nodeType": "ExpressionStatement",
                  "src": "5973:39:90"
                },
                {
                  "expression": {
                    "id": 45617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45612,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "6022:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 45614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6028:9:90",
                      "memberName": "debtFloor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43377,
                      "src": "6022:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45615,
                        "name": "vaultConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41599,
                        "src": "6040:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultConfig_$41595_storage",
                          "typeString": "struct CDPVault.VaultConfig storage ref"
                        }
                      },
                      "id": 45616,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6052:9:90",
                      "memberName": "debtFloor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41588,
                      "src": "6040:21:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "6022:39:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45618,
                  "nodeType": "ExpressionStatement",
                  "src": "6022:39:90"
                },
                {
                  "expression": {
                    "id": 45627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45619,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "6071:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 45621,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6077:14:90",
                      "memberName": "settlementRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43379,
                      "src": "6071:20:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45623,
                          "name": "spotPrice_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45592,
                          "src": "6099:10:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 45624,
                            "name": "liquidationConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45390,
                            "src": "6111:17:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LiquidationConfig_$45386_storage",
                              "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                            }
                          },
                          "id": 45625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6129:19:90",
                          "memberName": "liquidationDiscount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45383,
                          "src": "6111:37:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 45622,
                        "name": "wmul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          129291,
                          129314
                        ],
                        "referencedDeclaration": 129291,
                        "src": "6094:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 45626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6094:55:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6071:78:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45628,
                  "nodeType": "ExpressionStatement",
                  "src": "6071:78:90"
                },
                {
                  "expression": {
                    "id": 45634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45629,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "6159:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 45631,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6165:17:90",
                      "memberName": "settlementPenalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43381,
                      "src": "6159:23:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45632,
                        "name": "liquidationConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45390,
                        "src": "6185:17:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidationConfig_$45386_storage",
                          "typeString": "struct CDPVault_TypeA.LiquidationConfig storage ref"
                        }
                      },
                      "id": 45633,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6203:18:90",
                      "memberName": "liquidationPenalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45381,
                      "src": "6185:36:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "6159:62:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45635,
                  "nodeType": "ExpressionStatement",
                  "src": "6159:62:90"
                },
                {
                  "assignments": [
                    45637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45637,
                      "mutability": "mutable",
                      "name": "rateAccumulator",
                      "nameLocation": "6239:15:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 45866,
                      "src": "6232:22:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 45636,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "6232:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45643,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45639,
                        "name": "globalIRS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45577,
                        "src": "6283:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalIRS_$48444_memory_ptr",
                          "typeString": "struct InterestRateModel.GlobalIRS memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 45640,
                          "name": "cache",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45598,
                          "src": "6294:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                            "typeString": "struct CDPVault.ExchangeCache memory"
                          }
                        },
                        "id": 45641,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6300:15:90",
                        "memberName": "totalNormalDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43369,
                        "src": "6294:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalIRS_$48444_memory_ptr",
                          "typeString": "struct InterestRateModel.GlobalIRS memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45638,
                      "name": "_calculateRateAccumulator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        42175,
                        48660
                      ],
                      "referencedDeclaration": 42175,
                      "src": "6257:25:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_GlobalIRS_$48444_memory_ptr_$_t_uint256_$returns$_t_uint64_$",
                        "typeString": "function (struct InterestRateModel.GlobalIRS memory,uint256) view returns (uint64)"
                      }
                    },
                    "id": 45642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6257:59:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6232:84:90"
                },
                {
                  "body": {
                    "id": 45804,
                    "nodeType": "Block",
                    "src": "6364:2010:90",
                    "statements": [
                      {
                        "assignments": [
                          45652
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 45652,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "6386:5:90",
                            "nodeType": "VariableDeclaration",
                            "scope": 45804,
                            "src": "6378:13:90",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 45651,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6378:7:90",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 45656,
                        "initialValue": {
                          "baseExpression": {
                            "id": 45653,
                            "name": "owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45558,
                            "src": "6394:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 45655,
                          "indexExpression": {
                            "id": 45654,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45645,
                            "src": "6401:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6394:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6378:25:90"
                      },
                      {
                        "condition": {
                          "id": 45670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6421:46:90",
                          "subExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 45668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 45662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 45657,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45652,
                                    "src": "6423:5:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 45660,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6440:1:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 45659,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6432:7:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 45658,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6432:7:90",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 45661,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6432:10:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "6423:19:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 45667,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 45663,
                                      "name": "repayAmounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45561,
                                      "src": "6446:12:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 45665,
                                    "indexExpression": {
                                      "id": 45664,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45645,
                                      "src": "6459:1:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6446:15:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 45666,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6465:1:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6446:20:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6423:43:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 45669,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6422:45:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 45799,
                        "nodeType": "IfStatement",
                        "src": "6417:1915:90",
                        "trueBody": {
                          "id": 45798,
                          "nodeType": "Block",
                          "src": "6469:1863:90",
                          "statements": [
                            {
                              "assignments": [
                                45673
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 45673,
                                  "mutability": "mutable",
                                  "name": "position",
                                  "nameLocation": "6503:8:90",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 45798,
                                  "src": "6487:24:90",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                                    "typeString": "struct CDPVault.Position"
                                  },
                                  "typeName": {
                                    "id": 45672,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 45671,
                                      "name": "Position",
                                      "nameLocations": [
                                        "6487:8:90"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 41615,
                                      "src": "6487:8:90"
                                    },
                                    "referencedDeclaration": 41615,
                                    "src": "6487:8:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Position_$41615_storage_ptr",
                                      "typeString": "struct CDPVault.Position"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 45677,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 45674,
                                  "name": "positions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41621,
                                  "src": "6514:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$41615_storage_$",
                                    "typeString": "mapping(address => struct CDPVault.Position storage ref)"
                                  }
                                },
                                "id": 45676,
                                "indexExpression": {
                                  "id": 45675,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45652,
                                  "src": "6524:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6514:16:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Position_$41615_storage",
                                  "typeString": "struct CDPVault.Position storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6487:43:90"
                            },
                            {
                              "assignments": [
                                45680
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 45680,
                                  "mutability": "mutable",
                                  "name": "positionIRS",
                                  "nameLocation": "6567:11:90",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 45798,
                                  "src": "6548:30:90",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PositionIRS_$48455_memory_ptr",
                                    "typeString": "struct InterestRateModel.PositionIRS"
                                  },
                                  "typeName": {
                                    "id": 45679,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 45678,
                                      "name": "PositionIRS",
                                      "nameLocations": [
                                        "6548:11:90"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 48455,
                                      "src": "6548:11:90"
                                    },
                                    "referencedDeclaration": 48455,
                                    "src": "6548:11:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PositionIRS_$48455_storage_ptr",
                                      "typeString": "struct InterestRateModel.PositionIRS"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 45687,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 45682,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45652,
                                    "src": "6604:5:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 45683,
                                      "name": "position",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45673,
                                      "src": "6611:8:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                                        "typeString": "struct CDPVault.Position memory"
                                      }
                                    },
                                    "id": 45684,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6620:10:90",
                                    "memberName": "normalDebt",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 41614,
                                    "src": "6611:19:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 45685,
                                    "name": "rateAccumulator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45637,
                                    "src": "6632:15:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "id": 45681,
                                  "name": "_getUpdatedPositionIRS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43422,
                                  "src": "6581:22:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint64_$returns$_t_struct$_PositionIRS_$48455_memory_ptr_$",
                                    "typeString": "function (address,uint256,uint64) view returns (struct InterestRateModel.PositionIRS memory)"
                                  }
                                },
                                "id": 45686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6581:67:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PositionIRS_$48455_memory_ptr",
                                  "typeString": "struct InterestRateModel.PositionIRS memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6548:100:90"
                            },
                            {
                              "assignments": [
                                45689
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 45689,
                                  "mutability": "mutable",
                                  "name": "debt",
                                  "nameLocation": "6739:4:90",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 45798,
                                  "src": "6731:12:90",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 45688,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6731:7:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 45697,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 45691,
                                      "name": "position",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45673,
                                      "src": "6760:8:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                                        "typeString": "struct CDPVault.Position memory"
                                      }
                                    },
                                    "id": 45692,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6769:10:90",
                                    "memberName": "normalDebt",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 41614,
                                    "src": "6760:19:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 45693,
                                    "name": "rateAccumulator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45637,
                                    "src": "6781:15:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 45694,
                                      "name": "positionIRS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45680,
                                      "src": "6798:11:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PositionIRS_$48455_memory_ptr",
                                        "typeString": "struct InterestRateModel.PositionIRS memory"
                                      }
                                    },
                                    "id": 45695,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6810:13:90",
                                    "memberName": "accruedRebate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48454,
                                    "src": "6798:25:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "id": 45690,
                                  "name": "calculateDebt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41503,
                                  "src": "6746:13:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint64_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint64,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 45696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6746:78:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6731:93:90"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 45709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 45700,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 45698,
                                    "name": "spotPrice_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45592,
                                    "src": "6908:10:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 45699,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6922:1:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6908:15:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 45702,
                                      "name": "debt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45689,
                                      "src": "6966:4:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 45703,
                                        "name": "position",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45673,
                                        "src": "6972:8:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                                          "typeString": "struct CDPVault.Position memory"
                                        }
                                      },
                                      "id": 45704,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6981:10:90",
                                      "memberName": "collateral",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 41612,
                                      "src": "6972:19:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 45705,
                                      "name": "spotPrice_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45592,
                                      "src": "6993:10:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 45706,
                                        "name": "vaultConfig_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45583,
                                        "src": "7005:12:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_VaultConfig_$41595_memory_ptr",
                                          "typeString": "struct CDPVault.VaultConfig memory"
                                        }
                                      },
                                      "id": 45707,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7018:16:90",
                                      "memberName": "liquidationRatio",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 41591,
                                      "src": "7005:29:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    ],
                                    "id": 45701,
                                    "name": "_isCollateralized",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42646,
                                    "src": "6927:17:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (uint256,uint256,uint256,uint256) pure returns (bool)"
                                    }
                                  },
                                  "id": 45708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6927:125:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6908:144:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 45713,
                              "nodeType": "IfStatement",
                              "src": "6904:196:90",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 45710,
                                    "name": "CDPVault__liquidatePosition_notUnsafe",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45410,
                                    "src": "7061:37:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 45711,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7061:39:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 45712,
                                "nodeType": "RevertStatement",
                                "src": "7054:46:90"
                              }
                            },
                            {
                              "assignments": [
                                45715
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 45715,
                                  "mutability": "mutable",
                                  "name": "maxDebtToRecover",
                                  "nameLocation": "7313:16:90",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 45798,
                                  "src": "7305:24:90",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 45714,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7305:7:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 45716,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7305:24:90"
                            },
                            {
                              "id": 45773,
                              "nodeType": "Block",
                              "src": "7347:642:90",
                              "statements": [
                                {
                                  "assignments": [
                                    45718
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 45718,
                                      "mutability": "mutable",
                                      "name": "nominator",
                                      "nameLocation": "7373:9:90",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 45773,
                                      "src": "7365:17:90",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "typeName": {
                                        "id": 45717,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7365:7:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 45719,
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7365:17:90"
                                },
                                {
                                  "id": 45742,
                                  "nodeType": "Block",
                                  "src": "7400:234:90",
                                  "statements": [
                                    {
                                      "assignments": [
                                        45721
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 45721,
                                          "mutability": "mutable",
                                          "name": "collateralValue",
                                          "nameLocation": "7426:15:90",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 45742,
                                          "src": "7418:23:90",
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 45720,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7418:7:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 45731,
                                      "initialValue": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 45724,
                                                  "name": "position",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 45673,
                                                  "src": "7454:8:90",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                                                    "typeString": "struct CDPVault.Position memory"
                                                  }
                                                },
                                                "id": 45725,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "7463:10:90",
                                                "memberName": "collateral",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 41612,
                                                "src": "7454:19:90",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "id": 45726,
                                                "name": "spotPrice_",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 45592,
                                                "src": "7475:10:90",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 45723,
                                              "name": "wmul",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [
                                                129291,
                                                129314
                                              ],
                                              "referencedDeclaration": 129291,
                                              "src": "7449:4:90",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 45727,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "7449:37:90",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 45728,
                                              "name": "vaultConfig_",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 45583,
                                              "src": "7488:12:90",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_VaultConfig_$41595_memory_ptr",
                                                "typeString": "struct CDPVault.VaultConfig memory"
                                              }
                                            },
                                            "id": 45729,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7501:16:90",
                                            "memberName": "liquidationRatio",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 41591,
                                            "src": "7488:29:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            }
                                          ],
                                          "id": 45722,
                                          "name": "wdiv",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 129338,
                                          "src": "7444:4:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 45730,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7444:74:90",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "7418:100:90"
                                    },
                                    {
                                      "expression": {
                                        "id": 45740,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 45732,
                                          "name": "nominator",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45718,
                                          "src": "7536:9:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 45739,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 45734,
                                                  "name": "liquidationConfig_",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 45588,
                                                  "src": "7553:18:90",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LiquidationConfig_$45386_memory_ptr",
                                                    "typeString": "struct CDPVault_TypeA.LiquidationConfig memory"
                                                  }
                                                },
                                                "id": 45735,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "7572:18:90",
                                                "memberName": "targetHealthFactor",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 45385,
                                                "src": "7553:37:90",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint64",
                                                  "typeString": "uint64"
                                                }
                                              },
                                              {
                                                "id": 45736,
                                                "name": "debt",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 45689,
                                                "src": "7592:4:90",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint64",
                                                  "typeString": "uint64"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 45733,
                                              "name": "wmul",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [
                                                129291,
                                                129314
                                              ],
                                              "referencedDeclaration": 129291,
                                              "src": "7548:4:90",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 45737,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "7548:49:90",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 45738,
                                            "name": "collateralValue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45721,
                                            "src": "7600:15:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "7548:67:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7536:79:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 45741,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7536:79:90"
                                    }
                                  ]
                                },
                                {
                                  "assignments": [
                                    45744
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 45744,
                                      "mutability": "mutable",
                                      "name": "discountRatio",
                                      "nameLocation": "7659:13:90",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 45773,
                                      "src": "7651:21:90",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "typeName": {
                                        "id": 45743,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7651:7:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 45751,
                                  "initialValue": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 45746,
                                          "name": "vaultConfig_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45583,
                                          "src": "7680:12:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_VaultConfig_$41595_memory_ptr",
                                            "typeString": "struct CDPVault.VaultConfig memory"
                                          }
                                        },
                                        "id": 45747,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7693:16:90",
                                        "memberName": "liquidationRatio",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 41591,
                                        "src": "7680:29:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 45748,
                                          "name": "liquidationConfig_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45588,
                                          "src": "7711:18:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LiquidationConfig_$45386_memory_ptr",
                                            "typeString": "struct CDPVault_TypeA.LiquidationConfig memory"
                                          }
                                        },
                                        "id": 45749,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7730:19:90",
                                        "memberName": "liquidationDiscount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 45383,
                                        "src": "7711:38:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        },
                                        {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      ],
                                      "id": 45745,
                                      "name": "wmul",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        129291,
                                        129314
                                      ],
                                      "referencedDeclaration": 129291,
                                      "src": "7675:4:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 45750,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7675:75:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7651:99:90"
                                },
                                {
                                  "assignments": [
                                    45753
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 45753,
                                      "mutability": "mutable",
                                      "name": "denominator",
                                      "nameLocation": "7776:11:90",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 45773,
                                      "src": "7768:19:90",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "typeName": {
                                        "id": 45752,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7768:7:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 45765,
                                  "initialValue": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 45764,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 45755,
                                            "name": "liquidationConfig_",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45588,
                                            "src": "7795:18:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LiquidationConfig_$45386_memory_ptr",
                                              "typeString": "struct CDPVault_TypeA.LiquidationConfig memory"
                                            }
                                          },
                                          "id": 45756,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "7814:18:90",
                                          "memberName": "targetHealthFactor",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 45385,
                                          "src": "7795:37:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 45757,
                                            "name": "cache",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45598,
                                            "src": "7834:5:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                                              "typeString": "struct CDPVault.ExchangeCache memory"
                                            }
                                          },
                                          "id": 45758,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "7840:17:90",
                                          "memberName": "settlementPenalty",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 43381,
                                          "src": "7834:23:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 45754,
                                        "name": "wmul",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          129291,
                                          129314
                                        ],
                                        "referencedDeclaration": 129291,
                                        "src": "7790:4:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 45759,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7790:68:90",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 45761,
                                          "name": "WAD",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 129076,
                                          "src": "7886:3:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 45762,
                                          "name": "discountRatio",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45744,
                                          "src": "7891:13:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 45760,
                                        "name": "wdiv",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 129338,
                                        "src": "7881:4:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 45763,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7881:24:90",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7790:115:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7768:137:90"
                                },
                                {
                                  "expression": {
                                    "id": 45771,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 45766,
                                      "name": "maxDebtToRecover",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45715,
                                      "src": "7923:16:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "id": 45768,
                                          "name": "nominator",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45718,
                                          "src": "7947:9:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 45769,
                                          "name": "denominator",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45753,
                                          "src": "7958:11:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 45767,
                                        "name": "wdiv",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 129338,
                                        "src": "7942:4:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 45770,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7942:28:90",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7923:47:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 45772,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7923:47:90"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "id": 45787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 45774,
                                    "name": "cache",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45598,
                                    "src": "8083:5:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                                      "typeString": "struct CDPVault.ExchangeCache memory"
                                    }
                                  },
                                  "id": 45776,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8089:19:90",
                                  "memberName": "maxCreditToExchange",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43383,
                                  "src": "8083:25:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 45778,
                                        "name": "repayAmounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45561,
                                        "src": "8115:12:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 45780,
                                      "indexExpression": {
                                        "id": 45779,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45645,
                                        "src": "8128:1:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8115:15:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 45782,
                                          "name": "maxDebtToRecover",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45715,
                                          "src": "8137:16:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 45783,
                                            "name": "cache",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45598,
                                            "src": "8155:5:90",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                                              "typeString": "struct CDPVault.ExchangeCache memory"
                                            }
                                          },
                                          "id": 45784,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "8161:17:90",
                                          "memberName": "settlementPenalty",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 43381,
                                          "src": "8155:23:90",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 45781,
                                        "name": "wdiv",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 129338,
                                        "src": "8132:4:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 45785,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8132:47:90",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 45777,
                                    "name": "min",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      129144,
                                      129156
                                    ],
                                    "referencedDeclaration": 129144,
                                    "src": "8111:3:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 45786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8111:69:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8083:97:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 45788,
                              "nodeType": "ExpressionStatement",
                              "src": "8083:97:90"
                            },
                            {
                              "expression": {
                                "id": 45796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 45789,
                                  "name": "cache",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45598,
                                  "src": "8241:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                                    "typeString": "struct CDPVault.ExchangeCache memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 45791,
                                      "name": "cache",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45598,
                                      "src": "8281:5:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                                        "typeString": "struct CDPVault.ExchangeCache memory"
                                      }
                                    },
                                    {
                                      "id": 45792,
                                      "name": "position",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45673,
                                      "src": "8288:8:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                                        "typeString": "struct CDPVault.Position memory"
                                      }
                                    },
                                    {
                                      "id": 45793,
                                      "name": "positionIRS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45680,
                                      "src": "8298:11:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PositionIRS_$48455_memory_ptr",
                                        "typeString": "struct InterestRateModel.PositionIRS memory"
                                      }
                                    },
                                    {
                                      "id": 45794,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45652,
                                      "src": "8311:5:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                                        "typeString": "struct CDPVault.ExchangeCache memory"
                                      },
                                      {
                                        "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                                        "typeString": "struct CDPVault.Position memory"
                                      },
                                      {
                                        "typeIdentifier": "t_struct$_PositionIRS_$48455_memory_ptr",
                                        "typeString": "struct InterestRateModel.PositionIRS memory"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 45790,
                                    "name": "_settleDebtAndReleaseCollateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 43660,
                                    "src": "8249:31:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ExchangeCache_$43386_memory_ptr_$_t_struct$_Position_$41615_memory_ptr_$_t_struct$_PositionIRS_$48455_memory_ptr_$_t_address_$returns$_t_struct$_ExchangeCache_$43386_memory_ptr_$",
                                      "typeString": "function (struct CDPVault.ExchangeCache memory,struct CDPVault.Position memory,struct InterestRateModel.PositionIRS memory,address) returns (struct CDPVault.ExchangeCache memory)"
                                    }
                                  },
                                  "id": 45795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8249:68:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                                    "typeString": "struct CDPVault.ExchangeCache memory"
                                  }
                                },
                                "src": "8241:76:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                                  "typeString": "struct CDPVault.ExchangeCache memory"
                                }
                              },
                              "id": 45797,
                              "nodeType": "ExpressionStatement",
                              "src": "8241:76:90"
                            }
                          ]
                        }
                      },
                      {
                        "id": 45803,
                        "nodeType": "UncheckedBlock",
                        "src": "8346:18:90",
                        "statements": [
                          {
                            "expression": {
                              "id": 45801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8358:3:90",
                              "subExpression": {
                                "id": 45800,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45645,
                                "src": "8360:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 45802,
                            "nodeType": "ExpressionStatement",
                            "src": "8358:3:90"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45647,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45645,
                      "src": "6343:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 45648,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45558,
                        "src": "6347:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 45649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6354:6:90",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6347:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6343:17:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45805,
                  "initializationExpression": {
                    "assignments": [
                      45645
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45645,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6340:1:90",
                        "nodeType": "VariableDeclaration",
                        "scope": 45805,
                        "src": "6332:9:90",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45644,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6332:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 45646,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6332:9:90"
                  },
                  "nodeType": "ForStatement",
                  "src": "6327:2047:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45807,
                          "name": "cache",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45598,
                          "src": "8570:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                            "typeString": "struct CDPVault.ExchangeCache memory"
                          }
                        },
                        "id": 45808,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8576:9:90",
                        "memberName": "globalIRS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43367,
                        "src": "8570:15:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalIRS_$48444_memory_ptr",
                          "typeString": "struct InterestRateModel.GlobalIRS memory"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45809,
                            "name": "cache",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45598,
                            "src": "8599:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                              "typeString": "struct CDPVault.ExchangeCache memory"
                            }
                          },
                          "id": 45810,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8605:15:90",
                          "memberName": "accruedInterest",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43375,
                          "src": "8599:21:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 45812,
                                "name": "cache",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45598,
                                "src": "8628:5:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                                  "typeString": "struct CDPVault.ExchangeCache memory"
                                }
                              },
                              "id": 45813,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8634:15:90",
                              "memberName": "creditExchanged",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43373,
                              "src": "8628:21:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 45817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 45814,
                                "name": "WAD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 129076,
                                "src": "8651:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 45815,
                                  "name": "cache",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45598,
                                  "src": "8657:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                                    "typeString": "struct CDPVault.ExchangeCache memory"
                                  }
                                },
                                "id": 45816,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8663:17:90",
                                "memberName": "settlementPenalty",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43381,
                                "src": "8657:23:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8651:29:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 45811,
                            "name": "wmul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              129291,
                              129314
                            ],
                            "referencedDeclaration": 129291,
                            "src": "8623:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 45818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8623:58:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8599:82:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 45820,
                          "name": "cache",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45598,
                          "src": "8695:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                            "typeString": "struct CDPVault.ExchangeCache memory"
                          }
                        },
                        "id": 45821,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8701:15:90",
                        "memberName": "totalNormalDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43369,
                        "src": "8695:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45822,
                        "name": "spotPrice_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45592,
                        "src": "8730:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 45823,
                          "name": "vaultConfig_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45583,
                          "src": "8754:12:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultConfig_$41595_memory_ptr",
                            "typeString": "struct CDPVault.VaultConfig memory"
                          }
                        },
                        "id": 45824,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8767:22:90",
                        "memberName": "globalLiquidationRatio",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41594,
                        "src": "8754:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalIRS_$48444_memory_ptr",
                          "typeString": "struct InterestRateModel.GlobalIRS memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 45806,
                      "name": "_checkForEmergencyModeAndStoreGlobalIRSAndCollectFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42426,
                      "src": "8503:53:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_GlobalIRS_$48444_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
                        "typeString": "function (struct InterestRateModel.GlobalIRS memory,uint256,uint256,uint256,uint64) returns (uint256)"
                      }
                    },
                    "id": 45825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8503:296:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45826,
                  "nodeType": "ExpressionStatement",
                  "src": "8503:296:90"
                },
                {
                  "expression": {
                    "id": 45830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45827,
                      "name": "totalNormalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41602,
                      "src": "8867:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45828,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "8885:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 45829,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8891:15:90",
                      "memberName": "totalNormalDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43369,
                      "src": "8885:21:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8867:39:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45831,
                  "nodeType": "ExpressionStatement",
                  "src": "8867:39:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45835,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9005:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9009:6:90",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9005:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45839,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9025:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CDPVault_TypeA_$45868",
                              "typeString": "contract CDPVault_TypeA"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CDPVault_TypeA_$45868",
                              "typeString": "contract CDPVault_TypeA"
                            }
                          ],
                          "id": 45838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9017:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45837,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9017:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9017:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 45841,
                          "name": "cache",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45598,
                          "src": "9032:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                            "typeString": "struct CDPVault.ExchangeCache memory"
                          }
                        },
                        "id": 45842,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9038:15:90",
                        "memberName": "creditExchanged",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43373,
                        "src": "9032:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45832,
                        "name": "cdm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41561,
                        "src": "8987:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDM_$49221",
                          "typeString": "contract ICDM"
                        }
                      },
                      "id": 45834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8991:13:90",
                      "memberName": "modifyBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49220,
                      "src": "8987:17:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 45843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8987:67:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45844,
                  "nodeType": "ExpressionStatement",
                  "src": "8987:67:90"
                },
                {
                  "expression": {
                    "id": 45851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45845,
                        "name": "cash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41610,
                        "src": "9134:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 45848,
                      "indexExpression": {
                        "expression": {
                          "id": 45846,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9139:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9143:6:90",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9139:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9134:16:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45849,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "9154:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 45850,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9160:19:90",
                      "memberName": "collateralExchanged",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43371,
                      "src": "9154:25:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9134:45:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45852,
                  "nodeType": "ExpressionStatement",
                  "src": "9134:45:90"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 45853,
                        "name": "cache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "9303:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                          "typeString": "struct CDPVault.ExchangeCache memory"
                        }
                      },
                      "id": 45854,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9309:14:90",
                      "memberName": "accruedBadDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43385,
                      "src": "9303:20:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 45855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9327:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9303:25:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45865,
                  "nodeType": "IfStatement",
                  "src": "9299:145:90",
                  "trueBody": {
                    "id": 45864,
                    "nodeType": "Block",
                    "src": "9330:114:90",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 45860,
                                "name": "cache",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45598,
                                "src": "9411:5:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeCache_$43386_memory_ptr",
                                  "typeString": "struct CDPVault.ExchangeCache memory"
                                }
                              },
                              "id": 45861,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9417:14:90",
                              "memberName": "accruedBadDebt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43385,
                              "src": "9411:20:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 45857,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41569,
                              "src": "9396:6:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBuffer_$49163",
                                "typeString": "contract IBuffer"
                              }
                            },
                            "id": 45859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9403:7:90",
                            "memberName": "bailOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49162,
                            "src": "9396:14:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 45862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9396:36:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 45863,
                        "nodeType": "ExpressionStatement",
                        "src": "9396:36:90"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              49761
            ],
            "documentation": {
              "id": 45555,
              "nodeType": "StructuredDocumentation",
              "src": "4554:890:90",
              "text": "@notice Liquidates multiple unsafe positions by selling as much collateral as required to cover the debt in\n order to make the positions safe again. The collateral can be bought at a discount (`liquidationDiscount`) to\n the current spot price. The liquidator has to provide the amount he wants repay or sell (`repayAmounts`) for\n each position. From that repay amount a penalty (`liquidationPenalty`) is subtracted to mitigate against\n profitable self liquidations. If the available collateral of a position is not sufficient to cover the debt\n the vault is able to apply for a bail out from the global Buffer.\n @dev The liquidator has to approve the vault to transfer the sum of `repayAmounts`.\n @param owners Owners of the positions to liquidate\n @param repayAmounts Amounts the liquidator wants to repay for each position [wad]"
            },
            "functionSelector": "df10f687",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45563,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "5544:13:90"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33535,
                  "src": "5544:13:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "5544:13:90"
              }
            ],
            "name": "liquidatePositions",
            "nameLocation": "5458:18:90",
            "parameters": {
              "id": 45562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45558,
                  "mutability": "mutable",
                  "name": "owners",
                  "nameLocation": "5496:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 45867,
                  "src": "5477:25:90",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45556,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5477:7:90",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 45557,
                    "nodeType": "ArrayTypeName",
                    "src": "5477:9:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45561,
                  "mutability": "mutable",
                  "name": "repayAmounts",
                  "nameLocation": "5521:12:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 45867,
                  "src": "5504:29:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45559,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5504:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45560,
                    "nodeType": "ArrayTypeName",
                    "src": "5504:9:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5476:58:90"
            },
            "returnParameters": {
              "id": 45565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5558:0:90"
            },
            "scope": 45868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45376,
              "name": "CDPVault",
              "nameLocations": [
                "699:8:90"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43991,
              "src": "699:8:90"
            },
            "id": 45377,
            "nodeType": "InheritanceSpecifier",
            "src": "699:8:90"
          },
          {
            "baseName": {
              "id": 45378,
              "name": "ICDPVault_TypeA",
              "nameLocations": [
                "709:15:90"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49762,
              "src": "709:15:90"
            },
            "id": 45379,
            "nodeType": "InheritanceSpecifier",
            "src": "709:15:90"
          }
        ],
        "canonicalName": "CDPVault_TypeA",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 45375,
          "nodeType": "StructuredDocumentation",
          "src": "262:410:90",
          "text": "@title CDPVault_TypeA\n @notice A CDP-style vault for depositing collateral and drawing credit against it.\n TypeA vaults are liquidated permissionlessly by selling as much collateral of an unsafe position until it meets\n a targeted collateralization ratio again. Any shortfall from liquidation not being able to be recovered\n by selling the available collateral is covered by the global Buffer."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45868,
          49762,
          43991,
          49438,
          48879,
          129584,
          50279,
          129428,
          50251,
          33608,
          32230,
          37491,
          37503,
          32428,
          36317
        ],
        "name": "CDPVault_TypeA",
        "nameLocation": "681:14:90",
        "scope": 45869,
        "usedErrors": [
          41706,
          41708,
          41710,
          41712,
          41714,
          41716,
          41718,
          41720,
          41722,
          41724,
          41726,
          41728,
          45408,
          45410,
          45412,
          48479,
          128787,
          128789,
          128791,
          129061,
          129063,
          129065,
          129067,
          129069,
          129453
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 90
}