{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "flashlender_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "swapAction_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Action__revertBytes_emptyRevertBytes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toInt256_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__borrow_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidResidualRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__deposit_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onCreditFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onlyDelegatecall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__repay_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS_CREDIT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cdm",
      "outputs": [
        {
          "internalType": "contract ICDM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "subCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "residualRecipient",
          "type": "address"
        }
      ],
      "name": "decreaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "depositAndBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flashlender",
      "outputs": [
        {
          "internalType": "contract IFlashlender",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "upFrontToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "upFrontAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "increaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "contract IMinter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        },
        {
          "internalType": "bool[]",
          "name": "delegateCall",
          "type": "bool[]"
        }
      ],
      "name": "multisend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onCreditFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "self",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IStablecoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapAction",
      "outputs": [
        {
          "internalType": "contract SwapAction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "withdrawAndRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b506040516200488c3803806200488c8339810160408190526200003591620002bb565b8181816001600160a01b031660a0816001600160a01b03168152505060a0516001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000092573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b89190620002fa565b6001600160a01b031660c0816001600160a01b03168152505060a0516001600160a01b031663075461726040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000112573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001389190620002fa565b6001600160a01b031660e0816001600160a01b03168152505060a0516001600160a01b031663e2dfb3176040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000192573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b89190620002fa565b6001600160a01b03908116608081905230610100528282166101205260e05160405163d9c70f5760e01b815292166004830152600160248301529063d9c70f5790604401600060405180830381600087803b1580156200021757600080fd5b505af11580156200022c573d6000803e3d6000fd5b505060805160405163d9c70f5760e01b81526001600160a01b03868116600483015260016024830152909116925063d9c70f579150604401600060405180830381600087803b1580156200027f57600080fd5b505af115801562000294573d6000803e3d6000fd5b505050505050505062000321565b6001600160a01b0381168114620002b857600080fd5b50565b60008060408385031215620002cf57600080fd5b8251620002dc81620002a2565b6020840151909250620002ef81620002a2565b809150509250929050565b6000602082840312156200030d57600080fd5b81516200031a81620002a2565b9392505050565b60805160a05160c05160e051610100516101205161438562000507600039600081816102a601528181610a7701528181610c7701528181610d8a01528181610de7015281816124e7015281816125830152612a82015260008181610245015281816103800152818161044e015281816104d001528181610644015281816106e8015281816107cb015281816110650152818161114c01528181611223015281816112f2015281816114ec015281816115c8015281816116df0152818161176c0152818161179d015281816117fe015281816118a2015281816119a7015281816119f00152611bce01526000818161014b01528181610b5f01528181610beb01528181610f01015281816121850152818161221c015281816122ed0152818161236401528181612414015281816127d2015261285701526000818161030701528181610b3201528181610f870152818161156e015281816118c3015281816124790152818161274b01526127a501526000818161032e015281816106bd0152818161084e01528181610d1601528181610fbc01526118770152600081816102e0015281816108ed01528181610a04015281816113540152818161146201528181611c3001528181611d2d01528181612156015281816122bc01526123e301526143856000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637104ddb2116100ad578063e2dfb31711610071578063e2dfb317146102db578063e9cbd82214610302578063ee58918a14610329578063f38584e014610350578063faa994051461036357600080fd5b80637104ddb2146102405780638237e5381461026757806396c2c4081461028e578063a888828b146102a1578063aad598ae146102c857600080fd5b806316d8f165116100f457806316d8f165146101e157806323e30c8b146101f45780634ad4d4ad1461020757806356415a901461021a5780636c7470571461022d57600080fd5b80630567d4b11461013157806307546172146101465780630b839bf2146101835780630f13be2a1461019657806312261ee7146101cb575b600080fd5b61014461013f366004613384565b610376565b005b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b60405161017a91906133f8565b60405180910390f35b61014461019136600461341e565b610444565b6101bd7f24ea9631d6c6b69006fd9fa411bb9c8909638fd1d178dd2f1d231dca3e3e4d7981565b60405190815260200161017a565b61016d6e22d473030f116ddee9f6b43ac78ba381565b6101bd6101ef3660046134c0565b610841565b6101bd610202366004613529565b610d09565b6101446102153660046135b6565b61105b565b610144610228366004613651565b611142565b61014461023b3660046136b2565b611219565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b6101bd7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd981565b61014461029c3660046135b6565b6112e8565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b6101446102d6366004613709565b6114e2565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b61014461035e3660046137bf565b6119e6565b610144610371366004613846565b611bc4565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103bf5760405163f46a288f60e01b815260040160405180910390fd5b60006103cc848484611d97565b9050836001600160a01b031663c75a4b5e8630306103e986611ef8565b60006040518663ffffffff1660e01b815260040161040b95949392919061389f565b600060405180830381600087803b15801561042557600080fd5b505af1158015610439573d6000803e3d6000fd5b505050505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361048d5760405163f46a288f60e01b815260040160405180910390fd5b600161049c60608501856138e9565b6104ad906040810190602001613918565b60018111156104be576104be6138d3565b14158061051a57506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166104fd60608501856138e9565b61050e9060c081019060a001613933565b6001600160a01b031614155b15610538576040516338ef377d60e01b815260040160405180910390fd5b600061054760808501856138e9565b610558906060810190604001613933565b6001600160a01b03161415801561059e5750600061057960808501856138e9565b61058a906040810190602001613918565b600181111561059b5761059b6138d3565b14155b156105bc57604051630e6c295f60e11b815260040160405180910390fd5b60006105cb60808501856138e9565b6105dc906060810190604001613933565b6001600160a01b03161480156105f957506001600160a01b038116155b156106175760405163163a7c2d60e01b815260040160405180910390fd5b6106276040840160208501613933565b6001600160a01b0316638309dbdd6106426020860186613933565b7f000000000000000000000000000000000000000000000000000000000000000060016040518463ffffffff1660e01b815260040161068393929190613950565b600060405180830381600087803b15801561069d57600080fd5b505af11580156106b1573d6000803e3d6000fd5b50506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150637b644bad90507f000000000000000000000000000000000000000000000000000000000000000061071460608701876138e9565b6060013586868660405160200161072d93929190613b70565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161075a93929190613bf3565b6020604051808303816000875af1158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d9190613c28565b506107ae6040840160208501613933565b6001600160a01b0316638309dbdd6107c96020860186613933565b7f000000000000000000000000000000000000000000000000000000000000000060006040518463ffffffff1660e01b815260040161080a93929190613950565b600060405180830381600087803b15801561082457600080fd5b505af1158015610838573d6000803e3d6000fd5b50505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461088c576040516351b8314560e11b815260040160405180910390fd5b6000808061089c85870187613e7f565b92509250925060006108bf84602001518560000151866060015160600151611f22565b602085015160405163d9c70f5760e01b81526001600160a01b039182166004820152600160248201529192507f0000000000000000000000000000000000000000000000000000000000000000169063d9c70f5790604401600060405180830381600087803b15801561093157600080fd5b505af1158015610945573d6000803e3d6000fd5b5050505083602001516001600160a01b031663c75a4b5e8560000151303061096c88611ef8565b61097590613ecc565b61097e87611ef8565b61098790613ecc565b6040518663ffffffff1660e01b81526004016109a795949392919061389f565b600060405180830381600087803b1580156109c157600080fd5b505af11580156109d5573d6000803e3d6000fd5b50505050602084015160405163d9c70f5760e01b81526001600160a01b039182166004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063d9c70f5790604401600060405180830381600087803b158015610a4a57600080fd5b505af1158015610a5e573d6000803e3d6000fd5b505050506000610a6e8585611fae565b90506000610aea7f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8860600151604051602401610ab39190613ee8565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611fc9565b9050600081806020019051810190610b029190613f7a565b90506000610b108285613f93565b6060808a0151015160405163095ea7b360e01b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163095ea7b391610b88917f00000000000000000000000000000000000000000000000000000000000000009190600401613fa6565b6020604051808303816000875af1158015610ba7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcb9190613c28565b506060808901510151604051637e348b7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691637e348b7d91610c20913091600401613fa6565b600060405180830381600087803b158015610c3a57600080fd5b505af1158015610c4e573d6000803e3d6000fd5b505050506000811115610cd6576080880151604001516001600160a01b031615610cb957610cb37f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8a60800151604051602401610ab39190613ee8565b50610cd6565b606088015160400151610cd6906001600160a01b03168783612041565b507f24ea9631d6c6b69006fd9fa411bb9c8909638fd1d178dd2f1d231dca3e3e4d799d9c50505050505050505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d54576040516309436d0560e01b815260040160405180910390fd5b60008080610d6485870187613fbf565b60808301516040015192955090935091506001600160a01b031615610de0576000610dc67f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8660800151604051602401610ab39190613ee8565b905080806020019051810190610ddc9190613f7a565b9150505b6000610e237f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8660600151604051602401610ab39190613ee8565b9050600081806020019051810190610e3b9190613f7a565b90506000610e4b8686868561209c565b90506000610e6a87602001518860000151896060015160600151611f22565b905086602001516001600160a01b031663c75a4b5e88600001513030610e8f87611ef8565b610e9887611ef8565b6040518663ffffffff1660e01b8152600401610eb895949392919061389f565b600060405180830381600087803b158015610ed257600080fd5b505af1158015610ee6573d6000803e3d6000fd5b50505050606087810151015160405163ef693bed60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163ef693bed91610f3e913091600401613fa6565b600060405180830381600087803b158015610f5857600080fd5b505af1158015610f6c573d6000803e3d6000fd5b50505050606087810151015160405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163095ea7b391610fe4917f000000000000000000000000000000000000000000000000000000000000000091600401613fa6565b6020604051808303816000875af1158015611003573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110279190613c28565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99e9d5050505050505050505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036110a45760405163f46a288f60e01b815260040160405180910390fd5b60006110b1858584611d97565b905060006110c186888635611f22565b9050856001600160a01b031663c75a4b5e8830306110de87611ef8565b6110e787611ef8565b6040518663ffffffff1660e01b815260040161110795949392919061389f565b600060405180830381600087803b15801561112157600080fd5b505af1158015611135573d6000803e3d6000fd5b505050506108388461213f565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361118b5760405163f46a288f60e01b815260040160405180910390fd5b600061119983858435611f22565b9050826001600160a01b031663c75a4b5e85303060006111b887611ef8565b6040518663ffffffff1660e01b81526004016111d895949392919061389f565b600060405180830381600087803b1580156111f257600080fd5b505af1158015611206573d6000803e3d6000fd5b505050506112138261213f565b50505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036112625760405163f46a288f60e01b815260040160405180910390fd5b816001600160a01b031663c75a4b5e8430306112818660200135611ef8565b61128a90613ecc565b60006040518663ffffffff1660e01b81526004016112ac95949392919061389f565b600060405180830381600087803b1580156112c657600080fd5b505af11580156112da573d6000803e3d6000fd5b505050506112138282612530565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113315760405163f46a288f60e01b815260040160405180910390fd5b61133d858584846125ee565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd9061138e9088908890600190600401613950565b600060405180830381600087803b1580156113a857600080fd5b505af11580156113bc573d6000803e3d6000fd5b50505050836001600160a01b031663c75a4b5e8630306113df8860200135611ef8565b6113e890613ecc565b6113f28835611ef8565b6113fb90613ecc565b6040518663ffffffff1660e01b815260040161141b95949392919061389f565b600060405180830381600087803b15801561143557600080fd5b505af1158015611449573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd915061149e9088908890600090600401613950565b600060405180830381600087803b1580156114b857600080fd5b505af11580156114cc573d6000803e3d6000fd5b505050506114da8484612530565b505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361152b5760405163f46a288f60e01b815260040160405180910390fd5b600061153a60608701876138e9565b61154b906040810190602001613918565b600181111561155c5761155c6138d3565b1415806115b857506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661159b60608701876138e9565b6115ac906060810190604001613933565b6001600160a01b031614155b8061161257506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166115f560608701876138e9565b6116069060c081019060a001613933565b6001600160a01b031614155b15611630576040516304286a2760e01b815260040160405180910390fd5b600061163f60808701876138e9565b611650906060810190604001613933565b6001600160a01b0316141580156117295750600061167160808701876138e9565b611682906040810190602001613918565b6001811115611693576116936138d3565b1415806116cf57506001600160a01b0384166116b260808701876138e9565b6116c3906060810190604001613933565b6001600160a01b031614155b8061172957506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661170c60808701876138e9565b61171d9060c081019060a001613933565b6001600160a01b031614155b1561174757604051630655da1360e41b815260040160405180910390fd5b82156117d157306001600160a01b03831603611796576117916001600160a01b0385167f000000000000000000000000000000000000000000000000000000000000000085612041565b6117d1565b6117d184837f0000000000000000000000000000000000000000000000000000000000000000866117cc36879003870187614029565b61288e565b6117e16040860160208701613933565b6001600160a01b0316638309dbdd6117fc6020880188613933565b7f000000000000000000000000000000000000000000000000000000000000000060016040518463ffffffff1660e01b815260040161183d93929190613950565b600060405180830381600087803b15801561185757600080fd5b505af115801561186b573d6000803e3d6000fd5b50506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150635cffe9de90507f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006118ef60608a018a6138e9565b60600135898989604051602001611908939291906140bc565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161193694939291906140ea565b6020604051808303816000875af1158015611955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119799190613c28565b5061198a6040860160208701613933565b6001600160a01b0316638309dbdd6119a56020880188613933565b7f000000000000000000000000000000000000000000000000000000000000000060006040518463ffffffff1660e01b815260040161040b93929190613950565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611a2f5760405163f46a288f60e01b815260040160405180910390fd5b8460005b81811015611bba57838382818110611a4d57611a4d61411d565b9050602002016020810190611a629190614133565b15611af557611aef888883818110611a7c57611a7c61411d565b9050602002016020810190611a919190613933565b878784818110611aa357611aa361411d565b9050602002810190611ab59190614150565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611fc992505050565b50611bb2565b600080898984818110611b0a57611b0a61411d565b9050602002016020810190611b1f9190613933565b6001600160a01b0316888885818110611b3a57611b3a61411d565b9050602002810190611b4c9190614150565b604051611b5a929190614196565b6000604051808303816000865af19150503d8060008114611b97576040519150601f19603f3d011682016040523d82523d6000602084013e611b9c565b606091505b509150915081611baf57611baf81612a52565b50505b600101611a33565b5050505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611c0d5760405163f46a288f60e01b815260040160405180910390fd5b611c19848484846125ee565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd90611c6a9087908790600190600401613950565b600060405180830381600087803b158015611c8457600080fd5b505af1158015611c98573d6000803e3d6000fd5b50505050826001600160a01b031663c75a4b5e8530306000611cbd8860000135611ef8565b611cc690613ecc565b6040518663ffffffff1660e01b8152600401611ce695949392919061389f565b600060405180830381600087803b158015611d0057600080fd5b505af1158015611d14573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd9150611d699087908790600090600401613950565b600060405180830381600087803b158015611d8357600080fd5b505af1158015611bba573d6000803e3d6000fd5b6000602083013581611dac60608601866138e9565b611dbd906060810190604001613933565b6001600160a01b031614611e8657611dd86020850185613933565b6001600160a01b0316611dee60608601866138e9565b611dff906060810190604001613933565b6001600160a01b0316141580611e3b575030611e1e60608601866138e9565b611e2f9060c081019060a001613933565b6001600160a01b031614155b15611e595760405163469498c560e11b815260040160405180910390fd5b611e7f611e6c6060860160408701613933565b611e7960608701876138e9565b85612a7a565b9050611ed6565b30611e976060860160408701613933565b6001600160a01b031614611ed657611ed6611eb56020860186613933565b611ec56060870160408801613933565b30846117cc36899003890189614029565b611eed85611ee76020870187613933565b83612b47565b9150505b9392505050565b6000600160ff1b8210611f1e57604051632db27c5360e01b815260040160405180910390fd5b5090565b6000806000856001600160a01b0316638051ba75866040518263ffffffff1660e01b8152600401611f5391906133f8565b606060405180830381865afa158015611f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9491906141a6565b5091509150611fa4848383612c33565b9695505050505050565b6000611fc08360200151600084612c6f565b90505b92915050565b6060600080846001600160a01b031684604051611fe691906141e9565b600060405180830381855af49150503d8060008114612021576040519150601f19603f3d011682016040523d82523d6000602084013e612026565b606091505b5091509150816120395761203981612a52565b949350505050565b6120978363a9059cbb60e01b8484604051602401612060929190613fa6565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612ce3565b505050565b6000806120a984846141fb565b602087015160408801519192506120ca916001600160a01b03169083612dbd565b85602001516001600160a01b03166347e7ef2430836040518363ffffffff1660e01b81526004016120fc929190613fa6565b6020604051808303816000875af115801561211b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa49190613f7a565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd906121b09030907f000000000000000000000000000000000000000000000000000000000000000090600190600401613950565b600060405180830381600087803b1580156121ca57600080fd5b505af11580156121de573d6000803e3d6000fd5b50600092506121f391505060408301836138e9565b612204906060810190604001613933565b6001600160a01b03160361234d576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ef693bed6122516040840160208501613933565b6040516001600160e01b031960e084901b1681526122759190853590600401613fa6565b600060405180830381600087803b15801561228f57600080fd5b505af11580156122a3573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506123189030907f000000000000000000000000000000000000000000000000000000000000000090600090600401613950565b600060405180830381600087803b15801561233257600080fd5b505af1158015612346573d6000803e3d6000fd5b5050505050565b60405163ef693bed60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef693bed9061239c903090853590600401613fa6565b600060405180830381600087803b1580156123b657600080fd5b505af11580156123ca573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd915061243f9030907f000000000000000000000000000000000000000000000000000000000000000090600090600401613950565b600060405180830381600087803b15801561245957600080fd5b505af115801561246d573d6000803e3d6000fd5b50506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506124aa905060408301836138e9565b6124bb906060810190604001613933565b6001600160a01b0316146124e25760405163051b33b760e51b815260040160405180910390fd5b61252b7f00000000000000000000000000000000000000000000000000000000000000006311b2aacd60e21b61251b60408501856138e9565b604051602401610ab3919061420e565b505b50565b60008061254e846125446020860186613933565b8560200135612c6f565b9050600061255f60608501856138e9565b612570906060810190604001613933565b6001600160a01b0316146125bd576125b77f00000000000000000000000000000000000000000000000000000000000000006311b2aacd60e21b61251b60608701876138e9565b50611fc0565b611fc06125d06060850160408601613933565b826125de6020870187613933565b6001600160a01b03169190612041565b6000806125fe60408501856138e9565b61260f906060810190604001613933565b6001600160a01b031614612690573061262b60408501856138e9565b61263c9060c081019060a001613933565b6001600160a01b03161461266357604051633300ff5360e21b815260040160405180910390fd5b6126896126766040850160208601613933565b61268360408601866138e9565b84612a7a565b905061278e565b600080856001600160a01b0316638051ba75886040518263ffffffff1660e01b81526004016126bf91906133f8565b606060405180830381865afa1580156126dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061270091906141a6565b5090925090508061271b6001600160401b0384168735612e56565b6127259190613f93565b9250306127386040870160208801613933565b6001600160a01b03161461278b5761278b7f000000000000000000000000000000000000000000000000000000000000000061277a6040880160208901613933565b30866117cc368a90038a018a614029565b50505b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906127fc907f0000000000000000000000000000000000000000000000000000000000000000908590600401613fa6565b6020604051808303816000875af115801561281b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061283f9190613c28565b50604051637e348b7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637e348b7d9061040b9030908590600401613fa6565b6002815160028111156128a3576128a36138d3565b036129cd576e22d473030f116ddee9f6b43ac78ba36001600160a01b03166330f28b7a604051806060016040528060405180604001604052808a6001600160a01b03168152602001866020015181525081526020018460400151815260200184606001518152506040518060400160405280876001600160a01b0316815260200186815250878560a001518660c00151876080015160f81b6040516020016129689392919092835260208301919091526001600160f81b031916604082015260410190565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016129969493929190614221565b600060405180830381600087803b1580156129b057600080fd5b505af11580156129c4573d6000803e3d6000fd5b50505050612346565b6001815160028111156129e2576129e26138d3565b03612a3d57612a2384848360200151846060015185608001518660a001518760c001518c6001600160a01b0316612e8490979695949392919063ffffffff16565b612a386001600160a01b03861685858561305f565b612346565b6123466001600160a01b03861685858561305f565b805115612a6157805181602001fd5b60405163491182fb60e01b815260040160405180910390fd5b600080612abe7f0000000000000000000000000000000000000000000000000000000000000000630147931c60e01b878688604051602401610ab39392919061429a565b9050600081806020019051810190612ad69190613f7a565b90506001612aea6040870160208801613918565b6001811115612afb57612afb6138d3565b03612b3a576000612b10826080880135613f93565b90508015612b2d57612b2d87826125de60608a0160408b01613933565b8560600135935050612b3e565b8092505b50509392505050565b600080846001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bac919061431f565b9050612bc26001600160a01b0382168685612dbd565b6040516311f9fbc960e21b81526001600160a01b038616906347e7ef2490612bf09030908790600401613fa6565b6020604051808303816000875af1158015612c0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eed9190613f7a565b6000612c51612c4283866141fb565b846001600160401b0316613097565b905083612c5f8285856130e6565b1015611ef1576001019392505050565b60405163f3fef3a360e01b81526000906001600160a01b0385169063f3fef3a390612ca09030908690600401613fa6565b6020604051808303816000875af1158015612cbf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120399190613f7a565b6000612d38826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131069092919063ffffffff16565b9050805160001480612d59575080806020019051810190612d599190613c28565b6120975760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b600063095ea7b360e01b8383604051602401612dda929190613fa6565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050612e188482613115565b611213576040516001600160a01b038416602482015260006044820152612e4c90859063095ea7b360e01b90606401612060565b6112138482612ce3565b600081600019048311820215612e745763c4c5d7f56000526004601cfd5b50670de0b6b3a764000091020490565b604051623f675f60e91b81526000906001600160a01b038a1690637ecebe0090612eb2908b906004016133f8565b602060405180830381865afa158015612ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ef39190613f7a565b60405163d505accf60e01b81526001600160a01b038a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e401600060405180830381600087803b158015612f6757600080fd5b505af1158015612f7b573d6000803e3d6000fd5b5050604051623f675f60e91b8152600092506001600160a01b038c169150637ecebe0090612fad908c906004016133f8565b602060405180830381865afa158015612fca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fee9190613f7a565b9050612ffb8260016141fb565b81146130535760405162461bcd60e51b815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f74207375636365656044820152601960fa1b6064820152608401612db4565b50505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526112139085906323b872dd60e01b90608401612060565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a7640000021582026130d45763bcbede656000526004601cfd5b50670de0b6b3a7640000919091020490565b6000816130fc85856001600160401b0316612e56565b6120399190613f93565b606061203984846000856131bc565b6000806000846001600160a01b03168460405161313291906141e9565b6000604051808303816000865af19150503d806000811461316f576040519150601f19603f3d011682016040523d82523d6000602084013e613174565b606091505b509150915081801561319e57508051158061319e57508080602001905181019061319e9190613c28565b80156131b357506001600160a01b0385163b15155b95945050505050565b60608247101561321d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401612db4565b600080866001600160a01b0316858760405161323991906141e9565b60006040518083038185875af1925050503d8060008114613276576040519150601f19603f3d011682016040523d82523d6000602084013e61327b565b606091505b509150915061328c87838387613297565b979650505050505050565b606083156133065782516000036132ff576001600160a01b0385163b6132ff5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401612db4565b5081612039565b612039838381511561331b5781518083602001fd5b8060405162461bcd60e51b8152600401612db4919061433c565b6001600160a01b038116811461252d57600080fd5b803561335581613335565b919050565b60006080828403121561336c57600080fd5b50919050565b600060e0828403121561336c57600080fd5b600080600080610140858703121561339b57600080fd5b84356133a681613335565b935060208501356133b681613335565b925060408501356001600160401b038111156133d157600080fd5b6133dd8782880161335a565b9250506133ed8660608701613372565b905092959194509250565b6001600160a01b0391909116815260200190565b600060a0828403121561336c57600080fd5b60008060006060848603121561343357600080fd5b83356001600160401b0381111561344957600080fd5b6134558682870161340c565b93505060208401359150604084013561346d81613335565b809150509250925092565b60008083601f84011261348a57600080fd5b5081356001600160401b038111156134a157600080fd5b6020830191508360208285010111156134b957600080fd5b9250929050565b6000806000806000608086880312156134d857600080fd5b85356134e381613335565b9450602086013593506040860135925060608601356001600160401b0381111561350c57600080fd5b61351888828901613478565b969995985093965092949392505050565b60008060008060008060a0878903121561354257600080fd5b863561354d81613335565b9550602087013561355d81613335565b9450604087013593506060870135925060808701356001600160401b0381111561358657600080fd5b61359289828a01613478565b979a9699509497509295939492505050565b60006060828403121561336c57600080fd5b600080600080600061016086880312156135cf57600080fd5b85356135da81613335565b945060208601356135ea81613335565b935060408601356001600160401b038082111561360657600080fd5b61361289838a0161335a565b9450606088013591508082111561362857600080fd5b50613635888289016135a4565b9250506136458760808801613372565b90509295509295909350565b60008060006060848603121561366657600080fd5b833561367181613335565b9250602084013561368181613335565b915060408401356001600160401b0381111561369c57600080fd5b6136a8868287016135a4565b9150509250925092565b6000806000606084860312156136c757600080fd5b83356136d281613335565b925060208401356136e281613335565b915060408401356001600160401b038111156136fd57600080fd5b6136a88682870161335a565b6000806000806000610160868803121561372257600080fd5b85356001600160401b0381111561373857600080fd5b6137448882890161340c565b955050602086013561375581613335565b935060408601359250606086013561376c81613335565b91506136458760808801613372565b60008083601f84011261378d57600080fd5b5081356001600160401b038111156137a457600080fd5b6020830191508360208260051b85010111156134b957600080fd5b600080600080600080606087890312156137d857600080fd5b86356001600160401b03808211156137ef57600080fd5b6137fb8a838b0161377b565b9098509650602089013591508082111561381457600080fd5b6138208a838b0161377b565b9096509450604089013591508082111561383957600080fd5b5061359289828a0161377b565b600080600080610140858703121561385d57600080fd5b843561386881613335565b9350602085013561387881613335565b925060408501356001600160401b0381111561389357600080fd5b6133dd878288016135a4565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260a00190565b634e487b7160e01b600052602160045260246000fd5b6000823560fe198336030181126138ff57600080fd5b9190910192915050565b80356002811061335557600080fd5b60006020828403121561392a57600080fd5b611fc082613909565b60006020828403121561394557600080fd5b8135611fc081613335565b6001600160a01b039384168152919092166020820152901515604082015260600190565b6000823560fe1983360301811261398a57600080fd5b90910192915050565b6003811061252d57600080fd5b803561335581613993565b6003811061252d5761252d6138d3565b600281106139cb576139cb6138d3565b9052565b6000808335601e198436030181126139e657600080fd5b83016020810192503590506001600160401b03811115613a0557600080fd5b8036038213156134b957600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006101008235613a4d81613993565b613a56816139ab565b8452613a6460208401613909565b613a7160208601826139bb565b506040830135613a8081613335565b6001600160a01b03166040850152606083810135908501526080808401359085015260a0830135613ab081613335565b6001600160a01b031660a085015260c08381013590850152613ad560e08401846139cf565b8260e0870152611fa48387018284613a14565b60008135613af581613335565b6001600160a01b039081168452602083013590613b1182613335565b9081166020850152604083013590613b2882613335565b166040840152613b3b6060830183613974565b60a06060850152613b4f60a0850182613a3d565b9050613b5e6080840184613974565b84820360808601526131b38282613a3d565b606081526000613b836060830186613ae8565b6020830194909452506001600160a01b0391909116604090910152919050565b60005b83811015613bbe578181015183820152602001613ba6565b50506000910152565b60008151808452613bdf816020860160208601613ba3565b601f01601f19169290920160200192915050565b60018060a01b03841681528260208201526060604082015260006131b36060830184613bc7565b801515811461252d57600080fd5b600060208284031215613c3a57600080fd5b8151611fc081613c1a565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715613c7e57613c7e613c45565b60405290565b600082601f830112613c9557600080fd5b81356001600160401b0380821115613caf57613caf613c45565b604051601f8301601f19908116603f01168101908282118183101715613cd757613cd7613c45565b81604052838152866020858801011115613cf057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006101008284031215613d2357600080fd5b613d2b613c5b565b9050613d36826139a0565b8152613d4460208301613909565b6020820152613d556040830161334a565b60408201526060820135606082015260808201356080820152613d7a60a0830161334a565b60a082015260c082013560c082015260e08201356001600160401b03811115613da257600080fd5b613dae84828501613c84565b60e08301525092915050565b600060a08284031215613dcc57600080fd5b60405160a081016001600160401b038282108183111715613def57613def613c45565b8160405282935084359150613e0382613335565b908252602084013590613e1582613335565b816020840152613e276040860161334a565b60408401526060850135915080821115613e4057600080fd5b613e4c86838701613d10565b60608401526080850135915080821115613e6557600080fd5b50613e7285828601613d10565b6080830152505092915050565b600080600060608486031215613e9457600080fd5b83356001600160401b03811115613eaa57600080fd5b61345586828701613dba565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b8201613ee157613ee1613eb6565b5060000390565b6020815260008251613ef9816139ab565b806020840152506020830151613f1260408401826139bb565b5060018060a01b03604084015116606083015260608301516080830152608083015160a083015260a0830151613f5360c08401826001600160a01b03169052565b5060c083015160e083015260e0830151610100808185015250612039610120840182613bc7565b600060208284031215613f8c57600080fd5b5051919050565b81810381811115611fc357611fc3613eb6565b6001600160a01b03929092168252602082015260400190565b600080600060608486031215613fd457600080fd5b83356001600160401b03811115613fea57600080fd5b613ff686828701613dba565b935050602084013561400781613335565b929592945050506040919091013590565b803560ff8116811461335557600080fd5b600060e0828403121561403b57600080fd5b60405160e081018181106001600160401b038211171561405d5761405d613c45565b604052823561406b81613993565b8082525060208301356020820152604083013560408201526060830135606082015261409960808401614018565b608082015260a083013560a082015260c083013560c08201528091505092915050565b6060815260006140cf6060830186613ae8565b6001600160a01b039490941660208301525060400152919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fa490830184613bc7565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561414557600080fd5b8135611fc081613c1a565b6000808335601e1984360301811261416757600080fd5b8301803591506001600160401b0382111561418157600080fd5b6020019150368190038213156134b957600080fd5b8183823760009101908152919050565b6000806000606084860312156141bb57600080fd5b83516001600160401b03811681146141d257600080fd5b602085015160409095015190969495509392505050565b600082516138ff818460208701613ba3565b80820180821115611fc357611fc3613eb6565b602081526000611fc06020830184613a3d565b600061010061424483885180516001600160a01b03168252602090810151910152565b6020870151604084015260408701516060840152614278608084018780516001600160a01b03168252602090810151910152565b6001600160a01b03851660c084015260e0830181905261328c81840185613bc7565b6001600160a01b0384168152600061012084356142b681613993565b6142bf816139ab565b8060208501525060208501356040840152604085013560608401526060850135608084015260ff6142f260808701614018565b1660a084015260a085013560c084015260c085013560e084015280610100840152611fa481840185613a3d565b60006020828403121561433157600080fd5b8151611fc081613335565b602081526000611fc06020830184613bc756fea26469706673582212203debe8b67abf8841fe9d2359071dc37e0d87677c8f978516cb2efc4d4427d83264736f6c63430008130033",
    "sourceMap": "427:3233:123:-:0;;;874:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;944:12;958:11;5001:12:122;-1:-1:-1;;;;;4974:40:122;;;-1:-1:-1;;;;;4974:40:122;;;;;5037:11;;-1:-1:-1;;;;;5037:22:122;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5024:37:122;;;-1:-1:-1;;;;;5024:37:122;;;;;5080:11;;-1:-1:-1;;;;;5080:18:122;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5071:29:122;;;-1:-1:-1;;;;;5071:29:122;;;;;5116:11;;-1:-1:-1;;;;;5116:15:122;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5110:23:122;;;;;;;5158:4;5143:20;;5173:36;;;;;5248:6;;5219:43;;-1:-1:-1;;;5219:43:122;;1546:32:188;;5219:43:122;;;1528:51:188;5257:4:122;1595:18:188;;;1588:50;5110:23:122;5219:20;;1501:18:188;;5219:43:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5272:3:122;;:40;;-1:-1:-1;;;5272:40:122;;-1:-1:-1;;;;;1546:32:188;;;5272:40:122;;;1528:51:188;5307:4:122;1595:18:188;;;1588:50;5272:20:122;;;;-1:-1:-1;5272:20:122;;-1:-1:-1;1501:18:188;;5272:40:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4909:410;;874:99:123;;427:3233;;14:131:188;-1:-1:-1;;;;;89:31:188;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:385::-;229:6;237;290:2;278:9;269:7;265:23;261:32;258:52;;;306:1;303;296:12;258:52;338:9;332:16;357:31;382:5;357:31;:::i;:::-;457:2;442:18;;436:25;407:5;;-1:-1:-1;470:33:188;436:25;470:33;:::i;:::-;522:7;512:17;;;150:385;;;;;:::o;540:272::-;631:6;684:2;672:9;663:7;659:23;655:32;652:52;;;700:1;697;690:12;652:52;732:9;726:16;751:31;776:5;751:31;:::i;:::-;801:5;540:272;-1:-1:-1;;;540:272:188:o;1360:284::-;427:3233:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "427:3233:123:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8314:464:122;;;;;;:::i;:::-;;:::i;:::-;;3653:31;;;;;;;;;;;;:::i;:::-;;;;;;;;16915:1310;;;;;;:::i;:::-;;:::i;3286:100::-;;3336:50;3286:100;;;;;2528:25:188;;;2516:2;2501:18;3286:100:122;2382:177:188;1101:76:129;;1135:42;1101:76;;20874:2728:122;;;;;;:::i;:::-;;:::i;18571:2128::-;;;;;;:::i;:::-;;:::i;11211:659::-;;;;;;:::i;:::-;;:::i;9634:426::-;;;;;;:::i;:::-;;:::i;8976:401::-;;;;;;:::i;:::-;;:::i;3735:29::-;;;;;3192:88;;3235:45;3192:88;;12177:738;;;;;;:::i;:::-;;:::i;3810:38::-;;;;;14503:1737;;;;;;:::i;:::-;;:::i;3426:25::-;;;;;3576:39;;;;;3496:41;;;;;13207:554;;;;;;:::i;:::-;;:::i;10361:598::-;;;;;;:::i;:::-;;:::i;8314:464::-;-1:-1:-1;;;;;5681:4:122;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:122;;;;;;;;;;;5660:68;8518:18:::1;8539:47;8548:5;8555:16;8573:12;8539:8;:47::i;:::-;8518:68;;8606:5;-1:-1:-1::0;;;;;8596:40:122::1;;8650:8;8680:4;8707;8726:20;8735:10;8726:8;:20::i;:::-;8760:1;8596:175;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8508:270;8314:464:::0;;;;:::o;16915:1310::-;-1:-1:-1;;;;;5681:4:122;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:122;;;;;;;;;;;5660:68;17165:18:::1;17129:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:54;;;;;;;;:::i;:::-;;;:111;;;-1:-1:-1::0;;;;;;17236:4:122::1;17199:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17199:41:122::1;;;17129:111;17125:183;;;17258:50;;-1:-1:-1::0;;;17258:50:122::1;;;;;;;;;;;17125:183;17404:1;17365:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17365:41:122::1;;;:118;;;;-1:-1:-1::0;17456:17:122::1;17424:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;17365:118;17361:177;;;17492:46;;-1:-1:-1::0;;;17492:46:122::1;;;;;;;;;;;17361:177;17671:1;17632:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17632:41:122::1;;:88;;;;-1:-1:-1::0;;;;;;17689:31:122;::::1;::::0;17632:88:::1;17628:166;;;17738:56;;-1:-1:-1::0;;;17738:56:122::1;;;;;;;;;;;17628:166;17855:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;17843:47:122::1;;17891:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;17913:4;17919;17843:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;17934:11:122::1;:27;::::0;-1:-1:-1;17934:27:122::1;::::0;-1:-1:-1;17996:4:122::1;18015:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;18070:11;18083:13;18098:17;18059:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17934:192;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;18148:17:122::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;18136:47:122::1;;18184:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;18206:4;18212:5;18136:82;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;16915:1310:::0;;;:::o;20874:2728::-;21038:7;21061:10;-1:-1:-1;;;;;21083:11:122;21061:34;;21057:97;;21104:50;;-1:-1:-1;;;21104:50:122;;;;;;;;;;;21057:97;21178:30;;;21295:48;;;;21306:4;21295:48;:::i;:::-;21164:179;;;;;;21451:21;21475:136;21506:11;:17;;;21537:11;:20;;;21571:11;:23;;;:30;;;21475:17;:136::i;:::-;21678:17;;;;21657:45;;-1:-1:-1;;;21657:45:122;;-1:-1:-1;;;;;22641:32:188;;;21657:45:122;;;22623:51:188;21697:4:122;22690:18:188;;;22683:50;21451:160:122;;-1:-1:-1;21657:3:122;:20;;;;22596:18:188;;21657:45:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21722:11;:17;;;-1:-1:-1;;;;;21712:52:122;;21778:11;:20;;;21820:4;21847;21867:23;21876:13;21867:8;:23::i;:::-;21866:24;;;:::i;:::-;21905:23;21914:13;21905:8;:23::i;:::-;21904:24;;;:::i;:::-;21712:226;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;21969:17:122;;;;21948:46;;-1:-1:-1;;;21948:46:122;;-1:-1:-1;;;;;22641:32:188;;;21948:46:122;;;22623:51:188;21988:5:122;22690:18:188;;;22683:50;21948:3:122;:20;;;;;;22596:18:188;;21948:46:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22072:27;22102:44;22119:11;22132:13;22102:16;:44::i;:::-;22072:74;;22157:21;22181:189;22216:10;22281:24;;;22323:11;:23;;;22241:119;;;;;;;;:::i;:::-;;;;-1:-1:-1;;22241:119:122;;;;;;;;;;;;;;-1:-1:-1;;;;;22241:119:122;-1:-1:-1;;;;;;22241:119:122;;;;;;;;;;22181:13;:189::i;:::-;22157:213;;22380:20;22414:8;22403:31;;;;;;;;;;;;:::i;:::-;22380:54;-1:-1:-1;22520:22:122;22545:34;22380:54;22545:19;:34;:::i;:::-;22696:23;;;;;:30;;22660:67;;-1:-1:-1;;;22660:67:122;;22520:59;;-1:-1:-1;;;;;;22660:10:122;:18;;;;:67;;22687:6;;22696:30;22660:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22765:23:122;;;;;:30;;22737:59;;-1:-1:-1;;;22737:59:122;;-1:-1:-1;;;;;22737:6:122;:12;;;;:59;;22758:4;;22737:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22934:1;22917:14;:18;22913:642;;;23032:19;;;;:27;;;-1:-1:-1;;;;;23032:41:122;;23028:516;;23093:233;23136:10;23217:24;;;23267:11;:19;;;23169:139;;;;;;;;:::i;23093:233::-;;23028:516;;;23449:23;;;;:31;;;23442:87;;-1:-1:-1;;;;;23442:52:122;23495:17;23514:14;23442:52;:87::i;:::-;-1:-1:-1;3336:50:122;;20874:2728;-1:-1:-1;;;;;;;;;;;;;20874:2728:122:o;18571:2128::-;18756:7;18779:10;-1:-1:-1;;;;;18801:11:122;18779:34;;18775:91;;18822:44;;-1:-1:-1;;;18822:44:122;;;;;;;;;;;18775:91;18890:30;;;19002:49;;;;19013:4;19002:49;:::i;:::-;19150:19;;;;:27;;;18876:175;;-1:-1:-1;18876:175:122;;-1:-1:-1;18876:175:122;-1:-1:-1;;;;;;19150:41:122;;19146:298;;19207:24;19234:135;19273:10;19309:24;;;19335:11;:19;;;19286:69;;;;;;;;:::i;19234:135::-;19207:162;;19410:11;19399:34;;;;;;;;;;;;:::i;:::-;19383:50;;19193:251;19146:298;19495:21;19519:131;19554:10;19590:24;;;19616:11;:23;;;19567:73;;;;;;;;:::i;19519:131::-;19495:155;;19660:21;19695:8;19684:31;;;;;;;;;;;;:::i;:::-;19660:55;;19792:18;19813:73;19830:11;19843:12;19857:13;19872;19813:16;:73::i;:::-;19792:94;;19979:21;20003:112;20034:11;:17;;;20053:11;:20;;;20075:11;:23;;;:30;;;20003:17;:112::i;:::-;19979:136;;20171:11;:17;;;-1:-1:-1;;;;;20161:52:122;;20227:11;:20;;;20269:4;20296;20315:20;20324:10;20315:8;:20::i;:::-;20349:23;20358:13;20349:8;:23::i;:::-;20161:221;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;20475:23:122;;;;;:30;;20448:58;;-1:-1:-1;;;20448:58:122;;:6;-1:-1:-1;;;;;20448:11:122;;;;:58;;20468:4;;20448:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;20627:23:122;;;;;:30;;20586:72;;-1:-1:-1;;;20586:72:122;;:10;-1:-1:-1;;;;;20586:18:122;;;;:72;;20613:11;;20586:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3235:45:122;;18571:2128;-1:-1:-1;;;;;;;;;;;;;;18571:2128:122:o;11211:659::-;-1:-1:-1;;;;;5681:4:122;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:122;;;;;;;;;;;5660:68;11468:18:::1;11489:47;11498:5;11505:16;11523:12;11489:8;:47::i;:::-;11468:68:::0;-1:-1:-1;11546:21:122::1;11570:55;11588:5:::0;11595:8;11605:19;::::1;11570:17;:55::i;:::-;11546:79;;11645:5;-1:-1:-1::0;;;;;11635:40:122::1;;11689:8;11719:4;11746;11765:20;11774:10;11765:8;:20::i;:::-;11799:23;11808:13;11799:8;:23::i;:::-;11635:197;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11842:21;11850:12;11842:7;:21::i;9634:426::-:0;-1:-1:-1;;;;;5681:4:122;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:122;;;;;;;;;;;5660:68;9755:21:::1;9779:55;9797:5:::0;9804:8;9814:19;::::1;9779:17;:55::i;:::-;9755:79;;9854:5;-1:-1:-1::0;;;;;9844:40:122::1;;9898:8;9928:4;9955;9974:1;9989:23;9998:13;9989:8;:23::i;:::-;9844:178;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10032:21;10040:12;10032:7;:21::i;:::-;9745:315;9634:426:::0;;;:::o;8976:401::-;-1:-1:-1;;;;;5681:4:122;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:122;;;;;;;;;;;5660:68;9147:5:::1;-1:-1:-1::0;;;;;9137:40:122::1;;9191:8;9221:4;9248;9268:33;9277:16;:23;;;9268:8;:33::i;:::-;9267:34;;;:::i;:::-;9315:1;9137:189;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9336:34;9346:5;9353:16;9336:9;:34::i;12177:738::-:0;-1:-1:-1;;;;;5681:4:122;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:122;;;;;;;;;;;5660:68;12434:51:::1;12441:8;12451:5;12458:12;12472;12434:6;:51::i;:::-;12495:65;::::0;-1:-1:-1;;;12495:65:122;;-1:-1:-1;;;;;12515:3:122::1;12495:42;::::0;::::1;::::0;:65:::1;::::0;12538:8;;12548:5;;12555:4:::1;::::0;12495:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12580:5;-1:-1:-1::0;;;;;12570:40:122::1;;12624:8;12654:4;12681;12701:33;12710:16;:23;;;12701:8;:33::i;:::-;12700:34;;;:::i;:::-;12749:29;12758:19:::0;::::1;12749:8;:29::i;:::-;12748:30;;;:::i;:::-;12570:218;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12798:66:122::1;::::0;-1:-1:-1;;;12798:66:122;;-1:-1:-1;;;;;12818:3:122::1;12798:42;::::0;-1:-1:-1;12798:42:122::1;::::0;-1:-1:-1;12798:66:122::1;::::0;12841:8;;12851:5;;12858::::1;::::0;12798:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12874:34;12884:5;12891:16;12874:9;:34::i;:::-;;12177:738:::0;;;;;:::o;14503:1737::-;-1:-1:-1;;;;;5681:4:122;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:122;;;;;;;;;;;5660:68;14824:17:::1;14788:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:53;;;;;;;;:::i;:::-;;;:123;;;-1:-1:-1::0;;;;;;14900:10:122::1;14857:54;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:31;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;14857:54:122::1;;;14788:123;:180;;;-1:-1:-1::0;;;;;;14964:4:122::1;14927:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;14927:41:122::1;;;14788:180;14784:252;;;14986:50;;-1:-1:-1::0;;;14986:50:122::1;;;;;;;;;;;14784:252;15132:1;15093:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15093:41:122::1;;;:230;;;;-1:-1:-1::0;15184:17:122::1;15152:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;:108;;;-1:-1:-1::0;;;;;;15217:43:122;::::1;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15217:43:122::1;;;15152:108;:161;;;-1:-1:-1::0;;;;;;15309:4:122::1;15276:37;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:29;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15276:37:122::1;;;15152:161;15089:289;;;15332:46;;-1:-1:-1::0;;;15332:46:122::1;;;;;;;;;;;15089:289;15461:17:::0;;15457:337:::1;;15524:4;-1:-1:-1::0;;;;;15498:31:122;::::1;::::0;15494:290:::1;;15549:54;-1:-1:-1::0;;;;;15549:33:122;::::1;15583:4;15589:13:::0;15549:33:::1;:54::i;:::-;15494:290;;;15691:78;15705:12:::0;15719:14;15735:4:::1;15741:13:::0;15691:78:::1;;::::0;;::::1;::::0;::::1;15756:12:::0;15691:78:::1;:::i;:::-;:13;:78::i;:::-;15847:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;15835:47:122::1;;15883:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;15905:4;15911;15835:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;15926:11:122::1;:21;::::0;-1:-1:-1;15926:21:122::1;::::0;-1:-1:-1;15983:4:122::1;16010:10;16035:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;16090:11;16103:12;16117:13;16079:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15926:215;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;16163:17:122::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16151:47:122::1;;16199:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;16221:4;16227:5;16151:82;;;;;;;;;;;;;;;;;:::i;13207:554::-:0;-1:-1:-1;;;;;5681:4:122;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:122;;;;;;;;;;;5660:68;13396:7;13373:20:::1;13420:335;13440:12;13436:1;:16;13420:335;;;13473:12;;13486:1;13473:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13469:245;;;13508:34;13522:7;;13530:1;13522:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13534:4;;13539:1;13534:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13508:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;13508:13:122::1;::::0;-1:-1:-1;;;13508:34:122:i:1;:::-;;13469:245;;;13582:12;13596:21:::0;13621:7:::1;;13629:1;13621:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13621:15:122::1;13637:4;;13642:1;13637:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13621:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13581:64;;;;13668:7;13663:36;;13677:22;13690:8;13677:12;:22::i;:::-;13563:151;;13469:245;13739:3;;13420:335;;;;13363:398;13207:554:::0;;;;;;:::o;10361:598::-;-1:-1:-1;;;;;5681:4:122;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:122;;;;;;;;;;;5660:68;10555:51:::1;10562:8;10572:5;10579:12;10593;10555:6;:51::i;:::-;10616:65;::::0;-1:-1:-1;;;10616:65:122;;-1:-1:-1;;;;;10636:3:122::1;10616:42;::::0;::::1;::::0;:65:::1;::::0;10659:8;;10669:5;;10676:4:::1;::::0;10616:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10701:5;-1:-1:-1::0;;;;;10691:40:122::1;;10745:8;10775:4;10802;10821:1;10837:29;10846:12;:19;;;10837:8;:29::i;:::-;10836:30;;;:::i;:::-;10691:185;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10886:66:122::1;::::0;-1:-1:-1;;;10886:66:122;;-1:-1:-1;;;;;10906:3:122::1;10886:42;::::0;-1:-1:-1;10886:42:122::1;::::0;-1:-1:-1;10886:66:122::1;::::0;10929:8;;10939:5;;10946::::1;::::0;10886:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;24051:992:::0;24212:7;24248:23;;;;24212:7;24286:24;;;;24248:16;24286:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24286:46:122;;24282:682;;24388:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;24352:64:122;:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24352:64:122;;;:135;;;-1:-1:-1;24482:4:122;24436:24;;;;:16;:24;:::i;:::-;:34;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24436:51:122;;;24352:135;24348:201;;;24509:40;;-1:-1:-1;;;24509:40:122;;;;;;;;;;;24348:201;24572:89;24589:31;;;;;;;;:::i;:::-;24622:24;;;;:16;:24;:::i;:::-;24648:12;24572:16;:89::i;:::-;24563:98;;24282:682;;;24725:4;24682:31;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24682:48:122;;24678:286;;24746:207;24777:28;;;;:16;:28;:::i;:::-;24823:31;;;;;;;;:::i;:::-;24880:4;24903:6;24746:207;;;;;;;24927:12;24746:207;:::i;:::-;24981:55;24992:5;24999:28;;;;:16;:28;:::i;:::-;25029:6;24981:10;:55::i;:::-;24974:62;;;24051:992;;;;;;:::o;509:133:178:-;552:6;-1:-1:-1;;;570:1:178;:13;566:51;;592:25;;-1:-1:-1;;;592:25:178;;;;;;;;;;;566:51;-1:-1:-1;637:1:178;509:133::o;30272:332:122:-;30399:18;30430:22;30454:21;30490:5;-1:-1:-1;;;;;30480:27:122;;30508:8;30480:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30429:88;;;;;30540:57;30560:4;30566:15;30583:13;30540:19;:57::i;:::-;30527:70;30272:332;-1:-1:-1;;;;;;30272:332:122:o;3437:220:123:-;3567:7;3593:57;3605:11;:17;;;3632:1;3636:13;3593:11;:57::i;:::-;3586:64;;3437:220;;;;;:::o;767:241:120:-;839:12;864;878:23;905:2;-1:-1:-1;;;;;905:15:120;921:4;905:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:63;;;;941:7;936:38;;950:24;963:10;950:12;:24::i;:::-;991:10;767:241;-1:-1:-1;;;;767:241:120:o;941:175:62:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1050:58:62;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:62;-1:-1:-1;;;;;;1050:58:62;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;2515:607:123:-;2710:7;;2860:29;2876:13;2860;:29;:::i;:::-;2987:17;;;;2945:27;;;;2830:59;;-1:-1:-1;2938:88:123;;-1:-1:-1;;;;;2938:48:123;;2830:59;2938:48;:88::i;:::-;3053:11;:17;;;-1:-1:-1;;;;;3043:36:123;;3088:4;3095:19;3043:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;26256:940:122:-;26329:80;;-1:-1:-1;;;26329:80:122;;-1:-1:-1;;;;;26349:3:122;26329:42;;;;:80;;26380:4;;26395:6;;26404:4;;26329:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26463:1:122;;-1:-1:-1;26423:20:122;;-1:-1:-1;;26423:20:122;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26423:42:122;;26419:771;;-1:-1:-1;;;;;26481:6:122;:11;;26493:21;;;;;;;;:::i;:::-;26481:55;;-1:-1:-1;;;;;;26481:55:122;;;;;;;;;;26516:19;;;26481:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26550:81:122;;-1:-1:-1;;;26550:81:122;;-1:-1:-1;;;;;26570:3:122;26550:42;;-1:-1:-1;26550:42:122;;-1:-1:-1;26550:81:122;;26601:4;;26616:6;;26625:5;;26550:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26256:940;:::o;26419:771::-;26663:47;;-1:-1:-1;;;26663:47:122;;-1:-1:-1;;;;;26663:6:122;:11;;;;:47;;26683:4;;26690:19;;;26663:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26724:81:122;;-1:-1:-1;;;26724:81:122;;-1:-1:-1;;;;;26744:3:122;26724:42;;-1:-1:-1;26724:42:122;;-1:-1:-1;26724:81:122;;26775:4;;26790:6;;26799:5;;26724:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;26896:10:122;26856:51;;-1:-1:-1;26856:20:122;;-1:-1:-1;26856:20:122;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26856:51:122;;26852:103;;26916:39;;-1:-1:-1;;;26916:39:122;;;;;;;;;;;26852:103;26969:210;27008:10;-1:-1:-1;;;27127:20:122;;;;:12;:20;:::i;:::-;27037:128;;;;;;;;:::i;26969:210::-;;26419:771;26256:940;:::o;25315:798::-;25411:7;;25451:73;25463:5;25470:28;;;;:16;:28;:::i;:::-;25500:16;:23;;;25451:11;:73::i;:::-;25430:94;-1:-1:-1;25642:1:122;25598:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25598:46:122;;25594:486;;25660:214;25699:10;-1:-1:-1;;;25818:24:122;;;;:16;:24;:::i;25660:214::-;;25594:486;;;25975:94;26025:31;;;;;;;;:::i;:::-;26058:10;25982:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;25975:49:122;;:94;:49;:94::i;27490:1319::-;27727:14;;27755:20;;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;27755:42:122;;27751:896;;27860:4;27818:20;;;;:12;:20;:::i;:::-;:30;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;27818:47:122;;27814:98;;27874:38;;-1:-1:-1;;;27874:38:122;;;;;;;;;;;27814:98;27936:75;27953:21;;;;;;;;:::i;:::-;27976:20;;;;:12;:20;:::i;:::-;27998:12;27936:16;:75::i;:::-;27927:84;;27751:896;;;28103:22;28127:21;28163:5;-1:-1:-1;;;;;28153:27:122;;28181:8;28153:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28102:88:122;;-1:-1:-1;28102:88:122;-1:-1:-1;28102:88:122;28213:42;-1:-1:-1;;;;;28213:42:122;;28235:19;;28213:4;:42::i;:::-;:58;;;;:::i;:::-;28204:67;-1:-1:-1;28323:4:122;28290:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28290:38:122;;28286:351;;28410:212;28453:10;28486:21;;;;;;;;:::i;:::-;28537:4;28564:6;28410:212;;;;;;;28592:12;28410:212;:::i;:::-;28029:618;;27751:896;28714:43;;-1:-1:-1;;;28714:43:122;;-1:-1:-1;;;;;28714:10:122;:18;;;;:43;;28741:6;;28750;;28714:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28767:35:122;;-1:-1:-1;;;28767:35:122;;-1:-1:-1;;;;;28767:6:122;:12;;;;:35;;28788:4;;28795:6;;28767:35;;;:::i;1455:1279:129:-;1623:20;1600:19;;:43;;;;;;;;:::i;:::-;;1596:1132;;1135:42;-1:-1:-1;;;;;1721:46:129;;1785:262;;;;;;;;1856:84;;;;;;;;1901:5;-1:-1:-1;;;;;1856:84:129;;;;;1916:6;:21;;;1856:84;;;1785:262;;;;1969:6;:12;;;1785:262;;;;2013:6;:15;;;1785:262;;;2065:80;;;;;;;;2115:2;-1:-1:-1;;;;;2065:80:129;;;;;2136:6;2065:80;;;2163:4;2198:6;:8;;;2208:6;:8;;;2225:6;:8;;;2218:16;;2185:50;;;;;;;;;30825:19:188;;;30869:2;30860:12;;30853:28;;;;-1:-1:-1;;;;;;30911:26:188;30906:2;30897:12;;30890:48;30963:2;30954:12;;30642:330;2185:50:129;;;;;;;;;;;;;1721:551;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:1132;;;2316:19;2293;;:42;;;;;;;;:::i;:::-;;2289:439;;2406:110;2437:4;2443:2;2447:6;:21;;;2470:6;:15;;;2487:6;:8;;;2497:6;:8;;;2507:6;:8;;;2419:5;-1:-1:-1;;;;;2406:30:129;;;:110;;;;;;;;;;:::i;:::-;2530:48;-1:-1:-1;;;;;2530:30:129;;2561:4;2567:2;2571:6;2530:30;:48::i;:::-;2289:439;;;2669:48;-1:-1:-1;;;;;2669:30:129;;2700:4;2706:2;2710:6;2669:30;:48::i;1192:255:120:-;1263:13;;:18;1259:127;;1354:6;1348:13;1339:6;1335:2;1331:15;1324:38;1259:127;1402:38;;-1:-1:-1;;;1402:38:120;;;;;;;;;;;28905:952:122;29063:17;29092:21;29116:241;29151:10;29216:35;;;29269:6;29293:12;29323:10;29176:171;;;;;;;;;;:::i;29116:241::-;29092:265;;29367:17;29398:8;29387:31;;;;;;;;;;;;:::i;:::-;29367:51;-1:-1:-1;29540:18:122;29517:19;;;;;;;;:::i;:::-;:41;;;;;;;;:::i;:::-;;29513:338;;29574:17;29594:28;29613:9;29594:16;;;;:28;:::i;:::-;29574:48;-1:-1:-1;29640:13:122;;29636:110;;29673:58;29713:6;29721:9;29680:18;;;;;;;;:::i;29673:58::-;29771:10;:17;;;29759:29;;29560:239;29513:338;;;29831:9;29819:21;;29513:338;29082:775;;28905:952;;;;;:::o;1389:305:123:-;1484:7;1503:23;1547:5;-1:-1:-1;;;;;1537:22:123;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:59;-1:-1:-1;1572:51:123;-1:-1:-1;;;;;1572:36:123;;1609:5;1616:6;1572:36;:51::i;:::-;1640:47;;-1:-1:-1;;;1640:47:123;;-1:-1:-1;;;;;1640:24:123;;;;;:47;;1673:4;;1680:6;;1640:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1940:373:88:-;2058:18;2097:43;2102:20;2109:13;2102:4;:20;:::i;:::-;2124:15;-1:-1:-1;;;;;2097:43:88;:4;:43::i;:::-;2084:56;;2262:4;2202:57;2216:10;2228:15;2245:13;2202;:57::i;:::-;:64;2198:113;;;2290:12;;1940:373;;;;;:::o;1925:177:123:-;2047:48;;-1:-1:-1;;;2047:48:123;;2021:7;;-1:-1:-1;;;;;2047:25:123;;;;;:48;;2081:4;;2088:6;;2047:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5173:642:62:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:62;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:62;;33573:2:188;5697:111:62;;;33555:21:188;33612:2;33592:18;;;33585:30;33651:34;33631:18;;;33624:62;-1:-1:-1;;;33702:18:188;;;33695:40;33752:19;;5697:111:62;;;;;;;;3756:410;3843:25;3894:22;;;3918:7;3927:5;3871:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3871:62:62;;;;;;;;;;;;;;-1:-1:-1;;;;;3871:62:62;-1:-1:-1;;;;;;3871:62:62;;;;;;;;;;;-1:-1:-1;3949:44:62;3973:5;3871:62;3949:23;:44::i;:::-;3944:216;;4036:58;;-1:-1:-1;;;;;33980:32:188;;4036:58:62;;;33962:51:188;4092:1:62;34029:18:188;;;34022:45;4009:86:62;;4029:5;;-1:-1:-1;;;4059:22:62;33935:18:188;;4036:58:62;33782:291:188;4009:86:62;4109:40;4129:5;4136:12;4109:19;:40::i;3233:443:178:-;3283:9;3436:1;3432;3428:6;3424:14;3421:1;3418:21;3415:1;3411:29;3408:227;;;3539:10;3533:4;3526:24;3620:4;3614;3607:18;3408:227;-1:-1:-1;3664:3:178;3653:9;;3649:19;;3233:443::o;4318:472:62:-;4565:19;;-1:-1:-1;;;4565:19:62;;4543;;-1:-1:-1;;;;;4565:12:62;;;;;:19;;4578:5;;4565:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4594:54;;-1:-1:-1;;;4594:54:62;;-1:-1:-1;;;;;34445:15:188;;;4594:54:62;;;34427:34:188;34497:15;;;34477:18;;;34470:43;34529:18;;;34522:34;;;34572:18;;;34565:34;;;34648:4;34636:17;;34615:19;;;34608:46;34670:19;;;34663:35;;;34714:19;;;34707:35;;;4543:41:62;;-1:-1:-1;4594:12:62;;;;;;34361:19:188;;4594:54:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4679:19:62;;-1:-1:-1;;;4679:19:62;;4658:18;;-1:-1:-1;;;;;;4679:12:62;;;-1:-1:-1;4679:12:62;;:19;;4692:5;;4679:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4658:40;-1:-1:-1;4730:15:62;:11;4744:1;4730:15;:::i;:::-;4716:10;:29;4708:75;;;;-1:-1:-1;;;4708:75:62;;34955:2:188;4708:75:62;;;34937:21:188;34994:2;34974:18;;;34967:30;35033:34;35013:18;;;35006:62;-1:-1:-1;;;35084:18:188;;;35077:31;35125:19;;4708:75:62;34753:397:188;4708:75:62;4533:257;;4318:472;;;;;;;;:::o;1355:203::-;1482:68;;-1:-1:-1;;;;;35413:15:188;;;1482:68:62;;;35395:34:188;35465:15;;35445:18;;;35438:43;35497:18;;;35490:34;;;1455:96:62;;1475:5;;-1:-1:-1;;;1505:27:62;35330:18:188;;1482:68:62;35155:375:188;4704:487:178;4754:9;4934:16;4928:23;;4946:3;4919:33;4912:41;4905:49;;4895:255;;5054:10;5048:4;5041:24;5135:4;5129;5122:18;4895:255;-1:-1:-1;5175:3:178;5168:11;;;;5164:19;;4704:487::o;1466:197:88:-;1584:12;1647:13;1611:33;1616:10;1628:15;-1:-1:-1;;;;;1611:33:88;:4;:33::i;:::-;:49;;;;:::i;4109:223:65:-;4242:12;4273:52;4295:6;4303:4;4309:1;4312:12;4273:21;:52::i;6316:594:62:-;6399:4;6701:12;6715:23;6750:5;-1:-1:-1;;;;;6742:19:62;6762:4;6742:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6700:67;;;;6796:7;:69;;;;-1:-1:-1;6808:17:62;;:22;;:56;;;6845:10;6834:30;;;;;;;;;;;;:::i;:::-;6796:107;;;;-1:-1:-1;;;;;;1702:19:65;;;:23;;6869:34:62;6777:126;6316:594;-1:-1:-1;;;;;6316:594:62:o;5166:446:65:-;5331:12;5388:5;5363:21;:30;;5355:81;;;;-1:-1:-1;;;5355:81:65;;35737:2:188;5355:81:65;;;35719:21:188;35776:2;35756:18;;;35749:30;35815:34;35795:18;;;35788:62;-1:-1:-1;;;35866:18:188;;;35859:36;35912:19;;5355:81:65;35535:402:188;5355:81:65;5447:12;5461:23;5488:6;-1:-1:-1;;;;;5488:11:65;5507:5;5514:4;5488:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:73;;;;5536:69;5563:6;5571:7;5580:10;5592:12;5536:26;:69::i;:::-;5529:76;5166:446;-1:-1:-1;;;;;;;5166:446:65:o;7672:628::-;7852:12;7880:7;7876:418;;;7907:10;:17;7928:1;7907:22;7903:286;;-1:-1:-1;;;;;1702:19:65;;;8114:60;;;;-1:-1:-1;;;8114:60:65;;36144:2:188;8114:60:65;;;36126:21:188;36183:2;36163:18;;;36156:30;36222:31;36202:18;;;36195:59;36271:18;;8114:60:65;35942:353:188;8114:60:65;-1:-1:-1;8209:10:65;8202:17;;7876:418;8250:33;8258:10;8270:12;8981:17;;:21;8977:379;;9209:10;9203:17;9265:15;9252:10;9248:2;9244:19;9237:44;8977:379;9332:12;9325:20;;-1:-1:-1;;;9325:20:65;;;;;;;;:::i;14:131:188:-;-1:-1:-1;;;;;89:31:188;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:165::-;358:5;403:3;394:6;389:3;385:16;381:26;378:46;;;420:1;417;410:12;378:46;-1:-1:-1;442:6:188;289:165;-1:-1:-1;289:165:188:o;459:161::-;524:5;569:3;560:6;555:3;551:16;547:26;544:46;;;586:1;583;576:12;625:789;781:6;789;797;805;858:3;846:9;837:7;833:23;829:33;826:53;;;875:1;872;865:12;826:53;914:9;901:23;933:31;958:5;933:31;:::i;:::-;983:5;-1:-1:-1;1040:2:188;1025:18;;1012:32;1053:33;1012:32;1053:33;:::i;:::-;1105:7;-1:-1:-1;1163:2:188;1148:18;;1135:32;-1:-1:-1;;;;;1179:30:188;;1176:50;;;1222:1;1219;1212:12;1176:50;1245:76;1313:7;1304:6;1293:9;1289:22;1245:76;:::i;:::-;1235:86;;;1340:68;1400:7;1395:2;1384:9;1380:18;1340:68;:::i;:::-;1330:78;;625:789;;;;;;;:::o;1419:220::-;-1:-1:-1;;;;;1600:32:188;;;;1582:51;;1570:2;1555:18;;1419:220::o;1644:160::-;1708:5;1753:3;1744:6;1739:3;1735:16;1731:26;1728:46;;;1770:1;1767;1760:12;1809:568;1918:6;1926;1934;1987:2;1975:9;1966:7;1962:23;1958:32;1955:52;;;2003:1;2000;1993:12;1955:52;2043:9;2030:23;-1:-1:-1;;;;;2068:6:188;2065:30;2062:50;;;2108:1;2105;2098:12;2062:50;2131:71;2194:7;2185:6;2174:9;2170:22;2131:71;:::i;:::-;2121:81;;;2249:2;2238:9;2234:18;2221:32;2211:42;;2303:2;2292:9;2288:18;2275:32;2316:31;2341:5;2316:31;:::i;:::-;2366:5;2356:15;;;1809:568;;;;;:::o;2881:347::-;2932:8;2942:6;2996:3;2989:4;2981:6;2977:17;2973:27;2963:55;;3014:1;3011;3004:12;2963:55;-1:-1:-1;3037:20:188;;-1:-1:-1;;;;;3069:30:188;;3066:50;;;3112:1;3109;3102:12;3066:50;3149:4;3141:6;3137:17;3125:29;;3201:3;3194:4;3185:6;3177;3173:19;3169:30;3166:39;3163:59;;;3218:1;3215;3208:12;3163:59;2881:347;;;;;:::o;3233:681::-;3330:6;3338;3346;3354;3362;3415:3;3403:9;3394:7;3390:23;3386:33;3383:53;;;3432:1;3429;3422:12;3383:53;3471:9;3458:23;3490:31;3515:5;3490:31;:::i;:::-;3540:5;-1:-1:-1;3592:2:188;3577:18;;3564:32;;-1:-1:-1;3643:2:188;3628:18;;3615:32;;-1:-1:-1;3698:2:188;3683:18;;3670:32;-1:-1:-1;;;;;3714:30:188;;3711:50;;;3757:1;3754;3747:12;3711:50;3796:58;3846:7;3837:6;3826:9;3822:22;3796:58;:::i;:::-;3233:681;;;;-1:-1:-1;3233:681:188;;-1:-1:-1;3873:8:188;;3770:84;3233:681;-1:-1:-1;;;3233:681:188:o;3919:823::-;4025:6;4033;4041;4049;4057;4065;4118:3;4106:9;4097:7;4093:23;4089:33;4086:53;;;4135:1;4132;4125:12;4086:53;4174:9;4161:23;4193:31;4218:5;4193:31;:::i;:::-;4243:5;-1:-1:-1;4300:2:188;4285:18;;4272:32;4313:33;4272:32;4313:33;:::i;:::-;4365:7;-1:-1:-1;4419:2:188;4404:18;;4391:32;;-1:-1:-1;4470:2:188;4455:18;;4442:32;;-1:-1:-1;4525:3:188;4510:19;;4497:33;-1:-1:-1;;;;;4542:30:188;;4539:50;;;4585:1;4582;4575:12;4539:50;4624:58;4674:7;4665:6;4654:9;4650:22;4624:58;:::i;:::-;3919:823;;;;-1:-1:-1;3919:823:188;;-1:-1:-1;3919:823:188;;4701:8;;3919:823;-1:-1:-1;;;3919:823:188:o;4747:160::-;4812:5;4857:2;4848:6;4843:3;4839:16;4835:25;4832:45;;;4873:1;4870;4863:12;4912:1056;5110:6;5118;5126;5134;5142;5195:3;5183:9;5174:7;5170:23;5166:33;5163:53;;;5212:1;5209;5202:12;5163:53;5251:9;5238:23;5270:31;5295:5;5270:31;:::i;:::-;5320:5;-1:-1:-1;5377:2:188;5362:18;;5349:32;5390:33;5349:32;5390:33;:::i;:::-;5442:7;-1:-1:-1;5500:2:188;5485:18;;5472:32;-1:-1:-1;;;;;5553:14:188;;;5550:34;;;5580:1;5577;5570:12;5550:34;5603:76;5671:7;5662:6;5651:9;5647:22;5603:76;:::i;:::-;5593:86;;5732:2;5721:9;5717:18;5704:32;5688:48;;5761:2;5751:8;5748:16;5745:36;;;5777:1;5774;5767:12;5745:36;;5800:74;5866:7;5855:8;5844:9;5840:24;5800:74;:::i;:::-;5790:84;;;5893:69;5954:7;5948:3;5937:9;5933:19;5893:69;:::i;:::-;5883:79;;4912:1056;;;;;;;;:::o;5973:643::-;6083:6;6091;6099;6152:2;6140:9;6131:7;6127:23;6123:32;6120:52;;;6168:1;6165;6158:12;6120:52;6207:9;6194:23;6226:31;6251:5;6226:31;:::i;:::-;6276:5;-1:-1:-1;6333:2:188;6318:18;;6305:32;6346:33;6305:32;6346:33;:::i;:::-;6398:7;-1:-1:-1;6456:2:188;6441:18;;6428:32;-1:-1:-1;;;;;6472:30:188;;6469:50;;;6515:1;6512;6505:12;6469:50;6538:72;6602:7;6593:6;6582:9;6578:22;6538:72;:::i;:::-;6528:82;;;5973:643;;;;;:::o;6621:651::-;6735:6;6743;6751;6804:2;6792:9;6783:7;6779:23;6775:32;6772:52;;;6820:1;6817;6810:12;6772:52;6859:9;6846:23;6878:31;6903:5;6878:31;:::i;:::-;6928:5;-1:-1:-1;6985:2:188;6970:18;;6957:32;6998:33;6957:32;6998:33;:::i;:::-;7050:7;-1:-1:-1;7108:2:188;7093:18;;7080:32;-1:-1:-1;;;;;7124:30:188;;7121:50;;;7167:1;7164;7157:12;7121:50;7190:76;7258:7;7249:6;7238:9;7234:22;7190:76;:::i;7505:848::-;7665:6;7673;7681;7689;7697;7750:3;7738:9;7729:7;7725:23;7721:33;7718:53;;;7767:1;7764;7757:12;7718:53;7807:9;7794:23;-1:-1:-1;;;;;7832:6:188;7829:30;7826:50;;;7872:1;7869;7862:12;7826:50;7895:71;7958:7;7949:6;7938:9;7934:22;7895:71;:::i;:::-;7885:81;;;8016:2;8005:9;8001:18;7988:32;8029:31;8054:5;8029:31;:::i;:::-;8079:5;-1:-1:-1;8131:2:188;8116:18;;8103:32;;-1:-1:-1;8187:2:188;8172:18;;8159:32;8200:33;8159:32;8200:33;:::i;:::-;8252:7;-1:-1:-1;8278:69:188;8339:7;8333:3;8318:19;;8278:69;:::i;9039:367::-;9102:8;9112:6;9166:3;9159:4;9151:6;9147:17;9143:27;9133:55;;9184:1;9181;9174:12;9133:55;-1:-1:-1;9207:20:188;;-1:-1:-1;;;;;9239:30:188;;9236:50;;;9282:1;9279;9272:12;9236:50;9319:4;9311:6;9307:17;9295:29;;9379:3;9372:4;9362:6;9359:1;9355:14;9347:6;9343:27;9339:38;9336:47;9333:67;;;9396:1;9393;9386:12;9411:1096;9577:6;9585;9593;9601;9609;9617;9670:2;9658:9;9649:7;9645:23;9641:32;9638:52;;;9686:1;9683;9676:12;9638:52;9726:9;9713:23;-1:-1:-1;;;;;9796:2:188;9788:6;9785:14;9782:34;;;9812:1;9809;9802:12;9782:34;9851:70;9913:7;9904:6;9893:9;9889:22;9851:70;:::i;:::-;9940:8;;-1:-1:-1;9825:96:188;-1:-1:-1;10028:2:188;10013:18;;10000:32;;-1:-1:-1;10044:16:188;;;10041:36;;;10073:1;10070;10063:12;10041:36;10112:72;10176:7;10165:8;10154:9;10150:24;10112:72;:::i;:::-;10203:8;;-1:-1:-1;10086:98:188;-1:-1:-1;10291:2:188;10276:18;;10263:32;;-1:-1:-1;10307:16:188;;;10304:36;;;10336:1;10333;10326:12;10304:36;;10375:72;10439:7;10428:8;10417:9;10413:24;10375:72;:::i;10512:781::-;10664:6;10672;10680;10688;10741:3;10729:9;10720:7;10716:23;10712:33;10709:53;;;10758:1;10755;10748:12;10709:53;10797:9;10784:23;10816:31;10841:5;10816:31;:::i;:::-;10866:5;-1:-1:-1;10923:2:188;10908:18;;10895:32;10936:33;10895:32;10936:33;:::i;:::-;10988:7;-1:-1:-1;11046:2:188;11031:18;;11018:32;-1:-1:-1;;;;;11062:30:188;;11059:50;;;11105:1;11102;11095:12;11059:50;11128:72;11192:7;11183:6;11172:9;11168:22;11128:72;:::i;11298:533::-;-1:-1:-1;;;;;11618:15:188;;;11600:34;;11670:15;;;11665:2;11650:18;;11643:43;11722:15;;;;11717:2;11702:18;;11695:43;11769:2;11754:18;;11747:34;;;;11812:3;11797:19;;11790:35;;;;11549:3;11534:19;;11298:533::o;11836:127::-;11897:10;11892:3;11888:20;11885:1;11878:31;11928:4;11925:1;11918:15;11952:4;11949:1;11942:15;11968:329;12065:4;12123:11;12110:25;12217:3;12213:8;12202;12186:14;12182:29;12178:44;12158:18;12154:69;12144:97;;12237:1;12234;12227:12;12144:97;12258:33;;;;;11968:329;-1:-1:-1;;11968:329:188:o;12302:149::-;12376:20;;12425:1;12415:12;;12405:40;;12441:1;12438;12431:12;12456:206;12529:6;12582:2;12570:9;12561:7;12557:23;12553:32;12550:52;;;12598:1;12595;12588:12;12550:52;12621:35;12646:9;12621:35;:::i;12667:247::-;12726:6;12779:2;12767:9;12758:7;12754:23;12750:32;12747:52;;;12795:1;12792;12785:12;12747:52;12834:9;12821:23;12853:31;12878:5;12853:31;:::i;12919:385::-;-1:-1:-1;;;;;13171:15:188;;;13153:34;;13223:15;;;;13218:2;13203:18;;13196:43;13282:14;;13275:22;13270:2;13255:18;;13248:50;13103:2;13088:18;;12919:385::o;13309:296::-;13379:5;13438:3;13425:17;13524:3;13520:8;13509;13493:14;13489:29;13485:44;13465:18;13461:69;13451:97;;13544:1;13541;13534:12;13451:97;13566:33;;;;13309:296;-1:-1:-1;;13309:296:188:o;13610:111::-;13695:1;13688:5;13685:12;13675:40;;13711:1;13708;13701:12;13726:154;13804:20;;13833:41;13804:20;13833:41;:::i;13885:117::-;13970:1;13963:5;13960:12;13950:46;;13976:18;;:::i;14007:139::-;14087:1;14080:5;14077:12;14067:46;;14093:18;;:::i;:::-;14122;;14007:139::o;14151:500::-;14209:5;14216:6;14276:3;14263:17;14362:2;14358:7;14347:8;14331:14;14327:29;14323:43;14303:18;14299:68;14289:96;;14381:1;14378;14371:12;14289:96;14409:33;;14513:4;14500:18;;;-1:-1:-1;14461:21:188;;-1:-1:-1;;;;;;14530:30:188;;14527:50;;;14573:1;14570;14563:12;14527:50;14620:6;14604:14;14600:27;14593:5;14589:39;14586:59;;;14641:1;14638;14631:12;14656:266;14744:6;14739:3;14732:19;14796:6;14789:5;14782:4;14777:3;14773:14;14760:43;-1:-1:-1;14848:1:188;14823:16;;;14841:4;14819:27;;;14812:38;;;;14904:2;14883:15;;;-1:-1:-1;;14879:29:188;14870:39;;;14866:50;;14656:266::o;14927:1131::-;14989:3;15017:6;15060:5;15047:19;15075:43;15110:7;15075:43;:::i;:::-;15127;15162:7;15127:43;:::i;:::-;15179:20;;15228:42;15264:4;15253:16;;15228:42;:::i;:::-;15279:54;15327:4;15322:3;15318:14;15304:12;15279:54;:::i;:::-;;15381:4;15374:5;15370:16;15357:30;15396:33;15421:7;15396:33;:::i;:::-;-1:-1:-1;;;;;15461:33:188;15454:4;15445:14;;15438:57;15551:4;15540:16;;;15527:30;15511:14;;;15504:54;15614:4;15603:16;;;15590:30;15574:14;;;15567:54;15482:3;15658:16;;15645:30;15684:33;15645:30;15684:33;:::i;:::-;-1:-1:-1;;;;;2630:31:188;15763:4;15754:14;;2618:44;15825:4;15814:16;;;15801:30;15785:14;;;15778:54;15877:55;15926:4;15915:16;;15818:5;15877:55;:::i;:::-;15964:2;15957:4;15952:3;15948:14;15941:26;15983:69;16048:2;16043:3;16039:12;16025;16009:14;15983:69;:::i;16063:970::-;16126:3;16172:5;16159:19;16187:33;16212:7;16187:33;:::i;:::-;-1:-1:-1;;;;;16279:16:188;;;16267:29;;16344:4;16333:16;;16320:30;;16359:33;16320:30;16359:33;:::i;:::-;16424:16;;;16417:4;16408:14;;16401:40;16489:4;16478:16;;16465:30;;16504:33;16465:30;16504:33;:::i;:::-;16569:16;16562:4;16553:14;;16546:40;16615:67;16676:4;16665:16;;16669:5;16615:67;:::i;:::-;16714:4;16707;16702:3;16698:14;16691:28;16740:67;16801:4;16796:3;16792:14;16778:12;16740:67;:::i;:::-;16728:79;;16838:67;16899:4;16892:5;16888:16;16881:5;16838:67;:::i;:::-;16947:3;16941:4;16937:14;16930:4;16925:3;16921:14;16914:38;16968:59;17022:4;17006:14;16968:59;:::i;17038:451::-;17285:2;17274:9;17267:21;17248:4;17305:66;17367:2;17356:9;17352:18;17344:6;17305:66;:::i;:::-;17402:2;17387:18;;17380:34;;;;-1:-1:-1;;;;;;17450:32:188;;;;17445:2;17430:18;;;17423:60;17297:74;17038:451;-1:-1:-1;17038:451:188:o;17494:250::-;17579:1;17589:113;17603:6;17600:1;17597:13;17589:113;;;17679:11;;;17673:18;17660:11;;;17653:39;17625:2;17618:10;17589:113;;;-1:-1:-1;;17736:1:188;17718:16;;17711:27;17494:250::o;17749:270::-;17790:3;17828:5;17822:12;17855:6;17850:3;17843:19;17871:76;17940:6;17933:4;17928:3;17924:14;17917:4;17910:5;17906:16;17871:76;:::i;:::-;18001:2;17980:15;-1:-1:-1;;17976:29:188;17967:39;;;;18008:4;17963:50;;17749:270;-1:-1:-1;;17749:270:188:o;18024:415::-;18286:1;18282;18277:3;18273:11;18269:19;18261:6;18257:32;18246:9;18239:51;18326:6;18321:2;18310:9;18306:18;18299:34;18369:2;18364;18353:9;18349:18;18342:30;18220:4;18389:44;18429:2;18418:9;18414:18;18406:6;18389:44;:::i;18444:118::-;18530:5;18523:13;18516:21;18509:5;18506:32;18496:60;;18552:1;18549;18542:12;18567:245;18634:6;18687:2;18675:9;18666:7;18662:23;18658:32;18655:52;;;18703:1;18700;18693:12;18655:52;18735:9;18729:16;18754:28;18776:5;18754:28;:::i;18817:127::-;18878:10;18873:3;18869:20;18866:1;18859:31;18909:4;18906:1;18899:15;18933:4;18930:1;18923:15;18949:250;19016:2;19010:9;19058:6;19046:19;;-1:-1:-1;;;;;19080:34:188;;19116:22;;;19077:62;19074:88;;;19142:18;;:::i;:::-;19178:2;19171:22;18949:250;:::o;19204:718::-;19246:5;19299:3;19292:4;19284:6;19280:17;19276:27;19266:55;;19317:1;19314;19307:12;19266:55;19353:6;19340:20;-1:-1:-1;;;;;19416:2:188;19412;19409:10;19406:36;;;19422:18;;:::i;:::-;19497:2;19491:9;19465:2;19551:13;;-1:-1:-1;;19547:22:188;;;19571:2;19543:31;19539:40;19527:53;;;19595:18;;;19615:22;;;19592:46;19589:72;;;19641:18;;:::i;:::-;19681:10;19677:2;19670:22;19716:2;19708:6;19701:18;19762:3;19755:4;19750:2;19742:6;19738:15;19734:26;19731:35;19728:55;;;19779:1;19776;19769:12;19728:55;19843:2;19836:4;19828:6;19824:17;19817:4;19809:6;19805:17;19792:54;19890:1;19883:4;19878:2;19870:6;19866:15;19862:26;19855:37;19910:6;19901:15;;;;;;19204:718;;;;:::o;19927:847::-;19984:5;20032:6;20020:9;20015:3;20011:19;20007:32;20004:52;;;20052:1;20049;20042:12;20004:52;20074:17;;:::i;:::-;20065:26;;20114:39;20143:9;20114:39;:::i;:::-;20107:5;20100:54;20186:44;20226:2;20215:9;20211:18;20186:44;:::i;:::-;20181:2;20174:5;20170:14;20163:68;20263:38;20297:2;20286:9;20282:18;20263:38;:::i;:::-;20258:2;20251:5;20247:14;20240:62;20362:2;20351:9;20347:18;20334:32;20329:2;20322:5;20318:14;20311:56;20428:3;20417:9;20413:19;20400:33;20394:3;20387:5;20383:15;20376:58;20467:39;20501:3;20490:9;20486:19;20467:39;:::i;:::-;20461:3;20454:5;20450:15;20443:64;20568:3;20557:9;20553:19;20540:33;20534:3;20527:5;20523:15;20516:58;20625:3;20614:9;20610:19;20597:33;-1:-1:-1;;;;;20645:6:188;20642:30;20639:50;;;20685:1;20682;20675:12;20639:50;20722:45;20763:3;20754:6;20743:9;20739:22;20722:45;:::i;:::-;20716:3;20709:5;20705:15;20698:70;;19927:847;;;;:::o;20779:1101::-;20837:5;20885:4;20873:9;20868:3;20864:19;20860:30;20857:50;;;20903:1;20900;20893:12;20857:50;20936:2;20930:9;20978:4;20970:6;20966:17;-1:-1:-1;;;;;21070:6:188;21058:10;21055:22;21050:2;21038:10;21035:18;21032:46;21029:72;;;21081:18;;:::i;:::-;21121:10;21117:2;21110:22;21150:6;21141:15;;21193:9;21180:23;21165:38;;21212:33;21237:7;21212:33;:::i;:::-;21254:23;;;21329:2;21314:18;;21301:32;;21342:33;21301:32;21342:33;:::i;:::-;21408:7;21403:2;21395:6;21391:15;21384:32;21449:38;21483:2;21472:9;21468:18;21449:38;:::i;:::-;21444:2;21436:6;21432:15;21425:63;21539:2;21528:9;21524:18;21511:32;21497:46;;21566:2;21558:6;21555:14;21552:34;;;21582:1;21579;21572:12;21552:34;21619:57;21672:3;21663:6;21652:9;21648:22;21619:57;:::i;:::-;21614:2;21606:6;21602:15;21595:82;21730:3;21719:9;21715:19;21702:33;21686:49;;21760:2;21750:8;21747:16;21744:36;;;21776:1;21773;21766:12;21744:36;;21814:59;21869:3;21858:8;21847:9;21843:24;21814:59;:::i;:::-;21808:3;21800:6;21796:16;21789:85;;;20779:1101;;;;:::o;21885:565::-;22000:6;22008;22016;22069:2;22057:9;22048:7;22044:23;22040:32;22037:52;;;22085:1;22082;22075:12;22037:52;22125:9;22112:23;-1:-1:-1;;;;;22150:6:188;22147:30;22144:50;;;22190:1;22187;22180:12;22144:50;22213:62;22267:7;22258:6;22247:9;22243:22;22213:62;:::i;22744:127::-;22805:10;22800:3;22796:20;22793:1;22786:31;22836:4;22833:1;22826:15;22860:4;22857:1;22850:15;22876:136;22911:3;-1:-1:-1;;;22932:22:188;;22929:48;;22957:18;;:::i;:::-;-1:-1:-1;22997:1:188;22993:13;;22876:136::o;23546:1005::-;23733:2;23722:9;23715:21;23696:4;23761:6;23755:13;23777:38;23812:2;23777:38;:::i;:::-;23851:2;23846;23835:9;23831:18;23824:30;;23901:2;23893:6;23889:15;23883:22;23914:58;23968:2;23957:9;23953:18;23939:12;23914:58;:::i;:::-;;24053:1;24049;24044:3;24040:11;24036:19;24030:2;24022:6;24018:15;24012:22;24008:48;24003:2;23992:9;23988:18;23981:76;24112:2;24104:6;24100:15;24094:22;24088:3;24077:9;24073:19;24066:51;24172:3;24164:6;24160:16;24154:23;24148:3;24137:9;24133:19;24126:52;24227:3;24219:6;24215:16;24209:23;24241:55;24291:3;24280:9;24276:19;24260:14;-1:-1:-1;;;;;2630:31:188;2618:44;;2564:104;24241:55;;24351:3;24343:6;24339:16;24333:23;24327:3;24316:9;24312:19;24305:52;24406:3;24398:6;24394:16;24388:23;24430:6;24472:2;24467;24456:9;24452:18;24445:30;;24492:53;24540:3;24529:9;24525:19;24509:14;24492:53;:::i;24556:184::-;24626:6;24679:2;24667:9;24658:7;24654:23;24650:32;24647:52;;;24695:1;24692;24685:12;24647:52;-1:-1:-1;24718:16:188;;24556:184;-1:-1:-1;24556:184:188:o;24745:128::-;24812:9;;;24833:11;;;24830:37;;;24847:18;;:::i;24878:274::-;-1:-1:-1;;;;;25070:32:188;;;;25052:51;;25134:2;25119:18;;25112:34;25040:2;25025:18;;24878:274::o;25157:565::-;25272:6;25280;25288;25341:2;25329:9;25320:7;25316:23;25312:32;25309:52;;;25357:1;25354;25347:12;25309:52;25397:9;25384:23;-1:-1:-1;;;;;25422:6:188;25419:30;25416:50;;;25462:1;25459;25452:12;25416:50;25485:62;25539:7;25530:6;25519:9;25515:22;25485:62;:::i;:::-;25475:72;;;25597:2;25586:9;25582:18;25569:32;25610:31;25635:5;25610:31;:::i;:::-;25157:565;;25660:5;;-1:-1:-1;;;25712:2:188;25697:18;;;;25684:32;;25157:565::o;26265:156::-;26331:20;;26391:4;26380:16;;26370:27;;26360:55;;26411:1;26408;26401:12;26426:929;26516:6;26569:3;26557:9;26548:7;26544:23;26540:33;26537:53;;;26586:1;26583;26576:12;26537:53;26619:2;26613:9;26661:3;26653:6;26649:16;26731:6;26719:10;26716:22;-1:-1:-1;;;;;26683:10:188;26680:34;26677:62;26674:88;;;26742:18;;:::i;:::-;26778:2;26771:22;26815:23;;26847:41;26815:23;26847:41;:::i;:::-;26912:5;26904:6;26897:21;;26979:2;26968:9;26964:18;26951:32;26946:2;26938:6;26934:15;26927:57;27045:2;27034:9;27030:18;27017:32;27012:2;27004:6;27000:15;26993:57;27111:2;27100:9;27096:18;27083:32;27078:2;27070:6;27066:15;27059:57;27150:37;27182:3;27171:9;27167:19;27150:37;:::i;:::-;27144:3;27136:6;27132:16;27125:63;27250:3;27239:9;27235:19;27222:33;27216:3;27208:6;27204:16;27197:59;27318:3;27307:9;27303:19;27290:33;27284:3;27276:6;27272:16;27265:59;27343:6;27333:16;;;26426:929;;;;:::o;27360:451::-;27607:2;27596:9;27589:21;27570:4;27627:66;27689:2;27678:9;27674:18;27666:6;27627:66;:::i;:::-;-1:-1:-1;;;;;27729:32:188;;;;27724:2;27709:18;;27702:60;-1:-1:-1;27793:2:188;27778:18;27771:34;27619:74;27360:451;-1:-1:-1;27360:451:188:o;27816:519::-;-1:-1:-1;;;;;28116:15:188;;;28098:34;;28168:15;;28163:2;28148:18;;28141:43;28215:2;28200:18;;28193:34;;;28263:3;28258:2;28243:18;;28236:31;;;28041:4;;28284:45;;28309:19;;28301:6;28284:45;:::i;28340:127::-;28401:10;28396:3;28392:20;28389:1;28382:31;28432:4;28429:1;28422:15;28456:4;28453:1;28446:15;28472:241;28528:6;28581:2;28569:9;28560:7;28556:23;28552:32;28549:52;;;28597:1;28594;28587:12;28549:52;28636:9;28623:23;28655:28;28677:5;28655:28;:::i;28718:521::-;28795:4;28801:6;28861:11;28848:25;28955:2;28951:7;28940:8;28924:14;28920:29;28916:43;28896:18;28892:68;28882:96;;28974:1;28971;28964:12;28882:96;29001:33;;29053:20;;;-1:-1:-1;;;;;;29085:30:188;;29082:50;;;29128:1;29125;29118:12;29082:50;29161:4;29149:17;;-1:-1:-1;29192:14:188;29188:27;;;29178:38;;29175:58;;;29229:1;29226;29219:12;29244:271;29427:6;29419;29414:3;29401:33;29383:3;29453:16;;29478:13;;;29453:16;29244:271;-1:-1:-1;29244:271:188:o;29520:410::-;29607:6;29615;29623;29676:2;29664:9;29655:7;29651:23;29647:32;29644:52;;;29692:1;29689;29682:12;29644:52;29724:9;29718:16;-1:-1:-1;;;;;29767:5:188;29763:30;29756:5;29753:41;29743:69;;29808:1;29805;29798:12;29743:69;29876:2;29861:18;;29855:25;29920:2;29905:18;;;29899:25;29831:5;;29855:25;;-1:-1:-1;29899:25:188;29520:410;-1:-1:-1;;;29520:410:188:o;29935:287::-;30064:3;30102:6;30096:13;30118:66;30177:6;30172:3;30165:4;30157:6;30153:17;30118:66;:::i;30227:125::-;30292:9;;;30313:10;;;30310:36;;;30326:18;;:::i;30357:280::-;30546:2;30535:9;30528:21;30509:4;30566:65;30627:2;30616:9;30612:18;30604:6;30566:65;:::i;31165:830::-;31519:4;31548:3;31560:60;31610:9;31601:6;31595:13;31063:12;;-1:-1:-1;;;;;31059:38:188;31047:51;;31147:4;31136:16;;;31130:23;31114:14;;31107:47;30977:183;31560:60;31676:4;31668:6;31664:17;31658:24;31651:4;31640:9;31636:20;31629:54;31739:4;31731:6;31727:17;31721:24;31714:4;31703:9;31699:20;31692:54;31755:63;31813:3;31802:9;31798:19;31790:6;31063:12;;-1:-1:-1;;;;;31059:38:188;31047:51;;31147:4;31136:16;;;31130:23;31114:14;;31107:47;30977:183;31755:63;-1:-1:-1;;;;;31855:32:188;;31849:3;31834:19;;31827:61;31919:3;31904:19;;31897:31;;;31945:44;31970:18;;;31962:6;31945:44;:::i;32000:1094::-;-1:-1:-1;;;;;32331:32:188;;32313:51;;32272:4;32301:3;32386:20;;32415:41;32386:20;32415:41;:::i;:::-;32465;32500:5;32465:41;:::i;:::-;32542:5;32537:2;32526:9;32522:18;32515:33;;32609:2;32601:6;32597:15;32584:29;32579:2;32568:9;32564:18;32557:57;32675:2;32667:6;32663:15;32650:29;32645:2;32634:9;32630:18;32623:57;32742:2;32734:6;32730:15;32717:29;32711:3;32700:9;32696:19;32689:58;32824:4;32788:34;32817:3;32809:6;32805:16;32788:34;:::i;:::-;32784:45;32778:3;32767:9;32763:19;32756:74;32892:3;32884:6;32880:16;32867:30;32861:3;32850:9;32846:19;32839:59;32960:3;32952:6;32948:16;32935:30;32929:3;32918:9;32914:19;32907:59;33003:2;32997:3;32986:9;32982:19;32975:31;33023:65;33084:2;33073:9;33069:18;33061:6;33023:65;:::i;33099:267::-;33185:6;33238:2;33226:9;33217:7;33213:23;33209:32;33206:52;;;33254:1;33251;33244:12;33206:52;33286:9;33280:16;33305:31;33330:5;33305:31;:::i;36300:219::-;36449:2;36438:9;36431:21;36412:4;36469:44;36509:2;36498:9;36494:18;36486:6;36469:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "51430": [
        {
          "start": 736,
          "length": 32
        },
        {
          "start": 2285,
          "length": 32
        },
        {
          "start": 2564,
          "length": 32
        },
        {
          "start": 4948,
          "length": 32
        },
        {
          "start": 5218,
          "length": 32
        },
        {
          "start": 7216,
          "length": 32
        },
        {
          "start": 7469,
          "length": 32
        },
        {
          "start": 8534,
          "length": 32
        },
        {
          "start": 8892,
          "length": 32
        },
        {
          "start": 9187,
          "length": 32
        }
      ],
      "51434": [
        {
          "start": 814,
          "length": 32
        },
        {
          "start": 1725,
          "length": 32
        },
        {
          "start": 2126,
          "length": 32
        },
        {
          "start": 3350,
          "length": 32
        },
        {
          "start": 4028,
          "length": 32
        },
        {
          "start": 6263,
          "length": 32
        }
      ],
      "51438": [
        {
          "start": 775,
          "length": 32
        },
        {
          "start": 2866,
          "length": 32
        },
        {
          "start": 3975,
          "length": 32
        },
        {
          "start": 5486,
          "length": 32
        },
        {
          "start": 6339,
          "length": 32
        },
        {
          "start": 9337,
          "length": 32
        },
        {
          "start": 10059,
          "length": 32
        },
        {
          "start": 10149,
          "length": 32
        }
      ],
      "51442": [
        {
          "start": 331,
          "length": 32
        },
        {
          "start": 2911,
          "length": 32
        },
        {
          "start": 3051,
          "length": 32
        },
        {
          "start": 3841,
          "length": 32
        },
        {
          "start": 8581,
          "length": 32
        },
        {
          "start": 8732,
          "length": 32
        },
        {
          "start": 8941,
          "length": 32
        },
        {
          "start": 9060,
          "length": 32
        },
        {
          "start": 9236,
          "length": 32
        },
        {
          "start": 10194,
          "length": 32
        },
        {
          "start": 10327,
          "length": 32
        }
      ],
      "51445": [
        {
          "start": 581,
          "length": 32
        },
        {
          "start": 896,
          "length": 32
        },
        {
          "start": 1102,
          "length": 32
        },
        {
          "start": 1232,
          "length": 32
        },
        {
          "start": 1604,
          "length": 32
        },
        {
          "start": 1768,
          "length": 32
        },
        {
          "start": 1995,
          "length": 32
        },
        {
          "start": 4197,
          "length": 32
        },
        {
          "start": 4428,
          "length": 32
        },
        {
          "start": 4643,
          "length": 32
        },
        {
          "start": 4850,
          "length": 32
        },
        {
          "start": 5356,
          "length": 32
        },
        {
          "start": 5576,
          "length": 32
        },
        {
          "start": 5855,
          "length": 32
        },
        {
          "start": 5996,
          "length": 32
        },
        {
          "start": 6045,
          "length": 32
        },
        {
          "start": 6142,
          "length": 32
        },
        {
          "start": 6306,
          "length": 32
        },
        {
          "start": 6567,
          "length": 32
        },
        {
          "start": 6640,
          "length": 32
        },
        {
          "start": 7118,
          "length": 32
        }
      ],
      "51449": [
        {
          "start": 678,
          "length": 32
        },
        {
          "start": 2679,
          "length": 32
        },
        {
          "start": 3191,
          "length": 32
        },
        {
          "start": 3466,
          "length": 32
        },
        {
          "start": 3559,
          "length": 32
        },
        {
          "start": 9447,
          "length": 32
        },
        {
          "start": 9603,
          "length": 32
        },
        {
          "start": 10882,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CALLBACK_SUCCESS()": "8237e538",
    "CALLBACK_SUCCESS_CREDIT()": "0f13be2a",
    "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "56415a90",
    "cdm()": "e2dfb317",
    "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)": "0b839bf2",
    "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "0567d4b1",
    "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "4ad4d4ad",
    "flashlender()": "ee58918a",
    "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "aad598ae",
    "minter()": "07546172",
    "multisend(address[],bytes[],bool[])": "f38584e0",
    "onCreditFlashLoan(address,uint256,uint256,bytes)": "16d8f165",
    "onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b",
    "permit2()": "12261ee7",
    "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "faa99405",
    "self()": "7104ddb2",
    "stablecoin()": "e9cbd822",
    "swapAction()": "a888828b",
    "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "6c747057",
    "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "96c2c408"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flashlender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapAction_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Action__revertBytes_emptyRevertBytes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toInt256_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__borrow_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidResidualRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__delegateViaStablecoin_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__deposit_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onCreditFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__repay_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS_CREDIT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cdm\",\"outputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"subCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"residualRecipient\",\"type\":\"address\"}],\"name\":\"decreaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"depositAndBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashlender\",\"outputs\":[{\"internalType\":\"contract IFlashlender\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"upFrontToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"upFrontAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"increaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"contract IMinter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"bool[]\",\"name\":\"delegateCall\",\"type\":\"bool[]\"}],\"name\":\"multisend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onCreditFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"self\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IStablecoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAction\",\"outputs\":[{\"internalType\":\"contract SwapAction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"withdrawAndRepay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"creditParams\":\"The borrow parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)\":{\"params\":{\"leverParams\":\"The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan\",\"residualRecipient\":\"Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to\",\"subCollateral\":\"The amount of collateral to withdraw from the position [wad]\"}},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralizer\":\"The address to transfer `upFrontToken` from\",\"leverParams\":\"The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token\",\"permitParams\":\"The permit parameters for the `collateralizer` to transfer `upFrontToken`\",\"upFrontAmount\":\"The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]\",\"upFrontToken\":\"The token to transfer up front to the LeverAction contract\"}},\"multisend(address[],bytes[],bool[])\":{\"params\":{\"data\":\"The encoded data to call each address with\",\"delegateCall\":\"Whether or not to use delegatecall or call\",\"targets\":\"The addresses to call\"}},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the credit flash loan\"}},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the flash loan\"}},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}}},\"title\":\"PositionAction20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)\"},\"cdm()\":{\"notice\":\"The CDM contract\"},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)\":{\"notice\":\"Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral\"},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral to a CDP Vault\"},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral and debt to a CDP Vault\"},\"flashlender()\":{\"notice\":\"The flashloan contract\"},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Increase the leverage of a position by taking out a flash loan and buying Stablecoin\"},\"minter()\":{\"notice\":\"Stablecoin mint\"},\"multisend(address[],bytes[],bool[])\":{\"notice\":\"Allows for multiple calls to be made to cover use cases not covered by the other functions\"},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the credit flash loan taken out in decreaseLever\"},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the flash loan taken out in increaseLever\"},\"permit2()\":{\"notice\":\"Permit2\"},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)\"},\"self()\":{\"notice\":\"The address of this contract\"},\"stablecoin()\":{\"notice\":\"Stablecoin token\"},\"swapAction()\":{\"notice\":\"The SwapAction contract\"},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Removes collateral from a CDP Vault\"},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Removes collateral and debt from a CDP Vault\"}},\"notice\":\"ERC20 implementation of PositionAction base contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxy/PositionAction20.sol\":\"PositionAction20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d\",\"dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"src/CDM.sol\":{\"keccak256\":\"0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99\",\"dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L\"]},\"src/CDPVault.sol\":{\"keccak256\":\"0x373d283b9009254d6a6fa17040cdb2f9fb1c9c32002b1afbd52e6c2427be61fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2c258cf3716bbae56c91230d5e7feca68cb7629abe6570d02dbaf73f3660284\",\"dweb:/ipfs/QmcAAwisqK12cNfECG5sHeptPco2LXo293QGmCNv7ZATkH\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e\",\"dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT\"]},\"src/interfaces/IBuffer.sol\":{\"keccak256\":\"0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff\",\"dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/ICDPVault.sol\":{\"keccak256\":\"0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f\",\"dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE\"]},\"src/interfaces/ICDPVault_FactoryBase.sol\":{\"keccak256\":\"0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e\",\"dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD\"]},\"src/interfaces/IFlashlender.sol\":{\"keccak256\":\"0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2\",\"dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3\"]},\"src/interfaces/IInterestRateModel.sol\":{\"keccak256\":\"0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599\",\"dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA\"]},\"src/interfaces/IMinter.sol\":{\"keccak256\":\"0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54\",\"dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da\",\"dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF\"]},\"src/interfaces/IPause.sol\":{\"keccak256\":\"0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec\",\"dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]},\"src/interfaces/IStablecoin.sol\":{\"keccak256\":\"0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461\",\"dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS\"]},\"src/proxy/BaseAction.sol\":{\"keccak256\":\"0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24\",\"dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR\"]},\"src/proxy/PositionAction.sol\":{\"keccak256\":\"0x90ea7db8da878c7074c677a232d1751c6ff56a77d6f364e177c63998bab38fcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1587cc81781a73d4b44b24a56ab136fc08890d5a647e05ffacf9bb77bb1be797\",\"dweb:/ipfs/QmduAhEwKCyE6BmuwrDd3BqreVyUthR7T2Gg4DQFmktGek\"]},\"src/proxy/PositionAction20.sol\":{\"keccak256\":\"0x2adddb9e712a9a8cfd99a3d11ce942952e6966a84658bdc9d331557b0cea9518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efba75040158ef7d3bf31485cc000521e16cde768fcb9dbf9d6a1741c748a16c\",\"dweb:/ipfs/QmQJWA1pwZXQNAf2yDCrm1uF48Mq8KZrV6NA14ad2sjiAD\"]},\"src/proxy/SwapAction.sol\":{\"keccak256\":\"0xf3c446b763969f9cbe0cdbbba16140176bf75ada29da89dfb24d32dbe744ddce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84a857e66ba74ead46269034e1ce8c7320f500550240197c18c7415f15af3ce8\",\"dweb:/ipfs/QmYFoDhtFfxDKuSmCbrxqyZNkMGjLdG5ZPZJc7UEhzfJKT\"]},\"src/proxy/TransferAction.sol\":{\"keccak256\":\"0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756\",\"dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt\"]},\"src/utils/DoubleLinkedList.sol\":{\"keccak256\":\"0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb\",\"dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/utils/Pause.sol\":{\"keccak256\":\"0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1\",\"dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL\"]},\"src/utils/Permission.sol\":{\"keccak256\":\"0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb\",\"dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p\"]},\"src/vendor/IBalancerVault.sol\":{\"keccak256\":\"0xcfa567dab77301f65a2085f34a3ae0027e46f27e79a3c1bc5292c46a69160c62\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://205c801c5cf14af56151d70f0f7e1df9963d33caa4fada26b0429531510af585\",\"dweb:/ipfs/QmZ8tK5dXu2yPD7hF8aHu2B2YbTutXNgsQKkAPCqZYntLN\"]},\"src/vendor/IUniswapV3Router.sol\":{\"keccak256\":\"0x5ab23c0c3f5571e77353ebf1b7d4dec9103504b728faa7530e04b84e5d233c03\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9a95e0a55b44b18deab9989f7bf4afed71d22d51dd96c42eeb1552a30d252de4\",\"dweb:/ipfs/QmSyZhFhvegYMncZSc18m8skqhzXiMisgg1K2K9V1t796Z\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flashlender_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "swapAction_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Action__revertBytes_emptyRevertBytes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toInt256_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__borrow_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidResidualRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__deposit_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onCreditFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onlyDelegatecall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__repay_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS_CREDIT",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cdm",
          "outputs": [
            {
              "internalType": "contract ICDM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "subCollateral",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "residualRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseLever"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndBorrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flashlender",
          "outputs": [
            {
              "internalType": "contract IFlashlender",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "upFrontToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "upFrontAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseLever"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "contract IMinter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            },
            {
              "internalType": "bool[]",
              "name": "delegateCall",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multisend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCreditFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permit2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "self",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stablecoin",
          "outputs": [
            {
              "internalType": "contract IStablecoin",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapAction",
          "outputs": [
            {
              "internalType": "contract SwapAction",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAndRepay"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "creditParams": "The borrow parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)": {
            "params": {
              "leverParams": "The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan",
              "residualRecipient": "Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to",
              "subCollateral": "The amount of collateral to withdraw from the position [wad]"
            }
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralizer": "The address to transfer `upFrontToken` from",
              "leverParams": "The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token",
              "permitParams": "The permit parameters for the `collateralizer` to transfer `upFrontToken`",
              "upFrontAmount": "The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]",
              "upFrontToken": "The token to transfer up front to the LeverAction contract"
            }
          },
          "multisend(address[],bytes[],bool[])": {
            "params": {
              "data": "The encoded data to call each address with",
              "delegateCall": "Whether or not to use delegatecall or call",
              "targets": "The addresses to call"
            }
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the credit flash loan"
            }
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the flash loan"
            }
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)"
          },
          "cdm()": {
            "notice": "The CDM contract"
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)": {
            "notice": "Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral"
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral to a CDP Vault"
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral and debt to a CDP Vault"
          },
          "flashlender()": {
            "notice": "The flashloan contract"
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Increase the leverage of a position by taking out a flash loan and buying Stablecoin"
          },
          "minter()": {
            "notice": "Stablecoin mint"
          },
          "multisend(address[],bytes[],bool[])": {
            "notice": "Allows for multiple calls to be made to cover use cases not covered by the other functions"
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "notice": "Callback function for the credit flash loan taken out in decreaseLever"
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "notice": "Callback function for the flash loan taken out in increaseLever"
          },
          "permit2()": {
            "notice": "Permit2"
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)"
          },
          "self()": {
            "notice": "The address of this contract"
          },
          "stablecoin()": {
            "notice": "Stablecoin token"
          },
          "swapAction()": {
            "notice": "The SwapAction contract"
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Removes collateral from a CDP Vault"
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Removes collateral and debt from a CDP Vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/proxy/PositionAction20.sol": "PositionAction20"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319",
        "urls": [
          "bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d",
          "dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "src/CDM.sol": {
        "keccak256": "0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5",
        "urls": [
          "bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99",
          "dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L"
        ],
        "license": "MIT"
      },
      "src/CDPVault.sol": {
        "keccak256": "0x373d283b9009254d6a6fa17040cdb2f9fb1c9c32002b1afbd52e6c2427be61fc",
        "urls": [
          "bzz-raw://b2c258cf3716bbae56c91230d5e7feca68cb7629abe6570d02dbaf73f3660284",
          "dweb:/ipfs/QmcAAwisqK12cNfECG5sHeptPco2LXo293QGmCNv7ZATkH"
        ],
        "license": "MIT"
      },
      "src/InterestRateModel.sol": {
        "keccak256": "0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb",
        "urls": [
          "bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e",
          "dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBuffer.sol": {
        "keccak256": "0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f",
        "urls": [
          "bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff",
          "dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault.sol": {
        "keccak256": "0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d",
        "urls": [
          "bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f",
          "dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_FactoryBase.sol": {
        "keccak256": "0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717",
        "urls": [
          "bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e",
          "dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFlashlender.sol": {
        "keccak256": "0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d",
        "urls": [
          "bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2",
          "dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IInterestRateModel.sol": {
        "keccak256": "0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055",
        "urls": [
          "bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599",
          "dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IMinter.sol": {
        "keccak256": "0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3",
        "urls": [
          "bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54",
          "dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417",
        "urls": [
          "bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da",
          "dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPause.sol": {
        "keccak256": "0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d",
        "urls": [
          "bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec",
          "dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IStablecoin.sol": {
        "keccak256": "0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239",
        "urls": [
          "bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461",
          "dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/proxy/BaseAction.sol": {
        "keccak256": "0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab",
        "urls": [
          "bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24",
          "dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction.sol": {
        "keccak256": "0x90ea7db8da878c7074c677a232d1751c6ff56a77d6f364e177c63998bab38fcf",
        "urls": [
          "bzz-raw://1587cc81781a73d4b44b24a56ab136fc08890d5a647e05ffacf9bb77bb1be797",
          "dweb:/ipfs/QmduAhEwKCyE6BmuwrDd3BqreVyUthR7T2Gg4DQFmktGek"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction20.sol": {
        "keccak256": "0x2adddb9e712a9a8cfd99a3d11ce942952e6966a84658bdc9d331557b0cea9518",
        "urls": [
          "bzz-raw://efba75040158ef7d3bf31485cc000521e16cde768fcb9dbf9d6a1741c748a16c",
          "dweb:/ipfs/QmQJWA1pwZXQNAf2yDCrm1uF48Mq8KZrV6NA14ad2sjiAD"
        ],
        "license": "MIT"
      },
      "src/proxy/SwapAction.sol": {
        "keccak256": "0xf3c446b763969f9cbe0cdbbba16140176bf75ada29da89dfb24d32dbe744ddce",
        "urls": [
          "bzz-raw://84a857e66ba74ead46269034e1ce8c7320f500550240197c18c7415f15af3ce8",
          "dweb:/ipfs/QmYFoDhtFfxDKuSmCbrxqyZNkMGjLdG5ZPZJc7UEhzfJKT"
        ],
        "license": "MIT"
      },
      "src/proxy/TransferAction.sol": {
        "keccak256": "0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e",
        "urls": [
          "bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756",
          "dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt"
        ],
        "license": "MIT"
      },
      "src/utils/DoubleLinkedList.sol": {
        "keccak256": "0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691",
        "urls": [
          "bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb",
          "dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/utils/Pause.sol": {
        "keccak256": "0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19",
        "urls": [
          "bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1",
          "dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL"
        ],
        "license": "MIT"
      },
      "src/utils/Permission.sol": {
        "keccak256": "0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1",
        "urls": [
          "bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb",
          "dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p"
        ],
        "license": "MIT"
      },
      "src/vendor/IBalancerVault.sol": {
        "keccak256": "0xcfa567dab77301f65a2085f34a3ae0027e46f27e79a3c1bc5292c46a69160c62",
        "urls": [
          "bzz-raw://205c801c5cf14af56151d70f0f7e1df9963d33caa4fada26b0429531510af585",
          "dweb:/ipfs/QmZ8tK5dXu2yPD7hF8aHu2B2YbTutXNgsQKkAPCqZYntLN"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/vendor/IUniswapV3Router.sol": {
        "keccak256": "0x5ab23c0c3f5571e77353ebf1b7d4dec9103504b728faa7530e04b84e5d233c03",
        "urls": [
          "bzz-raw://9a95e0a55b44b18deab9989f7bf4afed71d22d51dd96c42eeb1552a30d252de4",
          "dweb:/ipfs/QmSyZhFhvegYMncZSc18m8skqhzXiMisgg1K2K9V1t796Z"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/proxy/PositionAction20.sol",
    "id": 53318,
    "exportedSymbols": {
      "ICDPVault": [
        49449
      ],
      "IERC20": [
        34464
      ],
      "LeverParams": [
        51403
      ],
      "PositionAction": [
        53149
      ],
      "PositionAction20": [
        53317
      ],
      "SafeERC20": [
        35920
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3629:123",
    "nodes": [
      {
        "id": 53151,
        "nodeType": "PragmaDirective",
        "src": "32:24:123",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 53153,
        "nodeType": "ImportDirective",
        "src": "58:69:123",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53318,
        "sourceUnit": 34465,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53152,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34464,
              "src": "66:6:123",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53155,
        "nodeType": "ImportDirective",
        "src": "128:81:123",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53318,
        "sourceUnit": 35921,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53154,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35920,
              "src": "136:9:123",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53157,
        "nodeType": "ImportDirective",
        "src": "211:54:123",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDPVault.sol",
        "file": "../interfaces/ICDPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53318,
        "sourceUnit": 49450,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53156,
              "name": "ICDPVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49449,
              "src": "219:9:123",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53160,
        "nodeType": "ImportDirective",
        "src": "267:65:123",
        "nodes": [],
        "absolutePath": "src/proxy/PositionAction.sol",
        "file": "./PositionAction.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53318,
        "sourceUnit": 53150,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53158,
              "name": "PositionAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53149,
              "src": "275:14:123",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53159,
              "name": "LeverParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51403,
              "src": "291:11:123",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53317,
        "nodeType": "ContractDefinition",
        "src": "427:3233:123",
        "nodes": [
          {
            "id": 53167,
            "nodeType": "UsingForDirective",
            "src": "658:27:123",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53164,
              "name": "SafeERC20",
              "nameLocations": [
                "664:9:123"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35920,
              "src": "664:9:123"
            },
            "typeName": {
              "id": 53166,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53165,
                "name": "IERC20",
                "nameLocations": [
                  "678:6:123"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34464,
                "src": "678:6:123"
              },
              "referencedDeclaration": 34464,
              "src": "678:6:123",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$34464",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 53179,
            "nodeType": "FunctionDefinition",
            "src": "874:99:123",
            "nodes": [],
            "body": {
              "id": 53178,
              "nodeType": "Block",
              "src": "971:2:123",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 53174,
                    "name": "flashlender_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53169,
                    "src": "944:12:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 53175,
                    "name": "swapAction_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53171,
                    "src": "958:11:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 53176,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 53173,
                  "name": "PositionAction",
                  "nameLocations": [
                    "929:14:123"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53149,
                  "src": "929:14:123"
                },
                "nodeType": "ModifierInvocation",
                "src": "929:41:123"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53169,
                  "mutability": "mutable",
                  "name": "flashlender_",
                  "nameLocation": "894:12:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 53179,
                  "src": "886:20:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53171,
                  "mutability": "mutable",
                  "name": "swapAction_",
                  "nameLocation": "916:11:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 53179,
                  "src": "908:19:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "885:43:123"
            },
            "returnParameters": {
              "id": 53177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "971:0:123"
            },
            "scope": 53317,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53223,
            "nodeType": "FunctionDefinition",
            "src": "1389:305:123",
            "nodes": [],
            "body": {
              "id": 53222,
              "nodeType": "Block",
              "src": "1493:201:123",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53193,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "1511:15:123",
                      "nodeType": "VariableDeclaration",
                      "scope": 53222,
                      "src": "1503:23:123",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53192,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1503:7:123",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53202,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 53197,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53182,
                                "src": "1547:5:123",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 53196,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49449,
                              "src": "1537:9:123",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 53198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1537:16:123",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$49449",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 53199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1554:5:123",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49270,
                          "src": "1537:22:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 53200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1537:24:123",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 53195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1529:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 53194,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1529:7:123",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 53201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:33:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1503:59:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53207,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53182,
                        "src": "1609:5:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53208,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53186,
                        "src": "1616:6:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53204,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53193,
                            "src": "1579:15:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53203,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "1572:6:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 53205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1572:23:123",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 53206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1596:12:123",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "1572:36:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 53209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1572:51:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53210,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:51:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53217,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1673:4:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction20_$53317",
                              "typeString": "contract PositionAction20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction20_$53317",
                              "typeString": "contract PositionAction20"
                            }
                          ],
                          "id": 53216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1665:7:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53215,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1665:7:123",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1665:13:123",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53219,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53186,
                        "src": "1680:6:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53212,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53182,
                            "src": "1650:5:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53211,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "1640:9:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1640:16:123",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1657:7:123",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49343,
                      "src": "1640:24:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:47:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53191,
                  "id": 53221,
                  "nodeType": "Return",
                  "src": "1633:54:123"
                }
              ]
            },
            "baseFunctions": [
              51562
            ],
            "documentation": {
              "id": 53180,
              "nodeType": "StructuredDocumentation",
              "src": "1166:218:123",
              "text": "@notice Deposit collateral into the vault\n @param vault Address of the vault\n @param amount Amount of collateral to deposit [CDPVault.tokenScale()]\n @return Amount of collateral deposited [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDeposit",
            "nameLocation": "1398:10:123",
            "overrides": {
              "id": 53188,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1466:8:123"
            },
            "parameters": {
              "id": 53187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53182,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1417:5:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 53223,
                  "src": "1409:13:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53223,
                  "src": "1424:7:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53186,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1449:6:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 53223,
                  "src": "1441:14:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1408:48:123"
            },
            "returnParameters": {
              "id": 53191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53223,
                  "src": "1484:7:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1484:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1483:9:123"
            },
            "scope": 53317,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53248,
            "nodeType": "FunctionDefinition",
            "src": "1925:177:123",
            "nodes": [],
            "body": {
              "id": 53247,
              "nodeType": "Block",
              "src": "2030:72:123",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53242,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2081:4:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction20_$53317",
                              "typeString": "contract PositionAction20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction20_$53317",
                              "typeString": "contract PositionAction20"
                            }
                          ],
                          "id": 53241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2073:7:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53240,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2073:7:123",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2073:13:123",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53244,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53230,
                        "src": "2088:6:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53237,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53226,
                            "src": "2057:5:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53236,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "2047:9:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2047:16:123",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2064:8:123",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49352,
                      "src": "2047:25:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2047:48:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53235,
                  "id": 53246,
                  "nodeType": "Return",
                  "src": "2040:55:123"
                }
              ]
            },
            "baseFunctions": [
              51574
            ],
            "documentation": {
              "id": 53224,
              "nodeType": "StructuredDocumentation",
              "src": "1700:220:123",
              "text": "@notice Withdraw collateral from the vault\n @param vault Address of the vault\n @param amount Amount of collateral to withdraw [wad]\n @return Amount of collateral withdrawn [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onWithdraw",
            "nameLocation": "1934:11:123",
            "overrides": {
              "id": 53232,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2003:8:123"
            },
            "parameters": {
              "id": 53231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53226,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1954:5:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 53248,
                  "src": "1946:13:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53228,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53248,
                  "src": "1961:7:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53230,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1986:6:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 53248,
                  "src": "1978:14:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1945:48:123"
            },
            "returnParameters": {
              "id": 53235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53248,
                  "src": "2021:7:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2020:9:123"
            },
            "scope": 53317,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53293,
            "nodeType": "FunctionDefinition",
            "src": "2515:607:123",
            "nodes": [],
            "body": {
              "id": 53292,
              "nodeType": "Block",
              "src": "2719:403:123",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53265,
                      "mutability": "mutable",
                      "name": "addCollateralAmount",
                      "nameLocation": "2838:19:123",
                      "nodeType": "VariableDeclaration",
                      "scope": 53292,
                      "src": "2830:27:123",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53264,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2830:7:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53269,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53266,
                      "name": "swapAmountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53258,
                      "src": "2860:13:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 53267,
                      "name": "upFrontAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53256,
                      "src": "2876:13:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2860:29:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2830:59:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53275,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53252,
                          "src": "2987:11:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$51403_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 53276,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2999:5:123",
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51394,
                        "src": "2987:17:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53277,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53265,
                        "src": "3006:19:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53271,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53252,
                              "src": "2945:11:123",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$51403_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53272,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2957:15:123",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51396,
                            "src": "2945:27:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53270,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "2938:6:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 53273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2938:35:123",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 53274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2974:12:123",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "2938:48:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 53278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:88:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53279,
                  "nodeType": "ExpressionStatement",
                  "src": "2938:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53287,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3088:4:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction20_$53317",
                              "typeString": "contract PositionAction20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction20_$53317",
                              "typeString": "contract PositionAction20"
                            }
                          ],
                          "id": 53286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3080:7:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53285,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3080:7:123",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3080:13:123",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53289,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53265,
                        "src": "3095:19:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53281,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53252,
                              "src": "3053:11:123",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$51403_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53282,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3065:5:123",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51394,
                            "src": "3053:17:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53280,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "3043:9:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3043:28:123",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3072:7:123",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49343,
                      "src": "3043:36:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3043:72:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53263,
                  "id": 53291,
                  "nodeType": "Return",
                  "src": "3036:79:123"
                }
              ]
            },
            "baseFunctions": [
              51589
            ],
            "documentation": {
              "id": 53249,
              "nodeType": "StructuredDocumentation",
              "src": "2108:402:123",
              "text": "@notice Hook to increase lever by depositing collateral into the CDPVault\n @param leverParams LeverParams struct\n @param upFrontAmount the amount of tokens passed up front [CDPVault.tokenScale()]\n @param swapAmountOut the amount of tokens received from the stablecoin flash loan swap [CDPVault.tokenScale()]\n @return Amount of collateral added to CDPVault position [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onIncreaseLever",
            "nameLocation": "2524:16:123",
            "overrides": {
              "id": 53260,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2692:8:123"
            },
            "parameters": {
              "id": 53259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53252,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "2569:11:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 53293,
                  "src": "2550:30:123",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$51403_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 53251,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53250,
                      "name": "LeverParams",
                      "nameLocations": [
                        "2550:11:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51403,
                      "src": "2550:11:123"
                    },
                    "referencedDeclaration": 51403,
                    "src": "2550:11:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$51403_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53293,
                  "src": "2590:7:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2590:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53256,
                  "mutability": "mutable",
                  "name": "upFrontAmount",
                  "nameLocation": "2632:13:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 53293,
                  "src": "2624:21:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2624:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53258,
                  "mutability": "mutable",
                  "name": "swapAmountOut",
                  "nameLocation": "2663:13:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 53293,
                  "src": "2655:21:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2655:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2540:142:123"
            },
            "returnParameters": {
              "id": 53263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53293,
                  "src": "2710:7:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2709:9:123"
            },
            "scope": 53317,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53316,
            "nodeType": "FunctionDefinition",
            "src": "3437:220:123",
            "nodes": [],
            "body": {
              "id": 53315,
              "nodeType": "Block",
              "src": "3576:81:123",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53306,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53297,
                          "src": "3605:11:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$51403_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 53307,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3617:5:123",
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51394,
                        "src": "3605:17:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 53310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3632:1:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 53309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3624:7:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53308,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3624:7:123",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3624:10:123",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53312,
                        "name": "subCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53299,
                        "src": "3636:13:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53305,
                      "name": "_onWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53248
                      ],
                      "referencedDeclaration": 53248,
                      "src": "3593:11:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 53313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3593:57:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53304,
                  "id": 53314,
                  "nodeType": "Return",
                  "src": "3586:64:123"
                }
              ]
            },
            "baseFunctions": [
              51600
            ],
            "documentation": {
              "id": 53294,
              "nodeType": "StructuredDocumentation",
              "src": "3128:304:123",
              "text": "@notice Hook to decrease lever by withdrawing collateral from the CDPVault\n @param leverParams LeverParams struct\n @param subCollateral Amount of collateral to subtract in CDPVault decimals [wad]\n @return Amount of underlying token withdrawn from CDPVault [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDecreaseLever",
            "nameLocation": "3446:16:123",
            "overrides": {
              "id": 53301,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3549:8:123"
            },
            "parameters": {
              "id": 53300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53297,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "3491:11:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 53316,
                  "src": "3472:30:123",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$51403_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 53296,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53295,
                      "name": "LeverParams",
                      "nameLocations": [
                        "3472:11:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51403,
                      "src": "3472:11:123"
                    },
                    "referencedDeclaration": 51403,
                    "src": "3472:11:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$51403_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53299,
                  "mutability": "mutable",
                  "name": "subCollateral",
                  "nameLocation": "3520:13:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 53316,
                  "src": "3512:21:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3512:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3462:77:123"
            },
            "returnParameters": {
              "id": 53304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53303,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53316,
                  "src": "3567:7:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3567:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3566:9:123"
            },
            "scope": 53317,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53162,
              "name": "PositionAction",
              "nameLocations": [
                "456:14:123"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53149,
              "src": "456:14:123"
            },
            "id": 53163,
            "nodeType": "InheritanceSpecifier",
            "src": "456:14:123"
          }
        ],
        "canonicalName": "PositionAction20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 53161,
          "nodeType": "StructuredDocumentation",
          "src": "334:93:123",
          "text": "@title PositionAction20\n @notice ERC20 implementation of PositionAction base contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          53317,
          53149,
          51282,
          55490,
          50021,
          49972
        ],
        "name": "PositionAction20",
        "nameLocation": "436:16:123",
        "scope": 53318,
        "usedErrors": [
          51235,
          51451,
          51453,
          51455,
          51457,
          51459,
          51461,
          51463,
          51465,
          51467,
          51469,
          51471,
          51473,
          129061
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 123
}