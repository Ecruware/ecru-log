{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "flashlender_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "swapAction_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "joinAction_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Action__revertBytes_emptyRevertBytes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toInt256_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__borrow_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidResidualRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__deposit_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onCreditFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onlyDelegatecall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__repay_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS_CREDIT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cdm",
      "outputs": [
        {
          "internalType": "contract ICDM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum JoinProtocol",
                  "name": "protocol",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "assetsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "minOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct JoinParams",
              "name": "auxJoin",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "auxJoinToken",
              "type": "address"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "subCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "residualRecipient",
          "type": "address"
        }
      ],
      "name": "decreaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "depositAndBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flashlender",
      "outputs": [
        {
          "internalType": "contract IFlashlender",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum JoinProtocol",
                  "name": "protocol",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "assetsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "minOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct JoinParams",
              "name": "auxJoin",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "auxJoinToken",
              "type": "address"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "upFrontToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "upFrontAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "increaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "joinAction",
      "outputs": [
        {
          "internalType": "contract JoinAction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "contract IMinter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        },
        {
          "internalType": "bool[]",
          "name": "delegateCall",
          "type": "bool[]"
        }
      ],
      "name": "multisend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onCreditFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "self",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IStablecoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapAction",
      "outputs": [
        {
          "internalType": "contract SwapAction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "withdrawAndRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "427:3268:124:-:0;;;874:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;966:12;980:11;993;5378:12:123;-1:-1:-1;;;;;5351:40:123;;;-1:-1:-1;;;;;5351:40:123;;;;;5414:11;;-1:-1:-1;;;;;5414:22:123;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5401:37:123;;;-1:-1:-1;;;;;5401:37:123;;;;;5457:11;;-1:-1:-1;;;;;5457:18:123;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5448:29:123;;;-1:-1:-1;;;;;5448:29:123;;;;;5493:11;;-1:-1:-1;;;;;5493:15:123;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5487:23:123;;;;;;;5535:4;5520:20;;5550:36;;;;;5596;;;;;5671:6;;5642:43;;-1:-1:-1;;;5642:43:123;;1680:32:193;;5642:43:123;;;1662:51:193;5680:4:123;1729:18:193;;;1722:50;5487:23:123;5642:20;;1635:18:193;;5642:43:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5695:3:123;;:40;;-1:-1:-1;;;5695:40:123;;-1:-1:-1;;;;;1680:32:193;;;5695:40:123;;;1662:51:193;5730:4:123;1729:18:193;;;1722:50;5695:20:123;;;;-1:-1:-1;5695:20:123;;-1:-1:-1;1635:18:193;;5695:40:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:477;;;874:134:124;;;427:3268;;14:131:193;-1:-1:-1;;;;;89:31:193;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:519::-;238:6;246;254;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;355:9;349:16;374:31;399:5;374:31;:::i;:::-;474:2;459:18;;453:25;424:5;;-1:-1:-1;487:33:193;453:25;487:33;:::i;:::-;591:2;576:18;;570:25;539:7;;-1:-1:-1;604:33:193;570:25;604:33;:::i;:::-;656:7;646:17;;;150:519;;;;;:::o;674:272::-;765:6;818:2;806:9;797:7;793:23;789:32;786:52;;;834:1;831;824:12;786:52;866:9;860:16;885:31;910:5;885:31;:::i;:::-;935:5;674:272;-1:-1:-1;;;674:272:193:o;1494:284::-;427:3268:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80637104ddb2116100b8578063e9cbd8221161007c578063e9cbd822146102fa578063ee18c32014610321578063ee58918a14610334578063f38584e01461035b578063f8e63c521461036e578063faa994051461039557600080fd5b80637104ddb21461024b5780638237e5381461027257806396c2c40814610299578063a888828b146102ac578063e2dfb317146102d357600080fd5b806323e30c8b116100ff57806323e30c8b146101ec57806324ac0df5146101ff5780634ad4d4ad1461021257806356415a90146102255780636c7470571461023857600080fd5b80630567d4b11461013c57806307546172146101515780630f13be2a1461018e57806312261ee7146101c357806316d8f165146101d9575b600080fd5b61014f61014a3660046133b6565b6103a8565b005b6101787f000000000000000000000000000000000000000000000000000000000000000081565b604051610185919061342a565b60405180910390f35b6101b57f24ea9631d6c6b69006fd9fa411bb9c8909638fd1d178dd2f1d231dca3e3e4d7981565b604051908152602001610185565b6101786e22d473030f116ddee9f6b43ac78ba381565b6101b56101e7366004613486565b610476565b6101b56101fa3660046134ef565b61093e565b61014f61020d36600461356a565b610c90565b61014f6102203660046135fa565b611194565b61014f610233366004613689565b611284565b61014f6102463660046136ea565b61135b565b6101787f000000000000000000000000000000000000000000000000000000000000000081565b6101b57f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd981565b61014f6102a73660046135fa565b61142a565b6101787f000000000000000000000000000000000000000000000000000000000000000081565b6101787f000000000000000000000000000000000000000000000000000000000000000081565b6101787f000000000000000000000000000000000000000000000000000000000000000081565b61014f61032f366004613741565b611624565b6101787f000000000000000000000000000000000000000000000000000000000000000081565b61014f6103693660046137df565b611a18565b6101787f000000000000000000000000000000000000000000000000000000000000000081565b61014f6103a3366004613866565b611bf6565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103f15760405163f46a288f60e01b815260040160405180910390fd5b60006103fe848484611dc9565b9050836001600160a01b031663c75a4b5e86303061041b86611f2a565b60006040518663ffffffff1660e01b815260040161043d9594939291906138bf565b600060405180830381600087803b15801561045757600080fd5b505af115801561046b573d6000803e3d6000fd5b505050505050505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104c1576040516351b8314560e11b815260040160405180910390fd5b600080806104d185870187613d5a565b92509250925060006104f484602001518560000151866060015160600151611f54565b602085015160405163d9c70f5760e01b81526001600160a01b039182166004820152600160248201529192507f0000000000000000000000000000000000000000000000000000000000000000169063d9c70f5790604401600060405180830381600087803b15801561056657600080fd5b505af115801561057a573d6000803e3d6000fd5b5050505083602001516001600160a01b031663c75a4b5e856000015130306105a188611f2a565b6105aa90613da7565b6105b387611f2a565b6105bc90613da7565b6040518663ffffffff1660e01b81526004016105dc9594939291906138bf565b600060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b50505050602084015160405163d9c70f5760e01b81526001600160a01b039182166004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063d9c70f5790604401600060405180830381600087803b15801561067f57600080fd5b505af1158015610693573d6000803e3d6000fd5b5050505060006106a38585611fe0565b9050600061071f7f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b88606001516040516024016106e89190613e4d565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611ffb565b90506000818060200190518101906107379190613edf565b905060006107458285613ef8565b6060808a0151015160405163095ea7b360e01b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163095ea7b3916107bd917f00000000000000000000000000000000000000000000000000000000000000009190600401613f0b565b6020604051808303816000875af11580156107dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108009190613f32565b506060808901510151604051637e348b7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691637e348b7d91610855913091600401613f0b565b600060405180830381600087803b15801561086f57600080fd5b505af1158015610883573d6000803e3d6000fd5b50505050600081111561090b576080880151604001516001600160a01b0316156108ee576108e87f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8a608001516040516024016106e89190613e4d565b5061090b565b60608801516040015161090b906001600160a01b03168783612073565b507f24ea9631d6c6b69006fd9fa411bb9c8909638fd1d178dd2f1d231dca3e3e4d799d9c50505050505050505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610989576040516309436d0560e01b815260040160405180910390fd5b6000808061099985870187613f4f565b60808301516040015192955090935091506001600160a01b031615610a155760006109fb7f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b86608001516040516024016106e89190613e4d565b905080806020019051810190610a119190613edf565b9150505b6000610a587f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b86606001516040516024016106e89190613e4d565b9050600081806020019051810190610a709190613edf565b90506000610a80868686856120ce565b90506000610a9f87602001518860000151896060015160600151611f54565b905086602001516001600160a01b031663c75a4b5e88600001513030610ac487611f2a565b610acd87611f2a565b6040518663ffffffff1660e01b8152600401610aed9594939291906138bf565b600060405180830381600087803b158015610b0757600080fd5b505af1158015610b1b573d6000803e3d6000fd5b50505050606087810151015160405163ef693bed60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163ef693bed91610b73913091600401613f0b565b600060405180830381600087803b158015610b8d57600080fd5b505af1158015610ba1573d6000803e3d6000fd5b50505050606087810151015160405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163095ea7b391610c19917f000000000000000000000000000000000000000000000000000000000000000091600401613f0b565b6020604051808303816000875af1158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c9190613f32565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99e9d5050505050505050505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610cd95760405163f46a288f60e01b815260040160405180910390fd5b6000610ce86060870187613fa8565b610cf9906040810190602001613fc8565b6001811115610d0a57610d0a613dc3565b141580610d6657506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610d496060870187613fa8565b610d5a906060810190604001613fe3565b6001600160a01b031614155b80610dc057506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610da36060870187613fa8565b610db49060c081019060a001613fe3565b6001600160a01b031614155b15610dde576040516304286a2760e01b815260040160405180910390fd5b6000610ded6080870187613fa8565b610dfe906060810190604001613fe3565b6001600160a01b031614158015610ed757506000610e1f6080870187613fa8565b610e30906040810190602001613fc8565b6001811115610e4157610e41613dc3565b141580610e7d57506001600160a01b038416610e606080870187613fa8565b610e71906060810190604001613fe3565b6001600160a01b031614155b80610ed757506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610eba6080870187613fa8565b610ecb9060c081019060a001613fe3565b6001600160a01b031614155b15610ef557604051630655da1360e41b815260040160405180910390fd5b8215610f7f57306001600160a01b03831603610f4457610f3f6001600160a01b0385167f000000000000000000000000000000000000000000000000000000000000000085612073565b610f7f565b610f7f84837f000000000000000000000000000000000000000000000000000000000000000086610f7a36879003870187614011565b612171565b610f8f6040860160208701613fe3565b6001600160a01b0316638309dbdd610faa6020880188613fe3565b7f000000000000000000000000000000000000000000000000000000000000000060016040518463ffffffff1660e01b8152600401610feb93929190614087565b600060405180830381600087803b15801561100557600080fd5b505af1158015611019573d6000803e3d6000fd5b50506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150635cffe9de90507f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061109d60608a018a613fa8565b606001358989896040516020016110b693929190614425565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016110e49493929190614453565b6020604051808303816000875af1158015611103573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111279190613f32565b506111386040860160208701613fe3565b6001600160a01b0316638309dbdd6111536020880188613fe3565b7f000000000000000000000000000000000000000000000000000000000000000060006040518463ffffffff1660e01b815260040161043d93929190614087565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036111dd5760405163f46a288f60e01b815260040160405180910390fd5b60006111ea858584611dc9565b905060006111fa86888635611f54565b9050856001600160a01b031663c75a4b5e88303061121787611f2a565b61122087611f2a565b6040518663ffffffff1660e01b81526004016112409594939291906138bf565b600060405180830381600087803b15801561125a57600080fd5b505af115801561126e573d6000803e3d6000fd5b5050505061127b8461233c565b50505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036112cd5760405163f46a288f60e01b815260040160405180910390fd5b60006112db83858435611f54565b9050826001600160a01b031663c75a4b5e85303060006112fa87611f2a565b6040518663ffffffff1660e01b815260040161131a9594939291906138bf565b600060405180830381600087803b15801561133457600080fd5b505af1158015611348573d6000803e3d6000fd5b505050506113558261233c565b50505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113a45760405163f46a288f60e01b815260040160405180910390fd5b816001600160a01b031663c75a4b5e8430306113c38660200135611f2a565b6113cc90613da7565b60006040518663ffffffff1660e01b81526004016113ee9594939291906138bf565b600060405180830381600087803b15801561140857600080fd5b505af115801561141c573d6000803e3d6000fd5b505050506113558282612726565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036114735760405163f46a288f60e01b815260040160405180910390fd5b61147f858584846127e4565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd906114d09088908890600190600401614087565b600060405180830381600087803b1580156114ea57600080fd5b505af11580156114fe573d6000803e3d6000fd5b50505050836001600160a01b031663c75a4b5e8630306115218860200135611f2a565b61152a90613da7565b6115348835611f2a565b61153d90613da7565b6040518663ffffffff1660e01b815260040161155d9594939291906138bf565b600060405180830381600087803b15801561157757600080fd5b505af115801561158b573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506115e09088908890600090600401614087565b600060405180830381600087803b1580156115fa57600080fd5b505af115801561160e573d6000803e3d6000fd5b5050505061161c8484612726565b505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361166d5760405163f46a288f60e01b815260040160405180910390fd5b600161167c6060850185613fa8565b61168d906040810190602001613fc8565b600181111561169e5761169e613dc3565b1415806116fa57506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166116dd6060850185613fa8565b6116ee9060c081019060a001613fe3565b6001600160a01b031614155b15611718576040516338ef377d60e01b815260040160405180910390fd5b60006117276080850185613fa8565b611738906060810190604001613fe3565b6001600160a01b03161415801561177e575060006117596080850185613fa8565b61176a906040810190602001613fc8565b600181111561177b5761177b613dc3565b14155b1561179c57604051630e6c295f60e11b815260040160405180910390fd5b60006117ab6080850185613fa8565b6117bc906060810190604001613fe3565b6001600160a01b03161480156117d957506001600160a01b038116155b156117f75760405163163a7c2d60e01b815260040160405180910390fd5b6118076040840160208501613fe3565b6001600160a01b0316638309dbdd6118226020860186613fe3565b7f000000000000000000000000000000000000000000000000000000000000000060016040518463ffffffff1660e01b815260040161186393929190614087565b600060405180830381600087803b15801561187d57600080fd5b505af1158015611891573d6000803e3d6000fd5b50506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150637b644bad90507f00000000000000000000000000000000000000000000000000000000000000006118f46060870187613fa8565b6060013586868660405160200161190d93929190614486565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161193a939291906144b9565b6020604051808303816000875af1158015611959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197d9190613f32565b5061198e6040840160208501613fe3565b6001600160a01b0316638309dbdd6119a96020860186613fe3565b7f000000000000000000000000000000000000000000000000000000000000000060006040518463ffffffff1660e01b81526004016119ea93929190614087565b600060405180830381600087803b158015611a0457600080fd5b505af115801561127b573d6000803e3d6000fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611a615760405163f46a288f60e01b815260040160405180910390fd5b8460005b81811015611bec57838382818110611a7f57611a7f6144e0565b9050602002016020810190611a9491906144f6565b15611b2757611b21888883818110611aae57611aae6144e0565b9050602002016020810190611ac39190613fe3565b878784818110611ad557611ad56144e0565b9050602002810190611ae79190614513565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ffb92505050565b50611be4565b600080898984818110611b3c57611b3c6144e0565b9050602002016020810190611b519190613fe3565b6001600160a01b0316888885818110611b6c57611b6c6144e0565b9050602002810190611b7e9190614513565b604051611b8c929190614559565b6000604051808303816000865af19150503d8060008114611bc9576040519150601f19603f3d011682016040523d82523d6000602084013e611bce565b606091505b509150915081611be157611be181612a84565b50505b600101611a65565b5050505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611c3f5760405163f46a288f60e01b815260040160405180910390fd5b611c4b848484846127e4565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd90611c9c9087908790600190600401614087565b600060405180830381600087803b158015611cb657600080fd5b505af1158015611cca573d6000803e3d6000fd5b50505050826001600160a01b031663c75a4b5e8530306000611cef8860000135611f2a565b611cf890613da7565b6040518663ffffffff1660e01b8152600401611d189594939291906138bf565b600060405180830381600087803b158015611d3257600080fd5b505af1158015611d46573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd9150611d9b9087908790600090600401614087565b600060405180830381600087803b158015611db557600080fd5b505af1158015611bec573d6000803e3d6000fd5b6000602083013581611dde6060860186613fa8565b611def906060810190604001613fe3565b6001600160a01b031614611eb857611e0a6020850185613fe3565b6001600160a01b0316611e206060860186613fa8565b611e31906060810190604001613fe3565b6001600160a01b0316141580611e6d575030611e506060860186613fa8565b611e619060c081019060a001613fe3565b6001600160a01b031614155b15611e8b5760405163469498c560e11b815260040160405180910390fd5b611eb1611e9e6060860160408701613fe3565b611eab6060870187613fa8565b85612aac565b9050611f08565b30611ec96060860160408701613fe3565b6001600160a01b031614611f0857611f08611ee76020860186613fe3565b611ef76060870160408801613fe3565b3084610f7a36899003890189614011565b611f1f85611f196020870187613fe3565b83612b79565b9150505b9392505050565b6000600160ff1b8210611f5057604051632db27c5360e01b815260040160405180910390fd5b5090565b6000806000856001600160a01b0316638051ba75866040518263ffffffff1660e01b8152600401611f85919061342a565b606060405180830381865afa158015611fa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc69190614569565b5091509150611fd6848383612c65565b9695505050505050565b6000611ff28360200151600084612ca1565b90505b92915050565b6060600080846001600160a01b03168460405161201891906145ac565b600060405180830381855af49150503d8060008114612053576040519150601f19603f3d011682016040523d82523d6000602084013e612058565b606091505b50915091508161206b5761206b81612a84565b949350505050565b6120c98363a9059cbb60e01b8484604051602401612092929190613f0b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612d15565b505050565b6000806120db84846145be565b602087015160408801519192506120fc916001600160a01b03169083612def565b85602001516001600160a01b03166347e7ef2430836040518363ffffffff1660e01b815260040161212e929190613f0b565b6020604051808303816000875af115801561214d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd69190613edf565b60028151600281111561218657612186613dc3565b036122b0576e22d473030f116ddee9f6b43ac78ba36001600160a01b03166330f28b7a604051806060016040528060405180604001604052808a6001600160a01b03168152602001866020015181525081526020018460400151815260200184606001518152506040518060400160405280876001600160a01b0316815260200186815250878560a001518660c00151876080015160f81b60405160200161224b9392919092835260208301919091526001600160f81b031916604082015260410190565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161227994939291906145d1565b600060405180830381600087803b15801561229357600080fd5b505af11580156122a7573d6000803e3d6000fd5b50505050612335565b6001815160028111156122c5576122c5613dc3565b036123205761230684848360200151846060015185608001518660a001518760c001518c6001600160a01b0316612e8890979695949392919063ffffffff16565b61231b6001600160a01b038616858585613063565b612335565b6123356001600160a01b038616858585613063565b5050505050565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd906123ad9030907f000000000000000000000000000000000000000000000000000000000000000090600190600401614087565b600060405180830381600087803b1580156123c757600080fd5b505af11580156123db573d6000803e3d6000fd5b50600092506123f09150506040830183613fa8565b612401906060810190604001613fe3565b6001600160a01b031603612543576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ef693bed61244e6040840160208501613fe3565b6040516001600160e01b031960e084901b1681526124729190853590600401613f0b565b600060405180830381600087803b15801561248c57600080fd5b505af11580156124a0573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506125159030907f000000000000000000000000000000000000000000000000000000000000000090600090600401614087565b600060405180830381600087803b15801561252f57600080fd5b505af1158015612335573d6000803e3d6000fd5b60405163ef693bed60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef693bed90612592903090853590600401613f0b565b600060405180830381600087803b1580156125ac57600080fd5b505af11580156125c0573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506126359030907f000000000000000000000000000000000000000000000000000000000000000090600090600401614087565b600060405180830381600087803b15801561264f57600080fd5b505af1158015612663573d6000803e3d6000fd5b50506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506126a090506040830183613fa8565b6126b1906060810190604001613fe3565b6001600160a01b0316146126d85760405163051b33b760e51b815260040160405180910390fd5b6127217f00000000000000000000000000000000000000000000000000000000000000006311b2aacd60e21b6127116040850185613fa8565b6040516024016106e8919061464a565b505b50565b6000806127448461273a6020860186613fe3565b8560200135612ca1565b905060006127556060850185613fa8565b612766906060810190604001613fe3565b6001600160a01b0316146127b3576127ad7f00000000000000000000000000000000000000000000000000000000000000006311b2aacd60e21b6127116060870187613fa8565b50611ff2565b611ff26127c66060850160408601613fe3565b826127d46020870187613fe3565b6001600160a01b03169190612073565b6000806127f46040850185613fa8565b612805906060810190604001613fe3565b6001600160a01b03161461288657306128216040850185613fa8565b6128329060c081019060a001613fe3565b6001600160a01b03161461285957604051633300ff5360e21b815260040160405180910390fd5b61287f61286c6040850160208601613fe3565b6128796040860186613fa8565b84612aac565b9050612984565b600080856001600160a01b0316638051ba75886040518263ffffffff1660e01b81526004016128b5919061342a565b606060405180830381865afa1580156128d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128f69190614569565b509092509050806129116001600160401b038416873561309b565b61291b9190613ef8565b92503061292e6040870160208801613fe3565b6001600160a01b031614612981576129817f00000000000000000000000000000000000000000000000000000000000000006129706040880160208901613fe3565b3086610f7a368a90038a018a614011565b50505b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906129f2907f0000000000000000000000000000000000000000000000000000000000000000908590600401613f0b565b6020604051808303816000875af1158015612a11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a359190613f32565b50604051637e348b7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637e348b7d9061043d9030908590600401613f0b565b805115612a9357805181602001fd5b60405163491182fb60e01b815260040160405180910390fd5b600080612af07f0000000000000000000000000000000000000000000000000000000000000000630147931c60e01b8786886040516024016106e89392919061465d565b9050600081806020019051810190612b089190613edf565b90506001612b1c6040870160208801613fc8565b6001811115612b2d57612b2d613dc3565b03612b6c576000612b42826080880135613ef8565b90508015612b5f57612b5f87826127d460608a0160408b01613fe3565b8560600135935050612b70565b8092505b50509392505050565b600080846001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bde91906146e2565b9050612bf46001600160a01b0382168685612def565b6040516311f9fbc960e21b81526001600160a01b038616906347e7ef2490612c229030908790600401613f0b565b6020604051808303816000875af1158015612c41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1f9190613edf565b6000612c83612c7483866145be565b846001600160401b03166130c9565b905083612c91828585613118565b1015611f23576001019392505050565b60405163f3fef3a360e01b81526000906001600160a01b0385169063f3fef3a390612cd29030908690600401613f0b565b6020604051808303816000875af1158015612cf1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206b9190613edf565b6000612d6a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131389092919063ffffffff16565b9050805160001480612d8b575080806020019051810190612d8b9190613f32565b6120c95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b600063095ea7b360e01b8383604051602401612e0c929190613f0b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050612e4a8482613147565b611355576040516001600160a01b038416602482015260006044820152612e7e90859063095ea7b360e01b90606401612092565b6113558482612d15565b604051623f675f60e91b81526000906001600160a01b038a1690637ecebe0090612eb6908b9060040161342a565b602060405180830381865afa158015612ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ef79190613edf565b60405163d505accf60e01b81526001600160a01b038a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e401600060405180830381600087803b158015612f6b57600080fd5b505af1158015612f7f573d6000803e3d6000fd5b5050604051623f675f60e91b8152600092506001600160a01b038c169150637ecebe0090612fb1908c9060040161342a565b602060405180830381865afa158015612fce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ff29190613edf565b9050612fff8260016145be565b81146130575760405162461bcd60e51b815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f74207375636365656044820152601960fa1b6064820152608401612de6565b50505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526113559085906323b872dd60e01b90608401612092565b6000816000190483118202156130b95763c4c5d7f56000526004601cfd5b50670de0b6b3a764000091020490565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a7640000021582026131065763bcbede656000526004601cfd5b50670de0b6b3a7640000919091020490565b60008161312e85856001600160401b031661309b565b61206b9190613ef8565b606061206b84846000856131ee565b6000806000846001600160a01b03168460405161316491906145ac565b6000604051808303816000865af19150503d80600081146131a1576040519150601f19603f3d011682016040523d82523d6000602084013e6131a6565b606091505b50915091508180156131d05750805115806131d05750808060200190518101906131d09190613f32565b80156131e557506001600160a01b0385163b15155b95945050505050565b60608247101561324f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401612de6565b600080866001600160a01b0316858760405161326b91906145ac565b60006040518083038185875af1925050503d80600081146132a8576040519150601f19603f3d011682016040523d82523d6000602084013e6132ad565b606091505b50915091506132be878383876132c9565b979650505050505050565b60608315613338578251600003613331576001600160a01b0385163b6133315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401612de6565b508161206b565b61206b838381511561334d5781518083602001fd5b8060405162461bcd60e51b8152600401612de691906146ff565b6001600160a01b038116811461272357600080fd5b803561338781613367565b919050565b60006080828403121561339e57600080fd5b50919050565b600060e0828403121561339e57600080fd5b60008060008061014085870312156133cd57600080fd5b84356133d881613367565b935060208501356133e881613367565b925060408501356001600160401b0381111561340357600080fd5b61340f8782880161338c565b92505061341f86606087016133a4565b905092959194509250565b6001600160a01b0391909116815260200190565b60008083601f84011261345057600080fd5b5081356001600160401b0381111561346757600080fd5b60208301915083602082850101111561347f57600080fd5b9250929050565b60008060008060006080868803121561349e57600080fd5b85356134a981613367565b9450602086013593506040860135925060608601356001600160401b038111156134d257600080fd5b6134de8882890161343e565b969995985093965092949392505050565b60008060008060008060a0878903121561350857600080fd5b863561351381613367565b9550602087013561352381613367565b9450604087013593506060870135925060808701356001600160401b0381111561354c57600080fd5b61355889828a0161343e565b979a9699509497509295939492505050565b6000806000806000610160868803121561358357600080fd5b85356001600160401b0381111561359957600080fd5b6135a5888289016133a4565b95505060208601356135b681613367565b93506040860135925060608601356135cd81613367565b91506135dc87608088016133a4565b90509295509295909350565b60006060828403121561339e57600080fd5b6000806000806000610160868803121561361357600080fd5b853561361e81613367565b9450602086013561362e81613367565b935060408601356001600160401b038082111561364a57600080fd5b61365689838a0161338c565b9450606088013591508082111561366c57600080fd5b50613679888289016135e8565b9250506135dc87608088016133a4565b60008060006060848603121561369e57600080fd5b83356136a981613367565b925060208401356136b981613367565b915060408401356001600160401b038111156136d457600080fd5b6136e0868287016135e8565b9150509250925092565b6000806000606084860312156136ff57600080fd5b833561370a81613367565b9250602084013561371a81613367565b915060408401356001600160401b0381111561373557600080fd5b6136e08682870161338c565b60008060006060848603121561375657600080fd5b83356001600160401b0381111561376c57600080fd5b613778868287016133a4565b93505060208401359150604084013561379081613367565b809150509250925092565b60008083601f8401126137ad57600080fd5b5081356001600160401b038111156137c457600080fd5b6020830191508360208260051b850101111561347f57600080fd5b600080600080600080606087890312156137f857600080fd5b86356001600160401b038082111561380f57600080fd5b61381b8a838b0161379b565b9098509650602089013591508082111561383457600080fd5b6138408a838b0161379b565b9096509450604089013591508082111561385957600080fd5b5061355889828a0161379b565b600080600080610140858703121561387d57600080fd5b843561388881613367565b9350602085013561389881613367565b925060408501356001600160401b038111156138b357600080fd5b61340f878288016135e8565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260a00190565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b038111828210171561392c5761392c6138f3565b60405290565b60405160e081016001600160401b038111828210171561392c5761392c6138f3565b604051601f8201601f191681016001600160401b038111828210171561397c5761397c6138f3565b604052919050565b6003811061272357600080fd5b803561338781613984565b80356002811061338757600080fd5b600082601f8301126139bc57600080fd5b81356001600160401b038111156139d5576139d56138f3565b6139e8601f8201601f1916602001613954565b8181528460208386010111156139fd57600080fd5b816020850160208301376000918101602001919091529392505050565b60006101008284031215613a2d57600080fd5b613a35613909565b9050613a4082613991565b8152613a4e6020830161399c565b6020820152613a5f6040830161337c565b60408201526060820135606082015260808201356080820152613a8460a0830161337c565b60a082015260c082013560c082015260e08201356001600160401b03811115613aac57600080fd5b613ab8848285016139ab565b60e08301525092915050565b80356001811061338757600080fd5b60006001600160401b03821115613aec57613aec6138f3565b5060051b60200190565b600082601f830112613b0757600080fd5b81356020613b1c613b1783613ad3565b613954565b82815260059290921b84018101918181019086841115613b3b57600080fd5b8286015b84811015613b5f578035613b5281613367565b8352918301918301613b3f565b509695505050505050565b600082601f830112613b7b57600080fd5b81356020613b8b613b1783613ad3565b82815260059290921b84018101918181019086841115613baa57600080fd5b8286015b84811015613b5f5780358352918301918301613bae565b600060e08284031215613bd757600080fd5b613bdf613932565b9050613bea82613ac4565b81526020820135602082015260408201356001600160401b0380821115613c1057600080fd5b613c1c85838601613af6565b60408401526060840135915080821115613c3557600080fd5b613c4185838601613b6a565b60608401526080840135915080821115613c5a57600080fd5b50613c6784828501613b6a565b60808301525060a082013560a0820152613c8360c0830161337c565b60c082015292915050565b600060e08284031215613ca057600080fd5b613ca8613932565b9050613cb38261337c565b8152613cc16020830161337c565b6020820152613cd26040830161337c565b604082015260608201356001600160401b0380821115613cf157600080fd5b613cfd85838601613a1a565b60608401526080840135915080821115613d1657600080fd5b613d2285838601613a1a565b608084015260a0840135915080821115613d3b57600080fd5b50613d4884828501613bc5565b60a083015250613c8360c0830161337c565b600080600060608486031215613d6f57600080fd5b83356001600160401b03811115613d8557600080fd5b61377886828701613c8e565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b8201613dbc57613dbc613d91565b5060000390565b634e487b7160e01b600052602160045260246000fd5b6003811061272357612723613dc3565b60028110613df957613df9613dc3565b9052565b60005b83811015613e18578181015183820152602001613e00565b50506000910152565b60008151808452613e39816020860160208601613dfd565b601f01601f19169290920160200192915050565b6020815260008251613e5e81613dd9565b806020840152506020830151613e776040840182613de9565b5060018060a01b03604084015116606083015260608301516080830152608083015160a083015260a0830151613eb860c08401826001600160a01b03169052565b5060c083015160e083015260e083015161010080818501525061206b610120840182613e21565b600060208284031215613ef157600080fd5b5051919050565b81810381811115611ff557611ff5613d91565b6001600160a01b03929092168252602082015260400190565b801515811461272357600080fd5b600060208284031215613f4457600080fd5b8151611ff281613f24565b600080600060608486031215613f6457600080fd5b83356001600160401b03811115613f7a57600080fd5b613f8686828701613c8e565b9350506020840135613f9781613367565b929592945050506040919091013590565b6000823560fe19833603018112613fbe57600080fd5b9190910192915050565b600060208284031215613fda57600080fd5b611ff28261399c565b600060208284031215613ff557600080fd5b8135611ff281613367565b803560ff8116811461338757600080fd5b600060e0828403121561402357600080fd5b61402b613932565b823561403681613984565b8082525060208301356020820152604083013560408201526060830135606082015261406460808401614000565b608082015260a083013560a082015260c083013560c08201528091505092915050565b6001600160a01b039384168152919092166020820152901515604082015260600190565b6000823560fe198336030181126140c157600080fd5b90910192915050565b6000808335601e198436030181126140e157600080fd5b83016020810192503590506001600160401b0381111561410057600080fd5b80360382131561347f57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000610100823561414881613984565b61415181613dd9565b845261415f6020840161399c565b61416c6020860182613de9565b50604083013561417b81613367565b6001600160a01b03166040850152606083810135908501526080808401359085015260a08301356141ab81613367565b6001600160a01b031660a085015260c083810135908501526141d060e08401846140ca565b8260e0870152611fd6838701828461410f565b6000823560de198336030181126140c157600080fd5b6000808335601e1984360301811261421057600080fd5b83016020810192503590506001600160401b0381111561422f57600080fd5b8060051b360382131561347f57600080fd5b81835260006001600160fb1b0383111561425a57600080fd5b8260051b80836020870137939093016020019392505050565b600060e0830161428283613ac4565b600180821061429357614293613dc3565b90855260208481013581870152906142ae60408601866141f9565b60e06040890152938490529260009061010088015b818310156142f05785356142d681613367565b6001600160a01b03168152948401949183019184016142c3565b6142fd60608901896141f9565b9650945088810360608a0152614314818787614241565b9550505050505061432860808401846141f9565b858303608087015261433b838284614241565b9250505060a083013560a085015261435560c0840161337c565b6001600160a01b03811660c0860152509392505050565b6000813561437981613367565b6001600160a01b03908116845260208301359061439582613367565b90811660208501526040830135906143ac82613367565b1660408401526143bf60608301836140ab565b60e060608501526143d360e0850182614138565b90506143e260808401846140ab565b84820360808601526143f48282614138565b91505061440460a08401846141e3565b84820360a08601526144168282614273565b91505061435560c0840161337c565b606081526000614438606083018661436c565b6001600160a01b039490941660208301525060400152919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fd690830184613e21565b606081526000614499606083018661436c565b6020830194909452506001600160a01b0391909116604090910152919050565b60018060a01b03841681528260208201526060604082015260006131e56060830184613e21565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561450857600080fd5b8135611ff281613f24565b6000808335601e1984360301811261452a57600080fd5b8301803591506001600160401b0382111561454457600080fd5b60200191503681900382131561347f57600080fd5b8183823760009101908152919050565b60008060006060848603121561457e57600080fd5b83516001600160401b038116811461459557600080fd5b602085015160409095015190969495509392505050565b60008251613fbe818460208701613dfd565b80820180821115611ff557611ff5613d91565b60006101006145f483885180516001600160a01b03168252602090810151910152565b6020870151604084015260408701516060840152614628608084018780516001600160a01b03168252602090810151910152565b6001600160a01b03851660c084015260e083018190526132be81840185613e21565b602081526000611ff26020830184614138565b6001600160a01b03841681526000610120843561467981613984565b61468281613dd9565b8060208501525060208501356040840152604085013560608401526060850135608084015260ff6146b560808701614000565b1660a084015260a085013560c084015260c085013560e084015280610100840152611fd681840185614138565b6000602082840312156146f457600080fd5b8151611ff281613367565b602081526000611ff26020830184613e2156fea26469706673582212203fddf533416535cda37669686e0dc274afd4f898ccd7438686f62cd5efafd69464736f6c63430008130033",
    "sourceMap": "427:3268:124:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8737:464:123;;;;;;:::i;:::-;;:::i;:::-;;3925:31;;;;;;;;;;;;:::i;:::-;;;;;;;;3558:100;;3608:50;3558:100;;;;;1790:25:193;;;1778:2;1763:18;3558:100:123;1644:177:193;1101:76:130;;1135:42;1101:76;;21297:2728:123;;;;;;:::i;:::-;;:::i;18994:2128::-;;;;;;:::i;:::-;;:::i;14926:1737::-;;;;;;:::i;:::-;;:::i;11634:659::-;;;;;;:::i;:::-;;:::i;10057:426::-;;;;;;:::i;:::-;;:::i;9399:401::-;;;;;;:::i;:::-;;:::i;4007:29::-;;;;;3464:88;;3507:45;3464:88;;12600:738;;;;;;:::i;:::-;;:::i;4082:38::-;;;;;3698:25;;;;;3848:39;;;;;17338:1310;;;;;;:::i;:::-;;:::i;3768:41::-;;;;;13630:554;;;;;;:::i;:::-;;:::i;4166:38::-;;;;;10784:598;;;;;;:::i;:::-;;:::i;8737:464::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;8941:18:::1;8962:47;8971:5;8978:16;8996:12;8962:8;:47::i;:::-;8941:68;;9029:5;-1:-1:-1::0;;;;;9019:40:123::1;;9073:8;9103:4;9130;9149:20;9158:10;9149:8;:20::i;:::-;9183:1;9019:175;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8931:270;8737:464:::0;;;;:::o;21297:2728::-;21461:7;21484:10;-1:-1:-1;;;;;21506:11:123;21484:34;;21480:97;;21527:50;;-1:-1:-1;;;21527:50:123;;;;;;;;;;;21480:97;21601:30;;;21718:48;;;;21729:4;21718:48;:::i;:::-;21587:179;;;;;;21874:21;21898:136;21929:11;:17;;;21960:11;:20;;;21994:11;:23;;;:30;;;21898:17;:136::i;:::-;22101:17;;;;22080:45;;-1:-1:-1;;;22080:45:123;;-1:-1:-1;;;;;19288:32:193;;;22080:45:123;;;19270:51:193;22120:4:123;19337:18:193;;;19330:50;21874:160:123;;-1:-1:-1;22080:3:123;:20;;;;19243:18:193;;22080:45:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22145:11;:17;;;-1:-1:-1;;;;;22135:52:123;;22201:11;:20;;;22243:4;22270;22290:23;22299:13;22290:8;:23::i;:::-;22289:24;;;:::i;:::-;22328:23;22337:13;22328:8;:23::i;:::-;22327:24;;;:::i;:::-;22135:226;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;22392:17:123;;;;22371:46;;-1:-1:-1;;;22371:46:123;;-1:-1:-1;;;;;19288:32:193;;;22371:46:123;;;19270:51:193;22411:5:123;19337:18:193;;;19330:50;22371:3:123;:20;;;;;;19243:18:193;;22371:46:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22495:27;22525:44;22542:11;22555:13;22525:16;:44::i;:::-;22495:74;;22580:21;22604:189;22639:10;22704:24;;;22746:11;:23;;;22664:119;;;;;;;;:::i;:::-;;;;-1:-1:-1;;22664:119:123;;;;;;;;;;;;;;-1:-1:-1;;;;;22664:119:123;-1:-1:-1;;;;;;22664:119:123;;;;;;;;;;22604:13;:189::i;:::-;22580:213;;22803:20;22837:8;22826:31;;;;;;;;;;;;:::i;:::-;22803:54;-1:-1:-1;22943:22:123;22968:34;22803:54;22968:19;:34;:::i;:::-;23119:23;;;;;:30;;23083:67;;-1:-1:-1;;;23083:67:123;;22943:59;;-1:-1:-1;;;;;;23083:10:123;:18;;;;:67;;23110:6;;23119:30;23083:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23188:23:123;;;;;:30;;23160:59;;-1:-1:-1;;;23160:59:123;;-1:-1:-1;;;;;23160:6:123;:12;;;;:59;;23181:4;;23160:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23357:1;23340:14;:18;23336:642;;;23455:19;;;;:27;;;-1:-1:-1;;;;;23455:41:123;;23451:516;;23516:233;23559:10;23640:24;;;23690:11;:19;;;23592:139;;;;;;;;:::i;23516:233::-;;23451:516;;;23872:23;;;;:31;;;23865:87;;-1:-1:-1;;;;;23865:52:123;23918:17;23937:14;23865:52;:87::i;:::-;-1:-1:-1;3608:50:123;;21297:2728;-1:-1:-1;;;;;;;;;;;;;21297:2728:123:o;18994:2128::-;19179:7;19202:10;-1:-1:-1;;;;;19224:11:123;19202:34;;19198:91;;19245:44;;-1:-1:-1;;;19245:44:123;;;;;;;;;;;19198:91;19313:30;;;19425:49;;;;19436:4;19425:49;:::i;:::-;19573:19;;;;:27;;;19299:175;;-1:-1:-1;19299:175:123;;-1:-1:-1;19299:175:123;-1:-1:-1;;;;;;19573:41:123;;19569:298;;19630:24;19657:135;19696:10;19732:24;;;19758:11;:19;;;19709:69;;;;;;;;:::i;19657:135::-;19630:162;;19833:11;19822:34;;;;;;;;;;;;:::i;:::-;19806:50;;19616:251;19569:298;19918:21;19942:131;19977:10;20013:24;;;20039:11;:23;;;19990:73;;;;;;;;:::i;19942:131::-;19918:155;;20083:21;20118:8;20107:31;;;;;;;;;;;;:::i;:::-;20083:55;;20215:18;20236:73;20253:11;20266:12;20280:13;20295;20236:16;:73::i;:::-;20215:94;;20402:21;20426:112;20457:11;:17;;;20476:11;:20;;;20498:11;:23;;;:30;;;20426:17;:112::i;:::-;20402:136;;20594:11;:17;;;-1:-1:-1;;;;;20584:52:123;;20650:11;:20;;;20692:4;20719;20738:20;20747:10;20738:8;:20::i;:::-;20772:23;20781:13;20772:8;:23::i;:::-;20584:221;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;20898:23:123;;;;;:30;;20871:58;;-1:-1:-1;;;20871:58:123;;:6;-1:-1:-1;;;;;20871:11:123;;;;:58;;20891:4;;20871:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;21050:23:123;;;;;:30;;21009:72;;-1:-1:-1;;;21009:72:123;;:10;-1:-1:-1;;;;;21009:18:123;;;;:72;;21036:11;;21009:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3507:45:123;;18994:2128;-1:-1:-1;;;;;;;;;;;;;;18994:2128:123:o;14926:1737::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;15247:17:::1;15211:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:53;;;;;;;;:::i;:::-;;;:123;;;-1:-1:-1::0;;;;;;15323:10:123::1;15280:54;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:31;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15280:54:123::1;;;15211:123;:180;;;-1:-1:-1::0;;;;;;15387:4:123::1;15350:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15350:41:123::1;;;15211:180;15207:252;;;15409:50;;-1:-1:-1::0;;;15409:50:123::1;;;;;;;;;;;15207:252;15555:1;15516:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15516:41:123::1;;;:230;;;;-1:-1:-1::0;15607:17:123::1;15575:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;:108;;;-1:-1:-1::0;;;;;;15640:43:123;::::1;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15640:43:123::1;;;15575:108;:161;;;-1:-1:-1::0;;;;;;15732:4:123::1;15699:37;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:29;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15699:37:123::1;;;15575:161;15512:289;;;15755:46;;-1:-1:-1::0;;;15755:46:123::1;;;;;;;;;;;15512:289;15884:17:::0;;15880:337:::1;;15947:4;-1:-1:-1::0;;;;;15921:31:123;::::1;::::0;15917:290:::1;;15972:54;-1:-1:-1::0;;;;;15972:33:123;::::1;16006:4;16012:13:::0;15972:33:::1;:54::i;:::-;15917:290;;;16114:78;16128:12:::0;16142:14;16158:4:::1;16164:13:::0;16114:78:::1;;::::0;;::::1;::::0;::::1;16179:12:::0;16114:78:::1;:::i;:::-;:13;:78::i;:::-;16270:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16258:47:123::1;;16306:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;16328:4;16334;16258:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;16349:11:123::1;:21;::::0;-1:-1:-1;16349:21:123::1;::::0;-1:-1:-1;16406:4:123::1;16433:10;16458:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;16513:11;16526:12;16540:13;16502:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16349:215;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;16586:17:123::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16574:47:123::1;;16622:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;16644:4;16650:5;16574:82;;;;;;;;;;;;;;;;;:::i;11634:659::-:0;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;11891:18:::1;11912:47;11921:5;11928:16;11946:12;11912:8;:47::i;:::-;11891:68:::0;-1:-1:-1;11969:21:123::1;11993:55;12011:5:::0;12018:8;12028:19;::::1;11993:17;:55::i;:::-;11969:79;;12068:5;-1:-1:-1::0;;;;;12058:40:123::1;;12112:8;12142:4;12169;12188:20;12197:10;12188:8;:20::i;:::-;12222:23;12231:13;12222:8;:23::i;:::-;12058:197;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12265:21;12273:12;12265:7;:21::i;:::-;11881:412;;11634:659:::0;;;;;:::o;10057:426::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;10178:21:::1;10202:55;10220:5:::0;10227:8;10237:19;::::1;10202:17;:55::i;:::-;10178:79;;10277:5;-1:-1:-1::0;;;;;10267:40:123::1;;10321:8;10351:4;10378;10397:1;10412:23;10421:13;10412:8;:23::i;:::-;10267:178;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10455:21;10463:12;10455:7;:21::i;:::-;10168:315;10057:426:::0;;;:::o;9399:401::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;9570:5:::1;-1:-1:-1::0;;;;;9560:40:123::1;;9614:8;9644:4;9671;9691:33;9700:16;:23;;;9691:8;:33::i;:::-;9690:34;;;:::i;:::-;9738:1;9560:189;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9759:34;9769:5;9776:16;9759:9;:34::i;12600:738::-:0;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;12857:51:::1;12864:8;12874:5;12881:12;12895;12857:6;:51::i;:::-;12918:65;::::0;-1:-1:-1;;;12918:65:123;;-1:-1:-1;;;;;12938:3:123::1;12918:42;::::0;::::1;::::0;:65:::1;::::0;12961:8;;12971:5;;12978:4:::1;::::0;12918:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13003:5;-1:-1:-1::0;;;;;12993:40:123::1;;13047:8;13077:4;13104;13124:33;13133:16;:23;;;13124:8;:33::i;:::-;13123:34;;;:::i;:::-;13172:29;13181:19:::0;::::1;13172:8;:29::i;:::-;13171:30;;;:::i;:::-;12993:218;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13221:66:123::1;::::0;-1:-1:-1;;;13221:66:123;;-1:-1:-1;;;;;13241:3:123::1;13221:42;::::0;-1:-1:-1;13221:42:123::1;::::0;-1:-1:-1;13221:66:123::1;::::0;13264:8;;13274:5;;13281::::1;::::0;13221:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13297:34;13307:5;13314:16;13297:9;:34::i;:::-;;12600:738:::0;;;;;:::o;17338:1310::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;17588:18:::1;17552:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:54;;;;;;;;:::i;:::-;;;:111;;;-1:-1:-1::0;;;;;;17659:4:123::1;17622:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17622:41:123::1;;;17552:111;17548:183;;;17681:50;;-1:-1:-1::0;;;17681:50:123::1;;;;;;;;;;;17548:183;17827:1;17788:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17788:41:123::1;;;:118;;;;-1:-1:-1::0;17879:17:123::1;17847:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;17788:118;17784:177;;;17915:46;;-1:-1:-1::0;;;17915:46:123::1;;;;;;;;;;;17784:177;18094:1;18055:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;18055:41:123::1;;:88;;;;-1:-1:-1::0;;;;;;18112:31:123;::::1;::::0;18055:88:::1;18051:166;;;18161:56;;-1:-1:-1::0;;;18161:56:123::1;;;;;;;;;;;18051:166;18278:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;18266:47:123::1;;18314:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;18336:4;18342;18266:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;18357:11:123::1;:27;::::0;-1:-1:-1;18357:27:123::1;::::0;-1:-1:-1;18419:4:123::1;18438:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;18493:11;18506:13;18521:17;18482:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18357:192;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;18571:17:123::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;18559:47:123::1;;18607:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;18629:4;18635:5;18559:82;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;13630:554:::0;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;13819:7;13796:20:::1;13843:335;13863:12;13859:1;:16;13843:335;;;13896:12;;13909:1;13896:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13892:245;;;13931:34;13945:7;;13953:1;13945:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13957:4;;13962:1;13957:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13931:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;13931:13:123::1;::::0;-1:-1:-1;;;13931:34:123:i:1;:::-;;13892:245;;;14005:12;14019:21:::0;14044:7:::1;;14052:1;14044:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14044:15:123::1;14060:4;;14065:1;14060:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;14044:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14004:64;;;;14091:7;14086:36;;14100:22;14113:8;14100:12;:22::i;:::-;13986:151;;13892:245;14162:3;;13843:335;;;;13786:398;13630:554:::0;;;;;;:::o;10784:598::-;-1:-1:-1;;;;;6104:4:123;6087:21;6095:4;6087:21;6083:68;;6117:34;;-1:-1:-1;;;6117:34:123;;;;;;;;;;;6083:68;10978:51:::1;10985:8;10995:5;11002:12;11016;10978:6;:51::i;:::-;11039:65;::::0;-1:-1:-1;;;11039:65:123;;-1:-1:-1;;;;;11059:3:123::1;11039:42;::::0;::::1;::::0;:65:::1;::::0;11082:8;;11092:5;;11099:4:::1;::::0;11039:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11124:5;-1:-1:-1::0;;;;;11114:40:123::1;;11168:8;11198:4;11225;11244:1;11260:29;11269:12;:19;;;11260:8;:29::i;:::-;11259:30;;;:::i;:::-;11114:185;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11309:66:123::1;::::0;-1:-1:-1;;;11309:66:123;;-1:-1:-1;;;;;11329:3:123::1;11309:42;::::0;-1:-1:-1;11309:42:123::1;::::0;-1:-1:-1;11309:66:123::1;::::0;11352:8;;11362:5;;11369::::1;::::0;11309:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;24474:992:::0;24635:7;24671:23;;;;24635:7;24709:24;;;;24671:16;24709:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24709:46:123;;24705:682;;24811:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;24775:64:123;:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24775:64:123;;;:135;;;-1:-1:-1;24905:4:123;24859:24;;;;:16;:24;:::i;:::-;:34;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24859:51:123;;;24775:135;24771:201;;;24932:40;;-1:-1:-1;;;24932:40:123;;;;;;;;;;;24771:201;24995:89;25012:31;;;;;;;;:::i;:::-;25045:24;;;;:16;:24;:::i;:::-;25071:12;24995:16;:89::i;:::-;24986:98;;24705:682;;;25148:4;25105:31;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25105:48:123;;25101:286;;25169:207;25200:28;;;;:16;:28;:::i;:::-;25246:31;;;;;;;;:::i;:::-;25303:4;25326:6;25169:207;;;;;;;25350:12;25169:207;:::i;:::-;25404:55;25415:5;25422:28;;;;:16;:28;:::i;:::-;25452:6;25404:10;:55::i;:::-;25397:62;;;24474:992;;;;;;:::o;509:133:181:-;552:6;-1:-1:-1;;;570:1:181;:13;566:51;;592:25;;-1:-1:-1;;;592:25:181;;;;;;;;;;;566:51;-1:-1:-1;637:1:181;509:133::o;30695:332:123:-;30822:18;30853:22;30877:21;30913:5;-1:-1:-1;;;;;30903:27:123;;30931:8;30903:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30852:88;;;;;30963:57;30983:4;30989:15;31006:13;30963:19;:57::i;:::-;30950:70;30695:332;-1:-1:-1;;;;;;30695:332:123:o;3472:220:124:-;3602:7;3628:57;3640:11;:17;;;3667:1;3671:13;3628:11;:57::i;:::-;3621:64;;3472:220;;;;;:::o;767:241:120:-;839:12;864;878:23;905:2;-1:-1:-1;;;;;905:15:120;921:4;905:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:63;;;;941:7;936:38;;950:24;963:10;950:12;:24::i;:::-;991:10;767:241;-1:-1:-1;;;;767:241:120:o;941:175:62:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1050:58:62;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:62;-1:-1:-1;;;;;;1050:58:62;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;2550:607:124:-;2745:7;;2895:29;2911:13;2895;:29;:::i;:::-;3022:17;;;;2980:27;;;;2865:59;;-1:-1:-1;2973:88:124;;-1:-1:-1;;;;;2973:48:124;;2865:59;2973:48;:88::i;:::-;3088:11;:17;;;-1:-1:-1;;;;;3078:36:124;;3123:4;3130:19;3078:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1455:1279:130:-;1623:20;1600:19;;:43;;;;;;;;:::i;:::-;;1596:1132;;1135:42;-1:-1:-1;;;;;1721:46:130;;1785:262;;;;;;;;1856:84;;;;;;;;1901:5;-1:-1:-1;;;;;1856:84:130;;;;;1916:6;:21;;;1856:84;;;1785:262;;;;1969:6;:12;;;1785:262;;;;2013:6;:15;;;1785:262;;;2065:80;;;;;;;;2115:2;-1:-1:-1;;;;;2065:80:130;;;;;2136:6;2065:80;;;2163:4;2198:6;:8;;;2208:6;:8;;;2225:6;:8;;;2218:16;;2185:50;;;;;;;;;36789:19:193;;;36833:2;36824:12;;36817:28;;;;-1:-1:-1;;;;;;36875:26:193;36870:2;36861:12;;36854:48;36927:2;36918:12;;36606:330;2185:50:130;;;;;;;;;;;;;1721:551;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:1132;;;2316:19;2293;;:42;;;;;;;;:::i;:::-;;2289:439;;2406:110;2437:4;2443:2;2447:6;:21;;;2470:6;:15;;;2487:6;:8;;;2497:6;:8;;;2507:6;:8;;;2419:5;-1:-1:-1;;;;;2406:30:130;;;:110;;;;;;;;;;:::i;:::-;2530:48;-1:-1:-1;;;;;2530:30:130;;2561:4;2567:2;2571:6;2530:30;:48::i;:::-;2289:439;;;2669:48;-1:-1:-1;;;;;2669:30:130;;2700:4;2706:2;2710:6;2669:30;:48::i;:::-;1455:1279;;;;;:::o;26679:940:123:-;26752:80;;-1:-1:-1;;;26752:80:123;;-1:-1:-1;;;;;26772:3:123;26752:42;;;;:80;;26803:4;;26818:6;;26827:4;;26752:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26886:1:123;;-1:-1:-1;26846:20:123;;-1:-1:-1;;26846:20:123;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26846:42:123;;26842:771;;-1:-1:-1;;;;;26904:6:123;:11;;26916:21;;;;;;;;:::i;:::-;26904:55;;-1:-1:-1;;;;;;26904:55:123;;;;;;;;;;26939:19;;;26904:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26973:81:123;;-1:-1:-1;;;26973:81:123;;-1:-1:-1;;;;;26993:3:123;26973:42;;-1:-1:-1;26973:42:123;;-1:-1:-1;26973:81:123;;27024:4;;27039:6;;27048:5;;26973:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26842:771;27086:47;;-1:-1:-1;;;27086:47:123;;-1:-1:-1;;;;;27086:6:123;:11;;;;:47;;27106:4;;27113:19;;;27086:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27147:81:123;;-1:-1:-1;;;27147:81:123;;-1:-1:-1;;;;;27167:3:123;27147:42;;-1:-1:-1;27147:42:123;;-1:-1:-1;27147:81:123;;27198:4;;27213:6;;27222:5;;27147:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;27319:10:123;27279:51;;-1:-1:-1;27279:20:123;;-1:-1:-1;27279:20:123;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;27279:51:123;;27275:103;;27339:39;;-1:-1:-1;;;27339:39:123;;;;;;;;;;;27275:103;27392:210;27431:10;-1:-1:-1;;;27550:20:123;;;;:12;:20;:::i;:::-;27460:128;;;;;;;;:::i;27392:210::-;;26842:771;26679:940;:::o;25738:798::-;25834:7;;25874:73;25886:5;25893:28;;;;:16;:28;:::i;:::-;25923:16;:23;;;25874:11;:73::i;:::-;25853:94;-1:-1:-1;26065:1:123;26021:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26021:46:123;;26017:486;;26083:214;26122:10;-1:-1:-1;;;26241:24:123;;;;:16;:24;:::i;26083:214::-;;26017:486;;;26398:94;26448:31;;;;;;;;:::i;:::-;26481:10;26405:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;26398:49:123;;:94;:49;:94::i;27913:1319::-;28150:14;;28178:20;;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28178:42:123;;28174:896;;28283:4;28241:20;;;;:12;:20;:::i;:::-;:30;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28241:47:123;;28237:98;;28297:38;;-1:-1:-1;;;28297:38:123;;;;;;;;;;;28237:98;28359:75;28376:21;;;;;;;;:::i;:::-;28399:20;;;;:12;:20;:::i;:::-;28421:12;28359:16;:75::i;:::-;28350:84;;28174:896;;;28526:22;28550:21;28586:5;-1:-1:-1;;;;;28576:27:123;;28604:8;28576:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28525:88:123;;-1:-1:-1;28525:88:123;-1:-1:-1;28525:88:123;28636:42;-1:-1:-1;;;;;28636:42:123;;28658:19;;28636:4;:42::i;:::-;:58;;;;:::i;:::-;28627:67;-1:-1:-1;28746:4:123;28713:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28713:38:123;;28709:351;;28833:212;28876:10;28909:21;;;;;;;;:::i;:::-;28960:4;28987:6;28833:212;;;;;;;29015:12;28833:212;:::i;:::-;28452:618;;28174:896;29137:43;;-1:-1:-1;;;29137:43:123;;-1:-1:-1;;;;;29137:10:123;:18;;;;:43;;29164:6;;29173;;29137:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;29190:35:123;;-1:-1:-1;;;29190:35:123;;-1:-1:-1;;;;;29190:6:123;:12;;;;:35;;29211:4;;29218:6;;29190:35;;;:::i;1192:255:120:-;1263:13;;:18;1259:127;;1354:6;1348:13;1339:6;1335:2;1331:15;1324:38;1259:127;1402:38;;-1:-1:-1;;;1402:38:120;;;;;;;;;;;29328:952:123;29486:17;29515:21;29539:241;29574:10;29639:35;;;29692:6;29716:12;29746:10;29599:171;;;;;;;;;;:::i;29539:241::-;29515:265;;29790:17;29821:8;29810:31;;;;;;;;;;;;:::i;:::-;29790:51;-1:-1:-1;29963:18:123;29940:19;;;;;;;;:::i;:::-;:41;;;;;;;;:::i;:::-;;29936:338;;29997:17;30017:28;30036:9;30017:16;;;;:28;:::i;:::-;29997:48;-1:-1:-1;30063:13:123;;30059:110;;30096:58;30136:6;30144:9;30103:18;;;;;;;;:::i;30096:58::-;30194:10;:17;;;30182:29;;29983:239;29936:338;;;30254:9;30242:21;;29936:338;29505:775;;29328:952;;;;;:::o;1424:305:124:-;1519:7;1538:23;1582:5;-1:-1:-1;;;;;1572:22:124;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1538:59;-1:-1:-1;1607:51:124;-1:-1:-1;;;;;1607:36:124;;1644:5;1651:6;1607:36;:51::i;:::-;1675:47;;-1:-1:-1;;;1675:47:124;;-1:-1:-1;;;;;1675:24:124;;;;;:47;;1708:4;;1715:6;;1675:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1940:373:88:-;2058:18;2097:43;2102:20;2109:13;2102:4;:20;:::i;:::-;2124:15;-1:-1:-1;;;;;2097:43:88;:4;:43::i;:::-;2084:56;;2262:4;2202:57;2216:10;2228:15;2245:13;2202;:57::i;:::-;:64;2198:113;;;2290:12;;1940:373;;;;;:::o;1960:177:124:-;2082:48;;-1:-1:-1;;;2082:48:124;;2056:7;;-1:-1:-1;;;;;2082:25:124;;;;;:48;;2116:4;;2123:6;;2082:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5173:642:62:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:62;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:62;;39822:2:193;5697:111:62;;;39804:21:193;39861:2;39841:18;;;39834:30;39900:34;39880:18;;;39873:62;-1:-1:-1;;;39951:18:193;;;39944:40;40001:19;;5697:111:62;;;;;;;;3756:410;3843:25;3894:22;;;3918:7;3927:5;3871:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3871:62:62;;;;;;;;;;;;;;-1:-1:-1;;;;;3871:62:62;-1:-1:-1;;;;;;3871:62:62;;;;;;;;;;;-1:-1:-1;3949:44:62;3973:5;3871:62;3949:23;:44::i;:::-;3944:216;;4036:58;;-1:-1:-1;;;;;40229:32:193;;4036:58:62;;;40211:51:193;4092:1:62;40278:18:193;;;40271:45;4009:86:62;;4029:5;;-1:-1:-1;;;4059:22:62;40184:18:193;;4036:58:62;40031:291:193;4009:86:62;4109:40;4129:5;4136:12;4109:19;:40::i;4318:472::-;4565:19;;-1:-1:-1;;;4565:19:62;;4543;;-1:-1:-1;;;;;4565:12:62;;;;;:19;;4578:5;;4565:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4594:54;;-1:-1:-1;;;4594:54:62;;-1:-1:-1;;;;;40694:15:193;;;4594:54:62;;;40676:34:193;40746:15;;;40726:18;;;40719:43;40778:18;;;40771:34;;;40821:18;;;40814:34;;;40897:4;40885:17;;40864:19;;;40857:46;40919:19;;;40912:35;;;40963:19;;;40956:35;;;4543:41:62;;-1:-1:-1;4594:12:62;;;;;;40610:19:193;;4594:54:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4679:19:62;;-1:-1:-1;;;4679:19:62;;4658:18;;-1:-1:-1;;;;;;4679:12:62;;;-1:-1:-1;4679:12:62;;:19;;4692:5;;4679:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4658:40;-1:-1:-1;4730:15:62;:11;4744:1;4730:15;:::i;:::-;4716:10;:29;4708:75;;;;-1:-1:-1;;;4708:75:62;;41204:2:193;4708:75:62;;;41186:21:193;41243:2;41223:18;;;41216:30;41282:34;41262:18;;;41255:62;-1:-1:-1;;;41333:18:193;;;41326:31;41374:19;;4708:75:62;41002:397:193;4708:75:62;4533:257;;4318:472;;;;;;;;:::o;1355:203::-;1482:68;;-1:-1:-1;;;;;41662:15:193;;;1482:68:62;;;41644:34:193;41714:15;;41694:18;;;41687:43;41746:18;;;41739:34;;;1455:96:62;;1475:5;;-1:-1:-1;;;1505:27:62;41579:18:193;;1482:68:62;41404:375:193;3233:443:181;3283:9;3436:1;3432;3428:6;3424:14;3421:1;3418:21;3415:1;3411:29;3408:227;;;3539:10;3533:4;3526:24;3620:4;3614;3607:18;3408:227;-1:-1:-1;3664:3:181;3653:9;;3649:19;;3233:443::o;4704:487::-;4754:9;4934:16;4928:23;;4946:3;4919:33;4912:41;4905:49;;4895:255;;5054:10;5048:4;5041:24;5135:4;5129;5122:18;4895:255;-1:-1:-1;5175:3:181;5168:11;;;;5164:19;;4704:487::o;1466:197:88:-;1584:12;1647:13;1611:33;1616:10;1628:15;-1:-1:-1;;;;;1611:33:88;:4;:33::i;:::-;:49;;;;:::i;4109:223:65:-;4242:12;4273:52;4295:6;4303:4;4309:1;4312:12;4273:21;:52::i;6316:594:62:-;6399:4;6701:12;6715:23;6750:5;-1:-1:-1;;;;;6742:19:62;6762:4;6742:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6700:67;;;;6796:7;:69;;;;-1:-1:-1;6808:17:62;;:22;;:56;;;6845:10;6834:30;;;;;;;;;;;;:::i;:::-;6796:107;;;;-1:-1:-1;;;;;;1702:19:65;;;:23;;6869:34:62;6777:126;6316:594;-1:-1:-1;;;;;6316:594:62:o;5166:446:65:-;5331:12;5388:5;5363:21;:30;;5355:81;;;;-1:-1:-1;;;5355:81:65;;41986:2:193;5355:81:65;;;41968:21:193;42025:2;42005:18;;;41998:30;42064:34;42044:18;;;42037:62;-1:-1:-1;;;42115:18:193;;;42108:36;42161:19;;5355:81:65;41784:402:193;5355:81:65;5447:12;5461:23;5488:6;-1:-1:-1;;;;;5488:11:65;5507:5;5514:4;5488:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:73;;;;5536:69;5563:6;5571:7;5580:10;5592:12;5536:26;:69::i;:::-;5529:76;5166:446;-1:-1:-1;;;;;;;5166:446:65:o;7672:628::-;7852:12;7880:7;7876:418;;;7907:10;:17;7928:1;7907:22;7903:286;;-1:-1:-1;;;;;1702:19:65;;;8114:60;;;;-1:-1:-1;;;8114:60:65;;42393:2:193;8114:60:65;;;42375:21:193;42432:2;42412:18;;;42405:30;42471:31;42451:18;;;42444:59;42520:18;;8114:60:65;42191:353:193;8114:60:65;-1:-1:-1;8209:10:65;8202:17;;7876:418;8250:33;8258:10;8270:12;8981:17;;:21;8977:379;;9209:10;9203:17;9265:15;9252:10;9248:2;9244:19;9237:44;8977:379;9332:12;9325:20;;-1:-1:-1;;;9325:20:65;;;;;;;;:::i;14:131:193:-;-1:-1:-1;;;;;89:31:193;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:165::-;358:5;403:3;394:6;389:3;385:16;381:26;378:46;;;420:1;417;410:12;378:46;-1:-1:-1;442:6:193;289:165;-1:-1:-1;289:165:193:o;459:161::-;524:5;569:3;560:6;555:3;551:16;547:26;544:46;;;586:1;583;576:12;625:789;781:6;789;797;805;858:3;846:9;837:7;833:23;829:33;826:53;;;875:1;872;865:12;826:53;914:9;901:23;933:31;958:5;933:31;:::i;:::-;983:5;-1:-1:-1;1040:2:193;1025:18;;1012:32;1053:33;1012:32;1053:33;:::i;:::-;1105:7;-1:-1:-1;1163:2:193;1148:18;;1135:32;-1:-1:-1;;;;;1179:30:193;;1176:50;;;1222:1;1219;1212:12;1176:50;1245:76;1313:7;1304:6;1293:9;1289:22;1245:76;:::i;:::-;1235:86;;;1340:68;1400:7;1395:2;1384:9;1380:18;1340:68;:::i;:::-;1330:78;;625:789;;;;;;;:::o;1419:220::-;-1:-1:-1;;;;;1600:32:193;;;;1582:51;;1570:2;1555:18;;1419:220::o;2143:347::-;2194:8;2204:6;2258:3;2251:4;2243:6;2239:17;2235:27;2225:55;;2276:1;2273;2266:12;2225:55;-1:-1:-1;2299:20:193;;-1:-1:-1;;;;;2331:30:193;;2328:50;;;2374:1;2371;2364:12;2328:50;2411:4;2403:6;2399:17;2387:29;;2463:3;2456:4;2447:6;2439;2435:19;2431:30;2428:39;2425:59;;;2480:1;2477;2470:12;2425:59;2143:347;;;;;:::o;2495:681::-;2592:6;2600;2608;2616;2624;2677:3;2665:9;2656:7;2652:23;2648:33;2645:53;;;2694:1;2691;2684:12;2645:53;2733:9;2720:23;2752:31;2777:5;2752:31;:::i;:::-;2802:5;-1:-1:-1;2854:2:193;2839:18;;2826:32;;-1:-1:-1;2905:2:193;2890:18;;2877:32;;-1:-1:-1;2960:2:193;2945:18;;2932:32;-1:-1:-1;;;;;2976:30:193;;2973:50;;;3019:1;3016;3009:12;2973:50;3058:58;3108:7;3099:6;3088:9;3084:22;3058:58;:::i;:::-;2495:681;;;;-1:-1:-1;2495:681:193;;-1:-1:-1;3135:8:193;;3032:84;2495:681;-1:-1:-1;;;2495:681:193:o;3181:823::-;3287:6;3295;3303;3311;3319;3327;3380:3;3368:9;3359:7;3355:23;3351:33;3348:53;;;3397:1;3394;3387:12;3348:53;3436:9;3423:23;3455:31;3480:5;3455:31;:::i;:::-;3505:5;-1:-1:-1;3562:2:193;3547:18;;3534:32;3575:33;3534:32;3575:33;:::i;:::-;3627:7;-1:-1:-1;3681:2:193;3666:18;;3653:32;;-1:-1:-1;3732:2:193;3717:18;;3704:32;;-1:-1:-1;3787:3:193;3772:19;;3759:33;-1:-1:-1;;;;;3804:30:193;;3801:50;;;3847:1;3844;3837:12;3801:50;3886:58;3936:7;3927:6;3916:9;3912:22;3886:58;:::i;:::-;3181:823;;;;-1:-1:-1;3181:823:193;;-1:-1:-1;3181:823:193;;3963:8;;3181:823;-1:-1:-1;;;3181:823:193:o;4009:849::-;4169:6;4177;4185;4193;4201;4254:3;4242:9;4233:7;4229:23;4225:33;4222:53;;;4271:1;4268;4261:12;4222:53;4311:9;4298:23;-1:-1:-1;;;;;4336:6:193;4333:30;4330:50;;;4376:1;4373;4366:12;4330:50;4399:72;4463:7;4454:6;4443:9;4439:22;4399:72;:::i;:::-;4389:82;;;4521:2;4510:9;4506:18;4493:32;4534:31;4559:5;4534:31;:::i;:::-;4584:5;-1:-1:-1;4636:2:193;4621:18;;4608:32;;-1:-1:-1;4692:2:193;4677:18;;4664:32;4705:33;4664:32;4705:33;:::i;:::-;4757:7;-1:-1:-1;4783:69:193;4844:7;4838:3;4823:19;;4783:69;:::i;:::-;4773:79;;4009:849;;;;;;;;:::o;4863:160::-;4928:5;4973:2;4964:6;4959:3;4955:16;4951:25;4948:45;;;4989:1;4986;4979:12;5028:1056;5226:6;5234;5242;5250;5258;5311:3;5299:9;5290:7;5286:23;5282:33;5279:53;;;5328:1;5325;5318:12;5279:53;5367:9;5354:23;5386:31;5411:5;5386:31;:::i;:::-;5436:5;-1:-1:-1;5493:2:193;5478:18;;5465:32;5506:33;5465:32;5506:33;:::i;:::-;5558:7;-1:-1:-1;5616:2:193;5601:18;;5588:32;-1:-1:-1;;;;;5669:14:193;;;5666:34;;;5696:1;5693;5686:12;5666:34;5719:76;5787:7;5778:6;5767:9;5763:22;5719:76;:::i;:::-;5709:86;;5848:2;5837:9;5833:18;5820:32;5804:48;;5877:2;5867:8;5864:16;5861:36;;;5893:1;5890;5883:12;5861:36;;5916:74;5982:7;5971:8;5960:9;5956:24;5916:74;:::i;:::-;5906:84;;;6009:69;6070:7;6064:3;6053:9;6049:19;6009:69;:::i;6089:643::-;6199:6;6207;6215;6268:2;6256:9;6247:7;6243:23;6239:32;6236:52;;;6284:1;6281;6274:12;6236:52;6323:9;6310:23;6342:31;6367:5;6342:31;:::i;:::-;6392:5;-1:-1:-1;6449:2:193;6434:18;;6421:32;6462:33;6421:32;6462:33;:::i;:::-;6514:7;-1:-1:-1;6572:2:193;6557:18;;6544:32;-1:-1:-1;;;;;6588:30:193;;6585:50;;;6631:1;6628;6621:12;6585:50;6654:72;6718:7;6709:6;6698:9;6694:22;6654:72;:::i;:::-;6644:82;;;6089:643;;;;;:::o;6737:651::-;6851:6;6859;6867;6920:2;6908:9;6899:7;6895:23;6891:32;6888:52;;;6936:1;6933;6926:12;6888:52;6975:9;6962:23;6994:31;7019:5;6994:31;:::i;:::-;7044:5;-1:-1:-1;7101:2:193;7086:18;;7073:32;7114:33;7073:32;7114:33;:::i;:::-;7166:7;-1:-1:-1;7224:2:193;7209:18;;7196:32;-1:-1:-1;;;;;7240:30:193;;7237:50;;;7283:1;7280;7273:12;7237:50;7306:76;7374:7;7365:6;7354:9;7350:22;7306:76;:::i;8072:569::-;8181:6;8189;8197;8250:2;8238:9;8229:7;8225:23;8221:32;8218:52;;;8266:1;8263;8256:12;8218:52;8306:9;8293:23;-1:-1:-1;;;;;8331:6:193;8328:30;8325:50;;;8371:1;8368;8361:12;8325:50;8394:72;8458:7;8449:6;8438:9;8434:22;8394:72;:::i;:::-;8384:82;;;8513:2;8502:9;8498:18;8485:32;8475:42;;8567:2;8556:9;8552:18;8539:32;8580:31;8605:5;8580:31;:::i;:::-;8630:5;8620:15;;;8072:569;;;;;:::o;8876:367::-;8939:8;8949:6;9003:3;8996:4;8988:6;8984:17;8980:27;8970:55;;9021:1;9018;9011:12;8970:55;-1:-1:-1;9044:20:193;;-1:-1:-1;;;;;9076:30:193;;9073:50;;;9119:1;9116;9109:12;9073:50;9156:4;9148:6;9144:17;9132:29;;9216:3;9209:4;9199:6;9196:1;9192:14;9184:6;9180:27;9176:38;9173:47;9170:67;;;9233:1;9230;9223:12;9248:1096;9414:6;9422;9430;9438;9446;9454;9507:2;9495:9;9486:7;9482:23;9478:32;9475:52;;;9523:1;9520;9513:12;9475:52;9563:9;9550:23;-1:-1:-1;;;;;9633:2:193;9625:6;9622:14;9619:34;;;9649:1;9646;9639:12;9619:34;9688:70;9750:7;9741:6;9730:9;9726:22;9688:70;:::i;:::-;9777:8;;-1:-1:-1;9662:96:193;-1:-1:-1;9865:2:193;9850:18;;9837:32;;-1:-1:-1;9881:16:193;;;9878:36;;;9910:1;9907;9900:12;9878:36;9949:72;10013:7;10002:8;9991:9;9987:24;9949:72;:::i;:::-;10040:8;;-1:-1:-1;9923:98:193;-1:-1:-1;10128:2:193;10113:18;;10100:32;;-1:-1:-1;10144:16:193;;;10141:36;;;10173:1;10170;10163:12;10141:36;;10212:72;10276:7;10265:8;10254:9;10250:24;10212:72;:::i;10577:781::-;10729:6;10737;10745;10753;10806:3;10794:9;10785:7;10781:23;10777:33;10774:53;;;10823:1;10820;10813:12;10774:53;10862:9;10849:23;10881:31;10906:5;10881:31;:::i;:::-;10931:5;-1:-1:-1;10988:2:193;10973:18;;10960:32;11001:33;10960:32;11001:33;:::i;:::-;11053:7;-1:-1:-1;11111:2:193;11096:18;;11083:32;-1:-1:-1;;;;;11127:30:193;;11124:50;;;11170:1;11167;11160:12;11124:50;11193:72;11257:7;11248:6;11237:9;11233:22;11193:72;:::i;11363:533::-;-1:-1:-1;;;;;11683:15:193;;;11665:34;;11735:15;;;11730:2;11715:18;;11708:43;11787:15;;;;11782:2;11767:18;;11760:43;11834:2;11819:18;;11812:34;;;;11877:3;11862:19;;11855:35;;;;11614:3;11599:19;;11363:533::o;11901:127::-;11962:10;11957:3;11953:20;11950:1;11943:31;11993:4;11990:1;11983:15;12017:4;12014:1;12007:15;12033:255;12105:2;12099:9;12147:6;12135:19;;-1:-1:-1;;;;;12169:34:193;;12205:22;;;12166:62;12163:88;;;12231:18;;:::i;:::-;12267:2;12260:22;12033:255;:::o;12293:253::-;12365:2;12359:9;12407:4;12395:17;;-1:-1:-1;;;;;12427:34:193;;12463:22;;;12424:62;12421:88;;;12489:18;;:::i;12551:275::-;12622:2;12616:9;12687:2;12668:13;;-1:-1:-1;;12664:27:193;12652:40;;-1:-1:-1;;;;;12707:34:193;;12743:22;;;12704:62;12701:88;;;12769:18;;:::i;:::-;12805:2;12798:22;12551:275;;-1:-1:-1;12551:275:193:o;12831:111::-;12916:1;12909:5;12906:12;12896:40;;12932:1;12929;12922:12;12947:154;13025:20;;13054:41;13025:20;13054:41;:::i;13106:149::-;13180:20;;13229:1;13219:12;;13209:40;;13245:1;13242;13235:12;13260:530;13302:5;13355:3;13348:4;13340:6;13336:17;13332:27;13322:55;;13373:1;13370;13363:12;13322:55;13409:6;13396:20;-1:-1:-1;;;;;13431:2:193;13428:26;13425:52;;;13457:18;;:::i;:::-;13501:55;13544:2;13525:13;;-1:-1:-1;;13521:27:193;13550:4;13517:38;13501:55;:::i;:::-;13581:2;13572:7;13565:19;13627:3;13620:4;13615:2;13607:6;13603:15;13599:26;13596:35;13593:55;;;13644:1;13641;13634:12;13593:55;13709:2;13702:4;13694:6;13690:17;13683:4;13674:7;13670:18;13657:55;13757:1;13732:16;;;13750:4;13728:27;13721:38;;;;13736:7;13260:530;-1:-1:-1;;;13260:530:193:o;13795:852::-;13852:5;13900:6;13888:9;13883:3;13879:19;13875:32;13872:52;;;13920:1;13917;13910:12;13872:52;13942:22;;:::i;:::-;13933:31;;13987:39;14016:9;13987:39;:::i;:::-;13980:5;13973:54;14059:44;14099:2;14088:9;14084:18;14059:44;:::i;:::-;14054:2;14047:5;14043:14;14036:68;14136:38;14170:2;14159:9;14155:18;14136:38;:::i;:::-;14131:2;14124:5;14120:14;14113:62;14235:2;14224:9;14220:18;14207:32;14202:2;14195:5;14191:14;14184:56;14301:3;14290:9;14286:19;14273:33;14267:3;14260:5;14256:15;14249:58;14340:39;14374:3;14363:9;14359:19;14340:39;:::i;:::-;14334:3;14327:5;14323:15;14316:64;14441:3;14430:9;14426:19;14413:33;14407:3;14400:5;14396:15;14389:58;14498:3;14487:9;14483:19;14470:33;-1:-1:-1;;;;;14518:6:193;14515:30;14512:50;;;14558:1;14555;14548:12;14512:50;14595:45;14636:3;14627:6;14616:9;14612:22;14595:45;:::i;:::-;14589:3;14582:5;14578:15;14571:70;;13795:852;;;;:::o;14652:153::-;14730:20;;14779:1;14769:12;;14759:40;;14795:1;14792;14785:12;14810:183;14870:4;-1:-1:-1;;;;;14895:6:193;14892:30;14889:56;;;14925:18;;:::i;:::-;-1:-1:-1;14970:1:193;14966:14;14982:4;14962:25;;14810:183::o;14998:737::-;15052:5;15105:3;15098:4;15090:6;15086:17;15082:27;15072:55;;15123:1;15120;15113:12;15072:55;15159:6;15146:20;15185:4;15209:60;15225:43;15265:2;15225:43;:::i;:::-;15209:60;:::i;:::-;15303:15;;;15389:1;15385:10;;;;15373:23;;15369:32;;;15334:12;;;;15413:15;;;15410:35;;;15441:1;15438;15431:12;15410:35;15477:2;15469:6;15465:15;15489:217;15505:6;15500:3;15497:15;15489:217;;;15585:3;15572:17;15602:31;15627:5;15602:31;:::i;:::-;15646:18;;15684:12;;;;15522;;15489:217;;;-1:-1:-1;15724:5:193;14998:737;-1:-1:-1;;;;;;14998:737:193:o;15740:662::-;15794:5;15847:3;15840:4;15832:6;15828:17;15824:27;15814:55;;15865:1;15862;15855:12;15814:55;15901:6;15888:20;15927:4;15951:60;15967:43;16007:2;15967:43;:::i;15951:60::-;16045:15;;;16131:1;16127:10;;;;16115:23;;16111:32;;;16076:12;;;;16155:15;;;16152:35;;;16183:1;16180;16173:12;16152:35;16219:2;16211:6;16207:15;16231:142;16247:6;16242:3;16239:15;16231:142;;;16313:17;;16301:30;;16351:12;;;;16264;;16231:142;;16407:1056;16464:5;16512:4;16500:9;16495:3;16491:19;16487:30;16484:50;;;16530:1;16527;16520:12;16484:50;16552:22;;:::i;:::-;16543:31;;16597:39;16626:9;16597:39;:::i;:::-;16590:5;16583:54;16697:2;16686:9;16682:18;16669:32;16664:2;16657:5;16653:14;16646:56;16753:2;16742:9;16738:18;16725:32;-1:-1:-1;;;;;16817:2:193;16809:6;16806:14;16803:34;;;16833:1;16830;16823:12;16803:34;16869:57;16922:3;16913:6;16902:9;16898:22;16869:57;:::i;:::-;16864:2;16857:5;16853:14;16846:81;16980:2;16969:9;16965:18;16952:32;16936:48;;17009:2;16999:8;16996:16;16993:36;;;17025:1;17022;17015:12;16993:36;17061:59;17116:3;17105:8;17094:9;17090:24;17061:59;:::i;:::-;17056:2;17049:5;17045:14;17038:83;17174:3;17163:9;17159:19;17146:33;17130:49;;17204:2;17194:8;17191:16;17188:36;;;17220:1;17217;17210:12;17188:36;;17257:59;17312:3;17301:8;17290:9;17286:24;17257:59;:::i;:::-;17251:3;17244:5;17240:15;17233:84;;17378:3;17367:9;17363:19;17350:33;17344:3;17337:5;17333:15;17326:58;17417:39;17451:3;17440:9;17436:19;17417:39;:::i;:::-;17411:3;17404:5;17400:15;17393:64;16407:1056;;;;:::o;17468:1059::-;17526:5;17574:4;17562:9;17557:3;17553:19;17549:30;17546:50;;;17592:1;17589;17582:12;17546:50;17614:22;;:::i;:::-;17605:31;;17659:29;17678:9;17659:29;:::i;:::-;17652:5;17645:44;17721:38;17755:2;17744:9;17740:18;17721:38;:::i;:::-;17716:2;17709:5;17705:14;17698:62;17792:38;17826:2;17815:9;17811:18;17792:38;:::i;:::-;17787:2;17780:5;17776:14;17769:62;17882:2;17871:9;17867:18;17854:32;-1:-1:-1;;;;;17946:2:193;17938:6;17935:14;17932:34;;;17962:1;17959;17952:12;17932:34;17998:57;18051:3;18042:6;18031:9;18027:22;17998:57;:::i;:::-;17993:2;17986:5;17982:14;17975:81;18109:3;18098:9;18094:19;18081:33;18065:49;;18139:2;18129:8;18126:16;18123:36;;;18155:1;18152;18145:12;18123:36;18192:59;18247:3;18236:8;18225:9;18221:24;18192:59;:::i;:::-;18186:3;18179:5;18175:15;18168:84;18305:3;18294:9;18290:19;18277:33;18261:49;;18335:2;18325:8;18322:16;18319:36;;;18351:1;18348;18341:12;18319:36;;18388:59;18443:3;18432:8;18421:9;18417:24;18388:59;:::i;:::-;18382:3;18375:5;18371:15;18364:84;;18481:39;18515:3;18504:9;18500:19;18481:39;:::i;18532:565::-;18647:6;18655;18663;18716:2;18704:9;18695:7;18691:23;18687:32;18684:52;;;18732:1;18729;18722:12;18684:52;18772:9;18759:23;-1:-1:-1;;;;;18797:6:193;18794:30;18791:50;;;18837:1;18834;18827:12;18791:50;18860:62;18914:7;18905:6;18894:9;18890:22;18860:62;:::i;19391:127::-;19452:10;19447:3;19443:20;19440:1;19433:31;19483:4;19480:1;19473:15;19507:4;19504:1;19497:15;19523:136;19558:3;-1:-1:-1;;;19579:22:193;;19576:48;;19604:18;;:::i;:::-;-1:-1:-1;19644:1:193;19640:13;;19523:136::o;20193:127::-;20254:10;20249:3;20245:20;20242:1;20235:31;20285:4;20282:1;20275:15;20309:4;20306:1;20299:15;20325:117;20410:1;20403:5;20400:12;20390:46;;20416:18;;:::i;20447:139::-;20527:1;20520:5;20517:12;20507:46;;20533:18;;:::i;:::-;20562;;20447:139::o;20591:250::-;20676:1;20686:113;20700:6;20697:1;20694:13;20686:113;;;20776:11;;;20770:18;20757:11;;;20750:39;20722:2;20715:10;20686:113;;;-1:-1:-1;;20833:1:193;20815:16;;20808:27;20591:250::o;20846:270::-;20887:3;20925:5;20919:12;20952:6;20947:3;20940:19;20968:76;21037:6;21030:4;21025:3;21021:14;21014:4;21007:5;21003:16;20968:76;:::i;:::-;21098:2;21077:15;-1:-1:-1;;21073:29:193;21064:39;;;;21105:4;21060:50;;20846:270;-1:-1:-1;;20846:270:193:o;21121:1005::-;21308:2;21297:9;21290:21;21271:4;21336:6;21330:13;21352:38;21387:2;21352:38;:::i;:::-;21426:2;21421;21410:9;21406:18;21399:30;;21476:2;21468:6;21464:15;21458:22;21489:58;21543:2;21532:9;21528:18;21514:12;21489:58;:::i;:::-;;21628:1;21624;21619:3;21615:11;21611:19;21605:2;21597:6;21593:15;21587:22;21583:48;21578:2;21567:9;21563:18;21556:76;21687:2;21679:6;21675:15;21669:22;21663:3;21652:9;21648:19;21641:51;21747:3;21739:6;21735:16;21729:23;21723:3;21712:9;21708:19;21701:52;21802:3;21794:6;21790:16;21784:23;21816:55;21866:3;21855:9;21851:19;21835:14;-1:-1:-1;;;;;1892:31:193;1880:44;;1826:104;21816:55;;21926:3;21918:6;21914:16;21908:23;21902:3;21891:9;21887:19;21880:52;21981:3;21973:6;21969:16;21963:23;22005:6;22047:2;22042;22031:9;22027:18;22020:30;;22067:53;22115:3;22104:9;22100:19;22084:14;22067:53;:::i;22131:184::-;22201:6;22254:2;22242:9;22233:7;22229:23;22225:32;22222:52;;;22270:1;22267;22260:12;22222:52;-1:-1:-1;22293:16:193;;22131:184;-1:-1:-1;22131:184:193:o;22320:128::-;22387:9;;;22408:11;;;22405:37;;;22422:18;;:::i;22453:274::-;-1:-1:-1;;;;;22645:32:193;;;;22627:51;;22709:2;22694:18;;22687:34;22615:2;22600:18;;22453:274::o;22732:118::-;22818:5;22811:13;22804:21;22797:5;22794:32;22784:60;;22840:1;22837;22830:12;22855:245;22922:6;22975:2;22963:9;22954:7;22950:23;22946:32;22943:52;;;22991:1;22988;22981:12;22943:52;23023:9;23017:16;23042:28;23064:5;23042:28;:::i;23105:565::-;23220:6;23228;23236;23289:2;23277:9;23268:7;23264:23;23260:32;23257:52;;;23305:1;23302;23295:12;23257:52;23345:9;23332:23;-1:-1:-1;;;;;23370:6:193;23367:30;23364:50;;;23410:1;23407;23400:12;23364:50;23433:62;23487:7;23478:6;23467:9;23463:22;23433:62;:::i;:::-;23423:72;;;23545:2;23534:9;23530:18;23517:32;23558:31;23583:5;23558:31;:::i;:::-;23105:565;;23608:5;;-1:-1:-1;;;23660:2:193;23645:18;;;;23632:32;;23105:565::o;23675:329::-;23772:4;23830:11;23817:25;23924:3;23920:8;23909;23893:14;23889:29;23885:44;23865:18;23861:69;23851:97;;23944:1;23941;23934:12;23851:97;23965:33;;;;;23675:329;-1:-1:-1;;23675:329:193:o;24009:206::-;24082:6;24135:2;24123:9;24114:7;24110:23;24106:32;24103:52;;;24151:1;24148;24141:12;24103:52;24174:35;24199:9;24174:35;:::i;24220:247::-;24279:6;24332:2;24320:9;24311:7;24307:23;24303:32;24300:52;;;24348:1;24345;24338:12;24300:52;24387:9;24374:23;24406:31;24431:5;24406:31;:::i;24472:156::-;24538:20;;24598:4;24587:16;;24577:27;;24567:55;;24618:1;24615;24608:12;24633:768;24723:6;24776:3;24764:9;24755:7;24751:23;24747:33;24744:53;;;24793:1;24790;24783:12;24744:53;24819:22;;:::i;:::-;24878:9;24865:23;24897:43;24932:7;24897:43;:::i;:::-;24963:7;24956:5;24949:22;;25031:2;25020:9;25016:18;25003:32;24998:2;24991:5;24987:14;24980:56;25096:2;25085:9;25081:18;25068:32;25063:2;25056:5;25052:14;25045:56;25161:2;25150:9;25146:18;25133:32;25128:2;25121:5;25117:14;25110:56;25199:37;25231:3;25220:9;25216:19;25199:37;:::i;:::-;25193:3;25186:5;25182:15;25175:62;25298:3;25287:9;25283:19;25270:33;25264:3;25257:5;25253:15;25246:58;25365:3;25354:9;25350:19;25337:33;25331:3;25324:5;25320:15;25313:58;25390:5;25380:15;;;24633:768;;;;:::o;25406:385::-;-1:-1:-1;;;;;25658:15:193;;;25640:34;;25710:15;;;;25705:2;25690:18;;25683:43;25769:14;;25762:22;25757:2;25742:18;;25735:50;25590:2;25575:18;;25406:385::o;25796:296::-;25866:5;25925:3;25912:17;26011:3;26007:8;25996;25980:14;25976:29;25972:44;25952:18;25948:69;25938:97;;26031:1;26028;26021:12;25938:97;26053:33;;;;25796:296;-1:-1:-1;;25796:296:193:o;26097:500::-;26155:5;26162:6;26222:3;26209:17;26308:2;26304:7;26293:8;26277:14;26273:29;26269:43;26249:18;26245:68;26235:96;;26327:1;26324;26317:12;26235:96;26355:33;;26459:4;26446:18;;;-1:-1:-1;26407:21:193;;-1:-1:-1;;;;;;26476:30:193;;26473:50;;;26519:1;26516;26509:12;26473:50;26566:6;26550:14;26546:27;26539:5;26535:39;26532:59;;;26587:1;26584;26577:12;26602:266;26690:6;26685:3;26678:19;26742:6;26735:5;26728:4;26723:3;26719:14;26706:43;-1:-1:-1;26794:1:193;26769:16;;;26787:4;26765:27;;;26758:38;;;;26850:2;26829:15;;;-1:-1:-1;;26825:29:193;26816:39;;;26812:50;;26602:266::o;26873:1131::-;26935:3;26963:6;27006:5;26993:19;27021:43;27056:7;27021:43;:::i;:::-;27073;27108:7;27073:43;:::i;:::-;27125:20;;27174:42;27210:4;27199:16;;27174:42;:::i;:::-;27225:54;27273:4;27268:3;27264:14;27250:12;27225:54;:::i;:::-;;27327:4;27320:5;27316:16;27303:30;27342:33;27367:7;27342:33;:::i;:::-;-1:-1:-1;;;;;27407:33:193;27400:4;27391:14;;27384:57;27497:4;27486:16;;;27473:30;27457:14;;;27450:54;27560:4;27549:16;;;27536:30;27520:14;;;27513:54;27428:3;27604:16;;27591:30;27630:33;27591:30;27630:33;:::i;:::-;-1:-1:-1;;;;;1892:31:193;27709:4;27700:14;;1880:44;27771:4;27760:16;;;27747:30;27731:14;;;27724:54;27823:55;27872:4;27861:16;;27764:5;27823:55;:::i;:::-;27910:2;27903:4;27898:3;27894:14;27887:26;27929:69;27994:2;27989:3;27985:12;27971;27955:14;27929:69;:::i;28009:296::-;28079:5;28138:3;28125:17;28224:3;28220:8;28209;28193:14;28189:29;28185:44;28165:18;28161:69;28151:97;;28244:1;28241;28234:12;28310:520;28380:5;28387:6;28447:3;28434:17;28533:2;28529:7;28518:8;28502:14;28498:29;28494:43;28474:18;28470:68;28460:96;;28552:1;28549;28542:12;28460:96;28580:33;;28684:4;28671:18;;;-1:-1:-1;28632:21:193;;-1:-1:-1;;;;;;28701:30:193;;28698:50;;;28744:1;28741;28734:12;28698:50;28798:6;28795:1;28791:14;28775;28771:35;28764:5;28760:47;28757:67;;;28820:1;28817;28810:12;28835:311;28923:19;;;28905:3;-1:-1:-1;;;;;28954:31:193;;28951:51;;;28998:1;28995;28988:12;28951:51;29034:6;29031:1;29027:14;29086:8;29079:5;29072:4;29067:3;29063:14;29050:45;29115:18;;;;29135:4;29111:29;;28835:311;-1:-1:-1;;;28835:311:193:o;29151:1678::-;29213:3;29252:4;29247:3;29243:14;29276:35;29305:5;29276:35;:::i;:::-;29330:1;29357:2;29353;29350:10;29340:44;;29364:18;;:::i;:::-;29393:15;;;29427:4;29474:14;;;29461:28;29447:12;;;29440:50;29427:4;29533:67;29594:4;29583:16;;29478:5;29533:67;:::i;:::-;29632:4;29625;29616:14;;29609:28;29672:26;;;;29752:12;29782:1;;29725:3;29716:13;;29792:296;29806:12;29803:1;29800:19;29792:296;;;29890:6;29877:20;29910:33;29935:7;29910:33;:::i;:::-;-1:-1:-1;;;;;29970:33:193;29956:48;;30063:15;;;;29827:10;;;;30026:14;;29792:296;;;30135:67;30196:4;30189:5;30185:16;30178:5;30135:67;:::i;:::-;30097:105;;;;30245:3;30238:5;30234:15;30227:4;30222:3;30218:14;30211:39;30273:76;30343:5;30327:14;30311;30273:76;:::i;:::-;30259:90;;;;;;;30396:67;30457:4;30450:5;30446:16;30439:5;30396:67;:::i;:::-;30507:3;30499:6;30495:16;30488:4;30483:3;30479:14;30472:40;30535:77;30605:6;30589:14;30573;30535:77;:::i;:::-;30521:91;;;;30668:4;30661:5;30657:16;30644:30;30637:4;30632:3;30628:14;30621:54;30706:36;30736:4;30729:5;30725:16;30706:36;:::i;:::-;-1:-1:-1;;;;;1892:31:193;;30795:4;30786:14;;1880:44;-1:-1:-1;30817:6:193;29151:1678;-1:-1:-1;;;29151:1678:193:o;30834:1356::-;30897:3;30943:5;30930:19;30958:33;30983:7;30958:33;:::i;:::-;-1:-1:-1;;;;;31050:16:193;;;31038:29;;31115:4;31104:16;;31091:30;;31130:33;31091:30;31130:33;:::i;:::-;31195:16;;;31188:4;31179:14;;31172:40;31260:4;31249:16;;31236:30;;31275:33;31236:30;31275:33;:::i;:::-;31340:16;31333:4;31324:14;;31317:40;31386:67;31447:4;31436:16;;31440:5;31386:67;:::i;:::-;31485:4;31478;31473:3;31469:14;31462:28;31511:67;31572:4;31567:3;31563:14;31549:12;31511:67;:::i;:::-;31499:79;;31609:67;31670:4;31663:5;31659:16;31652:5;31609:67;:::i;:::-;31718:3;31712:4;31708:14;31701:4;31696:3;31692:14;31685:38;31746:59;31800:4;31784:14;31746:59;:::i;:::-;31732:73;;;31836:67;31897:4;31890:5;31886:16;31879:5;31836:67;:::i;:::-;31947:3;31939:6;31935:16;31928:4;31923:3;31919:14;31912:40;31975:61;32029:6;32013:14;31975:61;:::i;:::-;31961:75;;;32067:36;32097:4;32090:5;32086:16;32067:36;:::i;32195:451::-;32442:2;32431:9;32424:21;32405:4;32462:66;32524:2;32513:9;32509:18;32501:6;32462:66;:::i;:::-;-1:-1:-1;;;;;32564:32:193;;;;32559:2;32544:18;;32537:60;-1:-1:-1;32628:2:193;32613:18;32606:34;32454:74;32195:451;-1:-1:-1;32195:451:193:o;32651:519::-;-1:-1:-1;;;;;32951:15:193;;;32933:34;;33003:15;;32998:2;32983:18;;32976:43;33050:2;33035:18;;33028:34;;;33098:3;33093:2;33078:18;;33071:31;;;32876:4;;33119:45;;33144:19;;33136:6;33119:45;:::i;33713:451::-;33960:2;33949:9;33942:21;33923:4;33980:66;34042:2;34031:9;34027:18;34019:6;33980:66;:::i;:::-;34077:2;34062:18;;34055:34;;;;-1:-1:-1;;;;;;34125:32:193;;;;34120:2;34105:18;;;34098:60;33972:74;33713:451;-1:-1:-1;33713:451:193:o;34169:415::-;34431:1;34427;34422:3;34418:11;34414:19;34406:6;34402:32;34391:9;34384:51;34471:6;34466:2;34455:9;34451:18;34444:34;34514:2;34509;34498:9;34494:18;34487:30;34365:4;34534:44;34574:2;34563:9;34559:18;34551:6;34534:44;:::i;34589:127::-;34650:10;34645:3;34641:20;34638:1;34631:31;34681:4;34678:1;34671:15;34705:4;34702:1;34695:15;34721:241;34777:6;34830:2;34818:9;34809:7;34805:23;34801:32;34798:52;;;34846:1;34843;34836:12;34798:52;34885:9;34872:23;34904:28;34926:5;34904:28;:::i;34967:521::-;35044:4;35050:6;35110:11;35097:25;35204:2;35200:7;35189:8;35173:14;35169:29;35165:43;35145:18;35141:68;35131:96;;35223:1;35220;35213:12;35131:96;35250:33;;35302:20;;;-1:-1:-1;;;;;;35334:30:193;;35331:50;;;35377:1;35374;35367:12;35331:50;35410:4;35398:17;;-1:-1:-1;35441:14:193;35437:27;;;35427:38;;35424:58;;;35478:1;35475;35468:12;35493:271;35676:6;35668;35663:3;35650:33;35632:3;35702:16;;35727:13;;;35702:16;35493:271;-1:-1:-1;35493:271:193:o;35769:410::-;35856:6;35864;35872;35925:2;35913:9;35904:7;35900:23;35896:32;35893:52;;;35941:1;35938;35931:12;35893:52;35973:9;35967:16;-1:-1:-1;;;;;36016:5:193;36012:30;36005:5;36002:41;35992:69;;36057:1;36054;36047:12;35992:69;36125:2;36110:18;;36104:25;36169:2;36154:18;;;36148:25;36080:5;;36104:25;;-1:-1:-1;36148:25:193;35769:410;-1:-1:-1;;;35769:410:193:o;36184:287::-;36313:3;36351:6;36345:13;36367:66;36426:6;36421:3;36414:4;36406:6;36402:17;36367:66;:::i;36476:125::-;36541:9;;;36562:10;;;36559:36;;;36575:18;;:::i;37129:830::-;37483:4;37512:3;37524:60;37574:9;37565:6;37559:13;37027:12;;-1:-1:-1;;;;;37023:38:193;37011:51;;37111:4;37100:16;;;37094:23;37078:14;;37071:47;36941:183;37524:60;37640:4;37632:6;37628:17;37622:24;37615:4;37604:9;37600:20;37593:54;37703:4;37695:6;37691:17;37685:24;37678:4;37667:9;37663:20;37656:54;37719:63;37777:3;37766:9;37762:19;37754:6;37027:12;;-1:-1:-1;;;;;37023:38:193;37011:51;;37111:4;37100:16;;;37094:23;37078:14;;37071:47;36941:183;37719:63;-1:-1:-1;;;;;37819:32:193;;37813:3;37798:19;;37791:61;37883:3;37868:19;;37861:31;;;37909:44;37934:18;;;37926:6;37909:44;:::i;37964:280::-;38153:2;38142:9;38135:21;38116:4;38173:65;38234:2;38223:9;38219:18;38211:6;38173:65;:::i;38249:1094::-;-1:-1:-1;;;;;38580:32:193;;38562:51;;38521:4;38550:3;38635:20;;38664:41;38635:20;38664:41;:::i;:::-;38714;38749:5;38714:41;:::i;:::-;38791:5;38786:2;38775:9;38771:18;38764:33;;38858:2;38850:6;38846:15;38833:29;38828:2;38817:9;38813:18;38806:57;38924:2;38916:6;38912:15;38899:29;38894:2;38883:9;38879:18;38872:57;38991:2;38983:6;38979:15;38966:29;38960:3;38949:9;38945:19;38938:58;39073:4;39037:34;39066:3;39058:6;39054:16;39037:34;:::i;:::-;39033:45;39027:3;39016:9;39012:19;39005:74;39141:3;39133:6;39129:16;39116:30;39110:3;39099:9;39095:19;39088:59;39209:3;39201:6;39197:16;39184:30;39178:3;39167:9;39163:19;39156:59;39252:2;39246:3;39235:9;39231:19;39224:31;39272:65;39333:2;39322:9;39318:18;39310:6;39272:65;:::i;39348:267::-;39434:6;39487:2;39475:9;39466:7;39462:23;39458:32;39455:52;;;39503:1;39500;39493:12;39455:52;39535:9;39529:16;39554:31;39579:5;39554:31;:::i;42549:219::-;42698:2;42687:9;42680:21;42661:4;42718:44;42758:2;42747:9;42743:18;42735:6;42718:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "51818": [
        {
          "start": 728,
          "length": 32
        },
        {
          "start": 1314,
          "length": 32
        },
        {
          "start": 1593,
          "length": 32
        },
        {
          "start": 5270,
          "length": 32
        },
        {
          "start": 5540,
          "length": 32
        },
        {
          "start": 7266,
          "length": 32
        },
        {
          "start": 7519,
          "length": 32
        },
        {
          "start": 9043,
          "length": 32
        },
        {
          "start": 9401,
          "length": 32
        },
        {
          "start": 9689,
          "length": 32
        }
      ],
      "51822": [
        {
          "start": 825,
          "length": 32
        },
        {
          "start": 1155,
          "length": 32
        },
        {
          "start": 2379,
          "length": 32
        },
        {
          "start": 3057,
          "length": 32
        },
        {
          "start": 4133,
          "length": 32
        },
        {
          "start": 6301,
          "length": 32
        }
      ],
      "51826": [
        {
          "start": 767,
          "length": 32
        },
        {
          "start": 1895,
          "length": 32
        },
        {
          "start": 3004,
          "length": 32
        },
        {
          "start": 3356,
          "length": 32
        },
        {
          "start": 4209,
          "length": 32
        },
        {
          "start": 9839,
          "length": 32
        },
        {
          "start": 10561,
          "length": 32
        },
        {
          "start": 10651,
          "length": 32
        }
      ],
      "51830": [
        {
          "start": 342,
          "length": 32
        },
        {
          "start": 1940,
          "length": 32
        },
        {
          "start": 2080,
          "length": 32
        },
        {
          "start": 2870,
          "length": 32
        },
        {
          "start": 9090,
          "length": 32
        },
        {
          "start": 9241,
          "length": 32
        },
        {
          "start": 9450,
          "length": 32
        },
        {
          "start": 9562,
          "length": 32
        },
        {
          "start": 9738,
          "length": 32
        },
        {
          "start": 10696,
          "length": 32
        },
        {
          "start": 10829,
          "length": 32
        }
      ],
      "51833": [
        {
          "start": 592,
          "length": 32
        },
        {
          "start": 946,
          "length": 32
        },
        {
          "start": 3226,
          "length": 32
        },
        {
          "start": 3446,
          "length": 32
        },
        {
          "start": 3725,
          "length": 32
        },
        {
          "start": 3866,
          "length": 32
        },
        {
          "start": 3915,
          "length": 32
        },
        {
          "start": 4012,
          "length": 32
        },
        {
          "start": 4176,
          "length": 32
        },
        {
          "start": 4437,
          "length": 32
        },
        {
          "start": 4510,
          "length": 32
        },
        {
          "start": 4750,
          "length": 32
        },
        {
          "start": 4965,
          "length": 32
        },
        {
          "start": 5172,
          "length": 32
        },
        {
          "start": 5678,
          "length": 32
        },
        {
          "start": 5808,
          "length": 32
        },
        {
          "start": 6180,
          "length": 32
        },
        {
          "start": 6344,
          "length": 32
        },
        {
          "start": 6571,
          "length": 32
        },
        {
          "start": 6690,
          "length": 32
        },
        {
          "start": 7168,
          "length": 32
        }
      ],
      "51837": [
        {
          "start": 689,
          "length": 32
        },
        {
          "start": 1708,
          "length": 32
        },
        {
          "start": 2220,
          "length": 32
        },
        {
          "start": 2495,
          "length": 32
        },
        {
          "start": 2588,
          "length": 32
        },
        {
          "start": 9949,
          "length": 32
        },
        {
          "start": 10105,
          "length": 32
        },
        {
          "start": 10932,
          "length": 32
        }
      ],
      "51841": [
        {
          "start": 883,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CALLBACK_SUCCESS()": "8237e538",
    "CALLBACK_SUCCESS_CREDIT()": "0f13be2a",
    "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "56415a90",
    "cdm()": "e2dfb317",
    "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),uint256,address)": "ee18c320",
    "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "0567d4b1",
    "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "4ad4d4ad",
    "flashlender()": "ee58918a",
    "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "24ac0df5",
    "joinAction()": "f8e63c52",
    "minter()": "07546172",
    "multisend(address[],bytes[],bool[])": "f38584e0",
    "onCreditFlashLoan(address,uint256,uint256,bytes)": "16d8f165",
    "onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b",
    "permit2()": "12261ee7",
    "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "faa99405",
    "self()": "7104ddb2",
    "stablecoin()": "e9cbd822",
    "swapAction()": "a888828b",
    "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "6c747057",
    "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "96c2c408"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flashlender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapAction_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"joinAction_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Action__revertBytes_emptyRevertBytes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toInt256_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__borrow_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidResidualRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__delegateViaStablecoin_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__deposit_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onCreditFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__repay_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS_CREDIT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cdm\",\"outputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum JoinProtocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"assetsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct JoinParams\",\"name\":\"auxJoin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"auxJoinToken\",\"type\":\"address\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"subCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"residualRecipient\",\"type\":\"address\"}],\"name\":\"decreaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"depositAndBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashlender\",\"outputs\":[{\"internalType\":\"contract IFlashlender\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum JoinProtocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"assetsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct JoinParams\",\"name\":\"auxJoin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"auxJoinToken\",\"type\":\"address\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"upFrontToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"upFrontAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"increaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joinAction\",\"outputs\":[{\"internalType\":\"contract JoinAction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"contract IMinter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"bool[]\",\"name\":\"delegateCall\",\"type\":\"bool[]\"}],\"name\":\"multisend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onCreditFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"self\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IStablecoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAction\",\"outputs\":[{\"internalType\":\"contract SwapAction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"withdrawAndRepay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"creditParams\":\"The borrow parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),uint256,address)\":{\"params\":{\"leverParams\":\"The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan\",\"residualRecipient\":\"Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to\",\"subCollateral\":\"The amount of collateral to withdraw from the position [wad]\"}},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralizer\":\"The address to transfer `upFrontToken` from\",\"leverParams\":\"The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token\",\"permitParams\":\"The permit parameters for the `collateralizer` to transfer `upFrontToken`\",\"upFrontAmount\":\"The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]\",\"upFrontToken\":\"The token to transfer up front to the LeverAction contract\"}},\"multisend(address[],bytes[],bool[])\":{\"params\":{\"data\":\"The encoded data to call each address with\",\"delegateCall\":\"Whether or not to use delegatecall or call\",\"targets\":\"The addresses to call\"}},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the credit flash loan\"}},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the flash loan\"}},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}}},\"title\":\"PositionAction20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)\"},\"cdm()\":{\"notice\":\"The CDM contract\"},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),uint256,address)\":{\"notice\":\"Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral\"},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral to a CDP Vault\"},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral and debt to a CDP Vault\"},\"flashlender()\":{\"notice\":\"The flashloan contract\"},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Increase the leverage of a position by taking out a flash loan and buying Stablecoin\"},\"joinAction()\":{\"notice\":\"The JoinAction contract\"},\"minter()\":{\"notice\":\"Stablecoin mint\"},\"multisend(address[],bytes[],bool[])\":{\"notice\":\"Allows for multiple calls to be made to cover use cases not covered by the other functions\"},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the credit flash loan taken out in decreaseLever\"},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the flash loan taken out in increaseLever\"},\"permit2()\":{\"notice\":\"Permit2\"},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)\"},\"self()\":{\"notice\":\"The address of this contract\"},\"stablecoin()\":{\"notice\":\"Stablecoin token\"},\"swapAction()\":{\"notice\":\"The SwapAction contract\"},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Removes collateral from a CDP Vault\"},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Removes collateral and debt from a CDP Vault\"}},\"notice\":\"ERC20 implementation of PositionAction base contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxy/PositionAction20.sol\":\"PositionAction20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d\",\"dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"src/CDM.sol\":{\"keccak256\":\"0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99\",\"dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L\"]},\"src/CDPVault.sol\":{\"keccak256\":\"0xf2f5dbf0b94224a4aed520fb1d1b09b377470827c6da8dba1760ac0ea4efa0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e97a36351d85c0c1c4ac44ec99e16b8b15e548db6272a1ef0ef1256800c38009\",\"dweb:/ipfs/QmNnxqR2xse22M741qAeXBDcsQkLbC5MzhmieLsan3Ehz5\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e\",\"dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT\"]},\"src/interfaces/IBuffer.sol\":{\"keccak256\":\"0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff\",\"dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/ICDPVault.sol\":{\"keccak256\":\"0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f\",\"dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE\"]},\"src/interfaces/ICDPVault_FactoryBase.sol\":{\"keccak256\":\"0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e\",\"dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD\"]},\"src/interfaces/IFlashlender.sol\":{\"keccak256\":\"0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2\",\"dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3\"]},\"src/interfaces/IInterestRateModel.sol\":{\"keccak256\":\"0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599\",\"dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA\"]},\"src/interfaces/IMinter.sol\":{\"keccak256\":\"0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54\",\"dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x23103163e03628c0e8291b368b27cf831c3e55ebe544745b833b6df9a9acada2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58cc66f58fca72fd73c240dca9501165e083d248ff085ee4dc6a7719c224926c\",\"dweb:/ipfs/QmWqhtXoXTfYTkAao3a3F34XVjFsyxVqPCf2StG6udS617\"]},\"src/interfaces/IPause.sol\":{\"keccak256\":\"0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec\",\"dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]},\"src/interfaces/IStablecoin.sol\":{\"keccak256\":\"0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461\",\"dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS\"]},\"src/proxy/BaseAction.sol\":{\"keccak256\":\"0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24\",\"dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR\"]},\"src/proxy/JoinAction.sol\":{\"keccak256\":\"0x8dc50914a95520b3bd9129ca1cb667715b7782128b7af245e52b7e80d6db0ee9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36eeaeb112521827df81950492ed891d5355277521a82dcb13cfad64e2895739\",\"dweb:/ipfs/QmZBViHYg4uXwYAxHiUHMLc3qp1vca3BUrwihGNGfjjV6i\"]},\"src/proxy/PositionAction.sol\":{\"keccak256\":\"0x3e91423182242e7ccbae872b1bd289f032ab4c89544425a0a65876a63e63c5f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2465546c51536a1d8193adfcfac59ea933cc3988df7da010705a73de5be2fb3b\",\"dweb:/ipfs/Qma43SD6BRB2VpE6EH9W4P3gMmWZNueWENrQhJQJrFURaX\"]},\"src/proxy/PositionAction20.sol\":{\"keccak256\":\"0x79458c48176f4bc1e4516b34f384453ffd3e355e5a637285387573bf3f672e20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeb0054d2f406a05aeeaed6300c97371758251fbab95e45faf541f0e584ecd31\",\"dweb:/ipfs/QmZ5zHFyzurvQLkaiSWWN3teCe7GPtCPYMwfx7fcrTKR7d\"]},\"src/proxy/SwapAction.sol\":{\"keccak256\":\"0xf3c446b763969f9cbe0cdbbba16140176bf75ada29da89dfb24d32dbe744ddce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84a857e66ba74ead46269034e1ce8c7320f500550240197c18c7415f15af3ce8\",\"dweb:/ipfs/QmYFoDhtFfxDKuSmCbrxqyZNkMGjLdG5ZPZJc7UEhzfJKT\"]},\"src/proxy/TransferAction.sol\":{\"keccak256\":\"0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756\",\"dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt\"]},\"src/utils/DoubleLinkedList.sol\":{\"keccak256\":\"0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb\",\"dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/utils/Pause.sol\":{\"keccak256\":\"0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1\",\"dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL\"]},\"src/utils/Permission.sol\":{\"keccak256\":\"0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb\",\"dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p\"]},\"src/vendor/IBalancerVault.sol\":{\"keccak256\":\"0xc4d7312f444bd3990ca3180052b6c01c5d10b817d6452df2f6de5da270ed6179\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://65faf1ee901a992c98e2f60e8f06ee26ed77ca54e71acd86d93334c7904131c1\",\"dweb:/ipfs/Qmf6iS7TNfRy9P392yTQTHHkk7ybJc9CCRabsTYzHaDAFr\"]},\"src/vendor/IUniswapV3Router.sol\":{\"keccak256\":\"0x5ab23c0c3f5571e77353ebf1b7d4dec9103504b728faa7530e04b84e5d233c03\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9a95e0a55b44b18deab9989f7bf4afed71d22d51dd96c42eeb1552a30d252de4\",\"dweb:/ipfs/QmSyZhFhvegYMncZSc18m8skqhzXiMisgg1K2K9V1t796Z\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flashlender_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "swapAction_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "joinAction_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Action__revertBytes_emptyRevertBytes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toInt256_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__borrow_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidResidualRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__deposit_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onCreditFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onlyDelegatecall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__repay_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS_CREDIT",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cdm",
          "outputs": [
            {
              "internalType": "contract ICDM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct JoinParams",
                  "name": "auxJoin",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum JoinProtocol",
                      "name": "protocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address[]",
                      "name": "assets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "assetsIn",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "maxAmountsIn",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minOut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "auxJoinToken",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "subCollateral",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "residualRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseLever"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndBorrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flashlender",
          "outputs": [
            {
              "internalType": "contract IFlashlender",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct JoinParams",
                  "name": "auxJoin",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum JoinProtocol",
                      "name": "protocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address[]",
                      "name": "assets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "assetsIn",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "maxAmountsIn",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minOut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "auxJoinToken",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "upFrontToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "upFrontAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseLever"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "joinAction",
          "outputs": [
            {
              "internalType": "contract JoinAction",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "contract IMinter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            },
            {
              "internalType": "bool[]",
              "name": "delegateCall",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multisend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCreditFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permit2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "self",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stablecoin",
          "outputs": [
            {
              "internalType": "contract IStablecoin",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapAction",
          "outputs": [
            {
              "internalType": "contract SwapAction",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAndRepay"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "creditParams": "The borrow parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),uint256,address)": {
            "params": {
              "leverParams": "The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan",
              "residualRecipient": "Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to",
              "subCollateral": "The amount of collateral to withdraw from the position [wad]"
            }
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralizer": "The address to transfer `upFrontToken` from",
              "leverParams": "The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token",
              "permitParams": "The permit parameters for the `collateralizer` to transfer `upFrontToken`",
              "upFrontAmount": "The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]",
              "upFrontToken": "The token to transfer up front to the LeverAction contract"
            }
          },
          "multisend(address[],bytes[],bool[])": {
            "params": {
              "data": "The encoded data to call each address with",
              "delegateCall": "Whether or not to use delegatecall or call",
              "targets": "The addresses to call"
            }
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the credit flash loan"
            }
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the flash loan"
            }
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)"
          },
          "cdm()": {
            "notice": "The CDM contract"
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),uint256,address)": {
            "notice": "Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral"
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral to a CDP Vault"
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral and debt to a CDP Vault"
          },
          "flashlender()": {
            "notice": "The flashloan contract"
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,bytes32,address[],uint256[],uint256[],uint256,address),address),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Increase the leverage of a position by taking out a flash loan and buying Stablecoin"
          },
          "joinAction()": {
            "notice": "The JoinAction contract"
          },
          "minter()": {
            "notice": "Stablecoin mint"
          },
          "multisend(address[],bytes[],bool[])": {
            "notice": "Allows for multiple calls to be made to cover use cases not covered by the other functions"
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "notice": "Callback function for the credit flash loan taken out in decreaseLever"
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "notice": "Callback function for the flash loan taken out in increaseLever"
          },
          "permit2()": {
            "notice": "Permit2"
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)"
          },
          "self()": {
            "notice": "The address of this contract"
          },
          "stablecoin()": {
            "notice": "Stablecoin token"
          },
          "swapAction()": {
            "notice": "The SwapAction contract"
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Removes collateral from a CDP Vault"
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Removes collateral and debt from a CDP Vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/proxy/PositionAction20.sol": "PositionAction20"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319",
        "urls": [
          "bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d",
          "dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "src/CDM.sol": {
        "keccak256": "0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5",
        "urls": [
          "bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99",
          "dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L"
        ],
        "license": "MIT"
      },
      "src/CDPVault.sol": {
        "keccak256": "0xf2f5dbf0b94224a4aed520fb1d1b09b377470827c6da8dba1760ac0ea4efa0b4",
        "urls": [
          "bzz-raw://e97a36351d85c0c1c4ac44ec99e16b8b15e548db6272a1ef0ef1256800c38009",
          "dweb:/ipfs/QmNnxqR2xse22M741qAeXBDcsQkLbC5MzhmieLsan3Ehz5"
        ],
        "license": "MIT"
      },
      "src/InterestRateModel.sol": {
        "keccak256": "0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb",
        "urls": [
          "bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e",
          "dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBuffer.sol": {
        "keccak256": "0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f",
        "urls": [
          "bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff",
          "dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault.sol": {
        "keccak256": "0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d",
        "urls": [
          "bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f",
          "dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_FactoryBase.sol": {
        "keccak256": "0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717",
        "urls": [
          "bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e",
          "dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFlashlender.sol": {
        "keccak256": "0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d",
        "urls": [
          "bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2",
          "dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IInterestRateModel.sol": {
        "keccak256": "0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055",
        "urls": [
          "bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599",
          "dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IMinter.sol": {
        "keccak256": "0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3",
        "urls": [
          "bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54",
          "dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x23103163e03628c0e8291b368b27cf831c3e55ebe544745b833b6df9a9acada2",
        "urls": [
          "bzz-raw://58cc66f58fca72fd73c240dca9501165e083d248ff085ee4dc6a7719c224926c",
          "dweb:/ipfs/QmWqhtXoXTfYTkAao3a3F34XVjFsyxVqPCf2StG6udS617"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPause.sol": {
        "keccak256": "0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d",
        "urls": [
          "bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec",
          "dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IStablecoin.sol": {
        "keccak256": "0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239",
        "urls": [
          "bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461",
          "dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/proxy/BaseAction.sol": {
        "keccak256": "0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab",
        "urls": [
          "bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24",
          "dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR"
        ],
        "license": "MIT"
      },
      "src/proxy/JoinAction.sol": {
        "keccak256": "0x8dc50914a95520b3bd9129ca1cb667715b7782128b7af245e52b7e80d6db0ee9",
        "urls": [
          "bzz-raw://36eeaeb112521827df81950492ed891d5355277521a82dcb13cfad64e2895739",
          "dweb:/ipfs/QmZBViHYg4uXwYAxHiUHMLc3qp1vca3BUrwihGNGfjjV6i"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction.sol": {
        "keccak256": "0x3e91423182242e7ccbae872b1bd289f032ab4c89544425a0a65876a63e63c5f9",
        "urls": [
          "bzz-raw://2465546c51536a1d8193adfcfac59ea933cc3988df7da010705a73de5be2fb3b",
          "dweb:/ipfs/Qma43SD6BRB2VpE6EH9W4P3gMmWZNueWENrQhJQJrFURaX"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction20.sol": {
        "keccak256": "0x79458c48176f4bc1e4516b34f384453ffd3e355e5a637285387573bf3f672e20",
        "urls": [
          "bzz-raw://eeb0054d2f406a05aeeaed6300c97371758251fbab95e45faf541f0e584ecd31",
          "dweb:/ipfs/QmZ5zHFyzurvQLkaiSWWN3teCe7GPtCPYMwfx7fcrTKR7d"
        ],
        "license": "MIT"
      },
      "src/proxy/SwapAction.sol": {
        "keccak256": "0xf3c446b763969f9cbe0cdbbba16140176bf75ada29da89dfb24d32dbe744ddce",
        "urls": [
          "bzz-raw://84a857e66ba74ead46269034e1ce8c7320f500550240197c18c7415f15af3ce8",
          "dweb:/ipfs/QmYFoDhtFfxDKuSmCbrxqyZNkMGjLdG5ZPZJc7UEhzfJKT"
        ],
        "license": "MIT"
      },
      "src/proxy/TransferAction.sol": {
        "keccak256": "0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e",
        "urls": [
          "bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756",
          "dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt"
        ],
        "license": "MIT"
      },
      "src/utils/DoubleLinkedList.sol": {
        "keccak256": "0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691",
        "urls": [
          "bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb",
          "dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/utils/Pause.sol": {
        "keccak256": "0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19",
        "urls": [
          "bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1",
          "dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL"
        ],
        "license": "MIT"
      },
      "src/utils/Permission.sol": {
        "keccak256": "0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1",
        "urls": [
          "bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb",
          "dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p"
        ],
        "license": "MIT"
      },
      "src/vendor/IBalancerVault.sol": {
        "keccak256": "0xc4d7312f444bd3990ca3180052b6c01c5d10b817d6452df2f6de5da270ed6179",
        "urls": [
          "bzz-raw://65faf1ee901a992c98e2f60e8f06ee26ed77ca54e71acd86d93334c7904131c1",
          "dweb:/ipfs/Qmf6iS7TNfRy9P392yTQTHHkk7ybJc9CCRabsTYzHaDAFr"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/vendor/IUniswapV3Router.sol": {
        "keccak256": "0x5ab23c0c3f5571e77353ebf1b7d4dec9103504b728faa7530e04b84e5d233c03",
        "urls": [
          "bzz-raw://9a95e0a55b44b18deab9989f7bf4afed71d22d51dd96c42eeb1552a30d252de4",
          "dweb:/ipfs/QmSyZhFhvegYMncZSc18m8skqhzXiMisgg1K2K9V1t796Z"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/proxy/PositionAction20.sol",
    "id": 53721,
    "exportedSymbols": {
      "ICDPVault": [
        49449
      ],
      "IERC20": [
        34464
      ],
      "LeverParams": [
        51791
      ],
      "PositionAction": [
        53549
      ],
      "PositionAction20": [
        53720
      ],
      "SafeERC20": [
        35920
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3664:124",
    "nodes": [
      {
        "id": 53551,
        "nodeType": "PragmaDirective",
        "src": "32:24:124",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 53553,
        "nodeType": "ImportDirective",
        "src": "58:69:124",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53721,
        "sourceUnit": 34465,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53552,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34464,
              "src": "66:6:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53555,
        "nodeType": "ImportDirective",
        "src": "128:81:124",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53721,
        "sourceUnit": 35921,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53554,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35920,
              "src": "136:9:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53557,
        "nodeType": "ImportDirective",
        "src": "211:54:124",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDPVault.sol",
        "file": "../interfaces/ICDPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53721,
        "sourceUnit": 49450,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53556,
              "name": "ICDPVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49449,
              "src": "219:9:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53560,
        "nodeType": "ImportDirective",
        "src": "267:65:124",
        "nodes": [],
        "absolutePath": "src/proxy/PositionAction.sol",
        "file": "./PositionAction.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53721,
        "sourceUnit": 53550,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53558,
              "name": "PositionAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53549,
              "src": "275:14:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53559,
              "name": "LeverParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51791,
              "src": "291:11:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53720,
        "nodeType": "ContractDefinition",
        "src": "427:3268:124",
        "nodes": [
          {
            "id": 53567,
            "nodeType": "UsingForDirective",
            "src": "658:27:124",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53564,
              "name": "SafeERC20",
              "nameLocations": [
                "664:9:124"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35920,
              "src": "664:9:124"
            },
            "typeName": {
              "id": 53566,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53565,
                "name": "IERC20",
                "nameLocations": [
                  "678:6:124"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34464,
                "src": "678:6:124"
              },
              "referencedDeclaration": 34464,
              "src": "678:6:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$34464",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 53582,
            "nodeType": "FunctionDefinition",
            "src": "874:134:124",
            "nodes": [],
            "body": {
              "id": 53581,
              "nodeType": "Block",
              "src": "1006:2:124",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 53576,
                    "name": "flashlender_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53569,
                    "src": "966:12:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 53577,
                    "name": "swapAction_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53571,
                    "src": "980:11:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 53578,
                    "name": "joinAction_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53573,
                    "src": "993:11:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 53579,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 53575,
                  "name": "PositionAction",
                  "nameLocations": [
                    "951:14:124"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53549,
                  "src": "951:14:124"
                },
                "nodeType": "ModifierInvocation",
                "src": "951:54:124"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53569,
                  "mutability": "mutable",
                  "name": "flashlender_",
                  "nameLocation": "894:12:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53582,
                  "src": "886:20:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53571,
                  "mutability": "mutable",
                  "name": "swapAction_",
                  "nameLocation": "916:11:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53582,
                  "src": "908:19:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53573,
                  "mutability": "mutable",
                  "name": "joinAction_",
                  "nameLocation": "937:11:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53582,
                  "src": "929:19:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "885:65:124"
            },
            "returnParameters": {
              "id": 53580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1006:0:124"
            },
            "scope": 53720,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53626,
            "nodeType": "FunctionDefinition",
            "src": "1424:305:124",
            "nodes": [],
            "body": {
              "id": 53625,
              "nodeType": "Block",
              "src": "1528:201:124",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53596,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "1546:15:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 53625,
                      "src": "1538:23:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53595,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1538:7:124",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53605,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 53600,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53585,
                                "src": "1582:5:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 53599,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49449,
                              "src": "1572:9:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 53601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1572:16:124",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$49449",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 53602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1589:5:124",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49270,
                          "src": "1572:22:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 53603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1572:24:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 53598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1564:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 53597,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1564:7:124",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 53604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1564:33:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1538:59:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53610,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53585,
                        "src": "1644:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53611,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53589,
                        "src": "1651:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53607,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53596,
                            "src": "1614:15:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53606,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "1607:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 53608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1607:23:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 53609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1631:12:124",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "1607:36:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 53612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1607:51:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53613,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:51:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53620,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1708:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction20_$53720",
                              "typeString": "contract PositionAction20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction20_$53720",
                              "typeString": "contract PositionAction20"
                            }
                          ],
                          "id": 53619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1700:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53618,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1700:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1700:13:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53622,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53589,
                        "src": "1715:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53615,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53585,
                            "src": "1685:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53614,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "1675:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1675:16:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1692:7:124",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49343,
                      "src": "1675:24:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:47:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53594,
                  "id": 53624,
                  "nodeType": "Return",
                  "src": "1668:54:124"
                }
              ]
            },
            "baseFunctions": [
              51962
            ],
            "documentation": {
              "id": 53583,
              "nodeType": "StructuredDocumentation",
              "src": "1201:218:124",
              "text": "@notice Deposit collateral into the vault\n @param vault Address of the vault\n @param amount Amount of collateral to deposit [CDPVault.tokenScale()]\n @return Amount of collateral deposited [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDeposit",
            "nameLocation": "1433:10:124",
            "overrides": {
              "id": 53591,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1501:8:124"
            },
            "parameters": {
              "id": 53590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53585,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1452:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53626,
                  "src": "1444:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53587,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53626,
                  "src": "1459:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53589,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1484:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53626,
                  "src": "1476:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1443:48:124"
            },
            "returnParameters": {
              "id": 53594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53593,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53626,
                  "src": "1519:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1519:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1518:9:124"
            },
            "scope": 53720,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53651,
            "nodeType": "FunctionDefinition",
            "src": "1960:177:124",
            "nodes": [],
            "body": {
              "id": 53650,
              "nodeType": "Block",
              "src": "2065:72:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53645,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2116:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction20_$53720",
                              "typeString": "contract PositionAction20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction20_$53720",
                              "typeString": "contract PositionAction20"
                            }
                          ],
                          "id": 53644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2108:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53643,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2108:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2108:13:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53647,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53633,
                        "src": "2123:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53640,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53629,
                            "src": "2092:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53639,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "2082:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2082:16:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2099:8:124",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49352,
                      "src": "2082:25:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2082:48:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53638,
                  "id": 53649,
                  "nodeType": "Return",
                  "src": "2075:55:124"
                }
              ]
            },
            "baseFunctions": [
              51974
            ],
            "documentation": {
              "id": 53627,
              "nodeType": "StructuredDocumentation",
              "src": "1735:220:124",
              "text": "@notice Withdraw collateral from the vault\n @param vault Address of the vault\n @param amount Amount of collateral to withdraw [wad]\n @return Amount of collateral withdrawn [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onWithdraw",
            "nameLocation": "1969:11:124",
            "overrides": {
              "id": 53635,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2038:8:124"
            },
            "parameters": {
              "id": 53634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53629,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1989:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53651,
                  "src": "1981:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53651,
                  "src": "1996:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53633,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2021:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53651,
                  "src": "2013:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1980:48:124"
            },
            "returnParameters": {
              "id": 53638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53637,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53651,
                  "src": "2056:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2055:9:124"
            },
            "scope": 53720,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53696,
            "nodeType": "FunctionDefinition",
            "src": "2550:607:124",
            "nodes": [],
            "body": {
              "id": 53695,
              "nodeType": "Block",
              "src": "2754:403:124",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53668,
                      "mutability": "mutable",
                      "name": "addCollateralAmount",
                      "nameLocation": "2873:19:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 53695,
                      "src": "2865:27:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53667,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2865:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53672,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53669,
                      "name": "swapAmountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53661,
                      "src": "2895:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 53670,
                      "name": "upFrontAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53659,
                      "src": "2911:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2895:29:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2865:59:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53678,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53655,
                          "src": "3022:11:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 53679,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3034:5:124",
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51777,
                        "src": "3022:17:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53680,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53668,
                        "src": "3041:19:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53674,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53655,
                              "src": "2980:11:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53675,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2992:15:124",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51779,
                            "src": "2980:27:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53673,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "2973:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 53676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2973:35:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 53677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3009:12:124",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "2973:48:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 53681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2973:88:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53682,
                  "nodeType": "ExpressionStatement",
                  "src": "2973:88:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53690,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3123:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionAction20_$53720",
                              "typeString": "contract PositionAction20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionAction20_$53720",
                              "typeString": "contract PositionAction20"
                            }
                          ],
                          "id": 53689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3115:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53688,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3115:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3115:13:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53692,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53668,
                        "src": "3130:19:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53684,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53655,
                              "src": "3088:11:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53685,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3100:5:124",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51777,
                            "src": "3088:17:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53683,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "3078:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3078:28:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3107:7:124",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49343,
                      "src": "3078:36:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3078:72:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53666,
                  "id": 53694,
                  "nodeType": "Return",
                  "src": "3071:79:124"
                }
              ]
            },
            "baseFunctions": [
              51989
            ],
            "documentation": {
              "id": 53652,
              "nodeType": "StructuredDocumentation",
              "src": "2143:402:124",
              "text": "@notice Hook to increase lever by depositing collateral into the CDPVault\n @param leverParams LeverParams struct\n @param upFrontAmount the amount of tokens passed up front [CDPVault.tokenScale()]\n @param swapAmountOut the amount of tokens received from the stablecoin flash loan swap [CDPVault.tokenScale()]\n @return Amount of collateral added to CDPVault position [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onIncreaseLever",
            "nameLocation": "2559:16:124",
            "overrides": {
              "id": 53663,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2727:8:124"
            },
            "parameters": {
              "id": 53662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53655,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "2604:11:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53696,
                  "src": "2585:30:124",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 53654,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53653,
                      "name": "LeverParams",
                      "nameLocations": [
                        "2585:11:124"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51791,
                      "src": "2585:11:124"
                    },
                    "referencedDeclaration": 51791,
                    "src": "2585:11:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$51791_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53696,
                  "src": "2625:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2625:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53659,
                  "mutability": "mutable",
                  "name": "upFrontAmount",
                  "nameLocation": "2667:13:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53696,
                  "src": "2659:21:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2659:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53661,
                  "mutability": "mutable",
                  "name": "swapAmountOut",
                  "nameLocation": "2698:13:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53696,
                  "src": "2690:21:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2690:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2575:142:124"
            },
            "returnParameters": {
              "id": 53666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53665,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53696,
                  "src": "2745:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2745:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2744:9:124"
            },
            "scope": 53720,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53719,
            "nodeType": "FunctionDefinition",
            "src": "3472:220:124",
            "nodes": [],
            "body": {
              "id": 53718,
              "nodeType": "Block",
              "src": "3611:81:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53709,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53700,
                          "src": "3640:11:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 53710,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3652:5:124",
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51777,
                        "src": "3640:17:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 53713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3667:1:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 53712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3659:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53711,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3659:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3659:10:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53715,
                        "name": "subCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53702,
                        "src": "3671:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53708,
                      "name": "_onWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53651
                      ],
                      "referencedDeclaration": 53651,
                      "src": "3628:11:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 53716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3628:57:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53707,
                  "id": 53717,
                  "nodeType": "Return",
                  "src": "3621:64:124"
                }
              ]
            },
            "baseFunctions": [
              52000
            ],
            "documentation": {
              "id": 53697,
              "nodeType": "StructuredDocumentation",
              "src": "3163:304:124",
              "text": "@notice Hook to decrease lever by withdrawing collateral from the CDPVault\n @param leverParams LeverParams struct\n @param subCollateral Amount of collateral to subtract in CDPVault decimals [wad]\n @return Amount of underlying token withdrawn from CDPVault [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDecreaseLever",
            "nameLocation": "3481:16:124",
            "overrides": {
              "id": 53704,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3584:8:124"
            },
            "parameters": {
              "id": 53703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53700,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "3526:11:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53719,
                  "src": "3507:30:124",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$51791_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 53699,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53698,
                      "name": "LeverParams",
                      "nameLocations": [
                        "3507:11:124"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51791,
                      "src": "3507:11:124"
                    },
                    "referencedDeclaration": 51791,
                    "src": "3507:11:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$51791_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53702,
                  "mutability": "mutable",
                  "name": "subCollateral",
                  "nameLocation": "3555:13:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 53719,
                  "src": "3547:21:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3497:77:124"
            },
            "returnParameters": {
              "id": 53707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53706,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53719,
                  "src": "3602:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3602:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3601:9:124"
            },
            "scope": 53720,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53562,
              "name": "PositionAction",
              "nameLocations": [
                "456:14:124"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53549,
              "src": "456:14:124"
            },
            "id": 53563,
            "nodeType": "InheritanceSpecifier",
            "src": "456:14:124"
          }
        ],
        "canonicalName": "PositionAction20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 53561,
          "nodeType": "StructuredDocumentation",
          "src": "334:93:124",
          "text": "@title PositionAction20\n @notice ERC20 implementation of PositionAction base contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          53720,
          53549,
          51282,
          55969,
          50021,
          49972
        ],
        "name": "PositionAction20",
        "nameLocation": "436:16:124",
        "scope": 53721,
        "usedErrors": [
          51235,
          51843,
          51845,
          51847,
          51849,
          51851,
          51853,
          51855,
          51857,
          51859,
          51861,
          51863,
          51865,
          133395
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 124
}