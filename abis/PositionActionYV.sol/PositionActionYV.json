{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "flashlender_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "swapActions_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "PoolAction_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Action__revertBytes_emptyRevertBytes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toInt256_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__borrow_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidResidualRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__deposit_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onCreditFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onlyDelegatecall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__repay_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS_CREDIT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cdm",
      "outputs": [
        {
          "internalType": "contract ICDM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Protocol",
                  "name": "protocol",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "minOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct PoolActionParams",
              "name": "auxAction",
              "type": "tuple"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "subCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "residualRecipient",
          "type": "address"
        }
      ],
      "name": "decreaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "depositAndBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flashlender",
      "outputs": [
        {
          "internalType": "contract IFlashlender",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Protocol",
                  "name": "protocol",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "minOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct PoolActionParams",
              "name": "auxAction",
              "type": "tuple"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "upFrontToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "upFrontAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "increaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "contract IMinter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        },
        {
          "internalType": "bool[]",
          "name": "delegateCall",
          "type": "bool[]"
        }
      ],
      "name": "multisend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onCreditFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolAction",
      "outputs": [
        {
          "internalType": "contract PoolAction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "self",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IStablecoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapAction",
      "outputs": [
        {
          "internalType": "contract SwapAction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "withdrawAndRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "495:5138:127:-:0;;;942:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1034:12;1048;1062:11;5236:12:123;-1:-1:-1;;;;;5209:40:123;;;-1:-1:-1;;;;;5209:40:123;;;;;5272:11;;-1:-1:-1;;;;;5272:22:123;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5259:37:123;;;-1:-1:-1;;;;;5259:37:123;;;;;5315:11;;-1:-1:-1;;;;;5315:18:123;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5306:29:123;;;-1:-1:-1;;;;;5306:29:123;;;;;5351:11;;-1:-1:-1;;;;;5351:15:123;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5345:23:123;;;;;;;5393:4;5378:20;;5408:36;;;;;5454;;;;;5529:6;;5500:43;;-1:-1:-1;;;5500:43:123;;1680:32:194;;5500:43:123;;;1662:51:194;5538:4:123;1729:18:194;;;1722:50;5345:23:123;5500:20;;1635:18:194;;5500:43:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5553:3:123;;:40;;-1:-1:-1;;;5553:40:123;;-1:-1:-1;;;;;1680:32:194;;;5553:40:123;;;1662:51:194;5588:4:123;1729:18:194;;;1722:50;5553:20:123;;;;-1:-1:-1;5553:20:123;;-1:-1:-1;1635:18:194;;5553:40:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5123:477;;;942:135:127;;;495:5138;;14:131:194;-1:-1:-1;;;;;89:31:194;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:519::-;238:6;246;254;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;355:9;349:16;374:31;399:5;374:31;:::i;:::-;474:2;459:18;;453:25;424:5;;-1:-1:-1;487:33:194;453:25;487:33;:::i;:::-;591:2;576:18;;570:25;539:7;;-1:-1:-1;604:33:194;570:25;604:33;:::i;:::-;656:7;646:17;;;150:519;;;;;:::o;674:272::-;765:6;818:2;806:9;797:7;793:23;789:32;786:52;;;834:1;831;824:12;786:52;866:9;860:16;885:31;910:5;885:31;:::i;:::-;935:5;674:272;-1:-1:-1;;;674:272:194:o;1494:284::-;495:5138:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "495:5138:127:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8595:464:123;;;;;;:::i;:::-;;:::i;:::-;;3783:31;;;;;;;;;;;;:::i;:::-;;;;;;;;3416:100;;3466:50;3416:100;;;;;1790:25:194;;;1778:2;1763:18;3416:100:123;1644:177:194;1101:76:130;;1135:42;1101:76;;21155:2727:123;;;;;;:::i;:::-;;:::i;18852:2128::-;;;;;;:::i;:::-;;:::i;14784:1737::-;;;;;;:::i;:::-;;:::i;11492:659::-;;;;;;:::i;:::-;;:::i;9915:426::-;;;;;;:::i;:::-;;:::i;9257:401::-;;;;;;:::i;:::-;;:::i;3865:29::-;;;;;3322:88;;3365:45;3322:88;;12458:738;;;;;;:::i;:::-;;:::i;3940:38::-;;;;;3556:25;;;;;4024:38;;;;;3706:39;;;;;17196:1310;;;;;;:::i;:::-;;:::i;3626:41::-;;;;;13488:554;;;;;;:::i;:::-;;:::i;10642:598::-;;;;;;:::i;:::-;;:::i;8595:464::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;8799:18:::1;8820:47;8829:5;8836:16;8854:12;8820:8;:47::i;:::-;8799:68;;8887:5;-1:-1:-1::0;;;;;8877:40:123::1;;8931:8;8961:4;8988;9007:20;9016:10;9007:8;:20::i;:::-;9041:1;8877:175;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8789:270;8595:464:::0;;;;:::o;21155:2727::-;21319:7;21342:10;-1:-1:-1;;;;;21364:11:123;21342:34;;21338:97;;21385:50;;-1:-1:-1;;;21385:50:123;;;;;;;;;;;21338:97;21459:30;;;21576:48;;;;21587:4;21576:48;:::i;:::-;21445:179;;;;;;21732:21;21756:136;21787:11;:17;;;21818:11;:20;;;21852:11;:23;;;:30;;;21756:17;:136::i;:::-;21959:17;;;;21938:45;;-1:-1:-1;;;21938:45:123;;-1:-1:-1;;;;;17222:32:194;;;21938:45:123;;;17204:51:194;21978:4:123;17271:18:194;;;17264:50;21732:160:123;;-1:-1:-1;21938:3:123;:20;;;;17177:18:194;;21938:45:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22003:11;:17;;;-1:-1:-1;;;;;21993:52:123;;22059:11;:20;;;22101:4;22128;22148:23;22157:13;22148:8;:23::i;:::-;22147:24;;;:::i;:::-;22186:23;22195:13;22186:8;:23::i;:::-;22185:24;;;:::i;:::-;21993:226;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;22250:17:123;;;;22229:46;;-1:-1:-1;;;22229:46:123;;-1:-1:-1;;;;;17222:32:194;;;22229:46:123;;;17204:51:194;22269:5:123;17271:18:194;;;17264:50;22229:3:123;:20;;;;;;17177:18:194;;22229:46:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22353:27;22383:44;22400:11;22413:13;22383:16;:44::i;:::-;22353:74;;22438:21;22462:189;22497:10;22562:24;;;22604:11;:23;;;22522:119;;;;;;;;:::i;:::-;;;;-1:-1:-1;;22522:119:123;;;;;;;;;;;;;;-1:-1:-1;;;;;22522:119:123;-1:-1:-1;;;;;;22522:119:123;;;;;;;;;;22462:13;:189::i;:::-;22438:213;;22661:20;22695:8;22684:31;;;;;;;;;;;;:::i;:::-;22661:54;-1:-1:-1;22801:22:123;22826:34;22661:54;22826:19;:34;:::i;:::-;22977:23;;;;;:30;;22941:67;;-1:-1:-1;;;22941:67:123;;22801:59;;-1:-1:-1;;;;;;22941:10:123;:18;;;;:67;;22968:6;;22977:30;22941:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23046:23:123;;;;;:30;;23018:59;;-1:-1:-1;;;23018:59:123;;-1:-1:-1;;;;;23018:6:123;:12;;;;:59;;23039:4;;23018:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23215:1;23198:14;:18;23194:641;;;23313:19;;;;:27;;;-1:-1:-1;;;;;23313:41:123;;23309:516;;23374:233;23417:10;23498:24;;;23548:11;:19;;;23450:139;;;;;;;;:::i;23374:233::-;;23309:516;;;23730:23;;;;:31;;;23723:87;;-1:-1:-1;;;;;23723:52:123;23776:17;23795:14;23723:52;:87::i;:::-;-1:-1:-1;3466:50:123;;21155:2727;-1:-1:-1;;;;;;;;;;;;;21155:2727:123:o;18852:2128::-;19037:7;19060:10;-1:-1:-1;;;;;19082:11:123;19060:34;;19056:91;;19103:44;;-1:-1:-1;;;19103:44:123;;;;;;;;;;;19056:91;19171:30;;;19283:49;;;;19294:4;19283:49;:::i;:::-;19431:19;;;;:27;;;19157:175;;-1:-1:-1;19157:175:123;;-1:-1:-1;19157:175:123;-1:-1:-1;;;;;;19431:41:123;;19427:298;;19488:24;19515:135;19554:10;19590:24;;;19616:11;:19;;;19567:69;;;;;;;;:::i;19515:135::-;19488:162;;19691:11;19680:34;;;;;;;;;;;;:::i;:::-;19664:50;;19474:251;19427:298;19776:21;19800:131;19835:10;19871:24;;;19897:11;:23;;;19848:73;;;;;;;;:::i;19800:131::-;19776:155;;19941:21;19976:8;19965:31;;;;;;;;;;;;:::i;:::-;19941:55;;20073:18;20094:73;20111:11;20124:12;20138:13;20153;20094:16;:73::i;:::-;20073:94;;20260:21;20284:112;20315:11;:17;;;20334:11;:20;;;20356:11;:23;;;:30;;;20284:17;:112::i;:::-;20260:136;;20452:11;:17;;;-1:-1:-1;;;;;20442:52:123;;20508:11;:20;;;20550:4;20577;20596:20;20605:10;20596:8;:20::i;:::-;20630:23;20639:13;20630:8;:23::i;:::-;20442:221;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;20756:23:123;;;;;:30;;20729:58;;-1:-1:-1;;;20729:58:123;;:6;-1:-1:-1;;;;;20729:11:123;;;;:58;;20749:4;;20729:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;20908:23:123;;;;;:30;;20867:72;;-1:-1:-1;;;20867:72:123;;:10;-1:-1:-1;;;;;20867:18:123;;;;:72;;20894:11;;20867:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3365:45:123;;18852:2128;-1:-1:-1;;;;;;;;;;;;;;18852:2128:123:o;14784:1737::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;15105:17:::1;15069:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:53;;;;;;;;:::i;:::-;;;:123;;;-1:-1:-1::0;;;;;;15181:10:123::1;15138:54;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:31;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15138:54:123::1;;;15069:123;:180;;;-1:-1:-1::0;;;;;;15245:4:123::1;15208:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15208:41:123::1;;;15069:180;15065:252;;;15267:50;;-1:-1:-1::0;;;15267:50:123::1;;;;;;;;;;;15065:252;15413:1;15374:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15374:41:123::1;;;:230;;;;-1:-1:-1::0;15465:17:123::1;15433:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;:108;;;-1:-1:-1::0;;;;;;15498:43:123;::::1;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15498:43:123::1;;;15433:108;:161;;;-1:-1:-1::0;;;;;;15590:4:123::1;15557:37;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:29;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;15557:37:123::1;;;15433:161;15370:289;;;15613:46;;-1:-1:-1::0;;;15613:46:123::1;;;;;;;;;;;15370:289;15742:17:::0;;15738:337:::1;;15805:4;-1:-1:-1::0;;;;;15779:31:123;::::1;::::0;15775:290:::1;;15830:54;-1:-1:-1::0;;;;;15830:33:123;::::1;15864:4;15870:13:::0;15830:33:::1;:54::i;:::-;15775:290;;;15972:78;15986:12:::0;16000:14;16016:4:::1;16022:13:::0;15972:78:::1;;::::0;;::::1;::::0;::::1;16037:12:::0;15972:78:::1;:::i;:::-;:13;:78::i;:::-;16128:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16116:47:123::1;;16164:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;16186:4;16192;16116:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;16207:11:123::1;:21;::::0;-1:-1:-1;16207:21:123::1;::::0;-1:-1:-1;16264:4:123::1;16291:10;16316:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;16371:11;16384:12;16398:13;16360:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16207:215;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;16444:17:123::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16432:47:123::1;;16480:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;16502:4;16508:5;16432:82;;;;;;;;;;;;;;;;;:::i;11492:659::-:0;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;11749:18:::1;11770:47;11779:5;11786:16;11804:12;11770:8;:47::i;:::-;11749:68:::0;-1:-1:-1;11827:21:123::1;11851:55;11869:5:::0;11876:8;11886:19;::::1;11851:17;:55::i;:::-;11827:79;;11926:5;-1:-1:-1::0;;;;;11916:40:123::1;;11970:8;12000:4;12027;12046:20;12055:10;12046:8;:20::i;:::-;12080:23;12089:13;12080:8;:23::i;:::-;11916:197;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12123:21;12131:12;12123:7;:21::i;:::-;11739:412;;11492:659:::0;;;;;:::o;9915:426::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;10036:21:::1;10060:55;10078:5:::0;10085:8;10095:19;::::1;10060:17;:55::i;:::-;10036:79;;10135:5;-1:-1:-1::0;;;;;10125:40:123::1;;10179:8;10209:4;10236;10255:1;10270:23;10279:13;10270:8;:23::i;:::-;10125:178;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10313:21;10321:12;10313:7;:21::i;:::-;10026:315;9915:426:::0;;;:::o;9257:401::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;9428:5:::1;-1:-1:-1::0;;;;;9418:40:123::1;;9472:8;9502:4;9529;9549:33;9558:16;:23;;;9549:8;:33::i;:::-;9548:34;;;:::i;:::-;9596:1;9418:189;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9617:34;9627:5;9634:16;9617:9;:34::i;12458:738::-:0;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;12715:51:::1;12722:8;12732:5;12739:12;12753;12715:6;:51::i;:::-;12776:65;::::0;-1:-1:-1;;;12776:65:123;;-1:-1:-1;;;;;12796:3:123::1;12776:42;::::0;::::1;::::0;:65:::1;::::0;12819:8;;12829:5;;12836:4:::1;::::0;12776:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12861:5;-1:-1:-1::0;;;;;12851:40:123::1;;12905:8;12935:4;12962;12982:33;12991:16;:23;;;12982:8;:33::i;:::-;12981:34;;;:::i;:::-;13030:29;13039:19:::0;::::1;13030:8;:29::i;:::-;13029:30;;;:::i;:::-;12851:218;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13079:66:123::1;::::0;-1:-1:-1;;;13079:66:123;;-1:-1:-1;;;;;13099:3:123::1;13079:42;::::0;-1:-1:-1;13079:42:123::1;::::0;-1:-1:-1;13079:66:123::1;::::0;13122:8;;13132:5;;13139::::1;::::0;13079:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13155:34;13165:5;13172:16;13155:9;:34::i;:::-;;12458:738:::0;;;;;:::o;17196:1310::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;17446:18:::1;17410:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:54;;;;;;;;:::i;:::-;;;:111;;;-1:-1:-1::0;;;;;;17517:4:123::1;17480:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17480:41:123::1;;;17410:111;17406:183;;;17539:50;;-1:-1:-1::0;;;17539:50:123::1;;;;;;;;;;;17406:183;17685:1;17646:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17646:41:123::1;;;:118;;;;-1:-1:-1::0;17737:17:123::1;17705:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;17646:118;17642:177;;;17773:46;;-1:-1:-1::0;;;17773:46:123::1;;;;;;;;;;;17642:177;17952:1;17913:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;17913:41:123::1;;:88;;;;-1:-1:-1::0;;;;;;17970:31:123;::::1;::::0;17913:88:::1;17909:166;;;18019:56;;-1:-1:-1::0;;;18019:56:123::1;;;;;;;;;;;17909:166;18136:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;18124:47:123::1;;18172:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;18194:4;18200;18124:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;18215:11:123::1;:27;::::0;-1:-1:-1;18215:27:123::1;::::0;-1:-1:-1;18277:4:123::1;18296:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;18351:11;18364:13;18379:17;18340:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18215:192;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;18429:17:123::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;18417:47:123::1;;18465:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;18487:4;18493:5;18417:82;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;13488:554:::0;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;13677:7;13654:20:::1;13701:335;13721:12;13717:1;:16;13701:335;;;13754:12;;13767:1;13754:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13750:245;;;13789:34;13803:7;;13811:1;13803:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13815:4;;13820:1;13815:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13789:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;13789:13:123::1;::::0;-1:-1:-1;;;13789:34:123:i:1;:::-;;13750:245;;;13863:12;13877:21:::0;13902:7:::1;;13910:1;13902:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13902:15:123::1;13918:4;;13923:1;13918:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13902:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13862:64;;;;13949:7;13944:36;;13958:22;13971:8;13958:12;:22::i;:::-;13844:151;;13750:245;14020:3;;13701:335;;;;13644:398;13488:554:::0;;;;;;:::o;10642:598::-;-1:-1:-1;;;;;5962:4:123;5945:21;5953:4;5945:21;5941:68;;5975:34;;-1:-1:-1;;;5975:34:123;;;;;;;;;;;5941:68;10836:51:::1;10843:8;10853:5;10860:12;10874;10836:6;:51::i;:::-;10897:65;::::0;-1:-1:-1;;;10897:65:123;;-1:-1:-1;;;;;10917:3:123::1;10897:42;::::0;::::1;::::0;:65:::1;::::0;10940:8;;10950:5;;10957:4:::1;::::0;10897:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10982:5;-1:-1:-1::0;;;;;10972:40:123::1;;11026:8;11056:4;11083;11102:1;11118:29;11127:12;:19;;;11118:8;:29::i;:::-;11117:30;;;:::i;:::-;10972:185;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11167:66:123::1;::::0;-1:-1:-1;;;11167:66:123;;-1:-1:-1;;;;;11187:3:123::1;11167:42;::::0;-1:-1:-1;11167:42:123::1;::::0;-1:-1:-1;11167:66:123::1;::::0;11210:8;;11220:5;;11227::::1;::::0;11167:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;24331:992:::0;24492:7;24528:23;;;;24492:7;24566:24;;;;24528:16;24566:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24566:46:123;;24562:682;;24668:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;24632:64:123;:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24632:64:123;;;:135;;;-1:-1:-1;24762:4:123;24716:24;;;;:16;:24;:::i;:::-;:34;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24716:51:123;;;24632:135;24628:201;;;24789:40;;-1:-1:-1;;;24789:40:123;;;;;;;;;;;24628:201;24852:89;24869:31;;;;;;;;:::i;:::-;24902:24;;;;:16;:24;:::i;:::-;24928:12;24852:16;:89::i;:::-;24843:98;;24562:682;;;25005:4;24962:31;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24962:48:123;;24958:286;;25026:207;25057:28;;;;:16;:28;:::i;:::-;25103:31;;;;;;;;:::i;:::-;25160:4;25183:6;25026:207;;;;;;;25207:12;25026:207;:::i;:::-;25261:55;25272:5;25279:28;;;;:16;:28;:::i;:::-;25309:6;25261:10;:55::i;:::-;25254:62;;;24331:992;;;;;;:::o;509:133:182:-;552:6;-1:-1:-1;;;570:1:182;:13;566:51;;592:25;;-1:-1:-1;;;592:25:182;;;;;;;;;;;566:51;-1:-1:-1;637:1:182;509:133::o;30552:332:123:-;30679:18;30710:22;30734:21;30770:5;-1:-1:-1;;;;;30760:27:123;;30788:8;30760:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30709:88;;;;;30820:57;30840:4;30846:15;30863:13;30820:19;:57::i;:::-;30807:70;30552:332;-1:-1:-1;;;;;;30552:332:123:o;5175:456:127:-;5305:7;5366:27;5406:11;:17;;;-1:-1:-1;;;;;5396:37:127;;5442:4;5449:13;5396:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5566:27;;;;;5558:66;;-1:-1:-1;;;5558:66:127;;;;;1790:25:194;;;5366:97:127;;-1:-1:-1;;;;;;5558:45:127;;;;1763:18:194;;5558:66:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5551:73;;;5175:456;;;;;:::o;767:241:120:-;839:12;864;878:23;905:2;-1:-1:-1;;;;;905:15:120;921:4;905:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:63;;;;941:7;936:38;;950:24;963:10;950:12;:24::i;941:175:62:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1050:58:62;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:62;-1:-1:-1;;;;;;1050:58:62;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;3493:1344:127:-;3684:7;3703:25;3777:27;3807:13;3777:43;;3934:12;-1:-1:-1;;;;;3903:43:127;:11;:27;;;-1:-1:-1;;;;;3903:43:127;;:88;;;;-1:-1:-1;3950:19:127;;;;:27;;;-1:-1:-1;;;;;3950:41:127;;3903:88;3899:364;;;4110:13;4090:33;;3899:364;;;4216:36;4239:13;4216:36;;:::i;:::-;;;3899:364;4321:23;4355:11;:27;;;-1:-1:-1;;;;;4347:42:127;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4438:27;;;;4321:70;;-1:-1:-1;4401:86:127;;-1:-1:-1;;;;;4401:36:127;;;4467:19;4401:36;:86::i;:::-;4527:27;;;;;4519:65;;-1:-1:-1;;;4519:65:127;;;;;1790:25:194;;;4587:17:127;;-1:-1:-1;;;;;4519:44:127;;;;1763:18:194;;4519:65:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;:::-;4702:17;;;;4660:27;;;;4497:107;;-1:-1:-1;4653:88:127;;-1:-1:-1;;;;;4653:48:127;;4497:107;4653:48;:88::i;:::-;4768:11;:17;;;-1:-1:-1;;;;;4758:36:127;;4803:4;4810:19;4758:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4751:79;;;;;3493:1344;;;;;;;:::o;1455:1279:130:-;1623:20;1600:19;;:43;;;;;;;;:::i;:::-;;1596:1132;;1135:42;-1:-1:-1;;;;;1721:46:130;;1785:262;;;;;;;;1856:84;;;;;;;;1901:5;-1:-1:-1;;;;;1856:84:130;;;;;1916:6;:21;;;1856:84;;;1785:262;;;;1969:6;:12;;;1785:262;;;;2013:6;:15;;;1785:262;;;2065:80;;;;;;;;2115:2;-1:-1:-1;;;;;2065:80:130;;;;;2136:6;2065:80;;;2163:4;2198:6;:8;;;2208:6;:8;;;2225:6;:8;;;2218:16;;2185:50;;;;;;;;;33238:19:194;;;33282:2;33273:12;;33266:28;;;;-1:-1:-1;;;;;;33324:26:194;33319:2;33310:12;;33303:48;33376:2;33367:12;;33055:330;2185:50:130;;;;;;;;;;;;;1721:551;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:1132;;;2316:19;2293;;:42;;;;;;;;:::i;:::-;;2289:439;;2406:110;2437:4;2443:2;2447:6;:21;;;2470:6;:15;;;2487:6;:8;;;2497:6;:8;;;2507:6;:8;;;2419:5;-1:-1:-1;;;;;2406:30:130;;;:110;;;;;;;;;;:::i;:::-;2530:48;-1:-1:-1;;;;;2530:30:130;;2561:4;2567:2;2571:6;2530:30;:48::i;:::-;2289:439;;;2669:48;-1:-1:-1;;;;;2669:30:130;;2700:4;2706:2;2710:6;2669:30;:48::i;:::-;1455:1279;;;;;:::o;26536:940:123:-;26609:80;;-1:-1:-1;;;26609:80:123;;-1:-1:-1;;;;;26629:3:123;26609:42;;;;:80;;26660:4;;26675:6;;26684:4;;26609:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26743:1:123;;-1:-1:-1;26703:20:123;;-1:-1:-1;;26703:20:123;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26703:42:123;;26699:771;;-1:-1:-1;;;;;26761:6:123;:11;;26773:21;;;;;;;;:::i;:::-;26761:55;;-1:-1:-1;;;;;;26761:55:123;;;;;;;;;;26796:19;;;26761:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26830:81:123;;-1:-1:-1;;;26830:81:123;;-1:-1:-1;;;;;26850:3:123;26830:42;;-1:-1:-1;26830:42:123;;-1:-1:-1;26830:81:123;;26881:4;;26896:6;;26905:5;;26830:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26699:771;26943:47;;-1:-1:-1;;;26943:47:123;;-1:-1:-1;;;;;26943:6:123;:11;;;;:47;;26963:4;;26970:19;;;26943:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27004:81:123;;-1:-1:-1;;;27004:81:123;;-1:-1:-1;;;;;27024:3:123;27004:42;;-1:-1:-1;27004:42:123;;-1:-1:-1;27004:81:123;;27055:4;;27070:6;;27079:5;;27004:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;27176:10:123;27136:51;;-1:-1:-1;27136:20:123;;-1:-1:-1;27136:20:123;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;27136:51:123;;27132:103;;27196:39;;-1:-1:-1;;;27196:39:123;;;;;;;;;;;27132:103;27249:210;27288:10;-1:-1:-1;;;27407:20:123;;;;:12;:20;:::i;:::-;27317:128;;;;;;;;:::i;27249:210::-;;26699:771;26536:940;:::o;25595:798::-;25691:7;;25731:73;25743:5;25750:28;;;;:16;:28;:::i;:::-;25780:16;:23;;;25731:11;:73::i;:::-;25710:94;-1:-1:-1;25922:1:123;25878:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25878:46:123;;25874:486;;25940:214;25979:10;-1:-1:-1;;;26098:24:123;;;;:16;:24;:::i;25940:214::-;;25874:486;;;26255:94;26305:31;;;;;;;;:::i;:::-;26338:10;26262:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;26255:49:123;;:94;:49;:94::i;27770:1319::-;28007:14;;28035:20;;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28035:42:123;;28031:896;;28140:4;28098:20;;;;:12;:20;:::i;:::-;:30;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28098:47:123;;28094:98;;28154:38;;-1:-1:-1;;;28154:38:123;;;;;;;;;;;28094:98;28216:75;28233:21;;;;;;;;:::i;:::-;28256:20;;;;:12;:20;:::i;:::-;28278:12;28216:16;:75::i;:::-;28207:84;;28031:896;;;28383:22;28407:21;28443:5;-1:-1:-1;;;;;28433:27:123;;28461:8;28433:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28382:88:123;;-1:-1:-1;28382:88:123;-1:-1:-1;28382:88:123;28493:42;-1:-1:-1;;;;;28493:42:123;;28515:19;;28493:4;:42::i;:::-;:58;;;;:::i;:::-;28484:67;-1:-1:-1;28603:4:123;28570:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28570:38:123;;28566:351;;28690:212;28733:10;28766:21;;;;;;;;:::i;:::-;28817:4;28844:6;28690:212;;;;;;;28872:12;28690:212;:::i;:::-;28309:618;;28031:896;28994:43;;-1:-1:-1;;;28994:43:123;;-1:-1:-1;;;;;28994:10:123;:18;;;;:43;;29021:6;;29030;;28994:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;29047:35:123;;-1:-1:-1;;;29047:35:123;;-1:-1:-1;;;;;29047:6:123;:12;;;;:35;;29068:4;;29075:6;;29047:35;;;:::i;1192:255:120:-;1263:13;;:18;1259:127;;1354:6;1348:13;1339:6;1335:2;1331:15;1324:38;1259:127;1402:38;;-1:-1:-1;;;1402:38:120;;;;;;;;;;;29185:952:123;29343:17;29372:21;29396:241;29431:10;29496:35;;;29549:6;29573:12;29603:10;29456:171;;;;;;;;;;:::i;29396:241::-;29372:265;;29647:17;29678:8;29667:31;;;;;;;;;;;;:::i;:::-;29647:51;-1:-1:-1;29820:18:123;29797:19;;;;;;;;:::i;:::-;:41;;;;;;;;:::i;:::-;;29793:338;;29854:17;29874:28;29893:9;29874:16;;;;:28;:::i;:::-;29854:48;-1:-1:-1;29920:13:123;;29916:110;;29953:58;29993:6;30001:9;29960:18;;;;;;;;:::i;29953:58::-;30051:10;:17;;;30039:29;;29840:239;29793:338;;;30111:9;30099:21;;29793:338;29362:775;;29185:952;;;;;:::o;1542:621:127:-;1633:7;1652:18;1691:5;-1:-1:-1;;;;;1681:22:127;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1652:54;;1828:10;-1:-1:-1;;;;;1821:17:127;:3;-1:-1:-1;;;;;1821:17:127;;1817:219;;1854:18;1883:10;-1:-1:-1;;;;;1875:25:127;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1854:48;-1:-1:-1;1916:51:127;-1:-1:-1;;;;;1916:31:127;;1948:10;1960:6;1916:31;:51::i;:::-;1990:35;;-1:-1:-1;;;1990:35:127;;;;;1790:25:194;;;-1:-1:-1;;;;;1990:27:127;;;;;1763:18:194;;1990:35:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1981:44;;1840:196;1817:219;2046:46;-1:-1:-1;;;;;2046:31:127;;2078:5;2085:6;2046:31;:46::i;:::-;2109:47;;-1:-1:-1;;;2109:47:127;;-1:-1:-1;;;;;2109:24:127;;;;;:47;;2142:4;;2149:6;;2109:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1940:373:88:-;2058:18;2097:43;2102:20;2109:13;2102:4;:20;:::i;:::-;2124:15;-1:-1:-1;;;;;2097:43:88;:4;:43::i;:::-;2084:56;;2262:4;2202:57;2216:10;2228:15;2245:13;2202;:57::i;:::-;:64;2198:113;;;2290:12;;1940:373;;;;;:::o;5173:642:62:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:62;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:62;;36233:2:194;5697:111:62;;;36215:21:194;36272:2;36252:18;;;36245:30;36311:34;36291:18;;;36284:62;-1:-1:-1;;;36362:18:194;;;36355:40;36412:19;;5697:111:62;;;;;;;;3756:410;3843:25;3894:22;;;3918:7;3927:5;3871:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3871:62:62;;;;;;;;;;;;;;-1:-1:-1;;;;;3871:62:62;-1:-1:-1;;;;;;3871:62:62;;;;;;;;;;;-1:-1:-1;3949:44:62;3973:5;3871:62;3949:23;:44::i;:::-;3944:216;;4036:58;;-1:-1:-1;;;;;36640:32:194;;4036:58:62;;;36622:51:194;4092:1:62;36689:18:194;;;36682:45;4009:86:62;;4029:5;;-1:-1:-1;;;4059:22:62;36595:18:194;;4036:58:62;36442:291:194;4009:86:62;4109:40;4129:5;4136:12;4109:19;:40::i;4318:472::-;4565:19;;-1:-1:-1;;;4565:19:62;;4543;;-1:-1:-1;;;;;4565:12:62;;;;;:19;;4578:5;;4565:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4594:54;;-1:-1:-1;;;4594:54:62;;-1:-1:-1;;;;;37105:15:194;;;4594:54:62;;;37087:34:194;37157:15;;;37137:18;;;37130:43;37189:18;;;37182:34;;;37232:18;;;37225:34;;;37308:4;37296:17;;37275:19;;;37268:46;37330:19;;;37323:35;;;37374:19;;;37367:35;;;4543:41:62;;-1:-1:-1;4594:12:62;;;;;;37021:19:194;;4594:54:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4679:19:62;;-1:-1:-1;;;4679:19:62;;4658:18;;-1:-1:-1;;;;;;4679:12:62;;;-1:-1:-1;4679:12:62;;:19;;4692:5;;4679:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4658:40;-1:-1:-1;4730:15:62;:11;4744:1;4730:15;:::i;:::-;4716:10;:29;4708:75;;;;-1:-1:-1;;;4708:75:62;;37615:2:194;4708:75:62;;;37597:21:194;37654:2;37634:18;;;37627:30;37693:34;37673:18;;;37666:62;-1:-1:-1;;;37744:18:194;;;37737:31;37785:19;;4708:75:62;37413:397:194;4708:75:62;4533:257;;4318:472;;;;;;;;:::o;1355:203::-;1482:68;;-1:-1:-1;;;;;38073:15:194;;;1482:68:62;;;38055:34:194;38125:15;;38105:18;;;38098:43;38157:18;;;38150:34;;;1455:96:62;;1475:5;;-1:-1:-1;;;1505:27:62;37990:18:194;;1482:68:62;37815:375:194;2449:524:127;2541:7;2560:27;2600:5;-1:-1:-1;;;;;2590:25:127;;2624:4;2631:6;2590:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2560:78;;2747:18;2786:5;-1:-1:-1;;;;;2776:22:127;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2747:54;;2822:10;-1:-1:-1;;;;;2815:17:127;:3;-1:-1:-1;;;;;2815:17:127;;2811:119;;2870:49;;-1:-1:-1;;;2870:49:127;;;;;1790:25:194;;;-1:-1:-1;;;;;2870:28:127;;;;;1763:18:194;;2870:49:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2848:71;;2811:119;-1:-1:-1;2947:19:127;2449:524;-1:-1:-1;;;;2449:524:127:o;3233:443:182:-;3283:9;3436:1;3432;3428:6;3424:14;3421:1;3418:21;3415:1;3411:29;3408:227;;;3539:10;3533:4;3526:24;3620:4;3614;3607:18;3408:227;-1:-1:-1;3664:3:182;3653:9;;3649:19;;3233:443::o;4704:487::-;4754:9;4934:16;4928:23;;4946:3;4919:33;4912:41;4905:49;;4895:255;;5054:10;5048:4;5041:24;5135:4;5129;5122:18;4895:255;-1:-1:-1;5175:3:182;5168:11;;;;5164:19;;4704:487::o;1466:197:88:-;1584:12;1647:13;1611:33;1616:10;1628:15;-1:-1:-1;;;;;1611:33:88;:4;:33::i;:::-;:49;;;;:::i;4109:223:65:-;4242:12;4273:52;4295:6;4303:4;4309:1;4312:12;4273:21;:52::i;6316:594:62:-;6399:4;6701:12;6715:23;6750:5;-1:-1:-1;;;;;6742:19:62;6762:4;6742:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6700:67;;;;6796:7;:69;;;;-1:-1:-1;6808:17:62;;:22;;:56;;;6845:10;6834:30;;;;;;;;;;;;:::i;:::-;6796:107;;;;-1:-1:-1;;;;;;1702:19:65;;;:23;;6869:34:62;6777:126;6316:594;-1:-1:-1;;;;;6316:594:62:o;5166:446:65:-;5331:12;5388:5;5363:21;:30;;5355:81;;;;-1:-1:-1;;;5355:81:65;;38397:2:194;5355:81:65;;;38379:21:194;38436:2;38416:18;;;38409:30;38475:34;38455:18;;;38448:62;-1:-1:-1;;;38526:18:194;;;38519:36;38572:19;;5355:81:65;38195:402:194;5355:81:65;5447:12;5461:23;5488:6;-1:-1:-1;;;;;5488:11:65;5507:5;5514:4;5488:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:73;;;;5536:69;5563:6;5571:7;5580:10;5592:12;5536:26;:69::i;:::-;5529:76;5166:446;-1:-1:-1;;;;;;;5166:446:65:o;7672:628::-;7852:12;7880:7;7876:418;;;7907:10;:17;7928:1;7907:22;7903:286;;-1:-1:-1;;;;;1702:19:65;;;8114:60;;;;-1:-1:-1;;;8114:60:65;;38804:2:194;8114:60:65;;;38786:21:194;38843:2;38823:18;;;38816:30;38882:31;38862:18;;;38855:59;38931:18;;8114:60:65;38602:353:194;8114:60:65;-1:-1:-1;8209:10:65;8202:17;;7876:418;8250:33;8258:10;8270:12;8981:17;;:21;8977:379;;9209:10;9203:17;9265:15;9252:10;9248:2;9244:19;9237:44;8977:379;9332:12;9325:20;;-1:-1:-1;;;9325:20:65;;;;;;;;:::i;14:131:194:-;-1:-1:-1;;;;;89:31:194;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:165::-;358:5;403:3;394:6;389:3;385:16;381:26;378:46;;;420:1;417;410:12;378:46;-1:-1:-1;442:6:194;289:165;-1:-1:-1;289:165:194:o;459:161::-;524:5;569:3;560:6;555:3;551:16;547:26;544:46;;;586:1;583;576:12;625:789;781:6;789;797;805;858:3;846:9;837:7;833:23;829:33;826:53;;;875:1;872;865:12;826:53;914:9;901:23;933:31;958:5;933:31;:::i;:::-;983:5;-1:-1:-1;1040:2:194;1025:18;;1012:32;1053:33;1012:32;1053:33;:::i;:::-;1105:7;-1:-1:-1;1163:2:194;1148:18;;1135:32;-1:-1:-1;;;;;1179:30:194;;1176:50;;;1222:1;1219;1212:12;1176:50;1245:76;1313:7;1304:6;1293:9;1289:22;1245:76;:::i;:::-;1235:86;;;1340:68;1400:7;1395:2;1384:9;1380:18;1340:68;:::i;:::-;1330:78;;625:789;;;;;;;:::o;1419:220::-;-1:-1:-1;;;;;1600:32:194;;;;1582:51;;1570:2;1555:18;;1419:220::o;2143:347::-;2194:8;2204:6;2258:3;2251:4;2243:6;2239:17;2235:27;2225:55;;2276:1;2273;2266:12;2225:55;-1:-1:-1;2299:20:194;;-1:-1:-1;;;;;2331:30:194;;2328:50;;;2374:1;2371;2364:12;2328:50;2411:4;2403:6;2399:17;2387:29;;2463:3;2456:4;2447:6;2439;2435:19;2431:30;2428:39;2425:59;;;2480:1;2477;2470:12;2425:59;2143:347;;;;;:::o;2495:681::-;2592:6;2600;2608;2616;2624;2677:3;2665:9;2656:7;2652:23;2648:33;2645:53;;;2694:1;2691;2684:12;2645:53;2733:9;2720:23;2752:31;2777:5;2752:31;:::i;:::-;2802:5;-1:-1:-1;2854:2:194;2839:18;;2826:32;;-1:-1:-1;2905:2:194;2890:18;;2877:32;;-1:-1:-1;2960:2:194;2945:18;;2932:32;-1:-1:-1;;;;;2976:30:194;;2973:50;;;3019:1;3016;3009:12;2973:50;3058:58;3108:7;3099:6;3088:9;3084:22;3058:58;:::i;:::-;2495:681;;;;-1:-1:-1;2495:681:194;;-1:-1:-1;3135:8:194;;3032:84;2495:681;-1:-1:-1;;;2495:681:194:o;3181:823::-;3287:6;3295;3303;3311;3319;3327;3380:3;3368:9;3359:7;3355:23;3351:33;3348:53;;;3397:1;3394;3387:12;3348:53;3436:9;3423:23;3455:31;3480:5;3455:31;:::i;:::-;3505:5;-1:-1:-1;3562:2:194;3547:18;;3534:32;3575:33;3534:32;3575:33;:::i;:::-;3627:7;-1:-1:-1;3681:2:194;3666:18;;3653:32;;-1:-1:-1;3732:2:194;3717:18;;3704:32;;-1:-1:-1;3787:3:194;3772:19;;3759:33;-1:-1:-1;;;;;3804:30:194;;3801:50;;;3847:1;3844;3837:12;3801:50;3886:58;3936:7;3927:6;3916:9;3912:22;3886:58;:::i;:::-;3181:823;;;;-1:-1:-1;3181:823:194;;-1:-1:-1;3181:823:194;;3963:8;;3181:823;-1:-1:-1;;;3181:823:194:o;4009:160::-;4073:5;4118:3;4109:6;4104:3;4100:16;4096:26;4093:46;;;4135:1;4132;4125:12;4174:848;4334:6;4342;4350;4358;4366;4419:3;4407:9;4398:7;4394:23;4390:33;4387:53;;;4436:1;4433;4426:12;4387:53;4476:9;4463:23;-1:-1:-1;;;;;4501:6:194;4498:30;4495:50;;;4541:1;4538;4531:12;4495:50;4564:71;4627:7;4618:6;4607:9;4603:22;4564:71;:::i;:::-;4554:81;;;4685:2;4674:9;4670:18;4657:32;4698:31;4723:5;4698:31;:::i;:::-;4748:5;-1:-1:-1;4800:2:194;4785:18;;4772:32;;-1:-1:-1;4856:2:194;4841:18;;4828:32;4869:33;4828:32;4869:33;:::i;:::-;4921:7;-1:-1:-1;4947:69:194;5008:7;5002:3;4987:19;;4947:69;:::i;:::-;4937:79;;4174:848;;;;;;;;:::o;5027:160::-;5092:5;5137:2;5128:6;5123:3;5119:16;5115:25;5112:45;;;5153:1;5150;5143:12;5192:1056;5390:6;5398;5406;5414;5422;5475:3;5463:9;5454:7;5450:23;5446:33;5443:53;;;5492:1;5489;5482:12;5443:53;5531:9;5518:23;5550:31;5575:5;5550:31;:::i;:::-;5600:5;-1:-1:-1;5657:2:194;5642:18;;5629:32;5670:33;5629:32;5670:33;:::i;:::-;5722:7;-1:-1:-1;5780:2:194;5765:18;;5752:32;-1:-1:-1;;;;;5833:14:194;;;5830:34;;;5860:1;5857;5850:12;5830:34;5883:76;5951:7;5942:6;5931:9;5927:22;5883:76;:::i;:::-;5873:86;;6012:2;6001:9;5997:18;5984:32;5968:48;;6041:2;6031:8;6028:16;6025:36;;;6057:1;6054;6047:12;6025:36;;6080:74;6146:7;6135:8;6124:9;6120:24;6080:74;:::i;:::-;6070:84;;;6173:69;6234:7;6228:3;6217:9;6213:19;6173:69;:::i;6253:643::-;6363:6;6371;6379;6432:2;6420:9;6411:7;6407:23;6403:32;6400:52;;;6448:1;6445;6438:12;6400:52;6487:9;6474:23;6506:31;6531:5;6506:31;:::i;:::-;6556:5;-1:-1:-1;6613:2:194;6598:18;;6585:32;6626:33;6585:32;6626:33;:::i;:::-;6678:7;-1:-1:-1;6736:2:194;6721:18;;6708:32;-1:-1:-1;;;;;6752:30:194;;6749:50;;;6795:1;6792;6785:12;6749:50;6818:72;6882:7;6873:6;6862:9;6858:22;6818:72;:::i;:::-;6808:82;;;6253:643;;;;;:::o;6901:651::-;7015:6;7023;7031;7084:2;7072:9;7063:7;7059:23;7055:32;7052:52;;;7100:1;7097;7090:12;7052:52;7139:9;7126:23;7158:31;7183:5;7158:31;:::i;:::-;7208:5;-1:-1:-1;7265:2:194;7250:18;;7237:32;7278:33;7237:32;7278:33;:::i;:::-;7330:7;-1:-1:-1;7388:2:194;7373:18;;7360:32;-1:-1:-1;;;;;7404:30:194;;7401:50;;;7447:1;7444;7437:12;7401:50;7470:76;7538:7;7529:6;7518:9;7514:22;7470:76;:::i;8464:568::-;8573:6;8581;8589;8642:2;8630:9;8621:7;8617:23;8613:32;8610:52;;;8658:1;8655;8648:12;8610:52;8698:9;8685:23;-1:-1:-1;;;;;8723:6:194;8720:30;8717:50;;;8763:1;8760;8753:12;8717:50;8786:71;8849:7;8840:6;8829:9;8825:22;8786:71;:::i;:::-;8776:81;;;8904:2;8893:9;8889:18;8876:32;8866:42;;8958:2;8947:9;8943:18;8930:32;8971:31;8996:5;8971:31;:::i;:::-;9021:5;9011:15;;;8464:568;;;;;:::o;9267:367::-;9330:8;9340:6;9394:3;9387:4;9379:6;9375:17;9371:27;9361:55;;9412:1;9409;9402:12;9361:55;-1:-1:-1;9435:20:194;;-1:-1:-1;;;;;9467:30:194;;9464:50;;;9510:1;9507;9500:12;9464:50;9547:4;9539:6;9535:17;9523:29;;9607:3;9600:4;9590:6;9587:1;9583:14;9575:6;9571:27;9567:38;9564:47;9561:67;;;9624:1;9621;9614:12;9639:1096;9805:6;9813;9821;9829;9837;9845;9898:2;9886:9;9877:7;9873:23;9869:32;9866:52;;;9914:1;9911;9904:12;9866:52;9954:9;9941:23;-1:-1:-1;;;;;10024:2:194;10016:6;10013:14;10010:34;;;10040:1;10037;10030:12;10010:34;10079:70;10141:7;10132:6;10121:9;10117:22;10079:70;:::i;:::-;10168:8;;-1:-1:-1;10053:96:194;-1:-1:-1;10256:2:194;10241:18;;10228:32;;-1:-1:-1;10272:16:194;;;10269:36;;;10301:1;10298;10291:12;10269:36;10340:72;10404:7;10393:8;10382:9;10378:24;10340:72;:::i;:::-;10431:8;;-1:-1:-1;10314:98:194;-1:-1:-1;10519:2:194;10504:18;;10491:32;;-1:-1:-1;10535:16:194;;;10532:36;;;10564:1;10561;10554:12;10532:36;;10603:72;10667:7;10656:8;10645:9;10641:24;10603:72;:::i;10740:781::-;10892:6;10900;10908;10916;10969:3;10957:9;10948:7;10944:23;10940:33;10937:53;;;10986:1;10983;10976:12;10937:53;11025:9;11012:23;11044:31;11069:5;11044:31;:::i;:::-;11094:5;-1:-1:-1;11151:2:194;11136:18;;11123:32;11164:33;11123:32;11164:33;:::i;:::-;11216:7;-1:-1:-1;11274:2:194;11259:18;;11246:32;-1:-1:-1;;;;;11290:30:194;;11287:50;;;11333:1;11330;11323:12;11287:50;11356:72;11420:7;11411:6;11400:9;11396:22;11356:72;:::i;11526:533::-;-1:-1:-1;;;;;11846:15:194;;;11828:34;;11898:15;;;11893:2;11878:18;;11871:43;11950:15;;;;11945:2;11930:18;;11923:43;11997:2;11982:18;;11975:34;;;;12040:3;12025:19;;12018:35;;;;11777:3;11762:19;;11526:533::o;12064:127::-;12125:10;12120:3;12116:20;12113:1;12106:31;12156:4;12153:1;12146:15;12180:4;12177:1;12170:15;12196:255;12268:2;12262:9;12310:6;12298:19;;-1:-1:-1;;;;;12332:34:194;;12368:22;;;12329:62;12326:88;;;12394:18;;:::i;:::-;12430:2;12423:22;12196:255;:::o;12456:248::-;12523:2;12517:9;12565:4;12553:17;;-1:-1:-1;;;;;12585:34:194;;12621:22;;;12582:62;12579:88;;;12647:18;;:::i;12709:111::-;12794:1;12787:5;12784:12;12774:40;;12810:1;12807;12800:12;12825:154;12903:20;;12932:41;12903:20;12932:41;:::i;12984:718::-;13026:5;13079:3;13072:4;13064:6;13060:17;13056:27;13046:55;;13097:1;13094;13087:12;13046:55;13133:6;13120:20;-1:-1:-1;;;;;13196:2:194;13192;13189:10;13186:36;;;13202:18;;:::i;:::-;13277:2;13271:9;13245:2;13331:13;;-1:-1:-1;;13327:22:194;;;13351:2;13323:31;13319:40;13307:53;;;13375:18;;;13395:22;;;13372:46;13369:72;;;13421:18;;:::i;:::-;13461:10;13457:2;13450:22;13496:2;13488:6;13481:18;13542:3;13535:4;13530:2;13522:6;13518:15;13514:26;13511:35;13508:55;;;13559:1;13556;13549:12;13508:55;13623:2;13616:4;13608:6;13604:17;13597:4;13589:6;13585:17;13572:54;13670:1;13663:4;13658:2;13650:6;13646:15;13642:26;13635:37;13690:6;13681:15;;;;;;12984:718;;;;:::o;13707:856::-;13764:5;13812:6;13800:9;13795:3;13791:19;13787:32;13784:52;;;13832:1;13829;13822:12;13784:52;13854:22;;:::i;:::-;13845:31;;13899:39;13928:9;13899:39;:::i;:::-;13892:5;13885:54;13971:48;14015:2;14004:9;14000:18;13971:48;:::i;:::-;13966:2;13959:5;13955:14;13948:72;14052:38;14086:2;14075:9;14071:18;14052:38;:::i;:::-;14047:2;14040:5;14036:14;14029:62;14151:2;14140:9;14136:18;14123:32;14118:2;14111:5;14107:14;14100:56;14217:3;14206:9;14202:19;14189:33;14183:3;14176:5;14172:15;14165:58;14256:39;14290:3;14279:9;14275:19;14256:39;:::i;:::-;14250:3;14243:5;14239:15;14232:64;14357:3;14346:9;14342:19;14329:33;14323:3;14316:5;14312:15;14305:58;14414:3;14403:9;14399:19;14386:33;-1:-1:-1;;;;;14434:6:194;14431:30;14428:50;;;14474:1;14471;14464:12;14428:50;14511:45;14552:3;14543:6;14532:9;14528:22;14511:45;:::i;:::-;14505:3;14498:5;14494:15;14487:70;;13707:856;;;;:::o;14568:901::-;14631:5;14679:4;14667:9;14662:3;14658:19;14654:30;14651:50;;;14697:1;14694;14687:12;14651:50;14730:2;14724:9;14772:4;14764:6;14760:17;-1:-1:-1;;;;;14864:6:194;14852:10;14849:22;14844:2;14832:10;14829:18;14826:46;14823:72;;;14875:18;;:::i;:::-;14915:10;14911:2;14904:22;14944:6;14935:15;;14987:9;14974:23;14959:38;;15006:43;15041:7;15006:43;:::i;:::-;15073:7;15065:6;15058:23;15142:2;15131:9;15127:18;15114:32;15109:2;15101:6;15097:15;15090:57;15199:2;15188:9;15184:18;15171:32;15156:47;;15212:33;15237:7;15212:33;:::i;:::-;15278:7;15273:2;15265:6;15261:15;15254:32;15337:2;15326:9;15322:18;15309:32;15295:46;;15364:2;15356:6;15353:14;15350:34;;;15380:1;15377;15370:12;15350:34;;15417:45;15458:3;15449:6;15438:9;15434:22;15417:45;:::i;:::-;15412:2;15404:6;15400:15;15393:70;;;14568:901;;;;:::o;15474:987::-;15532:5;15580:4;15568:9;15563:3;15559:19;15555:30;15552:50;;;15598:1;15595;15588:12;15552:50;15620:17;;:::i;:::-;15611:26;;15660:29;15679:9;15660:29;:::i;:::-;15653:5;15646:44;15722:38;15756:2;15745:9;15741:18;15722:38;:::i;:::-;15717:2;15710:5;15706:14;15699:62;15793:38;15827:2;15816:9;15812:18;15793:38;:::i;:::-;15788:2;15781:5;15777:14;15770:62;15883:2;15872:9;15868:18;15855:32;-1:-1:-1;;;;;15947:2:194;15939:6;15936:14;15933:34;;;15963:1;15960;15953:12;15933:34;15999:57;16052:3;16043:6;16032:9;16028:22;15999:57;:::i;:::-;15994:2;15987:5;15983:14;15976:81;16110:3;16099:9;16095:19;16082:33;16066:49;;16140:2;16130:8;16127:16;16124:36;;;16156:1;16153;16146:12;16124:36;16193:59;16248:3;16237:8;16226:9;16222:24;16193:59;:::i;:::-;16187:3;16180:5;16176:15;16169:84;16306:3;16295:9;16291:19;16278:33;16262:49;;16336:2;16326:8;16323:16;16320:36;;;16352:1;16349;16342:12;16320:36;;16389:65;16450:3;16439:8;16428:9;16424:24;16389:65;:::i;:::-;16383:3;16376:5;16372:15;16365:90;;15474:987;;;;:::o;16466:565::-;16581:6;16589;16597;16650:2;16638:9;16629:7;16625:23;16621:32;16618:52;;;16666:1;16663;16656:12;16618:52;16706:9;16693:23;-1:-1:-1;;;;;16731:6:194;16728:30;16725:50;;;16771:1;16768;16761:12;16725:50;16794:62;16848:7;16839:6;16828:9;16824:22;16794:62;:::i;17325:127::-;17386:10;17381:3;17377:20;17374:1;17367:31;17417:4;17414:1;17407:15;17441:4;17438:1;17431:15;17457:136;17492:3;-1:-1:-1;;;17513:22:194;;17510:48;;17538:18;;:::i;:::-;-1:-1:-1;17578:1:194;17574:13;;17457:136::o;18127:127::-;18188:10;18183:3;18179:20;18176:1;18169:31;18219:4;18216:1;18209:15;18243:4;18240:1;18233:15;18259:117;18344:1;18337:5;18334:12;18324:46;;18350:18;;:::i;18381:250::-;18466:1;18476:113;18490:6;18487:1;18484:13;18476:113;;;18566:11;;;18560:18;18547:11;;;18540:39;18512:2;18505:10;18476:113;;;-1:-1:-1;;18623:1:194;18605:16;;18598:27;18381:250::o;18636:270::-;18677:3;18715:5;18709:12;18742:6;18737:3;18730:19;18758:76;18827:6;18820:4;18815:3;18811:14;18804:4;18797:5;18793:16;18758:76;:::i;:::-;18888:2;18867:15;-1:-1:-1;;18863:29:194;18854:39;;;;18895:4;18850:50;;18636:270;-1:-1:-1;;18636:270:194:o;18911:1044::-;19098:2;19087:9;19080:21;19061:4;19126:6;19120:13;19142:38;19177:2;19142:38;:::i;:::-;19216:2;19211;19200:9;19196:18;19189:30;;19266:2;19258:6;19254:15;19248:22;19279:48;19314:12;19279:48;:::i;:::-;19363:12;19358:2;19347:9;19343:18;19336:40;;19457:1;19453;19448:3;19444:11;19440:19;19434:2;19426:6;19422:15;19416:22;19412:48;19407:2;19396:9;19392:18;19385:76;19516:2;19508:6;19504:15;19498:22;19492:3;19481:9;19477:19;19470:51;19576:3;19568:6;19564:16;19558:23;19552:3;19541:9;19537:19;19530:52;19631:3;19623:6;19619:16;19613:23;19645:55;19695:3;19684:9;19680:19;19664:14;-1:-1:-1;;;;;1892:31:194;1880:44;;1826:104;19645:55;;19755:3;19747:6;19743:16;19737:23;19731:3;19720:9;19716:19;19709:52;19810:3;19802:6;19798:16;19792:23;19834:6;19876:2;19871;19860:9;19856:18;19849:30;;19896:53;19944:3;19933:9;19929:19;19913:14;19896:53;:::i;19960:184::-;20030:6;20083:2;20071:9;20062:7;20058:23;20054:32;20051:52;;;20099:1;20096;20089:12;20051:52;-1:-1:-1;20122:16:194;;19960:184;-1:-1:-1;19960:184:194:o;20149:128::-;20216:9;;;20237:11;;;20234:37;;;20251:18;;:::i;20282:274::-;-1:-1:-1;;;;;20474:32:194;;;;20456:51;;20538:2;20523:18;;20516:34;20444:2;20429:18;;20282:274::o;20561:118::-;20647:5;20640:13;20633:21;20626:5;20623:32;20613:60;;20669:1;20666;20659:12;20684:245;20751:6;20804:2;20792:9;20783:7;20779:23;20775:32;20772:52;;;20820:1;20817;20810:12;20772:52;20852:9;20846:16;20871:28;20893:5;20871:28;:::i;20934:565::-;21049:6;21057;21065;21118:2;21106:9;21097:7;21093:23;21089:32;21086:52;;;21134:1;21131;21124:12;21086:52;21174:9;21161:23;-1:-1:-1;;;;;21199:6:194;21196:30;21193:50;;;21239:1;21236;21229:12;21193:50;21262:62;21316:7;21307:6;21296:9;21292:22;21262:62;:::i;:::-;21252:72;;;21374:2;21363:9;21359:18;21346:32;21387:31;21412:5;21387:31;:::i;:::-;20934:565;;21437:5;;-1:-1:-1;;;21489:2:194;21474:18;;;;21461:32;;20934:565::o;21504:329::-;21601:4;21659:11;21646:25;21753:3;21749:8;21738;21722:14;21718:29;21714:44;21694:18;21690:69;21680:97;;21773:1;21770;21763:12;21680:97;21794:33;;;;;21504:329;-1:-1:-1;;21504:329:194:o;21838:271::-;21911:6;21964:2;21952:9;21943:7;21939:23;21935:32;21932:52;;;21980:1;21977;21970:12;21932:52;22019:9;22006:23;22038:41;22073:5;22038:41;:::i;22114:247::-;22173:6;22226:2;22214:9;22205:7;22201:23;22197:32;22194:52;;;22242:1;22239;22232:12;22194:52;22281:9;22268:23;22300:31;22325:5;22300:31;:::i;22366:153::-;22444:20;;22493:1;22483:12;;22473:40;;22509:1;22506;22499:12;22524:156;22590:20;;22650:4;22639:16;;22629:27;;22619:55;;22670:1;22667;22660:12;22685:868;22775:6;22828:3;22816:9;22807:7;22803:23;22799:33;22796:53;;;22845:1;22842;22835:12;22796:53;22878:2;22872:9;22920:3;22912:6;22908:16;22990:6;22978:10;22975:22;-1:-1:-1;;;;;22942:10:194;22939:34;22936:62;22933:88;;;23001:18;;:::i;:::-;23037:2;23030:22;23076:39;23105:9;23076:39;:::i;:::-;23068:6;23061:55;23177:2;23166:9;23162:18;23149:32;23144:2;23136:6;23132:15;23125:57;23243:2;23232:9;23228:18;23215:32;23210:2;23202:6;23198:15;23191:57;23309:2;23298:9;23294:18;23281:32;23276:2;23268:6;23264:15;23257:57;23348:37;23380:3;23369:9;23365:19;23348:37;:::i;:::-;23342:3;23334:6;23330:16;23323:63;23448:3;23437:9;23433:19;23420:33;23414:3;23406:6;23402:16;23395:59;23516:3;23505:9;23501:19;23488:33;23482:3;23474:6;23470:16;23463:59;23541:6;23531:16;;;22685:868;;;;:::o;23558:385::-;-1:-1:-1;;;;;23810:15:194;;;23792:34;;23862:15;;;;23857:2;23842:18;;23835:43;23921:14;;23914:22;23909:2;23894:18;;23887:50;23742:2;23727:18;;23558:385::o;23948:296::-;24018:5;24077:3;24064:17;24163:3;24159:8;24148;24132:14;24128:29;24124:44;24104:18;24100:69;24090:97;;24183:1;24180;24173:12;24090:97;24205:33;;;;23948:296;-1:-1:-1;;23948:296:194:o;24249:500::-;24307:5;24314:6;24374:3;24361:17;24460:2;24456:7;24445:8;24429:14;24425:29;24421:43;24401:18;24397:68;24387:96;;24479:1;24476;24469:12;24387:96;24507:33;;24611:4;24598:18;;;-1:-1:-1;24559:21:194;;-1:-1:-1;;;;;;24628:30:194;;24625:50;;;24671:1;24668;24661:12;24625:50;24718:6;24702:14;24698:27;24691:5;24687:39;24684:59;;;24739:1;24736;24729:12;24754:266;24842:6;24837:3;24830:19;24894:6;24887:5;24880:4;24875:3;24871:14;24858:43;-1:-1:-1;24946:1:194;24921:16;;;24939:4;24917:27;;;24910:38;;;;25002:2;24981:15;;;-1:-1:-1;;24977:29:194;24968:39;;;24964:50;;24754:266::o;25025:1169::-;25087:3;25115:6;25158:5;25145:19;25173:43;25208:7;25173:43;:::i;:::-;25225;25260:7;25225:43;:::i;:::-;25277:20;;25345:4;25334:16;;25321:30;25360:43;25321:30;25360:43;:::i;:::-;25412;25447:7;25412:43;:::i;:::-;25480:4;25471:14;;25464:31;25543:4;25532:16;;25519:30;25558:33;25519:30;25558:33;:::i;:::-;-1:-1:-1;;;;;25623:33:194;25616:4;25607:14;;25600:57;25713:4;25702:16;;;25689:30;25673:14;;;25666:54;25776:4;25765:16;;;25752:30;25736:14;;;25729:54;25812:36;25644:3;25831:16;;25812:36;:::i;:::-;-1:-1:-1;;;;;1892:31:194;25899:4;25890:14;;1880:44;25961:4;25950:16;;;25937:30;25921:14;;;25914:54;26013:55;26062:4;26051:16;;25954:5;26013:55;:::i;:::-;26100:2;26093:4;26088:3;26084:14;26077:26;26119:69;26184:2;26179:3;26175:12;26161;26145:14;26119:69;:::i;26199:704::-;26267:3;26313:5;26300:19;26328:43;26363:7;26328:43;:::i;:::-;26380;26415:7;26380:43;:::i;:::-;26432:20;;26508:4;26497:16;;;26484:30;26468:14;;;26461:54;26563:4;26552:16;;26539:30;26578:33;26539:30;26578:33;:::i;:::-;-1:-1:-1;;;;;26643:33:194;26636:4;26627:14;;26620:57;26720:55;26769:4;26758:16;;26762:5;26720:55;:::i;:::-;26807:4;26800;26795:3;26791:14;26784:28;26828:69;26891:4;26886:3;26882:14;26868:12;26854;26828:69;:::i;26908:1293::-;26971:3;27017:5;27004:19;27032:33;27057:7;27032:33;:::i;:::-;-1:-1:-1;;;;;27124:16:194;;;27112:29;;27189:4;27178:16;;27165:30;;27204:33;27165:30;27204:33;:::i;:::-;27269:16;;;27262:4;27253:14;;27246:40;27334:4;27323:16;;27310:30;;27349:33;27310:30;27349:33;:::i;:::-;27414:16;27407:4;27398:14;;27391:40;27460:67;27521:4;27510:16;;27514:5;27460:67;:::i;:::-;27559:4;27552;27547:3;27543:14;27536:28;27585:67;27646:4;27641:3;27637:14;27623:12;27585:67;:::i;:::-;27573:79;;27683:67;27744:4;27737:5;27733:16;27726:5;27683:67;:::i;:::-;27792:3;27786:4;27782:14;27775:4;27770:3;27766:14;27759:38;27820:59;27874:4;27858:14;27820:59;:::i;:::-;27806:73;;;27938:4;27931:5;27927:16;27914:30;28023:3;28019:8;28011:5;27995:14;27991:26;27987:41;27967:18;27963:66;27953:94;;28043:1;28040;28033:12;27953:94;28091:3;28083:6;28079:16;28072:4;28067:3;28063:14;28056:40;28112:83;28188:6;28180:5;28160:18;28156:30;28112:83;:::i;28206:451::-;28453:2;28442:9;28435:21;28416:4;28473:66;28535:2;28524:9;28520:18;28512:6;28473:66;:::i;:::-;-1:-1:-1;;;;;28575:32:194;;;;28570:2;28555:18;;28548:60;-1:-1:-1;28639:2:194;28624:18;28617:34;28465:74;28206:451;-1:-1:-1;28206:451:194:o;28662:519::-;-1:-1:-1;;;;;28962:15:194;;;28944:34;;29014:15;;29009:2;28994:18;;28987:43;29061:2;29046:18;;29039:34;;;29109:3;29104:2;29089:18;;29082:31;;;28887:4;;29130:45;;29155:19;;29147:6;29130:45;:::i;29724:451::-;29971:2;29960:9;29953:21;29934:4;29991:66;30053:2;30042:9;30038:18;30030:6;29991:66;:::i;:::-;30088:2;30073:18;;30066:34;;;;-1:-1:-1;;;;;;30136:32:194;;;;30131:2;30116:18;;;30109:60;29983:74;29724:451;-1:-1:-1;29724:451:194:o;30180:415::-;30442:1;30438;30433:3;30429:11;30425:19;30417:6;30413:32;30402:9;30395:51;30482:6;30477:2;30466:9;30462:18;30455:34;30525:2;30520;30509:9;30505:18;30498:30;30376:4;30545:44;30585:2;30574:9;30570:18;30562:6;30545:44;:::i;30600:127::-;30661:10;30656:3;30652:20;30649:1;30642:31;30692:4;30689:1;30682:15;30716:4;30713:1;30706:15;30732:241;30788:6;30841:2;30829:9;30820:7;30816:23;30812:32;30809:52;;;30857:1;30854;30847:12;30809:52;30896:9;30883:23;30915:28;30937:5;30915:28;:::i;30978:521::-;31055:4;31061:6;31121:11;31108:25;31215:2;31211:7;31200:8;31184:14;31180:29;31176:43;31156:18;31152:68;31142:96;;31234:1;31231;31224:12;31142:96;31261:33;;31313:20;;;-1:-1:-1;;;;;;31345:30:194;;31342:50;;;31388:1;31385;31378:12;31342:50;31421:4;31409:17;;-1:-1:-1;31452:14:194;31448:27;;;31438:38;;31435:58;;;31489:1;31486;31479:12;31504:271;31687:6;31679;31674:3;31661:33;31643:3;31713:16;;31738:13;;;31713:16;31504:271;-1:-1:-1;31504:271:194:o;31780:410::-;31867:6;31875;31883;31936:2;31924:9;31915:7;31911:23;31907:32;31904:52;;;31952:1;31949;31942:12;31904:52;31984:9;31978:16;-1:-1:-1;;;;;32027:5:194;32023:30;32016:5;32013:41;32003:69;;32068:1;32065;32058:12;32003:69;32136:2;32121:18;;32115:25;32180:2;32165:18;;;32159:25;32091:5;;32115:25;;-1:-1:-1;32159:25:194;31780:410;-1:-1:-1;;;31780:410:194:o;32377:287::-;32506:3;32544:6;32538:13;32560:66;32619:6;32614:3;32607:4;32599:6;32595:17;32560:66;:::i;32669:125::-;32734:9;;;32755:10;;;32752:36;;;32768:18;;:::i;32799:251::-;32869:6;32922:2;32910:9;32901:7;32897:23;32893:32;32890:52;;;32938:1;32935;32928:12;32890:52;32970:9;32964:16;32989:31;33014:5;32989:31;:::i;33578:830::-;33932:4;33961:3;33973:60;34023:9;34014:6;34008:13;33476:12;;-1:-1:-1;;;;;33472:38:194;33460:51;;33560:4;33549:16;;;33543:23;33527:14;;33520:47;33390:183;33973:60;34089:4;34081:6;34077:17;34071:24;34064:4;34053:9;34049:20;34042:54;34152:4;34144:6;34140:17;34134:24;34127:4;34116:9;34112:20;34105:54;34168:63;34226:3;34215:9;34211:19;34203:6;33476:12;;-1:-1:-1;;;;;33472:38:194;33460:51;;33560:4;33549:16;;;33543:23;33527:14;;33520:47;33390:183;34168:63;-1:-1:-1;;;;;34268:32:194;;34262:3;34247:19;;34240:61;34332:3;34317:19;;34310:31;;;34358:44;34383:18;;;34375:6;34358:44;:::i;34413:280::-;34602:2;34591:9;34584:21;34565:4;34622:65;34683:2;34672:9;34668:18;34660:6;34622:65;:::i;34698:1056::-;-1:-1:-1;;;;;35029:32:194;;35011:51;;34970:4;34999:3;35081:36;35110:6;35081:36;:::i;:::-;35143:1;35139:2;35136:9;35126:43;;35149:18;;:::i;:::-;35205:2;35200;35189:9;35185:18;35178:30;;35269:2;35261:6;35257:15;35244:29;35239:2;35228:9;35224:18;35217:57;35335:2;35327:6;35323:15;35310:29;35305:2;35294:9;35290:18;35283:57;35402:2;35394:6;35390:15;35377:29;35371:3;35360:9;35356:19;35349:58;35484:4;35448:34;35477:3;35469:6;35465:16;35448:34;:::i;:::-;35444:45;35438:3;35427:9;35423:19;35416:74;35552:3;35544:6;35540:16;35527:30;35521:3;35510:9;35506:19;35499:59;35620:3;35612:6;35608:16;35595:30;35589:3;35578:9;35574:19;35567:59;35663:2;35657:3;35646:9;35642:19;35635:31;35683:65;35744:2;35733:9;35729:18;35721:6;35683:65;:::i;38960:219::-;39109:2;39098:9;39091:21;39072:4;39129:44;39169:2;39158:9;39154:18;39146:6;39129:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "52027": [
        {
          "start": 728,
          "length": 32
        },
        {
          "start": 1314,
          "length": 32
        },
        {
          "start": 1593,
          "length": 32
        },
        {
          "start": 5270,
          "length": 32
        },
        {
          "start": 5540,
          "length": 32
        },
        {
          "start": 7266,
          "length": 32
        },
        {
          "start": 7519,
          "length": 32
        },
        {
          "start": 9595,
          "length": 32
        },
        {
          "start": 9953,
          "length": 32
        },
        {
          "start": 10241,
          "length": 32
        }
      ],
      "52031": [
        {
          "start": 864,
          "length": 32
        },
        {
          "start": 1155,
          "length": 32
        },
        {
          "start": 2379,
          "length": 32
        },
        {
          "start": 3057,
          "length": 32
        },
        {
          "start": 4133,
          "length": 32
        },
        {
          "start": 6301,
          "length": 32
        }
      ],
      "52035": [
        {
          "start": 806,
          "length": 32
        },
        {
          "start": 1895,
          "length": 32
        },
        {
          "start": 3004,
          "length": 32
        },
        {
          "start": 3356,
          "length": 32
        },
        {
          "start": 4209,
          "length": 32
        },
        {
          "start": 10391,
          "length": 32
        },
        {
          "start": 11113,
          "length": 32
        },
        {
          "start": 11203,
          "length": 32
        }
      ],
      "52039": [
        {
          "start": 342,
          "length": 32
        },
        {
          "start": 1940,
          "length": 32
        },
        {
          "start": 2080,
          "length": 32
        },
        {
          "start": 2870,
          "length": 32
        },
        {
          "start": 9642,
          "length": 32
        },
        {
          "start": 9793,
          "length": 32
        },
        {
          "start": 10002,
          "length": 32
        },
        {
          "start": 10114,
          "length": 32
        },
        {
          "start": 10290,
          "length": 32
        },
        {
          "start": 11248,
          "length": 32
        },
        {
          "start": 11381,
          "length": 32
        }
      ],
      "52042": [
        {
          "start": 592,
          "length": 32
        },
        {
          "start": 946,
          "length": 32
        },
        {
          "start": 3226,
          "length": 32
        },
        {
          "start": 3446,
          "length": 32
        },
        {
          "start": 3725,
          "length": 32
        },
        {
          "start": 3866,
          "length": 32
        },
        {
          "start": 3915,
          "length": 32
        },
        {
          "start": 4012,
          "length": 32
        },
        {
          "start": 4176,
          "length": 32
        },
        {
          "start": 4437,
          "length": 32
        },
        {
          "start": 4510,
          "length": 32
        },
        {
          "start": 4750,
          "length": 32
        },
        {
          "start": 4965,
          "length": 32
        },
        {
          "start": 5172,
          "length": 32
        },
        {
          "start": 5678,
          "length": 32
        },
        {
          "start": 5808,
          "length": 32
        },
        {
          "start": 6180,
          "length": 32
        },
        {
          "start": 6344,
          "length": 32
        },
        {
          "start": 6571,
          "length": 32
        },
        {
          "start": 6690,
          "length": 32
        },
        {
          "start": 7168,
          "length": 32
        }
      ],
      "52046": [
        {
          "start": 689,
          "length": 32
        },
        {
          "start": 1708,
          "length": 32
        },
        {
          "start": 2220,
          "length": 32
        },
        {
          "start": 2495,
          "length": 32
        },
        {
          "start": 2588,
          "length": 32
        },
        {
          "start": 10501,
          "length": 32
        },
        {
          "start": 10657,
          "length": 32
        },
        {
          "start": 11484,
          "length": 32
        }
      ],
      "52050": [
        {
          "start": 767,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CALLBACK_SUCCESS()": "8237e538",
    "CALLBACK_SUCCESS_CREDIT()": "0f13be2a",
    "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "56415a90",
    "cdm()": "e2dfb317",
    "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),uint256,address)": "ede2bf5f",
    "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "0567d4b1",
    "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "4ad4d4ad",
    "flashlender()": "ee58918a",
    "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "301a1131",
    "minter()": "07546172",
    "multisend(address[],bytes[],bool[])": "f38584e0",
    "onCreditFlashLoan(address,uint256,uint256,bytes)": "16d8f165",
    "onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b",
    "permit2()": "12261ee7",
    "poolAction()": "e3008e5a",
    "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "faa99405",
    "self()": "7104ddb2",
    "stablecoin()": "e9cbd822",
    "swapAction()": "a888828b",
    "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "6c747057",
    "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "96c2c408"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flashlender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapActions_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"PoolAction_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Action__revertBytes_emptyRevertBytes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toInt256_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__borrow_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidResidualRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__delegateViaStablecoin_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__deposit_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onCreditFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__repay_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS_CREDIT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cdm\",\"outputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolActionParams\",\"name\":\"auxAction\",\"type\":\"tuple\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"subCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"residualRecipient\",\"type\":\"address\"}],\"name\":\"decreaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"depositAndBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashlender\",\"outputs\":[{\"internalType\":\"contract IFlashlender\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolActionParams\",\"name\":\"auxAction\",\"type\":\"tuple\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"upFrontToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"upFrontAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"increaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"contract IMinter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"bool[]\",\"name\":\"delegateCall\",\"type\":\"bool[]\"}],\"name\":\"multisend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onCreditFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolAction\",\"outputs\":[{\"internalType\":\"contract PoolAction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"self\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IStablecoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAction\",\"outputs\":[{\"internalType\":\"contract SwapAction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"withdrawAndRepay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"creditParams\":\"The borrow parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),uint256,address)\":{\"params\":{\"leverParams\":\"The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan\",\"residualRecipient\":\"Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to\",\"subCollateral\":\"The amount of collateral to withdraw from the position [wad]\"}},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralizer\":\"The address to transfer `upFrontToken` from\",\"leverParams\":\"The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token\",\"permitParams\":\"The permit parameters for the `collateralizer` to transfer `upFrontToken`\",\"upFrontAmount\":\"The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]\",\"upFrontToken\":\"The token to transfer up front to the LeverAction contract\"}},\"multisend(address[],bytes[],bool[])\":{\"params\":{\"data\":\"The encoded data to call each address with\",\"delegateCall\":\"Whether or not to use delegatecall or call\",\"targets\":\"The addresses to call\"}},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the credit flash loan\"}},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the flash loan\"}},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}}},\"title\":\"PositionActionYV\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)\"},\"cdm()\":{\"notice\":\"The CDM contract\"},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),uint256,address)\":{\"notice\":\"Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral\"},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral to a CDP Vault\"},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral and debt to a CDP Vault\"},\"flashlender()\":{\"notice\":\"The flashloan contract\"},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Increase the leverage of a position by taking out a flash loan and buying Stablecoin\"},\"minter()\":{\"notice\":\"Stablecoin mint\"},\"multisend(address[],bytes[],bool[])\":{\"notice\":\"Allows for multiple calls to be made to cover use cases not covered by the other functions\"},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the credit flash loan taken out in decreaseLever\"},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the flash loan taken out in increaseLever\"},\"permit2()\":{\"notice\":\"Permit2\"},\"poolAction()\":{\"notice\":\"The PoolAction contract\"},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)\"},\"self()\":{\"notice\":\"The address of this contract\"},\"stablecoin()\":{\"notice\":\"Stablecoin token\"},\"swapAction()\":{\"notice\":\"The SwapAction contract\"},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Removes collateral from a CDP Vault\"},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Removes collateral and debt from a CDP Vault\"}},\"notice\":\"Yearn Vault version 0.4.6 implementation of PositionAction base contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxy/PositionActionYV.sol\":\"PositionActionYV\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d\",\"dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"src/CDM.sol\":{\"keccak256\":\"0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99\",\"dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L\"]},\"src/CDPVault.sol\":{\"keccak256\":\"0xf2f5dbf0b94224a4aed520fb1d1b09b377470827c6da8dba1760ac0ea4efa0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e97a36351d85c0c1c4ac44ec99e16b8b15e548db6272a1ef0ef1256800c38009\",\"dweb:/ipfs/QmNnxqR2xse22M741qAeXBDcsQkLbC5MzhmieLsan3Ehz5\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e\",\"dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT\"]},\"src/interfaces/IBuffer.sol\":{\"keccak256\":\"0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff\",\"dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/ICDPVault.sol\":{\"keccak256\":\"0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f\",\"dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE\"]},\"src/interfaces/ICDPVault_FactoryBase.sol\":{\"keccak256\":\"0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e\",\"dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD\"]},\"src/interfaces/IFlashlender.sol\":{\"keccak256\":\"0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2\",\"dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3\"]},\"src/interfaces/IInterestRateModel.sol\":{\"keccak256\":\"0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599\",\"dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA\"]},\"src/interfaces/IMinter.sol\":{\"keccak256\":\"0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54\",\"dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x23103163e03628c0e8291b368b27cf831c3e55ebe544745b833b6df9a9acada2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58cc66f58fca72fd73c240dca9501165e083d248ff085ee4dc6a7719c224926c\",\"dweb:/ipfs/QmWqhtXoXTfYTkAao3a3F34XVjFsyxVqPCf2StG6udS617\"]},\"src/interfaces/IPause.sol\":{\"keccak256\":\"0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec\",\"dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]},\"src/interfaces/IStablecoin.sol\":{\"keccak256\":\"0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461\",\"dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS\"]},\"src/proxy/BaseAction.sol\":{\"keccak256\":\"0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24\",\"dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR\"]},\"src/proxy/PoolAction.sol\":{\"keccak256\":\"0xeca63a0fcc305e800df0977306fa9bcdeaa7dd010805a032534245546b454f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7af4b5c7297c209bfb299505b2d76f9ec1e76fc6d5c4eee68246cb3824c33fd\",\"dweb:/ipfs/QmXkDfVsrGvyEu3Hp8gaCdEKqraGP1RvrPNkfxwPRGgYdT\"]},\"src/proxy/PositionAction.sol\":{\"keccak256\":\"0xe2f6f2e77524df3e7a3a8cccdcf21aeb4e5285d5d4760233313d9146dff97d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edf8d7642aab8d6341476c82f881fac4c80c35be25dcd22b22f6b09c66174db5\",\"dweb:/ipfs/Qmc89SFb9PSgAkXvb8LSiVhctRAPyt8GoWKwavQFw5uybX\"]},\"src/proxy/PositionActionYV.sol\":{\"keccak256\":\"0x9be9e62497ff2821cab50cb10f2457379deea2cde23cee988962f2abf1a6061c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a512b599b19587b40fa9e5695fc4cd699e1f062fd6e169773de7b52c24a9cdbd\",\"dweb:/ipfs/Qmd9qCh9V3vrNaZUyvgdGdCzCUzazJpVaE2dpWrDjfzL9T\"]},\"src/proxy/SwapAction.sol\":{\"keccak256\":\"0x2e0bb71458c787799f9f11c2882886cf68a47e3424b81e6f058ebcdc78f4e6e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e682d7d5df6325b21649bd790156b6a6e21884647f0a25edc3b9454a5f60c6c\",\"dweb:/ipfs/QmNNVDMsBC4nf8VeJkt8nYEKFZPsDy6ASnTSFKr3Cs6pc1\"]},\"src/proxy/TransferAction.sol\":{\"keccak256\":\"0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756\",\"dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt\"]},\"src/utils/DoubleLinkedList.sol\":{\"keccak256\":\"0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb\",\"dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/utils/Pause.sol\":{\"keccak256\":\"0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1\",\"dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL\"]},\"src/utils/Permission.sol\":{\"keccak256\":\"0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb\",\"dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p\"]},\"src/vendor/IBalancerVault.sol\":{\"keccak256\":\"0x17c849f6c03184ce5d965ec375d8768857b2b755b8d699bd4a25ef36fff374af\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://82c4bd8c48367dd81f009e17320618d40fdabf602ac0e9e5690e9b63180ad176\",\"dweb:/ipfs/QmRMrxFFXpLCVmSfCndn6MnZkRn4CfWSiXLfQyxwbXJjXm\"]},\"src/vendor/IUniswapV3Router.sol\":{\"keccak256\":\"0x86e4b40c08b0afe97a2c8a8bfb344f7e1c90dc3c1ae0d5809fc8157c2496ab1a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://b41f836677a11b8d3c063ddc7da67362a0ec4521417f5e6a2fa9ccc1484de9d9\",\"dweb:/ipfs/QmP3przMtYQ3BxTz3pxDtFpg1CorXTqatdHAfAMJzTsqzz\"]},\"src/vendor/IYVault.sol\":{\"keccak256\":\"0x79d3af9b4ec00cea17019c8a9016056c19149a9e6c7d5bfa79d96599a09936f1\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9e08e1a00c492b8b2fcbe42e4f600aab98c7c168b4bc98c1b0d6274e6f12abf9\",\"dweb:/ipfs/QmSny9sHWQ3CjbznC1g5KtRKAbZw3f9iwijnaeoogPD63p\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flashlender_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "swapActions_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "PoolAction_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Action__revertBytes_emptyRevertBytes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toInt256_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__borrow_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidResidualRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__deposit_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onCreditFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onlyDelegatecall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__repay_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS_CREDIT",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cdm",
          "outputs": [
            {
              "internalType": "contract ICDM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct PoolActionParams",
                  "name": "auxAction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum Protocol",
                      "name": "protocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minOut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "subCollateral",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "residualRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseLever"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndBorrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flashlender",
          "outputs": [
            {
              "internalType": "contract IFlashlender",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct PoolActionParams",
                  "name": "auxAction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum Protocol",
                      "name": "protocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minOut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "upFrontToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "upFrontAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseLever"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "contract IMinter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            },
            {
              "internalType": "bool[]",
              "name": "delegateCall",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multisend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCreditFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permit2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolAction",
          "outputs": [
            {
              "internalType": "contract PoolAction",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "self",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stablecoin",
          "outputs": [
            {
              "internalType": "contract IStablecoin",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapAction",
          "outputs": [
            {
              "internalType": "contract SwapAction",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAndRepay"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "creditParams": "The borrow parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),uint256,address)": {
            "params": {
              "leverParams": "The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan",
              "residualRecipient": "Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to",
              "subCollateral": "The amount of collateral to withdraw from the position [wad]"
            }
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralizer": "The address to transfer `upFrontToken` from",
              "leverParams": "The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token",
              "permitParams": "The permit parameters for the `collateralizer` to transfer `upFrontToken`",
              "upFrontAmount": "The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]",
              "upFrontToken": "The token to transfer up front to the LeverAction contract"
            }
          },
          "multisend(address[],bytes[],bool[])": {
            "params": {
              "data": "The encoded data to call each address with",
              "delegateCall": "Whether or not to use delegatecall or call",
              "targets": "The addresses to call"
            }
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the credit flash loan"
            }
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the flash loan"
            }
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)"
          },
          "cdm()": {
            "notice": "The CDM contract"
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),uint256,address)": {
            "notice": "Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral"
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral to a CDP Vault"
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral and debt to a CDP Vault"
          },
          "flashlender()": {
            "notice": "The flashloan contract"
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,address,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Increase the leverage of a position by taking out a flash loan and buying Stablecoin"
          },
          "minter()": {
            "notice": "Stablecoin mint"
          },
          "multisend(address[],bytes[],bool[])": {
            "notice": "Allows for multiple calls to be made to cover use cases not covered by the other functions"
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "notice": "Callback function for the credit flash loan taken out in decreaseLever"
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "notice": "Callback function for the flash loan taken out in increaseLever"
          },
          "permit2()": {
            "notice": "Permit2"
          },
          "poolAction()": {
            "notice": "The PoolAction contract"
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)"
          },
          "self()": {
            "notice": "The address of this contract"
          },
          "stablecoin()": {
            "notice": "Stablecoin token"
          },
          "swapAction()": {
            "notice": "The SwapAction contract"
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Removes collateral from a CDP Vault"
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Removes collateral and debt from a CDP Vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/proxy/PositionActionYV.sol": "PositionActionYV"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319",
        "urls": [
          "bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d",
          "dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "src/CDM.sol": {
        "keccak256": "0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5",
        "urls": [
          "bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99",
          "dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L"
        ],
        "license": "MIT"
      },
      "src/CDPVault.sol": {
        "keccak256": "0xf2f5dbf0b94224a4aed520fb1d1b09b377470827c6da8dba1760ac0ea4efa0b4",
        "urls": [
          "bzz-raw://e97a36351d85c0c1c4ac44ec99e16b8b15e548db6272a1ef0ef1256800c38009",
          "dweb:/ipfs/QmNnxqR2xse22M741qAeXBDcsQkLbC5MzhmieLsan3Ehz5"
        ],
        "license": "MIT"
      },
      "src/InterestRateModel.sol": {
        "keccak256": "0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb",
        "urls": [
          "bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e",
          "dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBuffer.sol": {
        "keccak256": "0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f",
        "urls": [
          "bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff",
          "dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault.sol": {
        "keccak256": "0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d",
        "urls": [
          "bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f",
          "dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_FactoryBase.sol": {
        "keccak256": "0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717",
        "urls": [
          "bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e",
          "dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFlashlender.sol": {
        "keccak256": "0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d",
        "urls": [
          "bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2",
          "dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IInterestRateModel.sol": {
        "keccak256": "0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055",
        "urls": [
          "bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599",
          "dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IMinter.sol": {
        "keccak256": "0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3",
        "urls": [
          "bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54",
          "dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x23103163e03628c0e8291b368b27cf831c3e55ebe544745b833b6df9a9acada2",
        "urls": [
          "bzz-raw://58cc66f58fca72fd73c240dca9501165e083d248ff085ee4dc6a7719c224926c",
          "dweb:/ipfs/QmWqhtXoXTfYTkAao3a3F34XVjFsyxVqPCf2StG6udS617"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPause.sol": {
        "keccak256": "0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d",
        "urls": [
          "bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec",
          "dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IStablecoin.sol": {
        "keccak256": "0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239",
        "urls": [
          "bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461",
          "dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/proxy/BaseAction.sol": {
        "keccak256": "0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab",
        "urls": [
          "bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24",
          "dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR"
        ],
        "license": "MIT"
      },
      "src/proxy/PoolAction.sol": {
        "keccak256": "0xeca63a0fcc305e800df0977306fa9bcdeaa7dd010805a032534245546b454f74",
        "urls": [
          "bzz-raw://e7af4b5c7297c209bfb299505b2d76f9ec1e76fc6d5c4eee68246cb3824c33fd",
          "dweb:/ipfs/QmXkDfVsrGvyEu3Hp8gaCdEKqraGP1RvrPNkfxwPRGgYdT"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction.sol": {
        "keccak256": "0xe2f6f2e77524df3e7a3a8cccdcf21aeb4e5285d5d4760233313d9146dff97d7a",
        "urls": [
          "bzz-raw://edf8d7642aab8d6341476c82f881fac4c80c35be25dcd22b22f6b09c66174db5",
          "dweb:/ipfs/Qmc89SFb9PSgAkXvb8LSiVhctRAPyt8GoWKwavQFw5uybX"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionActionYV.sol": {
        "keccak256": "0x9be9e62497ff2821cab50cb10f2457379deea2cde23cee988962f2abf1a6061c",
        "urls": [
          "bzz-raw://a512b599b19587b40fa9e5695fc4cd699e1f062fd6e169773de7b52c24a9cdbd",
          "dweb:/ipfs/Qmd9qCh9V3vrNaZUyvgdGdCzCUzazJpVaE2dpWrDjfzL9T"
        ],
        "license": "MIT"
      },
      "src/proxy/SwapAction.sol": {
        "keccak256": "0x2e0bb71458c787799f9f11c2882886cf68a47e3424b81e6f058ebcdc78f4e6e6",
        "urls": [
          "bzz-raw://6e682d7d5df6325b21649bd790156b6a6e21884647f0a25edc3b9454a5f60c6c",
          "dweb:/ipfs/QmNNVDMsBC4nf8VeJkt8nYEKFZPsDy6ASnTSFKr3Cs6pc1"
        ],
        "license": "MIT"
      },
      "src/proxy/TransferAction.sol": {
        "keccak256": "0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e",
        "urls": [
          "bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756",
          "dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt"
        ],
        "license": "MIT"
      },
      "src/utils/DoubleLinkedList.sol": {
        "keccak256": "0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691",
        "urls": [
          "bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb",
          "dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/utils/Pause.sol": {
        "keccak256": "0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19",
        "urls": [
          "bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1",
          "dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL"
        ],
        "license": "MIT"
      },
      "src/utils/Permission.sol": {
        "keccak256": "0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1",
        "urls": [
          "bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb",
          "dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p"
        ],
        "license": "MIT"
      },
      "src/vendor/IBalancerVault.sol": {
        "keccak256": "0x17c849f6c03184ce5d965ec375d8768857b2b755b8d699bd4a25ef36fff374af",
        "urls": [
          "bzz-raw://82c4bd8c48367dd81f009e17320618d40fdabf602ac0e9e5690e9b63180ad176",
          "dweb:/ipfs/QmRMrxFFXpLCVmSfCndn6MnZkRn4CfWSiXLfQyxwbXJjXm"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/vendor/IUniswapV3Router.sol": {
        "keccak256": "0x86e4b40c08b0afe97a2c8a8bfb344f7e1c90dc3c1ae0d5809fc8157c2496ab1a",
        "urls": [
          "bzz-raw://b41f836677a11b8d3c063ddc7da67362a0ec4521417f5e6a2fa9ccc1484de9d9",
          "dweb:/ipfs/QmP3przMtYQ3BxTz3pxDtFpg1CorXTqatdHAfAMJzTsqzz"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/vendor/IYVault.sol": {
        "keccak256": "0x79d3af9b4ec00cea17019c8a9016056c19149a9e6c7d5bfa79d96599a09936f1",
        "urls": [
          "bzz-raw://9e08e1a00c492b8b2fcbe42e4f600aab98c7c168b4bc98c1b0d6274e6f12abf9",
          "dweb:/ipfs/QmSny9sHWQ3CjbznC1g5KtRKAbZw3f9iwijnaeoogPD63p"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/proxy/PositionActionYV.sol",
    "id": 55036,
    "exportedSymbols": {
      "ICDPVault": [
        49449
      ],
      "IERC20": [
        34464
      ],
      "IYVault": [
        136575
      ],
      "LeverParams": [
        52000
      ],
      "PositionAction": [
        53758
      ],
      "PositionActionYV": [
        55035
      ],
      "SafeERC20": [
        35920
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5602:127",
    "nodes": [
      {
        "id": 54738,
        "nodeType": "PragmaDirective",
        "src": "32:24:127",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 54740,
        "nodeType": "ImportDirective",
        "src": "58:69:127",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55036,
        "sourceUnit": 34465,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54739,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34464,
              "src": "66:6:127",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54742,
        "nodeType": "ImportDirective",
        "src": "128:81:127",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55036,
        "sourceUnit": 35921,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54741,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35920,
              "src": "136:9:127",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54744,
        "nodeType": "ImportDirective",
        "src": "211:46:127",
        "nodes": [],
        "absolutePath": "src/vendor/IYVault.sol",
        "file": "../vendor/IYVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55036,
        "sourceUnit": 136576,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54743,
              "name": "IYVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 136575,
              "src": "219:7:127",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54746,
        "nodeType": "ImportDirective",
        "src": "259:54:127",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDPVault.sol",
        "file": "../interfaces/ICDPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55036,
        "sourceUnit": 49450,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54745,
              "name": "ICDPVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49449,
              "src": "267:9:127",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54749,
        "nodeType": "ImportDirective",
        "src": "315:65:127",
        "nodes": [],
        "absolutePath": "src/proxy/PositionAction.sol",
        "file": "./PositionAction.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55036,
        "sourceUnit": 53759,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54747,
              "name": "PositionAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53758,
              "src": "323:14:127",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 54748,
              "name": "LeverParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52000,
              "src": "339:11:127",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55035,
        "nodeType": "ContractDefinition",
        "src": "495:5138:127",
        "nodes": [
          {
            "id": 54756,
            "nodeType": "UsingForDirective",
            "src": "726:27:127",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 54753,
              "name": "SafeERC20",
              "nameLocations": [
                "732:9:127"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35920,
              "src": "732:9:127"
            },
            "typeName": {
              "id": 54755,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54754,
                "name": "IERC20",
                "nameLocations": [
                  "746:6:127"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34464,
                "src": "746:6:127"
              },
              "referencedDeclaration": 34464,
              "src": "746:6:127",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$34464",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 54771,
            "nodeType": "FunctionDefinition",
            "src": "942:135:127",
            "nodes": [],
            "body": {
              "id": 54770,
              "nodeType": "Block",
              "src": "1075:2:127",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 54765,
                    "name": "flashlender_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54758,
                    "src": "1034:12:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 54766,
                    "name": "swapActions_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54760,
                    "src": "1048:12:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 54767,
                    "name": "PoolAction_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54762,
                    "src": "1062:11:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 54768,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 54764,
                  "name": "PositionAction",
                  "nameLocations": [
                    "1019:14:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53758,
                  "src": "1019:14:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "1019:55:127"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 54763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54758,
                  "mutability": "mutable",
                  "name": "flashlender_",
                  "nameLocation": "962:12:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54771,
                  "src": "954:20:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54760,
                  "mutability": "mutable",
                  "name": "swapActions_",
                  "nameLocation": "984:12:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54771,
                  "src": "976:20:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54762,
                  "mutability": "mutable",
                  "name": "PoolAction_",
                  "nameLocation": "1006:11:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54771,
                  "src": "998:19:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:65:127"
            },
            "returnParameters": {
              "id": 54769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:0:127"
            },
            "scope": 55035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54845,
            "nodeType": "FunctionDefinition",
            "src": "1542:621:127",
            "nodes": [],
            "body": {
              "id": 54844,
              "nodeType": "Block",
              "src": "1642:521:127",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54785
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54785,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "1660:10:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 54844,
                      "src": "1652:18:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 54784,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1652:7:127",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54794,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 54789,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54774,
                                "src": "1691:5:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 54788,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49449,
                              "src": "1681:9:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 54790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1681:16:127",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$49449",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 54791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1698:5:127",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49270,
                          "src": "1681:22:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 54792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1681:24:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 54787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1673:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 54786,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1673:7:127",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 54793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1673:33:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1652:54:127"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 54797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 54795,
                      "name": "src",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54776,
                      "src": "1821:3:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 54796,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54785,
                      "src": "1828:10:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1821:17:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54824,
                  "nodeType": "IfStatement",
                  "src": "1817:219:127",
                  "trueBody": {
                    "id": 54823,
                    "nodeType": "Block",
                    "src": "1840:196:127",
                    "statements": [
                      {
                        "assignments": [
                          54799
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54799,
                            "mutability": "mutable",
                            "name": "underlying",
                            "nameLocation": "1862:10:127",
                            "nodeType": "VariableDeclaration",
                            "scope": 54823,
                            "src": "1854:18:127",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 54798,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1854:7:127",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54805,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 54801,
                                  "name": "collateral",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54785,
                                  "src": "1883:10:127",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 54800,
                                "name": "IYVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 136575,
                                "src": "1875:7:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IYVault_$136575_$",
                                  "typeString": "type(contract IYVault)"
                                }
                              },
                              "id": 54802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1875:19:127",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IYVault_$136575",
                                "typeString": "contract IYVault"
                              }
                            },
                            "id": 54803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1895:5:127",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 136534,
                            "src": "1875:25:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 54804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1875:27:127",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1854:48:127"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54810,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54785,
                              "src": "1948:10:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 54811,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54778,
                              "src": "1960:6:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 54807,
                                  "name": "underlying",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54799,
                                  "src": "1923:10:127",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 54806,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34464,
                                "src": "1916:6:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 54808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1916:18:127",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$34464",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 54809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1935:12:127",
                            "memberName": "forceApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35777,
                            "src": "1916:31:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 54812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1916:51:127",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54813,
                        "nodeType": "ExpressionStatement",
                        "src": "1916:51:127"
                      },
                      {
                        "expression": {
                          "id": 54821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54814,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54778,
                            "src": "1981:6:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 54819,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54778,
                                "src": "2018:6:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 54816,
                                    "name": "collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54785,
                                    "src": "1998:10:127",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 54815,
                                  "name": "IYVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 136575,
                                  "src": "1990:7:127",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IYVault_$136575_$",
                                    "typeString": "type(contract IYVault)"
                                  }
                                },
                                "id": 54817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1990:19:127",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IYVault_$136575",
                                  "typeString": "contract IYVault"
                                }
                              },
                              "id": 54818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2010:7:127",
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 136574,
                              "src": "1990:27:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) external returns (uint256)"
                              }
                            },
                            "id": 54820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1990:35:127",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1981:44:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54822,
                        "nodeType": "ExpressionStatement",
                        "src": "1981:44:127"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54829,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54774,
                        "src": "2078:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54830,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54778,
                        "src": "2085:6:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54826,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54785,
                            "src": "2053:10:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54825,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "2046:6:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2046:18:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 54828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2065:12:127",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "2046:31:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 54831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:46:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54832,
                  "nodeType": "ExpressionStatement",
                  "src": "2046:46:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54839,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2142:4:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionActionYV_$55035",
                              "typeString": "contract PositionActionYV"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionActionYV_$55035",
                              "typeString": "contract PositionActionYV"
                            }
                          ],
                          "id": 54838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2134:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54837,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2134:7:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2134:13:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54841,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54778,
                        "src": "2149:6:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54834,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54774,
                            "src": "2119:5:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54833,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "2109:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 54835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2109:16:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 54836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2126:7:127",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49343,
                      "src": "2109:24:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 54842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:47:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 54783,
                  "id": 54843,
                  "nodeType": "Return",
                  "src": "2102:54:127"
                }
              ]
            },
            "baseFunctions": [
              52171
            ],
            "documentation": {
              "id": 54772,
              "nodeType": "StructuredDocumentation",
              "src": "1270:267:127",
              "text": "@notice Deposit collateral into the vault\n @param vault Address of the vault\n @param src Token passed in by the caller\n @param amount Amount of collateral to deposit [CDPVault.tokenScale()]\n @return Amount of collateral deposited [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDeposit",
            "nameLocation": "1551:10:127",
            "overrides": {
              "id": 54780,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1615:8:127"
            },
            "parameters": {
              "id": 54779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54774,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1570:5:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54845,
                  "src": "1562:13:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1562:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54776,
                  "mutability": "mutable",
                  "name": "src",
                  "nameLocation": "1585:3:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54845,
                  "src": "1577:11:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54778,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1598:6:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54845,
                  "src": "1590:14:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1561:44:127"
            },
            "returnParameters": {
              "id": 54783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54782,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54845,
                  "src": "1633:7:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1633:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1632:9:127"
            },
            "scope": 55035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54899,
            "nodeType": "FunctionDefinition",
            "src": "2449:524:127",
            "nodes": [],
            "body": {
              "id": 54898,
              "nodeType": "Block",
              "src": "2550:423:127",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54859
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54859,
                      "mutability": "mutable",
                      "name": "collateralWithdrawn",
                      "nameLocation": "2568:19:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 54898,
                      "src": "2560:27:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54858,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2560:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54870,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54866,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2624:4:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionActionYV_$55035",
                              "typeString": "contract PositionActionYV"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionActionYV_$55035",
                              "typeString": "contract PositionActionYV"
                            }
                          ],
                          "id": 54865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2616:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54864,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2616:7:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2616:13:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54868,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54852,
                        "src": "2631:6:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54861,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54848,
                            "src": "2600:5:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54860,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "2590:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 54862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2590:16:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 54863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2607:8:127",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49352,
                      "src": "2590:25:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 54869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2590:48:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2560:78:127"
                },
                {
                  "assignments": [
                    54872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54872,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "2755:10:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 54898,
                      "src": "2747:18:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 54871,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2747:7:127",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54881,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 54876,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54848,
                                "src": "2786:5:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 54875,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49449,
                              "src": "2776:9:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 54877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2776:16:127",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$49449",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 54878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2793:5:127",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49270,
                          "src": "2776:22:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 54879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2776:24:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 54874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2768:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 54873,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2768:7:127",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 54880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:33:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2747:54:127"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 54884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 54882,
                      "name": "dst",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54850,
                      "src": "2815:3:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 54883,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54872,
                      "src": "2822:10:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2815:17:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54895,
                  "nodeType": "IfStatement",
                  "src": "2811:119:127",
                  "trueBody": {
                    "id": 54894,
                    "nodeType": "Block",
                    "src": "2834:96:127",
                    "statements": [
                      {
                        "expression": {
                          "id": 54892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54885,
                            "name": "collateralWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54859,
                            "src": "2848:19:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 54890,
                                "name": "collateralWithdrawn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54859,
                                "src": "2899:19:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 54887,
                                    "name": "collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54872,
                                    "src": "2878:10:127",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 54886,
                                  "name": "IYVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 136575,
                                  "src": "2870:7:127",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IYVault_$136575_$",
                                    "typeString": "type(contract IYVault)"
                                  }
                                },
                                "id": 54888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2870:19:127",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IYVault_$136575",
                                  "typeString": "contract IYVault"
                                }
                              },
                              "id": 54889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2890:8:127",
                              "memberName": "withdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 136556,
                              "src": "2870:28:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) external returns (uint256)"
                              }
                            },
                            "id": 54891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2870:49:127",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2848:71:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54893,
                        "nodeType": "ExpressionStatement",
                        "src": "2848:71:127"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 54896,
                    "name": "collateralWithdrawn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54859,
                    "src": "2947:19:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 54857,
                  "id": 54897,
                  "nodeType": "Return",
                  "src": "2940:26:127"
                }
              ]
            },
            "baseFunctions": [
              52183
            ],
            "documentation": {
              "id": 54846,
              "nodeType": "StructuredDocumentation",
              "src": "2169:275:127",
              "text": "@notice Withdraw collateral from the vault\n @param vault Address of the vault\n @param dst Token the caller expects to receive\n @param amount Amount of collateral to withdraw [wad]\n @return Amount of collateral withdrawn [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onWithdraw",
            "nameLocation": "2458:11:127",
            "overrides": {
              "id": 54854,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2523:8:127"
            },
            "parameters": {
              "id": 54853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54848,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2478:5:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54899,
                  "src": "2470:13:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54850,
                  "mutability": "mutable",
                  "name": "dst",
                  "nameLocation": "2493:3:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54899,
                  "src": "2485:11:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54852,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2506:6:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54899,
                  "src": "2498:14:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2498:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2469:44:127"
            },
            "returnParameters": {
              "id": 54857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54856,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54899,
                  "src": "2541:7:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2541:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2540:9:127"
            },
            "scope": 55035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54999,
            "nodeType": "FunctionDefinition",
            "src": "3493:1344:127",
            "nodes": [],
            "body": {
              "id": 54998,
              "nodeType": "Block",
              "src": "3693:1144:127",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54916,
                      "mutability": "mutable",
                      "name": "upFrontCollateral",
                      "nameLocation": "3711:17:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 54998,
                      "src": "3703:25:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54915,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3703:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54917,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3703:25:127"
                },
                {
                  "assignments": [
                    54919
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54919,
                      "mutability": "mutable",
                      "name": "addCollateralAmount",
                      "nameLocation": "3785:19:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 54998,
                      "src": "3777:27:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54918,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3777:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54921,
                  "initialValue": {
                    "id": 54920,
                    "name": "swapAmountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54909,
                    "src": "3807:13:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3777:43:127"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 54934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 54925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 54922,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54903,
                          "src": "3903:11:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 54923,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3915:15:127",
                        "memberName": "collateralToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51990,
                        "src": "3903:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 54924,
                        "name": "upFrontToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54905,
                        "src": "3934:12:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3903:43:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 54933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 54926,
                            "name": "leverParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54903,
                            "src": "3950:11:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                              "typeString": "struct LeverParams memory"
                            }
                          },
                          "id": 54927,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3962:7:127",
                          "memberName": "auxSwap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51996,
                          "src": "3950:19:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapParams_$55496_memory_ptr",
                            "typeString": "struct SwapParams memory"
                          }
                        },
                        "id": 54928,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3970:7:127",
                        "memberName": "assetIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55484,
                        "src": "3950:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 54931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3989:1:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 54930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3981:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54929,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3981:7:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3981:10:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3950:41:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3903:88:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 54944,
                    "nodeType": "Block",
                    "src": "4140:123:127",
                    "statements": [
                      {
                        "expression": {
                          "id": 54942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54940,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54919,
                            "src": "4216:19:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 54941,
                            "name": "upFrontAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54907,
                            "src": "4239:13:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4216:36:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54943,
                        "nodeType": "ExpressionStatement",
                        "src": "4216:36:127"
                      }
                    ]
                  },
                  "id": 54945,
                  "nodeType": "IfStatement",
                  "src": "3899:364:127",
                  "trueBody": {
                    "id": 54939,
                    "nodeType": "Block",
                    "src": "3993:141:127",
                    "statements": [
                      {
                        "expression": {
                          "id": 54937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54935,
                            "name": "upFrontCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54916,
                            "src": "4090:17:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 54936,
                            "name": "upFrontAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54907,
                            "src": "4110:13:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4090:33:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54938,
                        "nodeType": "ExpressionStatement",
                        "src": "4090:33:127"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    54947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54947,
                      "mutability": "mutable",
                      "name": "underlyingToken",
                      "nameLocation": "4329:15:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 54998,
                      "src": "4321:23:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 54946,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4321:7:127",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54954,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54949,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54903,
                              "src": "4355:11:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54950,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4367:15:127",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51990,
                            "src": "4355:27:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54948,
                          "name": "IYVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136575,
                          "src": "4347:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IYVault_$136575_$",
                            "typeString": "type(contract IYVault)"
                          }
                        },
                        "id": 54951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4347:36:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IYVault_$136575",
                          "typeString": "contract IYVault"
                        }
                      },
                      "id": 54952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4384:5:127",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 136534,
                      "src": "4347:42:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 54953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4347:44:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4321:70:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54959,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54903,
                          "src": "4438:11:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 54960,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4450:15:127",
                        "memberName": "collateralToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51990,
                        "src": "4438:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54961,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54919,
                        "src": "4467:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54956,
                            "name": "underlyingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54947,
                            "src": "4408:15:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54955,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "4401:6:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4401:23:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 54958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4425:12:127",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "4401:36:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 54962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4401:86:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54963,
                  "nodeType": "ExpressionStatement",
                  "src": "4401:86:127"
                },
                {
                  "expression": {
                    "id": 54974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54964,
                      "name": "addCollateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54919,
                      "src": "4497:19:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 54973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 54970,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54919,
                            "src": "4564:19:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 54966,
                                  "name": "leverParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54903,
                                  "src": "4527:11:127",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                    "typeString": "struct LeverParams memory"
                                  }
                                },
                                "id": 54967,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4539:15:127",
                                "memberName": "collateralToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 51990,
                                "src": "4527:27:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 54965,
                              "name": "IYVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136575,
                              "src": "4519:7:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IYVault_$136575_$",
                                "typeString": "type(contract IYVault)"
                              }
                            },
                            "id": 54968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4519:36:127",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IYVault_$136575",
                              "typeString": "contract IYVault"
                            }
                          },
                          "id": 54969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4556:7:127",
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 136574,
                          "src": "4519:44:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) external returns (uint256)"
                          }
                        },
                        "id": 54971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4519:65:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 54972,
                        "name": "upFrontCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54916,
                        "src": "4587:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4519:85:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4497:107:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54975,
                  "nodeType": "ExpressionStatement",
                  "src": "4497:107:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54981,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54903,
                          "src": "4702:11:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 54982,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4714:5:127",
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51988,
                        "src": "4702:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54983,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54919,
                        "src": "4721:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54977,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54903,
                              "src": "4660:11:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54978,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4672:15:127",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51990,
                            "src": "4660:27:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54976,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "4653:6:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4653:35:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 54980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4689:12:127",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "4653:48:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 54984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4653:88:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54985,
                  "nodeType": "ExpressionStatement",
                  "src": "4653:88:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54993,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4803:4:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionActionYV_$55035",
                              "typeString": "contract PositionActionYV"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionActionYV_$55035",
                              "typeString": "contract PositionActionYV"
                            }
                          ],
                          "id": 54992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4795:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4795:7:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4795:13:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54995,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54919,
                        "src": "4810:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54987,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54903,
                              "src": "4768:11:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54988,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4780:5:127",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51988,
                            "src": "4768:17:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54986,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "4758:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 54989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4758:28:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 54990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4787:7:127",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49343,
                      "src": "4758:36:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 54996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4758:72:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 54914,
                  "id": 54997,
                  "nodeType": "Return",
                  "src": "4751:79:127"
                }
              ]
            },
            "baseFunctions": [
              52198
            ],
            "documentation": {
              "id": 54900,
              "nodeType": "StructuredDocumentation",
              "src": "2980:508:127",
              "text": "@notice Hook to decrease lever by depositing collateral into the Yearn Vault and the Yearn Vault\n @param leverParams LeverParams struct\n @param upFrontToken the token passed up front\n @param upFrontAmount the amount of tokens passed up front (or received from an auxSwap [CDPVault.tokenScale()]\n @param swapAmountOut the amount of tokens received from the stablecoin flash loan swap [CDPVault.tokenScale()]\n @return Amount of collateral added to CDPVault position [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onIncreaseLever",
            "nameLocation": "3502:16:127",
            "overrides": {
              "id": 54911,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3666:8:127"
            },
            "parameters": {
              "id": 54910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54903,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "3547:11:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54999,
                  "src": "3528:30:127",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 54902,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54901,
                      "name": "LeverParams",
                      "nameLocations": [
                        "3528:11:127"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52000,
                      "src": "3528:11:127"
                    },
                    "referencedDeclaration": 52000,
                    "src": "3528:11:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$52000_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54905,
                  "mutability": "mutable",
                  "name": "upFrontToken",
                  "nameLocation": "3576:12:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54999,
                  "src": "3568:20:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3568:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54907,
                  "mutability": "mutable",
                  "name": "upFrontAmount",
                  "nameLocation": "3606:13:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54999,
                  "src": "3598:21:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3598:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54909,
                  "mutability": "mutable",
                  "name": "swapAmountOut",
                  "nameLocation": "3637:13:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 54999,
                  "src": "3629:21:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3629:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3518:138:127"
            },
            "returnParameters": {
              "id": 54914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54999,
                  "src": "3684:7:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3684:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3683:9:127"
            },
            "scope": 55035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 55034,
            "nodeType": "FunctionDefinition",
            "src": "5175:456:127",
            "nodes": [],
            "body": {
              "id": 55033,
              "nodeType": "Block",
              "src": "5314:317:127",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55012,
                      "mutability": "mutable",
                      "name": "withdrawnCollateral",
                      "nameLocation": "5374:19:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 55033,
                      "src": "5366:27:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55011,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5366:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55024,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 55020,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5442:4:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionActionYV_$55035",
                              "typeString": "contract PositionActionYV"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionActionYV_$55035",
                              "typeString": "contract PositionActionYV"
                            }
                          ],
                          "id": 55019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5434:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55018,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5434:7:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5434:13:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55022,
                        "name": "subCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55005,
                        "src": "5449:13:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 55014,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55003,
                              "src": "5406:11:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 55015,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5418:5:127",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51988,
                            "src": "5406:17:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 55013,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49449,
                          "src": "5396:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$49449_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 55016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5396:28:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$49449",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 55017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5425:8:127",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49352,
                      "src": "5396:37:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 55023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5396:67:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5366:97:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55030,
                        "name": "withdrawnCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55012,
                        "src": "5604:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 55026,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55003,
                              "src": "5566:11:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 55027,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5578:15:127",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51990,
                            "src": "5566:27:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 55025,
                          "name": "IYVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136575,
                          "src": "5558:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IYVault_$136575_$",
                            "typeString": "type(contract IYVault)"
                          }
                        },
                        "id": 55028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5558:36:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IYVault_$136575",
                          "typeString": "contract IYVault"
                        }
                      },
                      "id": 55029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5595:8:127",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 136556,
                      "src": "5558:45:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 55031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5558:66:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 55010,
                  "id": 55032,
                  "nodeType": "Return",
                  "src": "5551:73:127"
                }
              ]
            },
            "baseFunctions": [
              52209
            ],
            "documentation": {
              "id": 55000,
              "nodeType": "StructuredDocumentation",
              "src": "4843:327:127",
              "text": "@notice Hook to decrease lever by withdrawing collateral from the CDPVault and the Yearn Vault\n @param leverParams LeverParams struct\n @param subCollateral Amount of collateral to withdraw in CDPVault decimals [wad]\n @return Amount of underlying token withdrawn from yearn vault [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDecreaseLever",
            "nameLocation": "5184:16:127",
            "overrides": {
              "id": 55007,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5287:8:127"
            },
            "parameters": {
              "id": 55006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55003,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "5229:11:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 55034,
                  "src": "5210:30:127",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$52000_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 55002,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55001,
                      "name": "LeverParams",
                      "nameLocations": [
                        "5210:11:127"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52000,
                      "src": "5210:11:127"
                    },
                    "referencedDeclaration": 52000,
                    "src": "5210:11:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$52000_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55005,
                  "mutability": "mutable",
                  "name": "subCollateral",
                  "nameLocation": "5258:13:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 55034,
                  "src": "5250:21:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5250:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5200:77:127"
            },
            "returnParameters": {
              "id": 55010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55009,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55034,
                  "src": "5305:7:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5305:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5304:9:127"
            },
            "scope": 55035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54751,
              "name": "PositionAction",
              "nameLocations": [
                "524:14:127"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53758,
              "src": "524:14:127"
            },
            "id": 54752,
            "nodeType": "InheritanceSpecifier",
            "src": "524:14:127"
          }
        ],
        "canonicalName": "PositionActionYV",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 54750,
          "nodeType": "StructuredDocumentation",
          "src": "382:113:127",
          "text": "@title PositionActionYV\n @notice Yearn Vault version 0.4.6 implementation of PositionAction base contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55035,
          53758,
          51282,
          56219,
          50021,
          49972
        ],
        "name": "PositionActionYV",
        "nameLocation": "504:16:127",
        "scope": 55036,
        "usedErrors": [
          51235,
          52052,
          52054,
          52056,
          52058,
          52060,
          52062,
          52064,
          52066,
          52068,
          52070,
          52072,
          52074,
          134735
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 127
}