{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "flashlender_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "swapActions_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Action__revertBytes_emptyRevertBytes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toInt256_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__borrow_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__decreaseLever_invalidResidualRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__deposit_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__increaseLever_invalidPrimarySwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onCreditFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onFlashLoan__invalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__onlyDelegatecall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PositionAction__repay_InvalidAuxSwap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS_CREDIT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cdm",
      "outputs": [
        {
          "internalType": "contract ICDM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimForEpoch",
          "type": "uint256"
        }
      ],
      "name": "claimUndelegatedCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "subCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "residualRecipient",
          "type": "address"
        }
      ],
      "name": "decreaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "creditAmount",
          "type": "uint256"
        }
      ],
      "name": "delegate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sharesAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "credit",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "enum SwapProtocol",
              "name": "swapProtocol",
              "type": "uint8"
            },
            {
              "internalType": "enum SwapType",
              "name": "swapType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "args",
              "type": "bytes"
            }
          ],
          "internalType": "struct SwapParams",
          "name": "swapParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "delegateViaStablecoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "depositAndBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "depositVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegateVault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "credit",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "depositAndDelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flashlender",
      "outputs": [
        {
          "internalType": "contract IFlashlender",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "primarySwap",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct LeverParams",
          "name": "leverParams",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "upFrontToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "upFrontAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "increaseLever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "contract IMinter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        },
        {
          "internalType": "bool[]",
          "name": "delegateCall",
          "type": "bool[]"
        }
      ],
      "name": "multisend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onCreditFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimForEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "subNormalDebt",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "repayAndClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "self",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IStablecoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapAction",
      "outputs": [
        {
          "internalType": "contract SwapAction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "prevQueuedEpochs",
          "type": "uint256[]"
        }
      ],
      "name": "undelegate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "estimatedClaim",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimableAtEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fixableUntilEpoch",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "withdrawVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegateVault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimForEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "subNormalDebt",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        }
      ],
      "name": "withdrawAndClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CollateralParams",
          "name": "collateralParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapParams",
              "name": "auxSwap",
              "type": "tuple"
            }
          ],
          "internalType": "struct CreditParams",
          "name": "creditParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ApprovalType",
              "name": "approvalType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "approvalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermitParams",
          "name": "permitParams",
          "type": "tuple"
        }
      ],
      "name": "withdrawAndRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b5060405162005b1d38038062005b1d8339810160408190526200003591620002bb565b8181816001600160a01b031660a0816001600160a01b03168152505060a0516001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000092573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b89190620002fa565b6001600160a01b031660c0816001600160a01b03168152505060a0516001600160a01b031663075461726040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000112573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001389190620002fa565b6001600160a01b031660e0816001600160a01b03168152505060a0516001600160a01b031663e2dfb3176040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000192573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b89190620002fa565b6001600160a01b03908116608081905230610100528282166101205260e05160405163d9c70f5760e01b815292166004830152600160248301529063d9c70f5790604401600060405180830381600087803b1580156200021757600080fd5b505af11580156200022c573d6000803e3d6000fd5b505060805160405163d9c70f5760e01b81526001600160a01b03868116600483015260016024830152909116925063d9c70f579150604401600060405180830381600087803b1580156200027f57600080fd5b505af115801562000294573d6000803e3d6000fd5b505050505050505062000321565b6001600160a01b0381168114620002b857600080fd5b50565b60008060408385031215620002cf57600080fd5b8251620002dc81620002a2565b6020840151909250620002ef81620002a2565b809150509250929050565b6000602082840312156200030d57600080fd5b81516200031a81620002a2565b9392505050565b60805160a05160c05160e05161010051610120516155b4620005696000396000818161035b01528181610dbd01528181610fbd015281816110d00152818161112d0152818161322b01528181613567015261379e0152600081816102c7015281816105e7015281816106d90152818161079c0152818161081e0152818161099201528181610a3601528181610b19015281816113ab0152818161149201528181611569015281816117bb0152818161191501528181611b0f01528181611beb01528181611d0201528181611d8f01528181611dc001528181611e2101528181611ec501528181611fca01528181612013015281816122bd0152818161250e01526126ec0152600081816101d101528181610ea501528181610f310152818161124701528181612146015281816121cb01528181612ec901528181612f6001528181613031015281816130a8015281816131580152818161345801526134dd0152600081816103e201528181610e78015281816112cd01528181611b9101528181611ee6015281816120d101528181612119015281816131bd015281816133d1015261342b01526000818161041c01528181610a0b01528181610b9c0152818161105c015281816113020152611e9a0152600081816103bb0152818161047e0152818161056d01528181610c2c01528181610d3f015281816116370152818161173b0152818161197701528181611a850152818161237f0152818161248c0152818161274e0152818161284b01528181612e9a01528181613000015261312701526155b46000f3fe608060405234801561001057600080fd5b50600436106101795760003560e01c80637104ddb2116100d9578063dfad9c3711610087578063dfad9c37146103a3578063e2dfb317146103b6578063e9cbd822146103dd578063ecec164114610404578063ee58918a14610417578063f38584e01461043e578063faa994051461045157600080fd5b80637104ddb2146102c25780637810436a146102e95780638237e5381461031c57806396c2c40814610343578063a888828b14610356578063aad598ae1461037d578063df3df7731461039057600080fd5b806312261ee71161013657806312261ee71461023a57806316d8f1651461025057806323e30c8b146102635780634ad4d4ad1461027657806356415a901461028957806365b57a741461029c5780636c747057146102af57600080fd5b8063026e402b1461017e57806303ccc7d0146101a45780630567d4b1146101b957806307546172146101cc5780630b839bf2146102005780630f13be2a14610213575b600080fd5b61019161018c366004614288565b610464565b6040519081526020015b60405180910390f35b6101b76101b23660046142de565b6105dd565b005b6101b76101c736600461436d565b6106cf565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b60405161019b91906143e1565b6101b761020e366004614407565b610792565b6101917f24ea9631d6c6b69006fd9fa411bb9c8909638fd1d178dd2f1d231dca3e3e4d7981565b6101f36e22d473030f116ddee9f6b43ac78ba381565b61019161025e3660046144a9565b610b8f565b610191610271366004614512565b61104f565b6101b761028436600461459f565b6113a1565b6101b761029736600461463a565b611488565b6101b76102aa36600461469b565b61155f565b6101b76102bd366004614705565b6117b1565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6102fc6102f73660046147a0565b611880565b60408051948552602085019390935291830152606082015260800161019b565b6101917f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd981565b6101b761035136600461459f565b61190b565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6101b761038b3660046147fb565b611b05565b6101b761039e36600461486d565b612009565b6101916103b1366004614288565b61223e565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6101b76104123660046148d6565b6122b3565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6101b761044c36600461495c565b612504565b6101b761045f3660046149e3565b6126e2565b60405163d9c70f5760e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d9c70f57906104b6908690600190600401614a3c565b600060405180830381600087803b1580156104d057600080fd5b505af11580156104e4573d6000803e3d6000fd5b50506040516393f9eb3560e01b8152600481018590526001600160a01b03861692506393f9eb3591506024016020604051808303816000875af115801561052f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105539190614a57565b60405163d9c70f5760e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d9c70f57906105a5908690600090600401614a3c565b600060405180830381600087803b1580156105bf57600080fd5b505af11580156105d3573d6000803e3d6000fd5b5050505092915050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106265760405163f46a288f60e01b815260040160405180910390fd5b60006106338684846128b5565b90506000610642878987612a14565b9050866001600160a01b031663c75a4b5e89303061065f87612aa0565b61066887612aa0565b6040518663ffffffff1660e01b8152600401610688959493929190614a70565b600060405180830381600087803b1580156106a257600080fd5b505af11580156106b6573d6000803e3d6000fd5b505050506106c48686610464565b505050505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107185760405163f46a288f60e01b815260040160405180910390fd5b60006107258484846128b5565b9050836001600160a01b031663c75a4b5e86303061074286612aa0565b60006040518663ffffffff1660e01b8152600401610764959493929190614a70565b600060405180830381600087803b15801561077e57600080fd5b505af11580156106c4573d6000803e3d6000fd5b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107db5760405163f46a288f60e01b815260040160405180910390fd5b60016107ea6060850185614aba565b6107fb906040810190602001614ae9565b600181111561080c5761080c614aa4565b14158061086857506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661084b6060850185614aba565b61085c9060c081019060a001614b04565b6001600160a01b031614155b15610886576040516338ef377d60e01b815260040160405180910390fd5b60006108956080850185614aba565b6108a6906060810190604001614b04565b6001600160a01b0316141580156108ec575060006108c76080850185614aba565b6108d8906040810190602001614ae9565b60018111156108e9576108e9614aa4565b14155b1561090a57604051630e6c295f60e11b815260040160405180910390fd5b60006109196080850185614aba565b61092a906060810190604001614b04565b6001600160a01b031614801561094757506001600160a01b038116155b156109655760405163163a7c2d60e01b815260040160405180910390fd5b6109756040840160208501614b04565b6001600160a01b0316638309dbdd6109906020860186614b04565b7f000000000000000000000000000000000000000000000000000000000000000060016040518463ffffffff1660e01b81526004016109d193929190614b21565b600060405180830381600087803b1580156109eb57600080fd5b505af11580156109ff573d6000803e3d6000fd5b50506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150637b644bad90507f0000000000000000000000000000000000000000000000000000000000000000610a626060870187614aba565b60600135868686604051602001610a7b93929190614d41565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610aa893929190614dc4565b6020604051808303816000875af1158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb9190614df9565b50610afc6040840160208501614b04565b6001600160a01b0316638309dbdd610b176020860186614b04565b7f000000000000000000000000000000000000000000000000000000000000000060006040518463ffffffff1660e01b8152600401610b5893929190614b21565b600060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b50505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bda576040516351b8314560e11b815260040160405180910390fd5b60008080610bea85870187615050565b9250925092506000610c0d84602001518560000151866060015160600151612a14565b602085015160405163d9c70f5760e01b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163d9c70f5791610c6291600190600401614a3c565b600060405180830381600087803b158015610c7c57600080fd5b505af1158015610c90573d6000803e3d6000fd5b5050505083602001516001600160a01b031663c75a4b5e85600001513030610cb788612aa0565b610cc09061509d565b610cc987612aa0565b610cd29061509d565b6040518663ffffffff1660e01b8152600401610cf2959493929190614a70565b600060405180830381600087803b158015610d0c57600080fd5b505af1158015610d20573d6000803e3d6000fd5b505050602085015160405163d9c70f5760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016925063d9c70f5791610d7691600090600401614a3c565b600060405180830381600087803b158015610d9057600080fd5b505af1158015610da4573d6000803e3d6000fd5b505050506000610db48585612aca565b90506000610e307f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8860600151604051602401610df991906150b9565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612bbe565b9050600081806020019051810190610e489190614a57565b90506000610e56828561514b565b6060808a0151015160405163095ea7b360e01b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163095ea7b391610ece917f0000000000000000000000000000000000000000000000000000000000000000919060040161515e565b6020604051808303816000875af1158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f119190614df9565b506060808901510151604051637e348b7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691637e348b7d91610f6691309160040161515e565b600060405180830381600087803b158015610f8057600080fd5b505af1158015610f94573d6000803e3d6000fd5b50505050600081111561101c576080880151604001516001600160a01b031615610fff57610ff97f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8a60800151604051602401610df991906150b9565b5061101c565b60608801516040015161101c906001600160a01b03168783612c2e565b507f24ea9631d6c6b69006fd9fa411bb9c8909638fd1d178dd2f1d231dca3e3e4d799d9c50505050505050505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461109a576040516309436d0560e01b815260040160405180910390fd5b600080806110aa85870187615177565b60808301516040015192955090935091506001600160a01b03161561112657600061110c7f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8660800151604051602401610df991906150b9565b9050808060200190518101906111229190614a57565b9150505b60006111697f00000000000000000000000000000000000000000000000000000000000000006346caab3460e01b8660600151604051602401610df991906150b9565b90506000818060200190518101906111819190614a57565b9050600061119186868685612c89565b905060006111b087602001518860000151896060015160600151612a14565b905086602001516001600160a01b031663c75a4b5e886000015130306111d587612aa0565b6111de87612aa0565b6040518663ffffffff1660e01b81526004016111fe959493929190614a70565b600060405180830381600087803b15801561121857600080fd5b505af115801561122c573d6000803e3d6000fd5b50505050606087810151015160405163ef693bed60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163ef693bed9161128491309160040161515e565b600060405180830381600087803b15801561129e57600080fd5b505af11580156112b2573d6000803e3d6000fd5b50505050606087810151015160405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163095ea7b39161132a917f00000000000000000000000000000000000000000000000000000000000000009160040161515e565b6020604051808303816000875af1158015611349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136d9190614df9565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99e9d5050505050505050505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113ea5760405163f46a288f60e01b815260040160405180910390fd5b60006113f78585846128b5565b9050600061140786888635612a14565b9050856001600160a01b031663c75a4b5e88303061142487612aa0565b61142d87612aa0565b6040518663ffffffff1660e01b815260040161144d959493929190614a70565b600060405180830381600087803b15801561146757600080fd5b505af115801561147b573d6000803e3d6000fd5b50505050610b8684612e83565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036114d15760405163f46a288f60e01b815260040160405180910390fd5b60006114df83858435612a14565b9050826001600160a01b031663c75a4b5e85303060006114fe87612aa0565b6040518663ffffffff1660e01b815260040161151e959493929190614a70565b600060405180830381600087803b15801561153857600080fd5b505af115801561154c573d6000803e3d6000fd5b5050505061155982612e83565b50505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036115a85760405163f46a288f60e01b815260040160405180910390fd5b6115b486868484613274565b604051631591b45160e11b8152600481018590526001600160a01b03861690632b2368a2906024016020604051808303816000875af11580156115fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161f9190614a57565b50604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd906116719089908990600190600401614b21565b600060405180830381600087803b15801561168b57600080fd5b505af115801561169f573d6000803e3d6000fd5b5050506001600160a01b038616905063c75a4b5e87308060006116cb6116c68a8a356151d0565b612aa0565b6116d49061509d565b6040518663ffffffff1660e01b81526004016116f4959493929190614a70565b600060405180830381600087803b15801561170e57600080fd5b505af1158015611722573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506117779089908990600090600401614b21565b600060405180830381600087803b15801561179157600080fd5b505af11580156117a5573d6000803e3d6000fd5b50505050505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036117fa5760405163f46a288f60e01b815260040160405180910390fd5b816001600160a01b031663c75a4b5e8430306118198660200135612aa0565b6118229061509d565b60006040518663ffffffff1660e01b8152600401611844959493929190614a70565b600060405180830381600087803b15801561185e57600080fd5b505af1158015611872573d6000803e3d6000fd5b505050506115598282613514565b600080600080876001600160a01b0316636e5e741e8888886040518463ffffffff1660e01b81526004016118b6939291906151e3565b6080604051808303816000875af11580156118d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f99190615224565b929b919a509850909650945050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036119545760405163f46a288f60e01b815260040160405180910390fd5b61196085858484613274565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd906119b19088908890600190600401614b21565b600060405180830381600087803b1580156119cb57600080fd5b505af11580156119df573d6000803e3d6000fd5b50505050836001600160a01b031663c75a4b5e863030611a028860200135612aa0565b611a0b9061509d565b611a158835612aa0565b611a1e9061509d565b6040518663ffffffff1660e01b8152600401611a3e959493929190614a70565b600060405180830381600087803b158015611a5857600080fd5b505af1158015611a6c573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd9150611ac19088908890600090600401614b21565b600060405180830381600087803b158015611adb57600080fd5b505af1158015611aef573d6000803e3d6000fd5b50505050611afd8484613514565b505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611b4e5760405163f46a288f60e01b815260040160405180910390fd5b6000611b5d6060870187614aba565b611b6e906040810190602001614ae9565b6001811115611b7f57611b7f614aa4565b141580611bdb57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611bbe6060870187614aba565b611bcf906060810190604001614b04565b6001600160a01b031614155b80611c3557506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611c186060870187614aba565b611c299060c081019060a001614b04565b6001600160a01b031614155b15611c53576040516304286a2760e01b815260040160405180910390fd5b6000611c626080870187614aba565b611c73906060810190604001614b04565b6001600160a01b031614158015611d4c57506000611c946080870187614aba565b611ca5906040810190602001614ae9565b6001811115611cb657611cb6614aa4565b141580611cf257506001600160a01b038416611cd56080870187614aba565b611ce6906060810190604001614b04565b6001600160a01b031614155b80611d4c57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611d2f6080870187614aba565b611d409060c081019060a001614b04565b6001600160a01b031614155b15611d6a57604051630655da1360e41b815260040160405180910390fd5b8215611df457306001600160a01b03831603611db957611db46001600160a01b0385167f000000000000000000000000000000000000000000000000000000000000000085612c2e565b611df4565b611df484837f000000000000000000000000000000000000000000000000000000000000000086611def3687900387018761526b565b6135d2565b611e046040860160208701614b04565b6001600160a01b0316638309dbdd611e1f6020880188614b04565b7f000000000000000000000000000000000000000000000000000000000000000060016040518463ffffffff1660e01b8152600401611e6093929190614b21565b600060405180830381600087803b158015611e7a57600080fd5b505af1158015611e8e573d6000803e3d6000fd5b50506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150635cffe9de90507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611f1260608a018a614aba565b60600135898989604051602001611f2b939291906152fe565b6040516020818303038152906040526040518563ffffffff1660e01b8152600401611f59949392919061532c565b6020604051808303816000875af1158015611f78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9c9190614df9565b50611fad6040860160208701614b04565b6001600160a01b0316638309dbdd611fc86020880188614b04565b7f000000000000000000000000000000000000000000000000000000000000000060006040518463ffffffff1660e01b815260040161076493929190614b21565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036120525760405163f46a288f60e01b815260040160405180910390fd5b60006120646060840160408501614b04565b6001600160a01b0316146120bc573061208360c0840160a08501614b04565b6001600160a01b0316146120aa57604051634d6d22c560e11b815260040160405180910390fd5b6120b5858383613796565b9250612102565b6001600160a01b0385163014612102576121027f0000000000000000000000000000000000000000000000000000000000000000863086611def3687900387018761526b565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390612170907f000000000000000000000000000000000000000000000000000000000000000090879060040161515e565b6020604051808303816000875af115801561218f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b39190614df9565b50604051637e348b7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637e348b7d90612202903090879060040161515e565b600060405180830381600087803b15801561221c57600080fd5b505af1158015612230573d6000803e3d6000fd5b50505050611afd8484610464565b604051631591b45160e11b8152600481018290526000906001600160a01b03841690632b2368a2906024016020604051808303816000875af1158015612288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ac9190614a57565b9392505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036122fc5760405163f46a288f60e01b815260040160405180910390fd5b604051631591b45160e11b8152600481018490526001600160a01b03851690632b2368a2906024016020604051808303816000875af1158015612343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123679190614a57565b50604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd906123b99089908990600190600401614b21565b600060405180830381600087803b1580156123d357600080fd5b505af11580156123e7573d6000803e3d6000fd5b50505050846001600160a01b031663c75a4b5e87303061240a8660200135612aa0565b6124139061509d565b61241c88612aa0565b6124259061509d565b6040518663ffffffff1660e01b8152600401612445959493929190614a70565b600060405180830381600087803b15801561245f57600080fd5b505af1158015612473573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506124c89089908990600090600401614b21565b600060405180830381600087803b1580156124e257600080fd5b505af11580156124f6573d6000803e3d6000fd5b50505050610b868582613514565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361254d5760405163f46a288f60e01b815260040160405180910390fd5b8460005b818110156126d85783838281811061256b5761256b61535f565b90506020020160208101906125809190615375565b156126135761260d88888381811061259a5761259a61535f565b90506020020160208101906125af9190614b04565b8787848181106125c1576125c161535f565b90506020028101906125d39190615392565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612bbe92505050565b506126d0565b6000808989848181106126285761262861535f565b905060200201602081019061263d9190614b04565b6001600160a01b03168888858181106126585761265861535f565b905060200281019061266a9190615392565b6040516126789291906153d8565b6000604051808303816000865af19150503d80600081146126b5576040519150601f19603f3d011682016040523d82523d6000602084013e6126ba565b606091505b5091509150816126cd576126cd81613863565b50505b600101612551565b5050505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361272b5760405163f46a288f60e01b815260040160405180910390fd5b61273784848484613274565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd906127889087908790600190600401614b21565b600060405180830381600087803b1580156127a257600080fd5b505af11580156127b6573d6000803e3d6000fd5b50505050826001600160a01b031663c75a4b5e85303060006127db8860000135612aa0565b6127e49061509d565b6040518663ffffffff1660e01b8152600401612804959493929190614a70565b600060405180830381600087803b15801561281e57600080fd5b505af1158015612832573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506128879087908790600090600401614b21565b600060405180830381600087803b1580156128a157600080fd5b505af11580156126d8573d6000803e3d6000fd5b60006020830135816128ca6060860186614aba565b6128db906060810190604001614b04565b6001600160a01b0316146129a4576128f66020850185614b04565b6001600160a01b031661290c6060860186614aba565b61291d906060810190604001614b04565b6001600160a01b031614158061295957503061293c6060860186614aba565b61294d9060c081019060a001614b04565b6001600160a01b031614155b156129775760405163469498c560e11b815260040160405180910390fd5b61299d61298a6060860160408701614b04565b6129976060870187614aba565b85613796565b90506129f4565b306129b56060860160408701614b04565b6001600160a01b0316146129f4576129f46129d36020860186614b04565b6129e36060870160408801614b04565b3084611def3689900389018961526b565b612a0b85612a056020870187614b04565b8361388b565b95945050505050565b6000806000856001600160a01b0316638051ba75866040518263ffffffff1660e01b8152600401612a4591906143e1565b606060405180830381865afa158015612a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8691906153e8565b5091509150612a96848383613a79565b9695505050505050565b6000600160ff1b8210612ac657604051632db27c5360e01b815260040160405180910390fd5b5090565b60008083602001516001600160a01b031663f3fef3a330856040518363ffffffff1660e01b8152600401612aff92919061515e565b6020604051808303816000875af1158015612b1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b429190614a57565b6040808601519051632e1a7d4d60e01b8152600481018390529192506001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015612b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bb49190614a57565b9150505b92915050565b6060600080846001600160a01b031684604051612bdb919061542b565b600060405180830381855af49150503d8060008114612c16576040519150601f19603f3d011682016040523d82523d6000602084013e612c1b565b606091505b509150915081612bb457612bb481613863565b612c848363a9059cbb60e01b8484604051602401612c4d92919061515e565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613ab5565b505050565b6000806000839050856001600160a01b031687604001516001600160a01b0316148015612cc557506080870151604001516001600160a01b0316155b15612cd257849150612cdf565b612cdc85826151d0565b90505b600087604001516001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d47919061543d565b6040890151909150612d64906001600160a01b0383169084613b8f565b604080890151905163b6b55f2560e01b81526004810184905284916001600160a01b03169063b6b55f25906024016020604051808303816000875af1158015612db1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dd59190614a57565b612ddf91906151d0565b602089015160408a0151919350612e00916001600160a01b03169084613b8f565b87602001516001600160a01b03166347e7ef2430846040518363ffffffff1660e01b8152600401612e3292919061515e565b6020604051808303816000875af1158015612e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e759190614a57565b93505050505b949350505050565b604051638309dbdd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638309dbdd90612ef49030907f000000000000000000000000000000000000000000000000000000000000000090600190600401614b21565b600060405180830381600087803b158015612f0e57600080fd5b505af1158015612f22573d6000803e3d6000fd5b5060009250612f379150506040830183614aba565b612f48906060810190604001614b04565b6001600160a01b031603613091576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ef693bed612f956040840160208501614b04565b6040516001600160e01b031960e084901b168152612fb9919085359060040161515e565b600060405180830381600087803b158015612fd357600080fd5b505af1158015612fe7573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd915061305c9030907f000000000000000000000000000000000000000000000000000000000000000090600090600401614b21565b600060405180830381600087803b15801561307657600080fd5b505af115801561308a573d6000803e3d6000fd5b5050505050565b60405163ef693bed60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef693bed906130e090309085359060040161515e565b600060405180830381600087803b1580156130fa57600080fd5b505af115801561310e573d6000803e3d6000fd5b5050604051638309dbdd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250638309dbdd91506131839030907f000000000000000000000000000000000000000000000000000000000000000090600090600401614b21565b600060405180830381600087803b15801561319d57600080fd5b505af11580156131b1573d6000803e3d6000fd5b50506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506131ee90506040830183614aba565b6131ff906060810190604001614b04565b6001600160a01b0316146132265760405163051b33b760e51b815260040160405180910390fd5b61326f7f00000000000000000000000000000000000000000000000000000000000000006311b2aacd60e21b61325f6040850185614aba565b604051602401610df9919061545a565b505b50565b6000806132846040850185614aba565b613295906060810190604001614b04565b6001600160a01b03161461331657306132b16040850185614aba565b6132c29060c081019060a001614b04565b6001600160a01b0316146132e957604051633300ff5360e21b815260040160405180910390fd5b61330f6132fc6040850160208601614b04565b6133096040860186614aba565b84613796565b9050613414565b600080856001600160a01b0316638051ba75886040518263ffffffff1660e01b815260040161334591906143e1565b606060405180830381865afa158015613362573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061338691906153e8565b509092509050806133a16001600160401b0384168735613c28565b6133ab919061514b565b9250306133be6040870160208801614b04565b6001600160a01b031614613411576134117f00000000000000000000000000000000000000000000000000000000000000006134006040880160208901614b04565b3086611def368a90038a018a61526b565b50505b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390613482907f000000000000000000000000000000000000000000000000000000000000000090859060040161515e565b6020604051808303816000875af11580156134a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134c59190614df9565b50604051637e348b7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637e348b7d90610764903090859060040161515e565b600080613532846135286020860186614b04565b8560200135613c56565b905060006135436060850185614aba565b613554906060810190604001614b04565b6001600160a01b0316146135a15761359b7f00000000000000000000000000000000000000000000000000000000000000006311b2aacd60e21b61325f6060870187614aba565b506122ac565b6122ac6135b46060850160408601614b04565b826135c26020870187614b04565b6001600160a01b03169190612c2e565b6002815160028111156135e7576135e7614aa4565b03613711576e22d473030f116ddee9f6b43ac78ba36001600160a01b03166330f28b7a604051806060016040528060405180604001604052808a6001600160a01b03168152602001866020015181525081526020018460400151815260200184606001518152506040518060400160405280876001600160a01b0316815260200186815250878560a001518660c00151876080015160f81b6040516020016136ac9392919092835260208301919091526001600160f81b031916604082015260410190565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016136da949392919061546d565b600060405180830381600087803b1580156136f457600080fd5b505af1158015613708573d6000803e3d6000fd5b5050505061308a565b60018151600281111561372657613726614aa4565b036137815761376784848360200151846060015185608001518660a001518760c001518c6001600160a01b0316613dc290979695949392919063ffffffff16565b61377c6001600160a01b038616858585613f91565b61308a565b61308a6001600160a01b038616858585613f91565b6000806137da7f0000000000000000000000000000000000000000000000000000000000000000630147931c60e01b878688604051602401610df9939291906154e6565b90506000818060200190518101906137f29190614a57565b905060016138066040870160208801614ae9565b600181111561381757613817614aa4565b0361385657600061382c82608088013561514b565b905080156138495761384987826135c260608a0160408b01614b04565b856060013593505061385a565b8092505b50509392505050565b80511561387257805181602001fd5b60405163491182fb60e01b815260040160405180910390fd5b600080846001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138f0919061543d565b9050806001600160a01b0316846001600160a01b0316146139f4576000816001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561394b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061396f919061543d565b90506139856001600160a01b0382168386613b8f565b60405163b6b55f2560e01b8152600481018590526001600160a01b0383169063b6b55f25906024016020604051808303816000875af11580156139cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139f09190614a57565b9350505b613a086001600160a01b0382168685613b8f565b6040516311f9fbc960e21b81526001600160a01b038616906347e7ef2490613a36903090879060040161515e565b6020604051808303816000875af1158015613a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a0b9190614a57565b6000613a97613a8883866151d0565b846001600160401b0316613fc9565b905083613aa5828585614018565b10156122ac576001019392505050565b6000613b0a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166140389092919063ffffffff16565b9050805160001480613b2b575080806020019051810190613b2b9190614df9565b612c845760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b600063095ea7b360e01b8383604051602401613bac92919061515e565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050613bea8482614047565b611559576040516001600160a01b038416602482015260006044820152613c1e90859063095ea7b360e01b90606401612c4d565b6115598482613ab5565b600081600019048311820215613c465763c4c5d7f56000526004601cfd5b50670de0b6b3a764000091020490565b600080846001600160a01b031663f3fef3a330856040518363ffffffff1660e01b8152600401613c8792919061515e565b6020604051808303816000875af1158015613ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cca9190614a57565b90506000856001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d30919061543d565b9050806001600160a01b0316856001600160a01b031614613db957604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d906024016020604051808303816000875af1158015613d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613db69190614a57565b91505b50949350505050565b604051623f675f60e91b81526000906001600160a01b038a1690637ecebe0090613df0908b906004016143e1565b602060405180830381865afa158015613e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e319190614a57565b60405163d505accf60e01b81526001600160a01b038a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e401600060405180830381600087803b158015613ea557600080fd5b505af1158015613eb9573d6000803e3d6000fd5b5050604051623f675f60e91b8152600092506001600160a01b038c169150637ecebe0090613eeb908c906004016143e1565b602060405180830381865afa158015613f08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f2c9190614a57565b9050613f398260016151d0565b81146117a55760405162461bcd60e51b815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f74207375636365656044820152601960fa1b6064820152608401613b86565b6040516001600160a01b03808516602483015283166044820152606481018290526115599085906323b872dd60e01b90608401612c4d565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a7640000021582026140065763bcbede656000526004601cfd5b50670de0b6b3a7640000919091020490565b60008161402e85856001600160401b0316613c28565b612e7b919061514b565b6060612e7b84846000856140ea565b6000806000846001600160a01b031684604051614064919061542b565b6000604051808303816000865af19150503d80600081146140a1576040519150601f19603f3d011682016040523d82523d6000602084013e6140a6565b606091505b50915091508180156140d05750805115806140d05750808060200190518101906140d09190614df9565b8015612a0b5750505050506001600160a01b03163b151590565b60608247101561414b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401613b86565b600080866001600160a01b03168587604051614167919061542b565b60006040518083038185875af1925050503d80600081146141a4576040519150601f19603f3d011682016040523d82523d6000602084013e6141a9565b606091505b50915091506141ba878383876141c5565b979650505050505050565b6060831561423457825160000361422d576001600160a01b0385163b61422d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401613b86565b5081612e7b565b612e7b83838151156142495781518083602001fd5b8060405162461bcd60e51b8152600401613b86919061556b565b6001600160a01b038116811461327157600080fd5b803561428381614263565b919050565b6000806040838503121561429b57600080fd5b82356142a681614263565b946020939093013593505050565b6000608082840312156142c657600080fd5b50919050565b600060e082840312156142c657600080fd5b60008060008060008061018087890312156142f857600080fd5b863561430381614263565b9550602087013561431381614263565b9450604087013561432381614263565b93506060870135925060808701356001600160401b0381111561434557600080fd5b61435189828a016142b4565b9250506143618860a089016142cc565b90509295509295509295565b600080600080610140858703121561438457600080fd5b843561438f81614263565b9350602085013561439f81614263565b925060408501356001600160401b038111156143ba57600080fd5b6143c6878288016142b4565b9250506143d686606087016142cc565b905092959194509250565b6001600160a01b0391909116815260200190565b600060a082840312156142c657600080fd5b60008060006060848603121561441c57600080fd5b83356001600160401b0381111561443257600080fd5b61443e868287016143f5565b93505060208401359150604084013561445681614263565b809150509250925092565b60008083601f84011261447357600080fd5b5081356001600160401b0381111561448a57600080fd5b6020830191508360208285010111156144a257600080fd5b9250929050565b6000806000806000608086880312156144c157600080fd5b85356144cc81614263565b9450602086013593506040860135925060608601356001600160401b038111156144f557600080fd5b61450188828901614461565b969995985093965092949392505050565b60008060008060008060a0878903121561452b57600080fd5b863561453681614263565b9550602087013561454681614263565b9450604087013593506060870135925060808701356001600160401b0381111561456f57600080fd5b61457b89828a01614461565b979a9699509497509295939492505050565b6000606082840312156142c657600080fd5b600080600080600061016086880312156145b857600080fd5b85356145c381614263565b945060208601356145d381614263565b935060408601356001600160401b03808211156145ef57600080fd5b6145fb89838a016142b4565b9450606088013591508082111561461157600080fd5b5061461e8882890161458d565b92505061462e87608088016142cc565b90509295509295909350565b60008060006060848603121561464f57600080fd5b833561465a81614263565b9250602084013561466a81614263565b915060408401356001600160401b0381111561468557600080fd5b6146918682870161458d565b9150509250925092565b60008060008060008061018087890312156146b557600080fd5b86356146c081614263565b955060208701356146d081614263565b9450604087013593506060870135925060808701356001600160401b038111156146f957600080fd5b61435189828a0161458d565b60008060006060848603121561471a57600080fd5b833561472581614263565b9250602084013561473581614263565b915060408401356001600160401b0381111561475057600080fd5b614691868287016142b4565b60008083601f84011261476e57600080fd5b5081356001600160401b0381111561478557600080fd5b6020830191508360208260051b85010111156144a257600080fd5b600080600080606085870312156147b657600080fd5b84356147c181614263565b93506020850135925060408501356001600160401b038111156147e357600080fd5b6147ef8782880161475c565b95989497509550505050565b6000806000806000610160868803121561481457600080fd5b85356001600160401b0381111561482a57600080fd5b614836888289016143f5565b955050602086013561484781614263565b935060408601359250606086013561485e81614263565b915061462e87608088016142cc565b6000806000806000610160868803121561488657600080fd5b853561489181614263565b945060208601356148a181614263565b93506040860135925060608601356001600160401b038111156148c357600080fd5b8601610100818903121561485e57600080fd5b60008060008060008060c087890312156148ef57600080fd5b86356148fa81614263565b9550602087013561490a81614263565b9450604087013561491a81614263565b9350606087013592506080870135915060a08701356001600160401b0381111561494357600080fd5b61494f89828a016142b4565b9150509295509295509295565b6000806000806000806060878903121561497557600080fd5b86356001600160401b038082111561498c57600080fd5b6149988a838b0161475c565b909850965060208901359150808211156149b157600080fd5b6149bd8a838b0161475c565b909650945060408901359150808211156149d657600080fd5b5061457b89828a0161475c565b60008060008061014085870312156149fa57600080fd5b8435614a0581614263565b93506020850135614a1581614263565b925060408501356001600160401b03811115614a3057600080fd5b6143c68782880161458d565b6001600160a01b039290921682521515602082015260400190565b600060208284031215614a6957600080fd5b5051919050565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260a00190565b634e487b7160e01b600052602160045260246000fd5b6000823560fe19833603018112614ad057600080fd5b9190910192915050565b80356002811061428357600080fd5b600060208284031215614afb57600080fd5b6122ac82614ada565b600060208284031215614b1657600080fd5b81356122ac81614263565b6001600160a01b039384168152919092166020820152901515604082015260600190565b6000823560fe19833603018112614b5b57600080fd5b90910192915050565b6003811061327157600080fd5b803561428381614b64565b6003811061327157613271614aa4565b60028110614b9c57614b9c614aa4565b9052565b6000808335601e19843603018112614bb757600080fd5b83016020810192503590506001600160401b03811115614bd657600080fd5b8036038213156144a257600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006101008235614c1e81614b64565b614c2781614b7c565b8452614c3560208401614ada565b614c426020860182614b8c565b506040830135614c5181614263565b6001600160a01b03166040850152606083810135908501526080808401359085015260a0830135614c8181614263565b6001600160a01b031660a085015260c08381013590850152614ca660e0840184614ba0565b8260e0870152612a968387018284614be5565b60008135614cc681614263565b6001600160a01b039081168452602083013590614ce282614263565b9081166020850152604083013590614cf982614263565b166040840152614d0c6060830183614b45565b60a06060850152614d2060a0850182614c0e565b9050614d2f6080840184614b45565b8482036080860152612a0b8282614c0e565b606081526000614d546060830186614cb9565b6020830194909452506001600160a01b0391909116604090910152919050565b60005b83811015614d8f578181015183820152602001614d77565b50506000910152565b60008151808452614db0816020860160208601614d74565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000612a0b6060830184614d98565b801515811461327157600080fd5b600060208284031215614e0b57600080fd5b81516122ac81614deb565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715614e4f57614e4f614e16565b60405290565b600082601f830112614e6657600080fd5b81356001600160401b0380821115614e8057614e80614e16565b604051601f8301601f19908116603f01168101908282118183101715614ea857614ea8614e16565b81604052838152866020858801011115614ec157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006101008284031215614ef457600080fd5b614efc614e2c565b9050614f0782614b71565b8152614f1560208301614ada565b6020820152614f2660408301614278565b60408201526060820135606082015260808201356080820152614f4b60a08301614278565b60a082015260c082013560c082015260e08201356001600160401b03811115614f7357600080fd5b614f7f84828501614e55565b60e08301525092915050565b600060a08284031215614f9d57600080fd5b60405160a081016001600160401b038282108183111715614fc057614fc0614e16565b8160405282935084359150614fd482614263565b908252602084013590614fe682614263565b816020840152614ff860408601614278565b6040840152606085013591508082111561501157600080fd5b61501d86838701614ee1565b6060840152608085013591508082111561503657600080fd5b5061504385828601614ee1565b6080830152505092915050565b60008060006060848603121561506557600080fd5b83356001600160401b0381111561507b57600080fd5b61443e86828701614f8b565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82016150b2576150b2615087565b5060000390565b60208152600082516150ca81614b7c565b8060208401525060208301516150e36040840182614b8c565b5060018060a01b03604084015116606083015260608301516080830152608083015160a083015260a083015161512460c08401826001600160a01b03169052565b5060c083015160e083015260e0830151610100808185015250612bb4610120840182614d98565b81810381811115612bb857612bb8615087565b6001600160a01b03929092168252602082015260400190565b60008060006060848603121561518c57600080fd5b83356001600160401b038111156151a257600080fd5b6151ae86828701614f8b565b93505060208401356151bf81614263565b929592945050506040919091013590565b80820180821115612bb857612bb8615087565b838152604060208201819052810182905260006001600160fb1b0383111561520a57600080fd5b8260051b8085606085013791909101606001949350505050565b6000806000806080858703121561523a57600080fd5b505082516020840151604085015160609095015191969095509092509050565b803560ff8116811461428357600080fd5b600060e0828403121561527d57600080fd5b60405160e081018181106001600160401b038211171561529f5761529f614e16565b60405282356152ad81614b64565b808252506020830135602082015260408301356040820152606083013560608201526152db6080840161525a565b608082015260a083013560a082015260c083013560c08201528091505092915050565b6060815260006153116060830186614cb9565b6001600160a01b039490941660208301525060400152919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a9690830184614d98565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561538757600080fd5b81356122ac81614deb565b6000808335601e198436030181126153a957600080fd5b8301803591506001600160401b038211156153c357600080fd5b6020019150368190038213156144a257600080fd5b8183823760009101908152919050565b6000806000606084860312156153fd57600080fd5b83516001600160401b038116811461541457600080fd5b602085015160409095015190969495509392505050565b60008251614ad0818460208701614d74565b60006020828403121561544f57600080fd5b81516122ac81614263565b6020815260006122ac6020830184614c0e565b600061010061549083885180516001600160a01b03168252602090810151910152565b60208701516040840152604087015160608401526154c4608084018780516001600160a01b03168252602090810151910152565b6001600160a01b03851660c084015260e083018190526141ba81840185614d98565b6001600160a01b03841681526000610120843561550281614b64565b61550b81614b7c565b8060208501525060208501356040840152604085013560608401526060850135608084015260ff61553e6080870161525a565b1660a084015260a085013560c084015260c085013560e084015280610100840152612a9681840185614c0e565b6020815260006122ac6020830184614d9856fea264697066735822122026b271059b322fca2bf8c178df3deb43864463d39af641441e0f220f129bfc1564736f6c63430008130033",
    "sourceMap": "495:5104:121:-:0;;;942:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1013:12;1027;5001::117;-1:-1:-1;;;;;4974:40:117;;;-1:-1:-1;;;;;4974:40:117;;;;;5037:11;;-1:-1:-1;;;;;5037:22:117;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5024:37:117;;;-1:-1:-1;;;;;5024:37:117;;;;;5080:11;;-1:-1:-1;;;;;5080:18:117;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5071:29:117;;;-1:-1:-1;;;;;5071:29:117;;;;;5116:11;;-1:-1:-1;;;;;5116:15:117;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5110:23:117;;;;;;;5158:4;5143:20;;5173:36;;;;;5248:6;;5219:43;;-1:-1:-1;;;5219:43:117;;1546:32:181;;5219:43:117;;;1528:51:181;5257:4:117;1595:18:181;;;1588:50;5110:23:117;5219:20;;1501:18:181;;5219:43:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5272:3:117;;:40;;-1:-1:-1;;;5272:40:117;;-1:-1:-1;;;;;1546:32:181;;;5272:40:117;;;1528:51:181;5307:4:117;1595:18:181;;;1588:50;5272:20:117;;;;-1:-1:-1;5272:20:117;;-1:-1:-1;1501:18:181;;5272:40:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4909:410;;942:101:121;;495:5104;;14:131:181;-1:-1:-1;;;;;89:31:181;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:385::-;229:6;237;290:2;278:9;269:7;265:23;261:32;258:52;;;306:1;303;296:12;258:52;338:9;332:16;357:31;382:5;357:31;:::i;:::-;457:2;442:18;;436:25;407:5;;-1:-1:-1;470:33:181;436:25;470:33;:::i;:::-;522:7;512:17;;;150:385;;;;;:::o;540:272::-;631:6;684:2;672:9;663:7;659:23;655:32;652:52;;;700:1;697;690:12;652:52;732:9;726:16;751:31;776:5;751:31;:::i;:::-;801:5;540:272;-1:-1:-1;;;540:272:181:o;1360:284::-;495:5104:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "495:5104:121:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11194:257:117;;;;;;:::i;:::-;;:::i;:::-;;;755:25:181;;;743:2;728:18;11194:257:117;;;;;;;;15490:697;;;;;;:::i;:::-;;:::i;:::-;;8314:464;;;;;;:::i;:::-;;:::i;3653:31::-;;;;;;;;;;;;:::i;24076:1310::-;;;;;;:::i;:::-;;:::i;3286:100::-;;3336:50;3286:100;;1101:76:123;;1135:42;1101:76;;28035:2728:117;;;;;;:::i;:::-;;:::i;25732:2128::-;;;;;;:::i;:::-;;:::i;13372:659::-;;;;;;:::i;:::-;;:::i;9634:426::-;;;;;;:::i;:::-;;:::i;19328:748::-;;;;;;:::i;:::-;;:::i;8976:401::-;;;;;;:::i;:::-;;:::i;3735:29::-;;;;;12204:305;;;;;;:::i;:::-;;:::i;:::-;;;;10956:25:181;;;11012:2;10997:18;;10990:34;;;;11040:18;;;11033:34;11098:2;11083:18;;11076:34;10943:3;10928:19;12204:305:117;10725:391:181;3192:88:117;;3235:45;3192:88;;14338:738;;;;;;:::i;:::-;;:::i;3810:38::-;;;;;21664:1737;;;;;;:::i;:::-;;:::i;16626:1057::-;;;;;;:::i;:::-;;:::i;12924:196::-;;;;;;:::i;:::-;;:::i;3426:25::-;;;;;3576:39;;;;;18184:744;;;;;;:::i;:::-;;:::i;3496:41::-;;;;;20368:554;;;;;;:::i;:::-;;:::i;10361:598::-;;;;;;:::i;:::-;;:::i;11194:257::-;11297:33;;-1:-1:-1;;;11297:33:117;;11265:20;;-1:-1:-1;;;;;11297:3:117;:20;;;;:33;;11318:5;;11325:4;;11297:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11355:45:117;;-1:-1:-1;;;11355:45:117;;;;;755:25:181;;;-1:-1:-1;;;;;11355:31:117;;;-1:-1:-1;11355:31:117;;-1:-1:-1;728:18:181;;11355:45:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11410:34;;-1:-1:-1;;;11410:34:117;;11340:60;;-1:-1:-1;;;;;;11410:3:117;:20;;;;:34;;11431:5;;11438;;11410:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11194:257;;;;:::o;15490:697::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;15767:18:::1;15788:54;15797:12;15811:16;15829:12;15788:8;:54::i;:::-;15767:75;;15852:21;15876:49;15894:12;15908:8;15918:6;15876:17;:49::i;:::-;15852:73;;15945:12;-1:-1:-1::0;;;;;15935:47:117::1;;15996:8;16026:4;16053;16072:20;16081:10;16072:8;:20::i;:::-;16106:23;16115:13;16106:8;:23::i;:::-;15935:204;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;16149:31;16158:13;16173:6;16149:8;:31::i;:::-;;15757:430;;15490:697:::0;;;;;;:::o;8314:464::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;8518:18:::1;8539:47;8548:5;8555:16;8573:12;8539:8;:47::i;:::-;8518:68;;8606:5;-1:-1:-1::0;;;;;8596:40:117::1;;8650:8;8680:4;8707;8726:20;8735:10;8726:8;:20::i;:::-;8760:1;8596:175;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;24076:1310:::0;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;24326:18:::1;24290:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:54;;;;;;;;:::i;:::-;;;:111;;;-1:-1:-1::0;;;;;;24397:4:117::1;24360:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;24360:41:117::1;;;24290:111;24286:183;;;24419:50;;-1:-1:-1::0;;;24419:50:117::1;;;;;;;;;;;24286:183;24565:1;24526:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;24526:41:117::1;;;:118;;;;-1:-1:-1::0;24617:17:117::1;24585:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;24526:118;24522:177;;;24653:46;;-1:-1:-1::0;;;24653:46:117::1;;;;;;;;;;;24522:177;24832:1;24793:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;24793:41:117::1;;:88;;;;-1:-1:-1::0;;;;;;24850:31:117;::::1;::::0;24793:88:::1;24789:166;;;24899:56;;-1:-1:-1::0;;;24899:56:117::1;;;;;;;;;;;24789:166;25016:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;25004:47:117::1;;25052:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;25074:4;25080;25004:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;25095:11:117::1;:27;::::0;-1:-1:-1;25095:27:117::1;::::0;-1:-1:-1;25157:4:117::1;25176:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;25231:11;25244:13;25259:17;25220:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;25095:192;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;25309:17:117::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;25297:47:117::1;;25345:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;25367:4;25373:5;25297:82;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;24076:1310:::0;;;:::o;28035:2728::-;28199:7;28222:10;-1:-1:-1;;;;;28244:11:117;28222:34;;28218:97;;28265:50;;-1:-1:-1;;;28265:50:117;;;;;;;;;;;28218:97;28339:30;;;28456:48;;;;28467:4;28456:48;:::i;:::-;28325:179;;;;;;28612:21;28636:136;28667:11;:17;;;28698:11;:20;;;28732:11;:23;;;:30;;;28636:17;:136::i;:::-;28839:17;;;;28818:45;;-1:-1:-1;;;28818:45:117;;28612:160;;-1:-1:-1;;;;;;28818:3:117;:20;;;;:45;;28858:4;;28818:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28883:11;:17;;;-1:-1:-1;;;;;28873:52:117;;28939:11;:20;;;28981:4;29008;29028:23;29037:13;29028:8;:23::i;:::-;29027:24;;;:::i;:::-;29066:23;29075:13;29066:8;:23::i;:::-;29065:24;;;:::i;:::-;28873:226;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29130:17:117;;;;29109:46;;-1:-1:-1;;;29109:46:117;;-1:-1:-1;;;;;29109:3:117;:20;;-1:-1:-1;29109:20:117;;:46;;29149:5;;29109:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29233:27;29263:44;29280:11;29293:13;29263:16;:44::i;:::-;29233:74;;29318:21;29342:189;29377:10;29442:24;;;29484:11;:23;;;29402:119;;;;;;;;:::i;:::-;;;;-1:-1:-1;;29402:119:117;;;;;;;;;;;;;;-1:-1:-1;;;;;29402:119:117;-1:-1:-1;;;;;;29402:119:117;;;;;;;;;;29342:13;:189::i;:::-;29318:213;;29541:20;29575:8;29564:31;;;;;;;;;;;;:::i;:::-;29541:54;-1:-1:-1;29681:22:117;29706:34;29541:54;29706:19;:34;:::i;:::-;29857:23;;;;;:30;;29821:67;;-1:-1:-1;;;29821:67:117;;29681:59;;-1:-1:-1;;;;;;29821:10:117;:18;;;;:67;;29848:6;;29857:30;29821:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;29926:23:117;;;;;:30;;29898:59;;-1:-1:-1;;;29898:59:117;;-1:-1:-1;;;;;29898:6:117;:12;;;;:59;;29919:4;;29898:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30095:1;30078:14;:18;30074:642;;;30193:19;;;;:27;;;-1:-1:-1;;;;;30193:41:117;;30189:516;;30254:233;30297:10;30378:24;;;30428:11;:19;;;30330:139;;;;;;;;:::i;30254:233::-;;30189:516;;;30610:23;;;;:31;;;30603:87;;-1:-1:-1;;;;;30603:52:117;30656:17;30675:14;30603:52;:87::i;:::-;-1:-1:-1;3336:50:117;;28035:2728;-1:-1:-1;;;;;;;;;;;;;28035:2728:117:o;25732:2128::-;25917:7;25940:10;-1:-1:-1;;;;;25962:11:117;25940:34;;25936:91;;25983:44;;-1:-1:-1;;;25983:44:117;;;;;;;;;;;25936:91;26051:30;;;26163:49;;;;26174:4;26163:49;:::i;:::-;26311:19;;;;:27;;;26037:175;;-1:-1:-1;26037:175:117;;-1:-1:-1;26037:175:117;-1:-1:-1;;;;;;26311:41:117;;26307:298;;26368:24;26395:135;26434:10;26470:24;;;26496:11;:19;;;26447:69;;;;;;;;:::i;26395:135::-;26368:162;;26571:11;26560:34;;;;;;;;;;;;:::i;:::-;26544:50;;26354:251;26307:298;26656:21;26680:131;26715:10;26751:24;;;26777:11;:23;;;26728:73;;;;;;;;:::i;26680:131::-;26656:155;;26821:21;26856:8;26845:31;;;;;;;;;;;;:::i;:::-;26821:55;;26953:18;26974:73;26991:11;27004:12;27018:13;27033;26974:16;:73::i;:::-;26953:94;;27140:21;27164:112;27195:11;:17;;;27214:11;:20;;;27236:11;:23;;;:30;;;27164:17;:112::i;:::-;27140:136;;27332:11;:17;;;-1:-1:-1;;;;;27322:52:117;;27388:11;:20;;;27430:4;27457;27476:20;27485:10;27476:8;:20::i;:::-;27510:23;27519:13;27510:8;:23::i;:::-;27322:221;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;27636:23:117;;;;;:30;;27609:58;;-1:-1:-1;;;27609:58:117;;:6;-1:-1:-1;;;;;27609:11:117;;;;:58;;27629:4;;27609:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;27788:23:117;;;;;:30;;27747:72;;-1:-1:-1;;;27747:72:117;;:10;-1:-1:-1;;;;;27747:18:117;;;;:72;;27774:11;;27747:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3235:45:117;;25732:2128;-1:-1:-1;;;;;;;;;;;;;;25732:2128:117:o;13372:659::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;13629:18:::1;13650:47;13659:5;13666:16;13684:12;13650:8;:47::i;:::-;13629:68:::0;-1:-1:-1;13707:21:117::1;13731:55;13749:5:::0;13756:8;13766:19;::::1;13731:17;:55::i;:::-;13707:79;;13806:5;-1:-1:-1::0;;;;;13796:40:117::1;;13850:8;13880:4;13907;13926:20;13935:10;13926:8;:20::i;:::-;13960:23;13969:13;13960:8;:23::i;:::-;13796:197;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14003:21;14011:12;14003:7;:21::i;9634:426::-:0;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;9755:21:::1;9779:55;9797:5:::0;9804:8;9814:19;::::1;9779:17;:55::i;:::-;9755:79;;9854:5;-1:-1:-1::0;;;;;9844:40:117::1;;9898:8;9928:4;9955;9974:1;9989:23;9998:13;9989:8;:23::i;:::-;9844:178;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10032:21;10040:12;10032:7;:21::i;:::-;9745:315;9634:426:::0;;;:::o;19328:748::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;19592:51:::1;19599:8;19609:5;19616:12;19630;19592:6;:51::i;:::-;19653:54;::::0;-1:-1:-1;;;19653:54:117;;::::1;::::0;::::1;755:25:181::0;;;-1:-1:-1;;;;;19653:39:117;::::1;::::0;::::1;::::0;728:18:181;;19653:54:117::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;19717:65:117::1;::::0;-1:-1:-1;;;19717:65:117;;-1:-1:-1;;;;;19737:3:117::1;19717:42;::::0;::::1;::::0;:65:::1;::::0;19760:8;;19770:5;;19777:4:::1;::::0;19717:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;19792:40:117;::::1;::::0;-1:-1:-1;19792:40:117::1;19846:8:::0;19876:4:::1;::::0;19922:1:::1;19938:45;19947:35;19969:13:::0;19947:19;::::1;:35;:::i;:::-;19938:8;:45::i;:::-;19937:46;;;:::i;:::-;19792:201;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;20003:66:117::1;::::0;-1:-1:-1;;;20003:66:117;;-1:-1:-1;;;;;20023:3:117::1;20003:42;::::0;-1:-1:-1;20003:42:117::1;::::0;-1:-1:-1;20003:66:117::1;::::0;20046:8;;20056:5;;20063::::1;::::0;20003:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;19328:748:::0;;;;;;:::o;8976:401::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;9147:5:::1;-1:-1:-1::0;;;;;9137:40:117::1;;9191:8;9221:4;9248;9268:33;9277:16;:23;;;9268:8;:33::i;:::-;9267:34;;;:::i;:::-;9315:1;9137:189;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9336:34;9346:5;9353:16;9336:9;:34::i;12204:305::-:0;12324:22;12348:13;12363:24;12389:25;12448:5;-1:-1:-1;;;;;12438:33:117;;12472:11;12485:16;;12438:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12431:71;;;;-1:-1:-1;12431:71:117;-1:-1:-1;12431:71:117;;-1:-1:-1;12204:305:117;-1:-1:-1;;;;;12204:305:117:o;14338:738::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;14595:51:::1;14602:8;14612:5;14619:12;14633;14595:6;:51::i;:::-;14656:65;::::0;-1:-1:-1;;;14656:65:117;;-1:-1:-1;;;;;14676:3:117::1;14656:42;::::0;::::1;::::0;:65:::1;::::0;14699:8;;14709:5;;14716:4:::1;::::0;14656:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14741:5;-1:-1:-1::0;;;;;14731:40:117::1;;14785:8;14815:4;14842;14862:33;14871:16;:23;;;14862:8;:33::i;:::-;14861:34;;;:::i;:::-;14910:29;14919:19:::0;::::1;14910:8;:29::i;:::-;14909:30;;;:::i;:::-;14731:218;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;14959:66:117::1;::::0;-1:-1:-1;;;14959:66:117;;-1:-1:-1;;;;;14979:3:117::1;14959:42;::::0;-1:-1:-1;14959:42:117::1;::::0;-1:-1:-1;14959:66:117::1;::::0;15002:8;;15012:5;;15019::::1;::::0;14959:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;15035:34;15045:5;15052:16;15035:9;:34::i;:::-;;14338:738:::0;;;;;:::o;21664:1737::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;21985:17:::1;21949:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:32;::::0;;;;;::::1;;;:::i;:::-;:53;;;;;;;;:::i;:::-;;;:123;;;-1:-1:-1::0;;;;;;22061:10:117::1;22018:54;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:31;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;22018:54:117::1;;;21949:123;:180;;;-1:-1:-1::0;;;;;;22125:4:117::1;22088:41;:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:33;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;22088:41:117::1;;;21949:180;21945:252;;;22147:50;;-1:-1:-1::0;;;22147:50:117::1;;;;;;;;;;;21945:252;22293:1;22254:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;22254:41:117::1;;;:230;;;;-1:-1:-1::0;22345:17:117::1;22313:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:28;::::0;;;;;::::1;;;:::i;:::-;:49;;;;;;;;:::i;:::-;;;:108;;;-1:-1:-1::0;;;;;;22378:43:117;::::1;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:27;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;22378:43:117::1;;;22313:108;:161;;;-1:-1:-1::0;;;;;;22470:4:117::1;22437:37;:19;;::::0;::::1;:11:::0;:19:::1;:::i;:::-;:29;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;22437:37:117::1;;;22313:161;22250:289;;;22493:46;;-1:-1:-1::0;;;22493:46:117::1;;;;;;;;;;;22250:289;22622:17:::0;;22618:337:::1;;22685:4;-1:-1:-1::0;;;;;22659:31:117;::::1;::::0;22655:290:::1;;22710:54;-1:-1:-1::0;;;;;22710:33:117;::::1;22744:4;22750:13:::0;22710:33:::1;:54::i;:::-;22655:290;;;22852:78;22866:12:::0;22880:14;22896:4:::1;22902:13:::0;22852:78:::1;;::::0;;::::1;::::0;::::1;22917:12:::0;22852:78:::1;:::i;:::-;:13;:78::i;:::-;23008:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;22996:47:117::1;;23044:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;23066:4;23072;22996:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;23087:11:117::1;:21;::::0;-1:-1:-1;23087:21:117::1;::::0;-1:-1:-1;23144:4:117::1;23171:10;23196:23;;::::0;::::1;:11:::0;:23:::1;:::i;:::-;:30;;;23251:11;23264:12;23278:13;23240:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;23087:215;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;23324:17:117::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;23312:47:117::1;;23360:20;;::::0;::::1;:11:::0;:20:::1;:::i;:::-;23382:4;23388:5;23312:82;;;;;;;;;;;;;;;;;:::i;16626:1057::-:0;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;16949:1:::1;16919:18;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16919:32:117::1;;16915:552;;17003:4;16971:20;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;16971:37:117::1;;16967:104;;17017:54;;-1:-1:-1::0;;;17017:54:117::1;;;;;;;;;;;16967:104;17094:52;17111:8;17121:10;17133:12;17094:16;:52::i;:::-;17085:61;;16915:552;;;-1:-1:-1::0;;;;;17167:25:117;::::1;17187:4;17167:25;17163:304;;17281:175;17320:10;17349:8:::0;17383:4:::1;17406:6:::0;17281:175:::1;;::::0;;::::1;::::0;::::1;17430:12:::0;17281:175:::1;:::i;:::-;17518:43;::::0;-1:-1:-1;;;17518:43:117;;-1:-1:-1;;;;;17518:10:117::1;:18;::::0;::::1;::::0;:43:::1;::::0;17545:6:::1;::::0;17554;;17518:43:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;17571:35:117::1;::::0;-1:-1:-1;;;17571:35:117;;-1:-1:-1;;;;;17571:6:117::1;:12;::::0;::::1;::::0;:35:::1;::::0;17592:4:::1;::::0;17599:6;;17571:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;17653:23;17662:5;17669:6;17653:8;:23::i;12924:196::-:0;13059:54;;-1:-1:-1;;;13059:54:117;;;;;755:25:181;;;13012:20:117;;-1:-1:-1;;;;;13059:39:117;;;;;728:18:181;;13059:54:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13044:69;12924:196;-1:-1:-1;;;12924:196:117:o;18184:744::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;18454:62:::1;::::0;-1:-1:-1;;;18454:62:117;;::::1;::::0;::::1;755:25:181::0;;;-1:-1:-1;;;;;18454:47:117;::::1;::::0;::::1;::::0;728:18:181;;18454:62:117::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;18526:51:117::1;::::0;-1:-1:-1;;;18526:51:117;;-1:-1:-1;;;;;18526:3:117::1;:20;::::0;::::1;::::0;:51:::1;::::0;18547:8;;18557:13;;18572:4:::1;::::0;18526:51:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;18597:13;-1:-1:-1::0;;;;;18587:48:117::1;;18649:8;18679:4;18706;18726:33;18735:16;:23;;;18726:8;:33::i;:::-;18725:34;;;:::i;:::-;18774:23;18783:13;18774:8;:23::i;:::-;18773:24;;;:::i;:::-;18587:220;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;18817:52:117::1;::::0;-1:-1:-1;;;18817:52:117;;-1:-1:-1;;;;;18817:3:117::1;:20;::::0;-1:-1:-1;18817:20:117::1;::::0;-1:-1:-1;18817:52:117::1;::::0;18838:8;;18848:13;;18863:5:::1;::::0;18817:52:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;18879:42;18889:13;18904:16;18879:9;:42::i;20368:554::-:0;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;20557:7;20534:20:::1;20581:335;20601:12;20597:1;:16;20581:335;;;20634:12;;20647:1;20634:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;20630:245;;;20669:34;20683:7;;20691:1;20683:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;20695:4;;20700:1;20695:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;20669:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;20669:13:117::1;::::0;-1:-1:-1;;;20669:34:117:i:1;:::-;;20630:245;;;20743:12;20757:21:::0;20782:7:::1;;20790:1;20782:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;20782:15:117::1;20798:4;;20803:1;20798:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;20782:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20742:64;;;;20829:7;20824:36;;20838:22;20851:8;20838:12;:22::i;:::-;20724:151;;20630:245;20900:3;;20581:335;;;;20524:398;20368:554:::0;;;;;;:::o;10361:598::-;-1:-1:-1;;;;;5681:4:117;5664:21;5672:4;5664:21;5660:68;;5694:34;;-1:-1:-1;;;5694:34:117;;;;;;;;;;;5660:68;10555:51:::1;10562:8;10572:5;10579:12;10593;10555:6;:51::i;:::-;10616:65;::::0;-1:-1:-1;;;10616:65:117;;-1:-1:-1;;;;;10636:3:117::1;10616:42;::::0;::::1;::::0;:65:::1;::::0;10659:8;;10669:5;;10676:4:::1;::::0;10616:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10701:5;-1:-1:-1::0;;;;;10691:40:117::1;;10745:8;10775:4;10802;10821:1;10837:29;10846:12;:19;;;10837:8;:29::i;:::-;10836:30;;;:::i;:::-;10691:185;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10886:66:117::1;::::0;-1:-1:-1;;;10886:66:117;;-1:-1:-1;;;;;10906:3:117::1;10886:42;::::0;-1:-1:-1;10886:42:117::1;::::0;-1:-1:-1;10886:66:117::1;::::0;10929:8;;10939:5;;10946::::1;::::0;10886:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;31212:992:::0;31373:7;31409:23;;;;31373:7;31447:24;;;;31409:16;31447:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31447:46:117;;31443:682;;31549:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;31513:64:117;:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31513:64:117;;;:135;;;-1:-1:-1;31643:4:117;31597:24;;;;:16;:24;:::i;:::-;:34;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31597:51:117;;;31513:135;31509:201;;;31670:40;;-1:-1:-1;;;31670:40:117;;;;;;;;;;;31509:201;31733:89;31750:31;;;;;;;;:::i;:::-;31783:24;;;;:16;:24;:::i;:::-;31809:12;31733:16;:89::i;:::-;31724:98;;31443:682;;;31886:4;31843:31;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31843:48:117;;31839:286;;31907:207;31938:28;;;;:16;:28;:::i;:::-;31984:31;;;;;;;;:::i;:::-;32041:4;32064:6;31907:207;;;;;;;32088:12;31907:207;:::i;:::-;32142:55;32153:5;32160:28;;;;:16;:28;:::i;:::-;32190:6;32142:10;:55::i;:::-;32135:62;31212:992;-1:-1:-1;;;;;31212:992:117:o;37433:332::-;37560:18;37591:22;37615:21;37651:5;-1:-1:-1;;;;;37641:27:117;;37669:8;37641:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37590:88;;;;;37701:57;37721:4;37727:15;37744:13;37701:19;:57::i;:::-;37688:70;37433:332;-1:-1:-1;;;;;;37433:332:117:o;509:133:171:-;552:6;-1:-1:-1;;;570:1:171;:13;566:51;;592:25;;-1:-1:-1;;;592:25:171;;;;;;;;;;;566:51;-1:-1:-1;637:1:171;509:133::o;5141:456:121:-;5271:7;5332:27;5372:11;:17;;;-1:-1:-1;;;;;5362:37:121;;5408:4;5415:13;5362:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5532:27;;;;;5524:66;;-1:-1:-1;;;5524:66:121;;;;;755:25:181;;;5332:97:121;;-1:-1:-1;;;;;;5524:45:121;;;;728:18:181;;5524:66:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5517:73;;;5141:456;;;;;:::o;767:241:115:-;839:12;864;878:23;905:2;-1:-1:-1;;;;;905:15:115;921:4;905:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:63;;;;941:7;936:38;;950:24;963:10;950:12;:24::i;941:175:62:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1050:58:62;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:62;-1:-1:-1;;;;;;1050:58:62;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;3459:1344:121:-;3650:7;3669:25;3743:27;3773:13;3743:43;;3900:12;-1:-1:-1;;;;;3869:43:121;:11;:27;;;-1:-1:-1;;;;;3869:43:121;;:88;;;;-1:-1:-1;3916:19:121;;;;:27;;;-1:-1:-1;;;;;3916:41:121;;3869:88;3865:364;;;4076:13;4056:33;;3865:364;;;4182:36;4205:13;4182:36;;:::i;:::-;;;3865:364;4287:23;4321:11;:27;;;-1:-1:-1;;;;;4313:42:121;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4404:27;;;;4287:70;;-1:-1:-1;4367:86:121;;-1:-1:-1;;;;;4367:36:121;;;4433:19;4367:36;:86::i;:::-;4493:27;;;;;4485:65;;-1:-1:-1;;;4485:65:121;;;;;755:25:181;;;4553:17:121;;-1:-1:-1;;;;;4485:44:121;;;;728:18:181;;4485:65:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;:::-;4668:17;;;;4626:27;;;;4463:107;;-1:-1:-1;4619:88:121;;-1:-1:-1;;;;;4619:48:121;;4463:107;4619:48;:88::i;:::-;4734:11;:17;;;-1:-1:-1;;;;;4724:36:121;;4769:4;4776:19;4724:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4717:79;;;;;3459:1344;;;;;;;:::o;33417:940:117:-;33490:80;;-1:-1:-1;;;33490:80:117;;-1:-1:-1;;;;;33510:3:117;33490:42;;;;:80;;33541:4;;33556:6;;33565:4;;33490:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;33624:1:117;;-1:-1:-1;33584:20:117;;-1:-1:-1;;33584:20:117;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;33584:42:117;;33580:771;;-1:-1:-1;;;;;33642:6:117;:11;;33654:21;;;;;;;;:::i;:::-;33642:55;;-1:-1:-1;;;;;;33642:55:117;;;;;;;;;;33677:19;;;33642:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33711:81:117;;-1:-1:-1;;;33711:81:117;;-1:-1:-1;;;;;33731:3:117;33711:42;;-1:-1:-1;33711:42:117;;-1:-1:-1;33711:81:117;;33762:4;;33777:6;;33786:5;;33711:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33417:940;:::o;33580:771::-;33824:47;;-1:-1:-1;;;33824:47:117;;-1:-1:-1;;;;;33824:6:117;:11;;;;:47;;33844:4;;33851:19;;;33824:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33885:81:117;;-1:-1:-1;;;33885:81:117;;-1:-1:-1;;;;;33905:3:117;33885:42;;-1:-1:-1;33885:42:117;;-1:-1:-1;33885:81:117;;33936:4;;33951:6;;33960:5;;33885:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;34057:10:117;34017:51;;-1:-1:-1;34017:20:117;;-1:-1:-1;34017:20:117;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;34017:51:117;;34013:103;;34077:39;;-1:-1:-1;;;34077:39:117;;;;;;;;;;;34013:103;34130:210;34169:10;-1:-1:-1;;;34288:20:117;;;;:12;:20;:::i;:::-;34198:128;;;;;;;;:::i;34130:210::-;;33580:771;33417:940;:::o;34651:1319::-;34888:14;;34916:20;;;;:12;:20;:::i;:::-;:28;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;34916:42:117;;34912:896;;35021:4;34979:20;;;;:12;:20;:::i;:::-;:30;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;34979:47:117;;34975:98;;35035:38;;-1:-1:-1;;;35035:38:117;;;;;;;;;;;34975:98;35097:75;35114:21;;;;;;;;:::i;:::-;35137:20;;;;:12;:20;:::i;:::-;35159:12;35097:16;:75::i;:::-;35088:84;;34912:896;;;35264:22;35288:21;35324:5;-1:-1:-1;;;;;35314:27:117;;35342:8;35314:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;35263:88:117;;-1:-1:-1;35263:88:117;-1:-1:-1;35263:88:117;35374:42;-1:-1:-1;;;;;35374:42:117;;35396:19;;35374:4;:42::i;:::-;:58;;;;:::i;:::-;35365:67;-1:-1:-1;35484:4:117;35451:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;35451:38:117;;35447:351;;35571:212;35614:10;35647:21;;;;;;;;:::i;:::-;35698:4;35725:6;35571:212;;;;;;;35753:12;35571:212;:::i;:::-;35190:618;;34912:896;35875:43;;-1:-1:-1;;;35875:43:117;;-1:-1:-1;;;;;35875:10:117;:18;;;;:43;;35902:6;;35911;;35875:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;35928:35:117;;-1:-1:-1;;;35928:35:117;;-1:-1:-1;;;;;35928:6:117;:12;;;;:35;;35949:4;;35956:6;;35928:35;;;:::i;32476:798::-;32572:7;;32612:73;32624:5;32631:28;;;;:16;:28;:::i;:::-;32661:16;:23;;;32612:11;:73::i;:::-;32591:94;-1:-1:-1;32803:1:117;32759:24;;;;:16;:24;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32759:46:117;;32755:486;;32821:214;32860:10;-1:-1:-1;;;32979:24:117;;;;:16;:24;:::i;32821:214::-;;32755:486;;;33136:94;33186:31;;;;;;;;:::i;:::-;33219:10;33143:28;;;;:16;:28;:::i;:::-;-1:-1:-1;;;;;33136:49:117;;:94;:49;:94::i;1455:1279:123:-;1623:20;1600:19;;:43;;;;;;;;:::i;:::-;;1596:1132;;1135:42;-1:-1:-1;;;;;1721:46:123;;1785:262;;;;;;;;1856:84;;;;;;;;1901:5;-1:-1:-1;;;;;1856:84:123;;;;;1916:6;:21;;;1856:84;;;1785:262;;;;1969:6;:12;;;1785:262;;;;2013:6;:15;;;1785:262;;;2065:80;;;;;;;;2115:2;-1:-1:-1;;;;;2065:80:123;;;;;2136:6;2065:80;;;2163:4;2198:6;:8;;;2208:6;:8;;;2225:6;:8;;;2218:16;;2185:50;;;;;;;;;37260:19:181;;;37304:2;37295:12;;37288:28;;;;-1:-1:-1;;;;;;37346:26:181;37341:2;37332:12;;37325:48;37398:2;37389:12;;37077:330;2185:50:123;;;;;;;;;;;;;1721:551;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:1132;;;2316:19;2293;;:42;;;;;;;;:::i;:::-;;2289:439;;2406:110;2437:4;2443:2;2447:6;:21;;;2470:6;:15;;;2487:6;:8;;;2497:6;:8;;;2507:6;:8;;;2419:5;-1:-1:-1;;;;;2406:30:123;;;:110;;;;;;;;;;:::i;:::-;2530:48;-1:-1:-1;;;;;2530:30:123;;2561:4;2567:2;2571:6;2530:30;:48::i;:::-;2289:439;;;2669:48;-1:-1:-1;;;;;2669:30:123;;2700:4;2706:2;2710:6;2669:30;:48::i;36066:952:117:-;36224:17;36253:21;36277:241;36312:10;36377:35;;;36430:6;36454:12;36484:10;36337:171;;;;;;;;;;:::i;36277:241::-;36253:265;;36528:17;36559:8;36548:31;;;;;;;;;;;;:::i;:::-;36528:51;-1:-1:-1;36701:18:117;36678:19;;;;;;;;:::i;:::-;:41;;;;;;;;:::i;:::-;;36674:338;;36735:17;36755:28;36774:9;36755:16;;;;:28;:::i;:::-;36735:48;-1:-1:-1;36801:13:117;;36797:110;;36834:58;36874:6;36882:9;36841:18;;;;;;;;:::i;36834:58::-;36932:10;:17;;;36920:29;;36721:239;36674:338;;;36992:9;36980:21;;36674:338;36243:775;;36066:952;;;;;:::o;1192:255:115:-;1263:13;;:18;1259:127;;1354:6;1348:13;1339:6;1335:2;1331:15;1324:38;1259:127;1402:38;;-1:-1:-1;;;1402:38:115;;;;;;;;;;;1508:621:121;1599:7;1618:18;1657:5;-1:-1:-1;;;;;1647:22:121;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1618:54;;1794:10;-1:-1:-1;;;;;1787:17:121;:3;-1:-1:-1;;;;;1787:17:121;;1783:219;;1820:18;1849:10;-1:-1:-1;;;;;1841:25:121;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1820:48;-1:-1:-1;1882:51:121;-1:-1:-1;;;;;1882:31:121;;1914:10;1926:6;1882:31;:51::i;:::-;1956:35;;-1:-1:-1;;;1956:35:121;;;;;755:25:181;;;-1:-1:-1;;;;;1956:27:121;;;;;728:18:181;;1956:35:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1947:44;;1806:196;1783:219;2012:46;-1:-1:-1;;;;;2012:31:121;;2044:5;2051:6;2012:31;:46::i;:::-;2075:47;;-1:-1:-1;;;2075:47:121;;-1:-1:-1;;;;;2075:24:121;;;;;:47;;2108:4;;2115:6;;2075:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1944:373:88:-;2062:18;2101:43;2106:20;2113:13;2106:4;:20;:::i;:::-;2128:15;-1:-1:-1;;;;;2101:43:88;:4;:43::i;:::-;2088:56;;2266:4;2206:57;2220:10;2232:15;2249:13;2206;:57::i;:::-;:64;2202:113;;;2294:12;;1944:373;;;;;:::o;5173:642:62:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:62;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:62;;40008:2:181;5697:111:62;;;39990:21:181;40047:2;40027:18;;;40020:30;40086:34;40066:18;;;40059:62;-1:-1:-1;;;40137:18:181;;;40130:40;40187:19;;5697:111:62;;;;;;;;3756:410;3843:25;3894:22;;;3918:7;3927:5;3871:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3871:62:62;;;;;;;;;;;;;;-1:-1:-1;;;;;3871:62:62;-1:-1:-1;;;;;;3871:62:62;;;;;;;;;;;-1:-1:-1;3949:44:62;3973:5;3871:62;3949:23;:44::i;:::-;3944:216;;4036:58;;-1:-1:-1;;;;;40415:32:181;;4036:58:62;;;40397:51:181;4092:1:62;40464:18:181;;;40457:45;4009:86:62;;4029:5;;-1:-1:-1;;;4059:22:62;40370:18:181;;4036:58:62;40217:291:181;4009:86:62;4109:40;4129:5;4136:12;4109:19;:40::i;3233:443:171:-;3283:9;3436:1;3432;3428:6;3424:14;3421:1;3418:21;3415:1;3411:29;3408:227;;;3539:10;3533:4;3526:24;3620:4;3614;3607:18;3408:227;-1:-1:-1;3664:3:171;3653:9;;3649:19;;3233:443::o;2415:524:121:-;2507:7;2526:27;2566:5;-1:-1:-1;;;;;2556:25:121;;2590:4;2597:6;2556:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2526:78;;2713:18;2752:5;-1:-1:-1;;;;;2742:22:121;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2713:54;;2788:10;-1:-1:-1;;;;;2781:17:121;:3;-1:-1:-1;;;;;2781:17:121;;2777:119;;2836:49;;-1:-1:-1;;;2836:49:121;;;;;755:25:181;;;-1:-1:-1;;;;;2836:28:121;;;;;728:18:181;;2836:49:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2814:71;;2777:119;-1:-1:-1;2913:19:121;2415:524;-1:-1:-1;;;;2415:524:121:o;4318:472:62:-;4565:19;;-1:-1:-1;;;4565:19:62;;4543;;-1:-1:-1;;;;;4565:12:62;;;;;:19;;4578:5;;4565:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4594:54;;-1:-1:-1;;;4594:54:62;;-1:-1:-1;;;;;40880:15:181;;;4594:54:62;;;40862:34:181;40932:15;;;40912:18;;;40905:43;40964:18;;;40957:34;;;41007:18;;;41000:34;;;41083:4;41071:17;;41050:19;;;41043:46;41105:19;;;41098:35;;;41149:19;;;41142:35;;;4543:41:62;;-1:-1:-1;4594:12:62;;;;;;40796:19:181;;4594:54:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4679:19:62;;-1:-1:-1;;;4679:19:62;;4658:18;;-1:-1:-1;;;;;;4679:12:62;;;-1:-1:-1;4679:12:62;;:19;;4692:5;;4679:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4658:40;-1:-1:-1;4730:15:62;:11;4744:1;4730:15;:::i;:::-;4716:10;:29;4708:75;;;;-1:-1:-1;;;4708:75:62;;41390:2:181;4708:75:62;;;41372:21:181;41429:2;41409:18;;;41402:30;41468:34;41448:18;;;41441:62;-1:-1:-1;;;41519:18:181;;;41512:31;41560:19;;4708:75:62;41188:397:181;1355:203:62;1482:68;;-1:-1:-1;;;;;41848:15:181;;;1482:68:62;;;41830:34:181;41900:15;;41880:18;;;41873:43;41932:18;;;41925:34;;;1455:96:62;;1475:5;;-1:-1:-1;;;1505:27:62;41765:18:181;;1482:68:62;41590:375:181;4704:487:171;4754:9;4934:16;4928:23;;4946:3;4919:33;4912:41;4905:49;;4895:255;;5054:10;5048:4;5041:24;5135:4;5129;5122:18;4895:255;-1:-1:-1;5175:3:171;5168:11;;;;5164:19;;4704:487::o;1470:197:88:-;1588:12;1651:13;1615:33;1620:10;1632:15;-1:-1:-1;;;;;1615:33:88;:4;:33::i;:::-;:49;;;;:::i;4109:223:65:-;4242:12;4273:52;4295:6;4303:4;4309:1;4312:12;4273:21;:52::i;6316:594:62:-;6399:4;6701:12;6715:23;6750:5;-1:-1:-1;;;;;6742:19:62;6762:4;6742:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6700:67;;;;6796:7;:69;;;;-1:-1:-1;6808:17:62;;:22;;:56;;;6845:10;6834:30;;;;;;;;;;;;:::i;:::-;6796:107;;;;-1:-1:-1;;;;;;;;;;1702:19:65;;:23;;;6316:594:62:o;5166:446:65:-;5331:12;5388:5;5363:21;:30;;5355:81;;;;-1:-1:-1;;;5355:81:65;;42172:2:181;5355:81:65;;;42154:21:181;42211:2;42191:18;;;42184:30;42250:34;42230:18;;;42223:62;-1:-1:-1;;;42301:18:181;;;42294:36;42347:19;;5355:81:65;41970:402:181;5355:81:65;5447:12;5461:23;5488:6;-1:-1:-1;;;;;5488:11:65;5507:5;5514:4;5488:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:73;;;;5536:69;5563:6;5571:7;5580:10;5592:12;5536:26;:69::i;:::-;5529:76;5166:446;-1:-1:-1;;;;;;;5166:446:65:o;7672:628::-;7852:12;7880:7;7876:418;;;7907:10;:17;7928:1;7907:22;7903:286;;-1:-1:-1;;;;;1702:19:65;;;8114:60;;;;-1:-1:-1;;;8114:60:65;;42579:2:181;8114:60:65;;;42561:21:181;42618:2;42598:18;;;42591:30;42657:31;42637:18;;;42630:59;42706:18;;8114:60:65;42377:353:181;8114:60:65;-1:-1:-1;8209:10:65;8202:17;;7876:418;8250:33;8258:10;8270:12;8981:17;;:21;8977:379;;9209:10;9203:17;9265:15;9252:10;9248:2;9244:19;9237:44;8977:379;9332:12;9325:20;;-1:-1:-1;;;9325:20:65;;;;;;;;:::i;14:131:181:-;-1:-1:-1;;;;;89:31:181;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:315::-;357:6;365;418:2;406:9;397:7;393:23;389:32;386:52;;;434:1;431;424:12;386:52;473:9;460:23;492:31;517:5;492:31;:::i;:::-;542:5;594:2;579:18;;;;566:32;;-1:-1:-1;;;289:315:181:o;791:165::-;860:5;905:3;896:6;891:3;887:16;883:26;880:46;;;922:1;919;912:12;880:46;-1:-1:-1;944:6:181;791:165;-1:-1:-1;791:165:181:o;961:161::-;1026:5;1071:3;1062:6;1057:3;1053:16;1049:26;1046:46;;;1088:1;1085;1078:12;1127:1000;1301:6;1309;1317;1325;1333;1341;1394:3;1382:9;1373:7;1369:23;1365:33;1362:53;;;1411:1;1408;1401:12;1362:53;1450:9;1437:23;1469:31;1494:5;1469:31;:::i;:::-;1519:5;-1:-1:-1;1576:2:181;1561:18;;1548:32;1589:33;1548:32;1589:33;:::i;:::-;1641:7;-1:-1:-1;1700:2:181;1685:18;;1672:32;1713:33;1672:32;1713:33;:::i;:::-;1765:7;-1:-1:-1;1819:2:181;1804:18;;1791:32;;-1:-1:-1;1874:3:181;1859:19;;1846:33;-1:-1:-1;;;;;1891:30:181;;1888:50;;;1934:1;1931;1924:12;1888:50;1957:76;2025:7;2016:6;2005:9;2001:22;1957:76;:::i;:::-;1947:86;;;2052:69;2113:7;2107:3;2096:9;2092:19;2052:69;:::i;:::-;2042:79;;1127:1000;;;;;;;;:::o;2132:789::-;2288:6;2296;2304;2312;2365:3;2353:9;2344:7;2340:23;2336:33;2333:53;;;2382:1;2379;2372:12;2333:53;2421:9;2408:23;2440:31;2465:5;2440:31;:::i;:::-;2490:5;-1:-1:-1;2547:2:181;2532:18;;2519:32;2560:33;2519:32;2560:33;:::i;:::-;2612:7;-1:-1:-1;2670:2:181;2655:18;;2642:32;-1:-1:-1;;;;;2686:30:181;;2683:50;;;2729:1;2726;2719:12;2683:50;2752:76;2820:7;2811:6;2800:9;2796:22;2752:76;:::i;:::-;2742:86;;;2847:68;2907:7;2902:2;2891:9;2887:18;2847:68;:::i;:::-;2837:78;;2132:789;;;;;;;:::o;2926:220::-;-1:-1:-1;;;;;3107:32:181;;;;3089:51;;3077:2;3062:18;;2926:220::o;3151:160::-;3215:5;3260:3;3251:6;3246:3;3242:16;3238:26;3235:46;;;3277:1;3274;3267:12;3316:568;3425:6;3433;3441;3494:2;3482:9;3473:7;3469:23;3465:32;3462:52;;;3510:1;3507;3500:12;3462:52;3550:9;3537:23;-1:-1:-1;;;;;3575:6:181;3572:30;3569:50;;;3615:1;3612;3605:12;3569:50;3638:71;3701:7;3692:6;3681:9;3677:22;3638:71;:::i;:::-;3628:81;;;3756:2;3745:9;3741:18;3728:32;3718:42;;3810:2;3799:9;3795:18;3782:32;3823:31;3848:5;3823:31;:::i;:::-;3873:5;3863:15;;;3316:568;;;;;:::o;4388:347::-;4439:8;4449:6;4503:3;4496:4;4488:6;4484:17;4480:27;4470:55;;4521:1;4518;4511:12;4470:55;-1:-1:-1;4544:20:181;;-1:-1:-1;;;;;4576:30:181;;4573:50;;;4619:1;4616;4609:12;4573:50;4656:4;4648:6;4644:17;4632:29;;4708:3;4701:4;4692:6;4684;4680:19;4676:30;4673:39;4670:59;;;4725:1;4722;4715:12;4670:59;4388:347;;;;;:::o;4740:681::-;4837:6;4845;4853;4861;4869;4922:3;4910:9;4901:7;4897:23;4893:33;4890:53;;;4939:1;4936;4929:12;4890:53;4978:9;4965:23;4997:31;5022:5;4997:31;:::i;:::-;5047:5;-1:-1:-1;5099:2:181;5084:18;;5071:32;;-1:-1:-1;5150:2:181;5135:18;;5122:32;;-1:-1:-1;5205:2:181;5190:18;;5177:32;-1:-1:-1;;;;;5221:30:181;;5218:50;;;5264:1;5261;5254:12;5218:50;5303:58;5353:7;5344:6;5333:9;5329:22;5303:58;:::i;:::-;4740:681;;;;-1:-1:-1;4740:681:181;;-1:-1:-1;5380:8:181;;5277:84;4740:681;-1:-1:-1;;;4740:681:181:o;5426:823::-;5532:6;5540;5548;5556;5564;5572;5625:3;5613:9;5604:7;5600:23;5596:33;5593:53;;;5642:1;5639;5632:12;5593:53;5681:9;5668:23;5700:31;5725:5;5700:31;:::i;:::-;5750:5;-1:-1:-1;5807:2:181;5792:18;;5779:32;5820:33;5779:32;5820:33;:::i;:::-;5872:7;-1:-1:-1;5926:2:181;5911:18;;5898:32;;-1:-1:-1;5977:2:181;5962:18;;5949:32;;-1:-1:-1;6032:3:181;6017:19;;6004:33;-1:-1:-1;;;;;6049:30:181;;6046:50;;;6092:1;6089;6082:12;6046:50;6131:58;6181:7;6172:6;6161:9;6157:22;6131:58;:::i;:::-;5426:823;;;;-1:-1:-1;5426:823:181;;-1:-1:-1;5426:823:181;;6208:8;;5426:823;-1:-1:-1;;;5426:823:181:o;6254:160::-;6319:5;6364:2;6355:6;6350:3;6346:16;6342:25;6339:45;;;6380:1;6377;6370:12;6419:1056;6617:6;6625;6633;6641;6649;6702:3;6690:9;6681:7;6677:23;6673:33;6670:53;;;6719:1;6716;6709:12;6670:53;6758:9;6745:23;6777:31;6802:5;6777:31;:::i;:::-;6827:5;-1:-1:-1;6884:2:181;6869:18;;6856:32;6897:33;6856:32;6897:33;:::i;:::-;6949:7;-1:-1:-1;7007:2:181;6992:18;;6979:32;-1:-1:-1;;;;;7060:14:181;;;7057:34;;;7087:1;7084;7077:12;7057:34;7110:76;7178:7;7169:6;7158:9;7154:22;7110:76;:::i;:::-;7100:86;;7239:2;7228:9;7224:18;7211:32;7195:48;;7268:2;7258:8;7255:16;7252:36;;;7284:1;7281;7274:12;7252:36;;7307:74;7373:7;7362:8;7351:9;7347:24;7307:74;:::i;:::-;7297:84;;;7400:69;7461:7;7455:3;7444:9;7440:19;7400:69;:::i;:::-;7390:79;;6419:1056;;;;;;;;:::o;7480:643::-;7590:6;7598;7606;7659:2;7647:9;7638:7;7634:23;7630:32;7627:52;;;7675:1;7672;7665:12;7627:52;7714:9;7701:23;7733:31;7758:5;7733:31;:::i;:::-;7783:5;-1:-1:-1;7840:2:181;7825:18;;7812:32;7853:33;7812:32;7853:33;:::i;:::-;7905:7;-1:-1:-1;7963:2:181;7948:18;;7935:32;-1:-1:-1;;;;;7979:30:181;;7976:50;;;8022:1;8019;8012:12;7976:50;8045:72;8109:7;8100:6;8089:9;8085:22;8045:72;:::i;:::-;8035:82;;;7480:643;;;;;:::o;8128:919::-;8298:6;8306;8314;8322;8330;8338;8391:3;8379:9;8370:7;8366:23;8362:33;8359:53;;;8408:1;8405;8398:12;8359:53;8447:9;8434:23;8466:31;8491:5;8466:31;:::i;:::-;8516:5;-1:-1:-1;8573:2:181;8558:18;;8545:32;8586:33;8545:32;8586:33;:::i;:::-;8638:7;-1:-1:-1;8692:2:181;8677:18;;8664:32;;-1:-1:-1;8743:2:181;8728:18;;8715:32;;-1:-1:-1;8798:3:181;8783:19;;8770:33;-1:-1:-1;;;;;8815:30:181;;8812:50;;;8858:1;8855;8848:12;8812:50;8881:72;8945:7;8936:6;8925:9;8921:22;8881:72;:::i;9052:651::-;9166:6;9174;9182;9235:2;9223:9;9214:7;9210:23;9206:32;9203:52;;;9251:1;9248;9241:12;9203:52;9290:9;9277:23;9309:31;9334:5;9309:31;:::i;:::-;9359:5;-1:-1:-1;9416:2:181;9401:18;;9388:32;9429:33;9388:32;9429:33;:::i;:::-;9481:7;-1:-1:-1;9539:2:181;9524:18;;9511:32;-1:-1:-1;;;;;9555:30:181;;9552:50;;;9598:1;9595;9588:12;9552:50;9621:76;9689:7;9680:6;9669:9;9665:22;9621:76;:::i;9708:367::-;9771:8;9781:6;9835:3;9828:4;9820:6;9816:17;9812:27;9802:55;;9853:1;9850;9843:12;9802:55;-1:-1:-1;9876:20:181;;-1:-1:-1;;;;;9908:30:181;;9905:50;;;9951:1;9948;9941:12;9905:50;9988:4;9980:6;9976:17;9964:29;;10048:3;10041:4;10031:6;10028:1;10024:14;10016:6;10012:27;10008:38;10005:47;10002:67;;;10065:1;10062;10055:12;10080:640;10184:6;10192;10200;10208;10261:2;10249:9;10240:7;10236:23;10232:32;10229:52;;;10277:1;10274;10267:12;10229:52;10316:9;10303:23;10335:31;10360:5;10335:31;:::i;:::-;10385:5;-1:-1:-1;10437:2:181;10422:18;;10409:32;;-1:-1:-1;10492:2:181;10477:18;;10464:32;-1:-1:-1;;;;;10508:30:181;;10505:50;;;10551:1;10548;10541:12;10505:50;10590:70;10652:7;10643:6;10632:9;10628:22;10590:70;:::i;:::-;10080:640;;;;-1:-1:-1;10679:8:181;-1:-1:-1;;;;10080:640:181:o;11349:848::-;11509:6;11517;11525;11533;11541;11594:3;11582:9;11573:7;11569:23;11565:33;11562:53;;;11611:1;11608;11601:12;11562:53;11651:9;11638:23;-1:-1:-1;;;;;11676:6:181;11673:30;11670:50;;;11716:1;11713;11706:12;11670:50;11739:71;11802:7;11793:6;11782:9;11778:22;11739:71;:::i;:::-;11729:81;;;11860:2;11849:9;11845:18;11832:32;11873:31;11898:5;11873:31;:::i;:::-;11923:5;-1:-1:-1;11975:2:181;11960:18;;11947:32;;-1:-1:-1;12031:2:181;12016:18;;12003:32;12044:33;12003:32;12044:33;:::i;:::-;12096:7;-1:-1:-1;12122:69:181;12183:7;12177:3;12162:19;;12122:69;:::i;12202:874::-;12361:6;12369;12377;12385;12393;12446:3;12434:9;12425:7;12421:23;12417:33;12414:53;;;12463:1;12460;12453:12;12414:53;12502:9;12489:23;12521:31;12546:5;12521:31;:::i;:::-;12571:5;-1:-1:-1;12628:2:181;12613:18;;12600:32;12641:33;12600:32;12641:33;:::i;:::-;12693:7;-1:-1:-1;12747:2:181;12732:18;;12719:32;;-1:-1:-1;12802:2:181;12787:18;;12774:32;-1:-1:-1;;;;;12818:30:181;;12815:50;;;12861:1;12858;12851:12;12815:50;12884:22;;12940:3;12922:16;;;12918:26;12915:46;;;12957:1;12954;12947:12;13532:931;13673:6;13681;13689;13697;13705;13713;13766:3;13754:9;13745:7;13741:23;13737:33;13734:53;;;13783:1;13780;13773:12;13734:53;13822:9;13809:23;13841:31;13866:5;13841:31;:::i;:::-;13891:5;-1:-1:-1;13948:2:181;13933:18;;13920:32;13961:33;13920:32;13961:33;:::i;:::-;14013:7;-1:-1:-1;14072:2:181;14057:18;;14044:32;14085:33;14044:32;14085:33;:::i;:::-;14137:7;-1:-1:-1;14191:2:181;14176:18;;14163:32;;-1:-1:-1;14242:3:181;14227:19;;14214:33;;-1:-1:-1;14298:3:181;14283:19;;14270:33;-1:-1:-1;;;;;14315:30:181;;14312:50;;;14358:1;14355;14348:12;14312:50;14381:76;14449:7;14440:6;14429:9;14425:22;14381:76;:::i;:::-;14371:86;;;13532:931;;;;;;;;:::o;14698:1096::-;14864:6;14872;14880;14888;14896;14904;14957:2;14945:9;14936:7;14932:23;14928:32;14925:52;;;14973:1;14970;14963:12;14925:52;15013:9;15000:23;-1:-1:-1;;;;;15083:2:181;15075:6;15072:14;15069:34;;;15099:1;15096;15089:12;15069:34;15138:70;15200:7;15191:6;15180:9;15176:22;15138:70;:::i;:::-;15227:8;;-1:-1:-1;15112:96:181;-1:-1:-1;15315:2:181;15300:18;;15287:32;;-1:-1:-1;15331:16:181;;;15328:36;;;15360:1;15357;15350:12;15328:36;15399:72;15463:7;15452:8;15441:9;15437:24;15399:72;:::i;:::-;15490:8;;-1:-1:-1;15373:98:181;-1:-1:-1;15578:2:181;15563:18;;15550:32;;-1:-1:-1;15594:16:181;;;15591:36;;;15623:1;15620;15613:12;15591:36;;15662:72;15726:7;15715:8;15704:9;15700:24;15662:72;:::i;15799:781::-;15951:6;15959;15967;15975;16028:3;16016:9;16007:7;16003:23;15999:33;15996:53;;;16045:1;16042;16035:12;15996:53;16084:9;16071:23;16103:31;16128:5;16103:31;:::i;:::-;16153:5;-1:-1:-1;16210:2:181;16195:18;;16182:32;16223:33;16182:32;16223:33;:::i;:::-;16275:7;-1:-1:-1;16333:2:181;16318:18;;16305:32;-1:-1:-1;;;;;16349:30:181;;16346:50;;;16392:1;16389;16382:12;16346:50;16415:72;16479:7;16470:6;16459:9;16455:22;16415:72;:::i;16585:284::-;-1:-1:-1;;;;;16771:32:181;;;;16753:51;;16847:14;16840:22;16835:2;16820:18;;16813:50;16741:2;16726:18;;16585:284::o;16874:184::-;16944:6;16997:2;16985:9;16976:7;16972:23;16968:32;16965:52;;;17013:1;17010;17003:12;16965:52;-1:-1:-1;17036:16:181;;16874:184;-1:-1:-1;16874:184:181:o;17063:524::-;-1:-1:-1;;;;;17374:15:181;;;17356:34;;17426:15;;;17421:2;17406:18;;17399:43;17478:15;;;;17473:2;17458:18;;17451:43;17525:2;17510:18;;17503:34;;;;17568:3;17553:19;;17546:35;;;;17305:3;17290:19;;17063:524::o;18130:127::-;18191:10;18186:3;18182:20;18179:1;18172:31;18222:4;18219:1;18212:15;18246:4;18243:1;18236:15;18262:329;18359:4;18417:11;18404:25;18511:3;18507:8;18496;18480:14;18476:29;18472:44;18452:18;18448:69;18438:97;;18531:1;18528;18521:12;18438:97;18552:33;;;;;18262:329;-1:-1:-1;;18262:329:181:o;18596:149::-;18670:20;;18719:1;18709:12;;18699:40;;18735:1;18732;18725:12;18750:206;18823:6;18876:2;18864:9;18855:7;18851:23;18847:32;18844:52;;;18892:1;18889;18882:12;18844:52;18915:35;18940:9;18915:35;:::i;18961:247::-;19020:6;19073:2;19061:9;19052:7;19048:23;19044:32;19041:52;;;19089:1;19086;19079:12;19041:52;19128:9;19115:23;19147:31;19172:5;19147:31;:::i;19213:385::-;-1:-1:-1;;;;;19465:15:181;;;19447:34;;19517:15;;;;19512:2;19497:18;;19490:43;19576:14;;19569:22;19564:2;19549:18;;19542:50;19397:2;19382:18;;19213:385::o;19603:296::-;19673:5;19732:3;19719:17;19818:3;19814:8;19803;19787:14;19783:29;19779:44;19759:18;19755:69;19745:97;;19838:1;19835;19828:12;19745:97;19860:33;;;;19603:296;-1:-1:-1;;19603:296:181:o;19904:111::-;19989:1;19982:5;19979:12;19969:40;;20005:1;20002;19995:12;20020:154;20098:20;;20127:41;20098:20;20127:41;:::i;20179:117::-;20264:1;20257:5;20254:12;20244:46;;20270:18;;:::i;20301:139::-;20381:1;20374:5;20371:12;20361:46;;20387:18;;:::i;:::-;20416;;20301:139::o;20445:500::-;20503:5;20510:6;20570:3;20557:17;20656:2;20652:7;20641:8;20625:14;20621:29;20617:43;20597:18;20593:68;20583:96;;20675:1;20672;20665:12;20583:96;20703:33;;20807:4;20794:18;;;-1:-1:-1;20755:21:181;;-1:-1:-1;;;;;;20824:30:181;;20821:50;;;20867:1;20864;20857:12;20821:50;20914:6;20898:14;20894:27;20887:5;20883:39;20880:59;;;20935:1;20932;20925:12;20950:266;21038:6;21033:3;21026:19;21090:6;21083:5;21076:4;21071:3;21067:14;21054:43;-1:-1:-1;21142:1:181;21117:16;;;21135:4;21113:27;;;21106:38;;;;21198:2;21177:15;;;-1:-1:-1;;21173:29:181;21164:39;;;21160:50;;20950:266::o;21221:1131::-;21283:3;21311:6;21354:5;21341:19;21369:43;21404:7;21369:43;:::i;:::-;21421;21456:7;21421:43;:::i;:::-;21473:20;;21522:42;21558:4;21547:16;;21522:42;:::i;:::-;21573:54;21621:4;21616:3;21612:14;21598:12;21573:54;:::i;:::-;;21675:4;21668:5;21664:16;21651:30;21690:33;21715:7;21690:33;:::i;:::-;-1:-1:-1;;;;;21755:33:181;21748:4;21739:14;;21732:57;21845:4;21834:16;;;21821:30;21805:14;;;21798:54;21908:4;21897:16;;;21884:30;21868:14;;;21861:54;21776:3;21952:16;;21939:30;21978:33;21939:30;21978:33;:::i;:::-;-1:-1:-1;;;;;4137:31:181;22057:4;22048:14;;4125:44;22119:4;22108:16;;;22095:30;22079:14;;;22072:54;22171:55;22220:4;22209:16;;22112:5;22171:55;:::i;:::-;22258:2;22251:4;22246:3;22242:14;22235:26;22277:69;22342:2;22337:3;22333:12;22319;22303:14;22277:69;:::i;22357:970::-;22420:3;22466:5;22453:19;22481:33;22506:7;22481:33;:::i;:::-;-1:-1:-1;;;;;22573:16:181;;;22561:29;;22638:4;22627:16;;22614:30;;22653:33;22614:30;22653:33;:::i;:::-;22718:16;;;22711:4;22702:14;;22695:40;22783:4;22772:16;;22759:30;;22798:33;22759:30;22798:33;:::i;:::-;22863:16;22856:4;22847:14;;22840:40;22909:67;22970:4;22959:16;;22963:5;22909:67;:::i;:::-;23008:4;23001;22996:3;22992:14;22985:28;23034:67;23095:4;23090:3;23086:14;23072:12;23034:67;:::i;:::-;23022:79;;23132:67;23193:4;23186:5;23182:16;23175:5;23132:67;:::i;:::-;23241:3;23235:4;23231:14;23224:4;23219:3;23215:14;23208:38;23262:59;23316:4;23300:14;23262:59;:::i;23332:451::-;23579:2;23568:9;23561:21;23542:4;23599:66;23661:2;23650:9;23646:18;23638:6;23599:66;:::i;:::-;23696:2;23681:18;;23674:34;;;;-1:-1:-1;;;;;;23744:32:181;;;;23739:2;23724:18;;;23717:60;23591:74;23332:451;-1:-1:-1;23332:451:181:o;23788:250::-;23873:1;23883:113;23897:6;23894:1;23891:13;23883:113;;;23973:11;;;23967:18;23954:11;;;23947:39;23919:2;23912:10;23883:113;;;-1:-1:-1;;24030:1:181;24012:16;;24005:27;23788:250::o;24043:270::-;24084:3;24122:5;24116:12;24149:6;24144:3;24137:19;24165:76;24234:6;24227:4;24222:3;24218:14;24211:4;24204:5;24200:16;24165:76;:::i;:::-;24295:2;24274:15;-1:-1:-1;;24270:29:181;24261:39;;;;24302:4;24257:50;;24043:270;-1:-1:-1;;24043:270:181:o;24318:415::-;24580:1;24576;24571:3;24567:11;24563:19;24555:6;24551:32;24540:9;24533:51;24620:6;24615:2;24604:9;24600:18;24593:34;24663:2;24658;24647:9;24643:18;24636:30;24514:4;24683:44;24723:2;24712:9;24708:18;24700:6;24683:44;:::i;24738:118::-;24824:5;24817:13;24810:21;24803:5;24800:32;24790:60;;24846:1;24843;24836:12;24861:245;24928:6;24981:2;24969:9;24960:7;24956:23;24952:32;24949:52;;;24997:1;24994;24987:12;24949:52;25029:9;25023:16;25048:28;25070:5;25048:28;:::i;25111:127::-;25172:10;25167:3;25163:20;25160:1;25153:31;25203:4;25200:1;25193:15;25227:4;25224:1;25217:15;25243:250;25310:2;25304:9;25352:6;25340:19;;-1:-1:-1;;;;;25374:34:181;;25410:22;;;25371:62;25368:88;;;25436:18;;:::i;:::-;25472:2;25465:22;25243:250;:::o;25498:718::-;25540:5;25593:3;25586:4;25578:6;25574:17;25570:27;25560:55;;25611:1;25608;25601:12;25560:55;25647:6;25634:20;-1:-1:-1;;;;;25710:2:181;25706;25703:10;25700:36;;;25716:18;;:::i;:::-;25791:2;25785:9;25759:2;25845:13;;-1:-1:-1;;25841:22:181;;;25865:2;25837:31;25833:40;25821:53;;;25889:18;;;25909:22;;;25886:46;25883:72;;;25935:18;;:::i;:::-;25975:10;25971:2;25964:22;26010:2;26002:6;25995:18;26056:3;26049:4;26044:2;26036:6;26032:15;26028:26;26025:35;26022:55;;;26073:1;26070;26063:12;26022:55;26137:2;26130:4;26122:6;26118:17;26111:4;26103:6;26099:17;26086:54;26184:1;26177:4;26172:2;26164:6;26160:15;26156:26;26149:37;26204:6;26195:15;;;;;;25498:718;;;;:::o;26221:847::-;26278:5;26326:6;26314:9;26309:3;26305:19;26301:32;26298:52;;;26346:1;26343;26336:12;26298:52;26368:17;;:::i;:::-;26359:26;;26408:39;26437:9;26408:39;:::i;:::-;26401:5;26394:54;26480:44;26520:2;26509:9;26505:18;26480:44;:::i;:::-;26475:2;26468:5;26464:14;26457:68;26557:38;26591:2;26580:9;26576:18;26557:38;:::i;:::-;26552:2;26545:5;26541:14;26534:62;26656:2;26645:9;26641:18;26628:32;26623:2;26616:5;26612:14;26605:56;26722:3;26711:9;26707:19;26694:33;26688:3;26681:5;26677:15;26670:58;26761:39;26795:3;26784:9;26780:19;26761:39;:::i;:::-;26755:3;26748:5;26744:15;26737:64;26862:3;26851:9;26847:19;26834:33;26828:3;26821:5;26817:15;26810:58;26919:3;26908:9;26904:19;26891:33;-1:-1:-1;;;;;26939:6:181;26936:30;26933:50;;;26979:1;26976;26969:12;26933:50;27016:45;27057:3;27048:6;27037:9;27033:22;27016:45;:::i;:::-;27010:3;27003:5;26999:15;26992:70;;26221:847;;;;:::o;27073:1101::-;27131:5;27179:4;27167:9;27162:3;27158:19;27154:30;27151:50;;;27197:1;27194;27187:12;27151:50;27230:2;27224:9;27272:4;27264:6;27260:17;-1:-1:-1;;;;;27364:6:181;27352:10;27349:22;27344:2;27332:10;27329:18;27326:46;27323:72;;;27375:18;;:::i;:::-;27415:10;27411:2;27404:22;27444:6;27435:15;;27487:9;27474:23;27459:38;;27506:33;27531:7;27506:33;:::i;:::-;27548:23;;;27623:2;27608:18;;27595:32;;27636:33;27595:32;27636:33;:::i;:::-;27702:7;27697:2;27689:6;27685:15;27678:32;27743:38;27777:2;27766:9;27762:18;27743:38;:::i;:::-;27738:2;27730:6;27726:15;27719:63;27833:2;27822:9;27818:18;27805:32;27791:46;;27860:2;27852:6;27849:14;27846:34;;;27876:1;27873;27866:12;27846:34;27913:57;27966:3;27957:6;27946:9;27942:22;27913:57;:::i;:::-;27908:2;27900:6;27896:15;27889:82;28024:3;28013:9;28009:19;27996:33;27980:49;;28054:2;28044:8;28041:16;28038:36;;;28070:1;28067;28060:12;28038:36;;28108:59;28163:3;28152:8;28141:9;28137:24;28108:59;:::i;:::-;28102:3;28094:6;28090:16;28083:85;;;27073:1101;;;;:::o;28179:565::-;28294:6;28302;28310;28363:2;28351:9;28342:7;28338:23;28334:32;28331:52;;;28379:1;28376;28369:12;28331:52;28419:9;28406:23;-1:-1:-1;;;;;28444:6:181;28441:30;28438:50;;;28484:1;28481;28474:12;28438:50;28507:62;28561:7;28552:6;28541:9;28537:22;28507:62;:::i;28749:127::-;28810:10;28805:3;28801:20;28798:1;28791:31;28841:4;28838:1;28831:15;28865:4;28862:1;28855:15;28881:136;28916:3;-1:-1:-1;;;28937:22:181;;28934:48;;28962:18;;:::i;:::-;-1:-1:-1;29002:1:181;28998:13;;28881:136::o;29022:1005::-;29209:2;29198:9;29191:21;29172:4;29237:6;29231:13;29253:38;29288:2;29253:38;:::i;:::-;29327:2;29322;29311:9;29307:18;29300:30;;29377:2;29369:6;29365:15;29359:22;29390:58;29444:2;29433:9;29429:18;29415:12;29390:58;:::i;:::-;;29529:1;29525;29520:3;29516:11;29512:19;29506:2;29498:6;29494:15;29488:22;29484:48;29479:2;29468:9;29464:18;29457:76;29588:2;29580:6;29576:15;29570:22;29564:3;29553:9;29549:19;29542:51;29648:3;29640:6;29636:16;29630:23;29624:3;29613:9;29609:19;29602:52;29703:3;29695:6;29691:16;29685:23;29717:55;29767:3;29756:9;29752:19;29736:14;-1:-1:-1;;;;;4137:31:181;4125:44;;4071:104;29717:55;;29827:3;29819:6;29815:16;29809:23;29803:3;29792:9;29788:19;29781:52;29882:3;29874:6;29870:16;29864:23;29906:6;29948:2;29943;29932:9;29928:18;29921:30;;29968:53;30016:3;30005:9;30001:19;29985:14;29968:53;:::i;30032:128::-;30099:9;;;30120:11;;;30117:37;;;30134:18;;:::i;30165:274::-;-1:-1:-1;;;;;30357:32:181;;;;30339:51;;30421:2;30406:18;;30399:34;30327:2;30312:18;;30165:274::o;30444:565::-;30559:6;30567;30575;30628:2;30616:9;30607:7;30603:23;30599:32;30596:52;;;30644:1;30641;30634:12;30596:52;30684:9;30671:23;-1:-1:-1;;;;;30709:6:181;30706:30;30703:50;;;30749:1;30746;30739:12;30703:50;30772:62;30826:7;30817:6;30806:9;30802:22;30772:62;:::i;:::-;30762:72;;;30884:2;30873:9;30869:18;30856:32;30897:31;30922:5;30897:31;:::i;:::-;30444:565;;30947:5;;-1:-1:-1;;;30999:2:181;30984:18;;;;30971:32;;30444:565::o;31552:125::-;31617:9;;;31638:10;;;31635:36;;;31651:18;;:::i;31682:514::-;31881:25;;;31942:2;31937;31922:18;;31915:30;;;31961:18;;31954:34;;;-1:-1:-1;;;;;;32000:31:181;;31997:51;;;32044:1;32041;32034:12;31997:51;32078:6;32075:1;32071:14;32135:6;32127;32122:2;32111:9;32107:18;32094:48;32163:22;;;;32187:2;32159:31;;31682:514;-1:-1:-1;;;;31682:514:181:o;32201:368::-;32298:6;32306;32314;32322;32375:3;32363:9;32354:7;32350:23;32346:33;32343:53;;;32392:1;32389;32382:12;32343:53;-1:-1:-1;;32415:16:181;;32471:2;32456:18;;32450:25;32515:2;32500:18;;32494:25;32559:2;32544:18;;;32538:25;32415:16;;32450:25;;-1:-1:-1;32538:25:181;;-1:-1:-1;32201:368:181;-1:-1:-1;32201:368:181:o;32574:156::-;32640:20;;32700:4;32689:16;;32679:27;;32669:55;;32720:1;32717;32710:12;32735:929;32825:6;32878:3;32866:9;32857:7;32853:23;32849:33;32846:53;;;32895:1;32892;32885:12;32846:53;32928:2;32922:9;32970:3;32962:6;32958:16;33040:6;33028:10;33025:22;-1:-1:-1;;;;;32992:10:181;32989:34;32986:62;32983:88;;;33051:18;;:::i;:::-;33087:2;33080:22;33124:23;;33156:41;33124:23;33156:41;:::i;:::-;33221:5;33213:6;33206:21;;33288:2;33277:9;33273:18;33260:32;33255:2;33247:6;33243:15;33236:57;33354:2;33343:9;33339:18;33326:32;33321:2;33313:6;33309:15;33302:57;33420:2;33409:9;33405:18;33392:32;33387:2;33379:6;33375:15;33368:57;33459:37;33491:3;33480:9;33476:19;33459:37;:::i;:::-;33453:3;33445:6;33441:16;33434:63;33559:3;33548:9;33544:19;33531:33;33525:3;33517:6;33513:16;33506:59;33627:3;33616:9;33612:19;33599:33;33593:3;33585:6;33581:16;33574:59;33652:6;33642:16;;;32735:929;;;;:::o;33669:451::-;33916:2;33905:9;33898:21;33879:4;33936:66;33998:2;33987:9;33983:18;33975:6;33936:66;:::i;:::-;-1:-1:-1;;;;;34038:32:181;;;;34033:2;34018:18;;34011:60;-1:-1:-1;34102:2:181;34087:18;34080:34;33928:74;33669:451;-1:-1:-1;33669:451:181:o;34125:519::-;-1:-1:-1;;;;;34425:15:181;;;34407:34;;34477:15;;34472:2;34457:18;;34450:43;34524:2;34509:18;;34502:34;;;34572:3;34567:2;34552:18;;34545:31;;;34350:4;;34593:45;;34618:19;;34610:6;34593:45;:::i;34649:127::-;34710:10;34705:3;34701:20;34698:1;34691:31;34741:4;34738:1;34731:15;34765:4;34762:1;34755:15;34781:241;34837:6;34890:2;34878:9;34869:7;34865:23;34861:32;34858:52;;;34906:1;34903;34896:12;34858:52;34945:9;34932:23;34964:28;34986:5;34964:28;:::i;35027:521::-;35104:4;35110:6;35170:11;35157:25;35264:2;35260:7;35249:8;35233:14;35229:29;35225:43;35205:18;35201:68;35191:96;;35283:1;35280;35273:12;35191:96;35310:33;;35362:20;;;-1:-1:-1;;;;;;35394:30:181;;35391:50;;;35437:1;35434;35427:12;35391:50;35470:4;35458:17;;-1:-1:-1;35501:14:181;35497:27;;;35487:38;;35484:58;;;35538:1;35535;35528:12;35553:271;35736:6;35728;35723:3;35710:33;35692:3;35762:16;;35787:13;;;35762:16;35553:271;-1:-1:-1;35553:271:181:o;35829:410::-;35916:6;35924;35932;35985:2;35973:9;35964:7;35960:23;35956:32;35953:52;;;36001:1;35998;35991:12;35953:52;36033:9;36027:16;-1:-1:-1;;;;;36076:5:181;36072:30;36065:5;36062:41;36052:69;;36117:1;36114;36107:12;36052:69;36185:2;36170:18;;36164:25;36229:2;36214:18;;;36208:25;36140:5;;36164:25;;-1:-1:-1;36208:25:181;35829:410;-1:-1:-1;;;35829:410:181:o;36244:287::-;36373:3;36411:6;36405:13;36427:66;36486:6;36481:3;36474:4;36466:6;36462:17;36427:66;:::i;36536:251::-;36606:6;36659:2;36647:9;36638:7;36634:23;36630:32;36627:52;;;36675:1;36672;36665:12;36627:52;36707:9;36701:16;36726:31;36751:5;36726:31;:::i;36792:280::-;36981:2;36970:9;36963:21;36944:4;37001:65;37062:2;37051:9;37047:18;37039:6;37001:65;:::i;37600:830::-;37954:4;37983:3;37995:60;38045:9;38036:6;38030:13;37498:12;;-1:-1:-1;;;;;37494:38:181;37482:51;;37582:4;37571:16;;;37565:23;37549:14;;37542:47;37412:183;37995:60;38111:4;38103:6;38099:17;38093:24;38086:4;38075:9;38071:20;38064:54;38174:4;38166:6;38162:17;38156:24;38149:4;38138:9;38134:20;38127:54;38190:63;38248:3;38237:9;38233:19;38225:6;37498:12;;-1:-1:-1;;;;;37494:38:181;37482:51;;37582:4;37571:16;;;37565:23;37549:14;;37542:47;37412:183;38190:63;-1:-1:-1;;;;;38290:32:181;;38284:3;38269:19;;38262:61;38354:3;38339:19;;38332:31;;;38380:44;38405:18;;;38397:6;38380:44;:::i;38435:1094::-;-1:-1:-1;;;;;38766:32:181;;38748:51;;38707:4;38736:3;38821:20;;38850:41;38821:20;38850:41;:::i;:::-;38900;38935:5;38900:41;:::i;:::-;38977:5;38972:2;38961:9;38957:18;38950:33;;39044:2;39036:6;39032:15;39019:29;39014:2;39003:9;38999:18;38992:57;39110:2;39102:6;39098:15;39085:29;39080:2;39069:9;39065:18;39058:57;39177:2;39169:6;39165:15;39152:29;39146:3;39135:9;39131:19;39124:58;39259:4;39223:34;39252:3;39244:6;39240:16;39223:34;:::i;:::-;39219:45;39213:3;39202:9;39198:19;39191:74;39327:3;39319:6;39315:16;39302:30;39296:3;39285:9;39281:19;39274:59;39395:3;39387:6;39383:16;39370:30;39364:3;39353:9;39349:19;39342:59;39438:2;39432:3;39421:9;39417:19;39410:31;39458:65;39519:2;39508:9;39504:18;39496:6;39458:65;:::i;42735:219::-;42884:2;42873:9;42866:21;42847:4;42904:44;42944:2;42933:9;42929:18;42921:6;42904:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "50823": [
        {
          "start": 955,
          "length": 32
        },
        {
          "start": 1150,
          "length": 32
        },
        {
          "start": 1389,
          "length": 32
        },
        {
          "start": 3116,
          "length": 32
        },
        {
          "start": 3391,
          "length": 32
        },
        {
          "start": 5687,
          "length": 32
        },
        {
          "start": 5947,
          "length": 32
        },
        {
          "start": 6519,
          "length": 32
        },
        {
          "start": 6789,
          "length": 32
        },
        {
          "start": 9087,
          "length": 32
        },
        {
          "start": 9356,
          "length": 32
        },
        {
          "start": 10062,
          "length": 32
        },
        {
          "start": 10315,
          "length": 32
        },
        {
          "start": 11930,
          "length": 32
        },
        {
          "start": 12288,
          "length": 32
        },
        {
          "start": 12583,
          "length": 32
        }
      ],
      "50827": [
        {
          "start": 1052,
          "length": 32
        },
        {
          "start": 2571,
          "length": 32
        },
        {
          "start": 2972,
          "length": 32
        },
        {
          "start": 4188,
          "length": 32
        },
        {
          "start": 4866,
          "length": 32
        },
        {
          "start": 7834,
          "length": 32
        }
      ],
      "50831": [
        {
          "start": 994,
          "length": 32
        },
        {
          "start": 3704,
          "length": 32
        },
        {
          "start": 4813,
          "length": 32
        },
        {
          "start": 7057,
          "length": 32
        },
        {
          "start": 7910,
          "length": 32
        },
        {
          "start": 8401,
          "length": 32
        },
        {
          "start": 8473,
          "length": 32
        },
        {
          "start": 12733,
          "length": 32
        },
        {
          "start": 13265,
          "length": 32
        },
        {
          "start": 13355,
          "length": 32
        }
      ],
      "50835": [
        {
          "start": 465,
          "length": 32
        },
        {
          "start": 3749,
          "length": 32
        },
        {
          "start": 3889,
          "length": 32
        },
        {
          "start": 4679,
          "length": 32
        },
        {
          "start": 8518,
          "length": 32
        },
        {
          "start": 8651,
          "length": 32
        },
        {
          "start": 11977,
          "length": 32
        },
        {
          "start": 12128,
          "length": 32
        },
        {
          "start": 12337,
          "length": 32
        },
        {
          "start": 12456,
          "length": 32
        },
        {
          "start": 12632,
          "length": 32
        },
        {
          "start": 13400,
          "length": 32
        },
        {
          "start": 13533,
          "length": 32
        }
      ],
      "50838": [
        {
          "start": 711,
          "length": 32
        },
        {
          "start": 1511,
          "length": 32
        },
        {
          "start": 1753,
          "length": 32
        },
        {
          "start": 1948,
          "length": 32
        },
        {
          "start": 2078,
          "length": 32
        },
        {
          "start": 2450,
          "length": 32
        },
        {
          "start": 2614,
          "length": 32
        },
        {
          "start": 2841,
          "length": 32
        },
        {
          "start": 5035,
          "length": 32
        },
        {
          "start": 5266,
          "length": 32
        },
        {
          "start": 5481,
          "length": 32
        },
        {
          "start": 6075,
          "length": 32
        },
        {
          "start": 6421,
          "length": 32
        },
        {
          "start": 6927,
          "length": 32
        },
        {
          "start": 7147,
          "length": 32
        },
        {
          "start": 7426,
          "length": 32
        },
        {
          "start": 7567,
          "length": 32
        },
        {
          "start": 7616,
          "length": 32
        },
        {
          "start": 7713,
          "length": 32
        },
        {
          "start": 7877,
          "length": 32
        },
        {
          "start": 8138,
          "length": 32
        },
        {
          "start": 8211,
          "length": 32
        },
        {
          "start": 8893,
          "length": 32
        },
        {
          "start": 9486,
          "length": 32
        },
        {
          "start": 9964,
          "length": 32
        }
      ],
      "50842": [
        {
          "start": 859,
          "length": 32
        },
        {
          "start": 3517,
          "length": 32
        },
        {
          "start": 4029,
          "length": 32
        },
        {
          "start": 4304,
          "length": 32
        },
        {
          "start": 4397,
          "length": 32
        },
        {
          "start": 12843,
          "length": 32
        },
        {
          "start": 13671,
          "length": 32
        },
        {
          "start": 14238,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CALLBACK_SUCCESS()": "8237e538",
    "CALLBACK_SUCCESS_CREDIT()": "0f13be2a",
    "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "56415a90",
    "cdm()": "e2dfb317",
    "claimUndelegatedCredit(address,uint256)": "dfad9c37",
    "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)": "0b839bf2",
    "delegate(address,uint256)": "026e402b",
    "delegateViaStablecoin(address,address,uint256,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "df3df773",
    "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "0567d4b1",
    "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "4ad4d4ad",
    "depositAndDelegate(address,address,address,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "03ccc7d0",
    "flashlender()": "ee58918a",
    "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "aad598ae",
    "minter()": "07546172",
    "multisend(address[],bytes[],bool[])": "f38584e0",
    "onCreditFlashLoan(address,uint256,uint256,bytes)": "16d8f165",
    "onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b",
    "permit2()": "12261ee7",
    "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "faa99405",
    "repayAndClaim(address,address,uint256,uint256,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "65b57a74",
    "self()": "7104ddb2",
    "stablecoin()": "e9cbd822",
    "swapAction()": "a888828b",
    "undelegate(address,uint256,uint256[])": "7810436a",
    "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "6c747057",
    "withdrawAndClaim(address,address,address,uint256,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": "ecec1641",
    "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": "96c2c408"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flashlender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapActions_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Action__revertBytes_emptyRevertBytes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toInt256_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__borrow_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__decreaseLever_invalidResidualRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__delegateViaStablecoin_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__deposit_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__increaseLever_invalidPrimarySwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onCreditFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onFlashLoan__invalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__onlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAction__repay_InvalidAuxSwap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS_CREDIT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cdm\",\"outputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimForEpoch\",\"type\":\"uint256\"}],\"name\":\"claimUndelegatedCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"subCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"residualRecipient\",\"type\":\"address\"}],\"name\":\"decreaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditAmount\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"swapParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"delegateViaStablecoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"depositAndBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"depositVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegateVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"depositAndDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashlender\",\"outputs\":[{\"internalType\":\"contract IFlashlender\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"primarySwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct LeverParams\",\"name\":\"leverParams\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"upFrontToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"upFrontAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"increaseLever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"contract IMinter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"bool[]\",\"name\":\"delegateCall\",\"type\":\"bool[]\"}],\"name\":\"multisend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onCreditFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimForEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subNormalDebt\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"repayAndClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"self\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IStablecoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAction\",\"outputs\":[{\"internalType\":\"contract SwapAction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"prevQueuedEpochs\",\"type\":\"uint256[]\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"estimatedClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableAtEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixableUntilEpoch\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegateVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimForEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subNormalDebt\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"}],\"name\":\"withdrawAndClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CollateralParams\",\"name\":\"collateralParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapProtocol\",\"name\":\"swapProtocol\",\"type\":\"uint8\"},{\"internalType\":\"enum SwapType\",\"name\":\"swapType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapParams\",\"name\":\"auxSwap\",\"type\":\"tuple\"}],\"internalType\":\"struct CreditParams\",\"name\":\"creditParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ApprovalType\",\"name\":\"approvalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"approvalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermitParams\",\"name\":\"permitParams\",\"type\":\"tuple\"}],\"name\":\"withdrawAndRepay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"creditParams\":\"The borrow parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"claimUndelegatedCredit(address,uint256)\":{\"details\":\"Wrapper function around CDPVault.claimUndelegatedCredit()This function does not have the onlyDelegatecall modifier to save gas but should only be called via Proxy\",\"params\":{\"claimForEpoch\":\"The epoch to claim undelegatedCredit for\",\"vault\":\"The CDP Vault\"},\"returns\":{\"creditAmount\":\"Amount of credit claimed [wad]\"}},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)\":{\"params\":{\"leverParams\":\"The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan\",\"residualRecipient\":\"Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to\",\"subCollateral\":\"The amount of collateral to withdraw from the position [wad]\"}},\"delegate(address,uint256)\":{\"details\":\"Wrapper function around CDPVault.delegateCredit()\",\"params\":{\"creditAmount\":\"Amount of credit to delegate [wad]\"},\"returns\":{\"sharesAmount\":\"Amount of shares issued [wad]\"}},\"delegateViaStablecoin(address,address,uint256,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"credit\":\"The amount of credit to delegate [wad]\",\"creditor\":\"The address to transfer stablecoin or swap tokens from\",\"permitParams\":\"The permit parameters\",\"swapParams\":\"The swap parameters for swapping an arbitrary asset to stablecoin\",\"vault\":\"The CDP Vault to delegate credit to\"}},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"depositAndDelegate(address,address,address,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"credit\":\"The amount of credit to delegate\",\"delegateVault\":\"The CDP Vault to delegate credit to\",\"depositVault\":\"The CDP Vault to deposit collateral into\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\"}},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralizer\":\"The address to transfer `upFrontToken` from\",\"leverParams\":\"The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token\",\"permitParams\":\"The permit parameters for the `collateralizer` to transfer `upFrontToken`\",\"upFrontAmount\":\"The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]\",\"upFrontToken\":\"The token to transfer up front to the LeverAction contract\"}},\"multisend(address[],bytes[],bool[])\":{\"params\":{\"data\":\"The encoded data to call each address with\",\"delegateCall\":\"Whether or not to use delegatecall or call\",\"targets\":\"The addresses to call\"}},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the credit flash loan\"}},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"The encoded bytes that were passed into the flash loan\"}},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"repayAndClaim(address,address,uint256,uint256,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"claimForEpoch\":\"The epoch to claim undelegatedCredit for\",\"creditParams\":\"The credit parameters for debt repayment\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"subNormalDebt\":\"The amount of normal debt to repay [wad]\",\"vault\":\"The CDP Vault\"}},\"undelegate(address,uint256,uint256[])\":{\"details\":\"Wrapper function around CDPVault.undelegateCredit()This function does not have the onlyDelegatecall modifier to save gas but should only be called via Proxy\",\"params\":{\"prevQueuedEpochs\":\"Array of stale epochs for which shares were queued\",\"shareAmount\":\"Amount of shares to redeem [wad]\"},\"returns\":{\"claimableAtEpoch\":\"Epoch at which the undelegated credit can be claimed by the delegator\",\"epoch\":\"Epoch at which the undelegation was initiated\",\"estimatedClaim\":\"Estimated amount of withdrawable credit, if no bad debt is accrued [wad]\",\"fixableUntilEpoch\":\"Epoch at which the credit claim of the epoch has to be fixed by\"}},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}},\"withdrawAndClaim(address,address,address,uint256,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"params\":{\"claimForEpoch\":\"The epoch to claim undelegatedCredit for\",\"collateralParams\":\"The collateral parameters for collateral withdrawal\",\"delegateVault\":\"The CDP Vault to undelegate credit from\",\"position\":\"The CDP Vault position\",\"subNormalDebt\":\"The amount of normal debt to repay [wad]\",\"withdrawVault\":\"The CDP Vault to withdraw collateral from\"}},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"collateralParams\":\"The collateral parameters\",\"creditParams\":\"The credit parameters\",\"permitParams\":\"The permit parameters\",\"position\":\"The CDP Vault position\",\"vault\":\"The CDP Vault\"}}},\"title\":\"PositionActionYV\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)\"},\"cdm()\":{\"notice\":\"The CDM contract\"},\"claimUndelegatedCredit(address,uint256)\":{\"notice\":\"Claim undelegated credit from a vault\"},\"decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)\":{\"notice\":\"Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral\"},\"delegate(address,uint256)\":{\"notice\":\"Delegates credit to `vault`\"},\"delegateViaStablecoin(address,address,uint256,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Swap for stablecoin or transfer stablecoin directly, then delegate to a vault\"},\"deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral to a CDP Vault\"},\"depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral and debt to a CDP Vault\"},\"depositAndDelegate(address,address,address,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Adds collateral and delegates credit to a vault\"},\"flashlender()\":{\"notice\":\"The flashloan contract\"},\"increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Increase the leverage of a position by taking out a flash loan and buying Stablecoin\"},\"minter()\":{\"notice\":\"Stablecoin mint\"},\"multisend(address[],bytes[],bool[])\":{\"notice\":\"Allows for multiple calls to be made to cover use cases not covered by the other functions\"},\"onCreditFlashLoan(address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the credit flash loan taken out in decreaseLever\"},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"notice\":\"Callback function for the flash loan taken out in increaseLever\"},\"permit2()\":{\"notice\":\"Permit2\"},\"repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)\"},\"repayAndClaim(address,address,uint256,uint256,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Undelegate and then repay a position\"},\"self()\":{\"notice\":\"The address of this contract\"},\"stablecoin()\":{\"notice\":\"Stablecoin token\"},\"swapAction()\":{\"notice\":\"The SwapAction contract\"},\"undelegate(address,uint256,uint256[])\":{\"notice\":\"Undelegate credit from a vault\"},\"withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Removes collateral from a CDP Vault\"},\"withdrawAndClaim(address,address,address,uint256,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))\":{\"notice\":\"Undelegate credit from a vault and withdraw collateral from a vault\"},\"withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"Removes collateral and debt from a CDP Vault\"}},\"notice\":\"Yearn Vault version 0.4.6 implementation of PositionAction base contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxy/PositionActionYV.sol\":\"PositionActionYV\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d\",\"dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"src/CDM.sol\":{\"keccak256\":\"0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99\",\"dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L\"]},\"src/CDPVault.sol\":{\"keccak256\":\"0xb59663a5a96b5abe638f2fb4a5e4d0918a41607cbaee2e974ab2317f271be131\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4292cb1e12fe471b852e223ce612c5c666cdaac948f1b2803e45edc2ea8c213\",\"dweb:/ipfs/QmNykUHbviSx2HKe6v45qU7B7wjC5Fre3xunPYCAjdcZMx\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e\",\"dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT\"]},\"src/interfaces/IBuffer.sol\":{\"keccak256\":\"0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff\",\"dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/ICDPVault.sol\":{\"keccak256\":\"0x7ce3b81164802c14566697092c69fb355d9c31ab846dfc8d90edd5d6a6eb68e3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://343c84ea42c9846dc3907a6ca2d4c55df6e0cbaea7a83ed2c7458174560a86d6\",\"dweb:/ipfs/QmWcAoAFQYL7YzeFnd5t4HMHxEZHiFirsNHJGL7FoBCkF6\"]},\"src/interfaces/ICDPVault_TypeA_Factory.sol\":{\"keccak256\":\"0x9ea6fe3a8b5d6ab2f041c72b6058e1e59b3df5e12d54ccc845a27f90f45ddf01\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c805f1c1b060173d445de751c4a8565232938ad23a6d200c08b99eb634679638\",\"dweb:/ipfs/QmSajnrXMZHMwYF8Y2C6obNp1K7bq2XjexdkqcVoHDFhGm\"]},\"src/interfaces/IFlashlender.sol\":{\"keccak256\":\"0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2\",\"dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3\"]},\"src/interfaces/IInterestRateModel.sol\":{\"keccak256\":\"0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599\",\"dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA\"]},\"src/interfaces/IMinter.sol\":{\"keccak256\":\"0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54\",\"dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da\",\"dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF\"]},\"src/interfaces/IPause.sol\":{\"keccak256\":\"0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec\",\"dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]},\"src/interfaces/IStablecoin.sol\":{\"keccak256\":\"0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461\",\"dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS\"]},\"src/proxy/BaseAction.sol\":{\"keccak256\":\"0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24\",\"dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR\"]},\"src/proxy/PositionAction.sol\":{\"keccak256\":\"0x46dd1ac7cf68935811c1842fdc0da9406e582613f21419ad783ef38eaecf3532\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffa356e6d607545127eebcaf030b3602664820e17ec126cc179df78984e15f18\",\"dweb:/ipfs/Qmbntqtm28WmdRCy6nPabXqsMQt51s7D3wN4hz7QyuK3cc\"]},\"src/proxy/PositionActionYV.sol\":{\"keccak256\":\"0xf7b7de87bea1d3b66d9f3e09629ddbf725d71ae023b4f340064fb3210df82e6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45a618cba7290146af1a2056f9215205121d5c6f395e33bfffbeb8e319bbe321\",\"dweb:/ipfs/QmRxveKv3mdZA4WepJPtr98KQPoYZnXwRWuVHVa3nuRUDR\"]},\"src/proxy/SwapAction.sol\":{\"keccak256\":\"0xf3c446b763969f9cbe0cdbbba16140176bf75ada29da89dfb24d32dbe744ddce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84a857e66ba74ead46269034e1ce8c7320f500550240197c18c7415f15af3ce8\",\"dweb:/ipfs/QmYFoDhtFfxDKuSmCbrxqyZNkMGjLdG5ZPZJc7UEhzfJKT\"]},\"src/proxy/TransferAction.sol\":{\"keccak256\":\"0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756\",\"dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt\"]},\"src/utils/DoubleLinkedList.sol\":{\"keccak256\":\"0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb\",\"dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/utils/Pause.sol\":{\"keccak256\":\"0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1\",\"dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL\"]},\"src/utils/Permission.sol\":{\"keccak256\":\"0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb\",\"dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p\"]},\"src/vendor/IBalancerVault.sol\":{\"keccak256\":\"0xcfa567dab77301f65a2085f34a3ae0027e46f27e79a3c1bc5292c46a69160c62\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://205c801c5cf14af56151d70f0f7e1df9963d33caa4fada26b0429531510af585\",\"dweb:/ipfs/QmZ8tK5dXu2yPD7hF8aHu2B2YbTutXNgsQKkAPCqZYntLN\"]},\"src/vendor/IUniswapV3Router.sol\":{\"keccak256\":\"0x5ab23c0c3f5571e77353ebf1b7d4dec9103504b728faa7530e04b84e5d233c03\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9a95e0a55b44b18deab9989f7bf4afed71d22d51dd96c42eeb1552a30d252de4\",\"dweb:/ipfs/QmSyZhFhvegYMncZSc18m8skqhzXiMisgg1K2K9V1t796Z\"]},\"src/vendor/IYVault.sol\":{\"keccak256\":\"0x79d3af9b4ec00cea17019c8a9016056c19149a9e6c7d5bfa79d96599a09936f1\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9e08e1a00c492b8b2fcbe42e4f600aab98c7c168b4bc98c1b0d6274e6f12abf9\",\"dweb:/ipfs/QmSny9sHWQ3CjbznC1g5KtRKAbZw3f9iwijnaeoogPD63p\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flashlender_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "swapActions_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Action__revertBytes_emptyRevertBytes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toInt256_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__borrow_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__decreaseLever_invalidResidualRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__delegateViaStablecoin_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__deposit_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidAuxSwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__increaseLever_invalidPrimarySwap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onCreditFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onFlashLoan__invalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__onlyDelegatecall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PositionAction__repay_InvalidAuxSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS_CREDIT",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cdm",
          "outputs": [
            {
              "internalType": "contract ICDM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimForEpoch",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimUndelegatedCredit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "subCollateral",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "residualRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseLever"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "creditAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sharesAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "credit",
              "type": "uint256"
            },
            {
              "internalType": "struct SwapParams",
              "name": "swapParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum SwapProtocol",
                  "name": "swapProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SwapType",
                  "name": "swapType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "args",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateViaStablecoin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndBorrow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "depositVault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegateVault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "credit",
              "type": "uint256"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndDelegate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flashlender",
          "outputs": [
            {
              "internalType": "contract IFlashlender",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LeverParams",
              "name": "leverParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "position",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "primarySwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "upFrontToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "upFrontAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseLever"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "contract IMinter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            },
            {
              "internalType": "bool[]",
              "name": "delegateCall",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multisend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCreditFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permit2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimForEpoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subNormalDebt",
              "type": "uint256"
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayAndClaim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "self",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stablecoin",
          "outputs": [
            {
              "internalType": "contract IStablecoin",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapAction",
          "outputs": [
            {
              "internalType": "contract SwapAction",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shareAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "prevQueuedEpochs",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "estimatedClaim",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimableAtEpoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fixableUntilEpoch",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawVault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegateVault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimForEpoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subNormalDebt",
              "type": "uint256"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAndClaim"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct CollateralParams",
              "name": "collateralParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "collateralizer",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CreditParams",
              "name": "creditParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creditor",
                  "type": "address"
                },
                {
                  "internalType": "struct SwapParams",
                  "name": "auxSwap",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum SwapProtocol",
                      "name": "swapProtocol",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum SwapType",
                      "name": "swapType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "limit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "args",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct PermitParams",
              "name": "permitParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ApprovalType",
                  "name": "approvalType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "approvalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAndRepay"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "creditParams": "The borrow parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "claimUndelegatedCredit(address,uint256)": {
            "details": "Wrapper function around CDPVault.claimUndelegatedCredit()This function does not have the onlyDelegatecall modifier to save gas but should only be called via Proxy",
            "params": {
              "claimForEpoch": "The epoch to claim undelegatedCredit for",
              "vault": "The CDP Vault"
            },
            "returns": {
              "creditAmount": "Amount of credit claimed [wad]"
            }
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)": {
            "params": {
              "leverParams": "The parameters for the lever action: `primarySwap` swap parameters to swap the collateral withdrawn from the CDPVault using the flash loan to Stablecoin `auxSwap` swap parameters to swap the collateral not used to payback the flash loan",
              "residualRecipient": "Optional parameter that must be provided if an `auxSwap` *is not* provided This parameter is the address to send the residual collateral to",
              "subCollateral": "The amount of collateral to withdraw from the position [wad]"
            }
          },
          "delegate(address,uint256)": {
            "details": "Wrapper function around CDPVault.delegateCredit()",
            "params": {
              "creditAmount": "Amount of credit to delegate [wad]"
            },
            "returns": {
              "sharesAmount": "Amount of shares issued [wad]"
            }
          },
          "delegateViaStablecoin(address,address,uint256,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "credit": "The amount of credit to delegate [wad]",
              "creditor": "The address to transfer stablecoin or swap tokens from",
              "permitParams": "The permit parameters",
              "swapParams": "The swap parameters for swapping an arbitrary asset to stablecoin",
              "vault": "The CDP Vault to delegate credit to"
            }
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "depositAndDelegate(address,address,address,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "credit": "The amount of credit to delegate",
              "delegateVault": "The CDP Vault to delegate credit to",
              "depositVault": "The CDP Vault to deposit collateral into",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position"
            }
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralizer": "The address to transfer `upFrontToken` from",
              "leverParams": "The parameters for the lever action, `primarySwap` - parameters to swap Stablecoin provided by the flash loan into the collateral token `auxSwap` - parameters to swap the `upFrontToken` to the collateral token",
              "permitParams": "The permit parameters for the `collateralizer` to transfer `upFrontToken`",
              "upFrontAmount": "The amount of `upFrontToken` to transfer to the LeverAction contract [upFrontToken-Scale]",
              "upFrontToken": "The token to transfer up front to the LeverAction contract"
            }
          },
          "multisend(address[],bytes[],bool[])": {
            "params": {
              "data": "The encoded data to call each address with",
              "delegateCall": "Whether or not to use delegatecall or call",
              "targets": "The addresses to call"
            }
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the credit flash loan"
            }
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "params": {
              "data": "The encoded bytes that were passed into the flash loan"
            }
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "repayAndClaim(address,address,uint256,uint256,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "claimForEpoch": "The epoch to claim undelegatedCredit for",
              "creditParams": "The credit parameters for debt repayment",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "subNormalDebt": "The amount of normal debt to repay [wad]",
              "vault": "The CDP Vault"
            }
          },
          "undelegate(address,uint256,uint256[])": {
            "details": "Wrapper function around CDPVault.undelegateCredit()This function does not have the onlyDelegatecall modifier to save gas but should only be called via Proxy",
            "params": {
              "prevQueuedEpochs": "Array of stale epochs for which shares were queued",
              "shareAmount": "Amount of shares to redeem [wad]"
            },
            "returns": {
              "claimableAtEpoch": "Epoch at which the undelegated credit can be claimed by the delegator",
              "epoch": "Epoch at which the undelegation was initiated",
              "estimatedClaim": "Estimated amount of withdrawable credit, if no bad debt is accrued [wad]",
              "fixableUntilEpoch": "Epoch at which the credit claim of the epoch has to be fixed by"
            }
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          },
          "withdrawAndClaim(address,address,address,uint256,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "params": {
              "claimForEpoch": "The epoch to claim undelegatedCredit for",
              "collateralParams": "The collateral parameters for collateral withdrawal",
              "delegateVault": "The CDP Vault to undelegate credit from",
              "position": "The CDP Vault position",
              "subNormalDebt": "The amount of normal debt to repay [wad]",
              "withdrawVault": "The CDP Vault to withdraw collateral from"
            }
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "collateralParams": "The collateral parameters",
              "creditParams": "The credit parameters",
              "permitParams": "The permit parameters",
              "position": "The CDP Vault position",
              "vault": "The CDP Vault"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Adds debt to a CDP Vault by minting Stablecoin (and optionally swaps Stablecoin to an arbitrary token)"
          },
          "cdm()": {
            "notice": "The CDM contract"
          },
          "claimUndelegatedCredit(address,uint256)": {
            "notice": "Claim undelegated credit from a vault"
          },
          "decreaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),uint256,address)": {
            "notice": "Decrease the leverage of a position by taking out a credit flash loan to withdraw and sell collateral"
          },
          "delegate(address,uint256)": {
            "notice": "Delegates credit to `vault`"
          },
          "delegateViaStablecoin(address,address,uint256,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Swap for stablecoin or transfer stablecoin directly, then delegate to a vault"
          },
          "deposit(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral to a CDP Vault"
          },
          "depositAndBorrow(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral and debt to a CDP Vault"
          },
          "depositAndDelegate(address,address,address,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Adds collateral and delegates credit to a vault"
          },
          "flashlender()": {
            "notice": "The flashloan contract"
          },
          "increaseLever((address,address,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes),(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),address,uint256,address,(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Increase the leverage of a position by taking out a flash loan and buying Stablecoin"
          },
          "minter()": {
            "notice": "Stablecoin mint"
          },
          "multisend(address[],bytes[],bool[])": {
            "notice": "Allows for multiple calls to be made to cover use cases not covered by the other functions"
          },
          "onCreditFlashLoan(address,uint256,uint256,bytes)": {
            "notice": "Callback function for the credit flash loan taken out in decreaseLever"
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "notice": "Callback function for the flash loan taken out in increaseLever"
          },
          "permit2()": {
            "notice": "Permit2"
          },
          "repay(address,address,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Repays debt to a CDP Vault via Stablecoin (optionally swapping an arbitrary token to Stablecoin)"
          },
          "repayAndClaim(address,address,uint256,uint256,(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Undelegate and then repay a position"
          },
          "self()": {
            "notice": "The address of this contract"
          },
          "stablecoin()": {
            "notice": "Stablecoin token"
          },
          "swapAction()": {
            "notice": "The SwapAction contract"
          },
          "undelegate(address,uint256,uint256[])": {
            "notice": "Undelegate credit from a vault"
          },
          "withdraw(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Removes collateral from a CDP Vault"
          },
          "withdrawAndClaim(address,address,address,uint256,uint256,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)))": {
            "notice": "Undelegate credit from a vault and withdraw collateral from a vault"
          },
          "withdrawAndRepay(address,address,(address,uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint256,address,(uint8,uint8,address,uint256,uint256,address,uint256,bytes)),(uint8,uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "Removes collateral and debt from a CDP Vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/proxy/PositionActionYV.sol": "PositionActionYV"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x6a8df18a4cf9ddce45d0b6609e90ad81c948475b1178ab40c35ea79bfd99a319",
        "urls": [
          "bzz-raw://b99013f9788f6de8a4208e0190e1132c102ef83f79215825e2f4dfa8fc01738d",
          "dweb:/ipfs/QmT25dXiwuszQYgbHFxJshdupZXTj2LtFCAaQqxPQwpyWC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "src/CDM.sol": {
        "keccak256": "0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5",
        "urls": [
          "bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99",
          "dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L"
        ],
        "license": "MIT"
      },
      "src/CDPVault.sol": {
        "keccak256": "0xb59663a5a96b5abe638f2fb4a5e4d0918a41607cbaee2e974ab2317f271be131",
        "urls": [
          "bzz-raw://b4292cb1e12fe471b852e223ce612c5c666cdaac948f1b2803e45edc2ea8c213",
          "dweb:/ipfs/QmNykUHbviSx2HKe6v45qU7B7wjC5Fre3xunPYCAjdcZMx"
        ],
        "license": "MIT"
      },
      "src/InterestRateModel.sol": {
        "keccak256": "0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb",
        "urls": [
          "bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e",
          "dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBuffer.sol": {
        "keccak256": "0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f",
        "urls": [
          "bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff",
          "dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault.sol": {
        "keccak256": "0x7ce3b81164802c14566697092c69fb355d9c31ab846dfc8d90edd5d6a6eb68e3",
        "urls": [
          "bzz-raw://343c84ea42c9846dc3907a6ca2d4c55df6e0cbaea7a83ed2c7458174560a86d6",
          "dweb:/ipfs/QmWcAoAFQYL7YzeFnd5t4HMHxEZHiFirsNHJGL7FoBCkF6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_TypeA_Factory.sol": {
        "keccak256": "0x9ea6fe3a8b5d6ab2f041c72b6058e1e59b3df5e12d54ccc845a27f90f45ddf01",
        "urls": [
          "bzz-raw://c805f1c1b060173d445de751c4a8565232938ad23a6d200c08b99eb634679638",
          "dweb:/ipfs/QmSajnrXMZHMwYF8Y2C6obNp1K7bq2XjexdkqcVoHDFhGm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFlashlender.sol": {
        "keccak256": "0xdd25c972c70a3b3d4622bd8867c87d3f64e47b56b58db1d8a1c43da4a268a72d",
        "urls": [
          "bzz-raw://7621aa290e3d40844b8d55d3f496ff229be67aa233eba520a753c21fb6881ff2",
          "dweb:/ipfs/QmbWys2ApYwLqoid5UPr3LNHd8ru8ommD2eLrFuqKbsAJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IInterestRateModel.sol": {
        "keccak256": "0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055",
        "urls": [
          "bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599",
          "dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IMinter.sol": {
        "keccak256": "0x062fdfcaf8026634cde2a6eef8b0645db224877acd243ac90bccecc4ad85eae3",
        "urls": [
          "bzz-raw://80ba9a81db35cb975f259f4202d3e331f8944c3707b82e9958fc29e99d22cc54",
          "dweb:/ipfs/QmVsyjr9YWFSB4F842qBvqDcFxesWEDK4tJDReFnf4167V"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417",
        "urls": [
          "bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da",
          "dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPause.sol": {
        "keccak256": "0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d",
        "urls": [
          "bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec",
          "dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IStablecoin.sol": {
        "keccak256": "0x9b0b24cf495f3a057153c4438938c283afdd61169b959a2dbf0b0b441b9bb239",
        "urls": [
          "bzz-raw://5e0a874b853c86ccef3e133560adc86a2c46c1cd89310b9358f6ba4187b64461",
          "dweb:/ipfs/QmWCvHhadDyidhu3egi8thPAKKY5HmGbNuSbm1xeg714XS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/proxy/BaseAction.sol": {
        "keccak256": "0xf99c94d3bc65ecf0fb7a05da34987464f774d0566ca1c9f051951ce897ce51ab",
        "urls": [
          "bzz-raw://3945d0f72126b3d5d35bca82a9db04e21e52e9857bb7b4285166bdc6d1d72b24",
          "dweb:/ipfs/Qmdd2PqAxqxjGJqpjKZp7LiCyVY3Z18qwJ5CtDwFmbKsbR"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionAction.sol": {
        "keccak256": "0x46dd1ac7cf68935811c1842fdc0da9406e582613f21419ad783ef38eaecf3532",
        "urls": [
          "bzz-raw://ffa356e6d607545127eebcaf030b3602664820e17ec126cc179df78984e15f18",
          "dweb:/ipfs/Qmbntqtm28WmdRCy6nPabXqsMQt51s7D3wN4hz7QyuK3cc"
        ],
        "license": "MIT"
      },
      "src/proxy/PositionActionYV.sol": {
        "keccak256": "0xf7b7de87bea1d3b66d9f3e09629ddbf725d71ae023b4f340064fb3210df82e6e",
        "urls": [
          "bzz-raw://45a618cba7290146af1a2056f9215205121d5c6f395e33bfffbeb8e319bbe321",
          "dweb:/ipfs/QmRxveKv3mdZA4WepJPtr98KQPoYZnXwRWuVHVa3nuRUDR"
        ],
        "license": "MIT"
      },
      "src/proxy/SwapAction.sol": {
        "keccak256": "0xf3c446b763969f9cbe0cdbbba16140176bf75ada29da89dfb24d32dbe744ddce",
        "urls": [
          "bzz-raw://84a857e66ba74ead46269034e1ce8c7320f500550240197c18c7415f15af3ce8",
          "dweb:/ipfs/QmYFoDhtFfxDKuSmCbrxqyZNkMGjLdG5ZPZJc7UEhzfJKT"
        ],
        "license": "MIT"
      },
      "src/proxy/TransferAction.sol": {
        "keccak256": "0x693a71e77a5ddf332f10b4c9fb39608188372e52fb6c51e6f7e70a2b561b8e4e",
        "urls": [
          "bzz-raw://ba6c28108dedbf0b2dbf607b2237d5aabc3c92817f8adaa02638de8491814756",
          "dweb:/ipfs/QmcnVDM5Q7n1N1VegPNtXQSWFdjWn3EZh4DmuMpXP7U2Nt"
        ],
        "license": "MIT"
      },
      "src/utils/DoubleLinkedList.sol": {
        "keccak256": "0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691",
        "urls": [
          "bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb",
          "dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/utils/Pause.sol": {
        "keccak256": "0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19",
        "urls": [
          "bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1",
          "dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL"
        ],
        "license": "MIT"
      },
      "src/utils/Permission.sol": {
        "keccak256": "0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1",
        "urls": [
          "bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb",
          "dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p"
        ],
        "license": "MIT"
      },
      "src/vendor/IBalancerVault.sol": {
        "keccak256": "0xcfa567dab77301f65a2085f34a3ae0027e46f27e79a3c1bc5292c46a69160c62",
        "urls": [
          "bzz-raw://205c801c5cf14af56151d70f0f7e1df9963d33caa4fada26b0429531510af585",
          "dweb:/ipfs/QmZ8tK5dXu2yPD7hF8aHu2B2YbTutXNgsQKkAPCqZYntLN"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/vendor/IUniswapV3Router.sol": {
        "keccak256": "0x5ab23c0c3f5571e77353ebf1b7d4dec9103504b728faa7530e04b84e5d233c03",
        "urls": [
          "bzz-raw://9a95e0a55b44b18deab9989f7bf4afed71d22d51dd96c42eeb1552a30d252de4",
          "dweb:/ipfs/QmSyZhFhvegYMncZSc18m8skqhzXiMisgg1K2K9V1t796Z"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/vendor/IYVault.sol": {
        "keccak256": "0x79d3af9b4ec00cea17019c8a9016056c19149a9e6c7d5bfa79d96599a09936f1",
        "urls": [
          "bzz-raw://9e08e1a00c492b8b2fcbe42e4f600aab98c7c168b4bc98c1b0d6274e6f12abf9",
          "dweb:/ipfs/QmSny9sHWQ3CjbznC1g5KtRKAbZw3f9iwijnaeoogPD63p"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/proxy/PositionActionYV.sol",
    "id": 54074,
    "exportedSymbols": {
      "ICDPVault": [
        48998
      ],
      "IERC20": [
        34464
      ],
      "IYVault": [
        131992
      ],
      "LeverParams": [
        50796
      ],
      "PositionAction": [
        52935
      ],
      "PositionActionYV": [
        54073
      ],
      "SafeERC20": [
        35920
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5568:121",
    "nodes": [
      {
        "id": 53779,
        "nodeType": "PragmaDirective",
        "src": "32:24:121",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 53781,
        "nodeType": "ImportDirective",
        "src": "58:69:121",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54074,
        "sourceUnit": 34465,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53780,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34464,
              "src": "66:6:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53783,
        "nodeType": "ImportDirective",
        "src": "128:81:121",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54074,
        "sourceUnit": 35921,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53782,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35920,
              "src": "136:9:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53785,
        "nodeType": "ImportDirective",
        "src": "211:46:121",
        "nodes": [],
        "absolutePath": "src/vendor/IYVault.sol",
        "file": "../vendor/IYVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54074,
        "sourceUnit": 131993,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53784,
              "name": "IYVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131992,
              "src": "219:7:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53787,
        "nodeType": "ImportDirective",
        "src": "259:54:121",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDPVault.sol",
        "file": "../interfaces/ICDPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54074,
        "sourceUnit": 48999,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53786,
              "name": "ICDPVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48998,
              "src": "267:9:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53790,
        "nodeType": "ImportDirective",
        "src": "315:65:121",
        "nodes": [],
        "absolutePath": "src/proxy/PositionAction.sol",
        "file": "./PositionAction.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54074,
        "sourceUnit": 52936,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53788,
              "name": "PositionAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52935,
              "src": "323:14:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53789,
              "name": "LeverParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50796,
              "src": "339:11:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54073,
        "nodeType": "ContractDefinition",
        "src": "495:5104:121",
        "nodes": [
          {
            "id": 53797,
            "nodeType": "UsingForDirective",
            "src": "726:27:121",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53794,
              "name": "SafeERC20",
              "nameLocations": [
                "732:9:121"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35920,
              "src": "732:9:121"
            },
            "typeName": {
              "id": 53796,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53795,
                "name": "IERC20",
                "nameLocations": [
                  "746:6:121"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34464,
                "src": "746:6:121"
              },
              "referencedDeclaration": 34464,
              "src": "746:6:121",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$34464",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 53809,
            "nodeType": "FunctionDefinition",
            "src": "942:101:121",
            "nodes": [],
            "body": {
              "id": 53808,
              "nodeType": "Block",
              "src": "1041:2:121",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 53804,
                    "name": "flashlender_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53799,
                    "src": "1013:12:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 53805,
                    "name": "swapActions_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53801,
                    "src": "1027:12:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 53806,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 53803,
                  "name": "PositionAction",
                  "nameLocations": [
                    "998:14:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52935,
                  "src": "998:14:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "998:42:121"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53799,
                  "mutability": "mutable",
                  "name": "flashlender_",
                  "nameLocation": "962:12:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 53809,
                  "src": "954:20:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53801,
                  "mutability": "mutable",
                  "name": "swapActions_",
                  "nameLocation": "984:12:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 53809,
                  "src": "976:20:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:44:121"
            },
            "returnParameters": {
              "id": 53807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:121"
            },
            "scope": 54073,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53883,
            "nodeType": "FunctionDefinition",
            "src": "1508:621:121",
            "nodes": [],
            "body": {
              "id": 53882,
              "nodeType": "Block",
              "src": "1608:521:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53823,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "1626:10:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 53882,
                      "src": "1618:18:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53822,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1618:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53832,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 53827,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53812,
                                "src": "1657:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 53826,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48998,
                              "src": "1647:9:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48998_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 53828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1647:16:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$48998",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 53829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1664:5:121",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48743,
                          "src": "1647:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 53830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1647:24:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 53825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1639:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 53824,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1639:7:121",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 53831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1639:33:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1618:54:121"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 53835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53833,
                      "name": "src",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53814,
                      "src": "1787:3:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 53834,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53823,
                      "src": "1794:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1787:17:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53862,
                  "nodeType": "IfStatement",
                  "src": "1783:219:121",
                  "trueBody": {
                    "id": 53861,
                    "nodeType": "Block",
                    "src": "1806:196:121",
                    "statements": [
                      {
                        "assignments": [
                          53837
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 53837,
                            "mutability": "mutable",
                            "name": "underlying",
                            "nameLocation": "1828:10:121",
                            "nodeType": "VariableDeclaration",
                            "scope": 53861,
                            "src": "1820:18:121",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 53836,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1820:7:121",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 53843,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 53839,
                                  "name": "collateral",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53823,
                                  "src": "1849:10:121",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 53838,
                                "name": "IYVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 131992,
                                "src": "1841:7:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IYVault_$131992_$",
                                  "typeString": "type(contract IYVault)"
                                }
                              },
                              "id": 53840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1841:19:121",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IYVault_$131992",
                                "typeString": "contract IYVault"
                              }
                            },
                            "id": 53841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1861:5:121",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 131951,
                            "src": "1841:25:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 53842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1841:27:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1820:48:121"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 53848,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53823,
                              "src": "1914:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53849,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53816,
                              "src": "1926:6:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 53845,
                                  "name": "underlying",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53837,
                                  "src": "1889:10:121",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 53844,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34464,
                                "src": "1882:6:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 53846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1882:18:121",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$34464",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 53847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1901:12:121",
                            "memberName": "forceApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35777,
                            "src": "1882:31:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 53850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1882:51:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53851,
                        "nodeType": "ExpressionStatement",
                        "src": "1882:51:121"
                      },
                      {
                        "expression": {
                          "id": 53859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53852,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53816,
                            "src": "1947:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 53857,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53816,
                                "src": "1984:6:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 53854,
                                    "name": "collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53823,
                                    "src": "1964:10:121",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 53853,
                                  "name": "IYVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 131992,
                                  "src": "1956:7:121",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IYVault_$131992_$",
                                    "typeString": "type(contract IYVault)"
                                  }
                                },
                                "id": 53855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1956:19:121",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IYVault_$131992",
                                  "typeString": "contract IYVault"
                                }
                              },
                              "id": 53856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1976:7:121",
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 131991,
                              "src": "1956:27:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) external returns (uint256)"
                              }
                            },
                            "id": 53858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1956:35:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1947:44:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53860,
                        "nodeType": "ExpressionStatement",
                        "src": "1947:44:121"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53867,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53812,
                        "src": "2044:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53868,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53816,
                        "src": "2051:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53864,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53823,
                            "src": "2019:10:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53863,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "2012:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 53865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2012:18:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 53866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2031:12:121",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "2012:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 53869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2012:46:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53870,
                  "nodeType": "ExpressionStatement",
                  "src": "2012:46:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53877,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2108:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionActionYV_$54073",
                              "typeString": "contract PositionActionYV"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionActionYV_$54073",
                              "typeString": "contract PositionActionYV"
                            }
                          ],
                          "id": 53876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2100:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53875,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2100:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2100:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53879,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53816,
                        "src": "2115:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53872,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53812,
                            "src": "2085:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53871,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48998,
                          "src": "2075:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48998_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2075:16:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$48998",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2092:7:121",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48892,
                      "src": "2075:24:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2075:47:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53821,
                  "id": 53881,
                  "nodeType": "Return",
                  "src": "2068:54:121"
                }
              ]
            },
            "baseFunctions": [
              50955
            ],
            "documentation": {
              "id": 53810,
              "nodeType": "StructuredDocumentation",
              "src": "1236:267:121",
              "text": "@notice Deposit collateral into the vault\n @param vault Address of the vault\n @param src Token passed in by the caller\n @param amount Amount of collateral to deposit [CDPVault.tokenScale()]\n @return Amount of collateral deposited [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDeposit",
            "nameLocation": "1517:10:121",
            "overrides": {
              "id": 53818,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1581:8:121"
            },
            "parameters": {
              "id": 53817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53812,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1536:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 53883,
                  "src": "1528:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53814,
                  "mutability": "mutable",
                  "name": "src",
                  "nameLocation": "1551:3:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 53883,
                  "src": "1543:11:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53816,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1564:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 53883,
                  "src": "1556:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1556:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1527:44:121"
            },
            "returnParameters": {
              "id": 53821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53820,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53883,
                  "src": "1599:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1598:9:121"
            },
            "scope": 54073,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53937,
            "nodeType": "FunctionDefinition",
            "src": "2415:524:121",
            "nodes": [],
            "body": {
              "id": 53936,
              "nodeType": "Block",
              "src": "2516:423:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53897
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53897,
                      "mutability": "mutable",
                      "name": "collateralWithdrawn",
                      "nameLocation": "2534:19:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 53936,
                      "src": "2526:27:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53896,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2526:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53908,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53904,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2590:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionActionYV_$54073",
                              "typeString": "contract PositionActionYV"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionActionYV_$54073",
                              "typeString": "contract PositionActionYV"
                            }
                          ],
                          "id": 53903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2582:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53902,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2582:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2582:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53906,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53890,
                        "src": "2597:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53899,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53886,
                            "src": "2566:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53898,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48998,
                          "src": "2556:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48998_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 53900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2556:16:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$48998",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 53901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2573:8:121",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48901,
                      "src": "2556:25:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 53907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2556:48:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2526:78:121"
                },
                {
                  "assignments": [
                    53910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53910,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "2721:10:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 53936,
                      "src": "2713:18:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53909,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2713:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53919,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 53914,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53886,
                                "src": "2752:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 53913,
                              "name": "ICDPVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48998,
                              "src": "2742:9:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48998_$",
                                "typeString": "type(contract ICDPVault)"
                              }
                            },
                            "id": 53915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2742:16:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDPVault_$48998",
                              "typeString": "contract ICDPVault"
                            }
                          },
                          "id": 53916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2759:5:121",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48743,
                          "src": "2742:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$34464_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 53917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2742:24:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 53912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2734:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 53911,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2734:7:121",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 53918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2734:33:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2713:54:121"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 53922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53920,
                      "name": "dst",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53888,
                      "src": "2781:3:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 53921,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53910,
                      "src": "2788:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2781:17:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53933,
                  "nodeType": "IfStatement",
                  "src": "2777:119:121",
                  "trueBody": {
                    "id": 53932,
                    "nodeType": "Block",
                    "src": "2800:96:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 53930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53923,
                            "name": "collateralWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53897,
                            "src": "2814:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 53928,
                                "name": "collateralWithdrawn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53897,
                                "src": "2865:19:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 53925,
                                    "name": "collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53910,
                                    "src": "2844:10:121",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 53924,
                                  "name": "IYVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 131992,
                                  "src": "2836:7:121",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IYVault_$131992_$",
                                    "typeString": "type(contract IYVault)"
                                  }
                                },
                                "id": 53926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2836:19:121",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IYVault_$131992",
                                  "typeString": "contract IYVault"
                                }
                              },
                              "id": 53927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2856:8:121",
                              "memberName": "withdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 131973,
                              "src": "2836:28:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) external returns (uint256)"
                              }
                            },
                            "id": 53929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2836:49:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2814:71:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53931,
                        "nodeType": "ExpressionStatement",
                        "src": "2814:71:121"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 53934,
                    "name": "collateralWithdrawn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53897,
                    "src": "2913:19:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53895,
                  "id": 53935,
                  "nodeType": "Return",
                  "src": "2906:26:121"
                }
              ]
            },
            "baseFunctions": [
              50967
            ],
            "documentation": {
              "id": 53884,
              "nodeType": "StructuredDocumentation",
              "src": "2135:275:121",
              "text": "@notice Withdraw collateral from the vault\n @param vault Address of the vault\n @param dst Token the caller expects to receive\n @param amount Amount of collateral to withdraw [wad]\n @return Amount of collateral withdrawn [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onWithdraw",
            "nameLocation": "2424:11:121",
            "overrides": {
              "id": 53892,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2489:8:121"
            },
            "parameters": {
              "id": 53891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53886,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2444:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 53937,
                  "src": "2436:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2436:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53888,
                  "mutability": "mutable",
                  "name": "dst",
                  "nameLocation": "2459:3:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 53937,
                  "src": "2451:11:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2451:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53890,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2472:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 53937,
                  "src": "2464:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2464:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2435:44:121"
            },
            "returnParameters": {
              "id": 53895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53894,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53937,
                  "src": "2507:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2507:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2506:9:121"
            },
            "scope": 54073,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54037,
            "nodeType": "FunctionDefinition",
            "src": "3459:1344:121",
            "nodes": [],
            "body": {
              "id": 54036,
              "nodeType": "Block",
              "src": "3659:1144:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53954
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53954,
                      "mutability": "mutable",
                      "name": "upFrontCollateral",
                      "nameLocation": "3677:17:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 54036,
                      "src": "3669:25:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53953,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3669:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53955,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3669:25:121"
                },
                {
                  "assignments": [
                    53957
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53957,
                      "mutability": "mutable",
                      "name": "addCollateralAmount",
                      "nameLocation": "3751:19:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 54036,
                      "src": "3743:27:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53956,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3743:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53959,
                  "initialValue": {
                    "id": 53958,
                    "name": "swapAmountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53947,
                    "src": "3773:13:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3743:43:121"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 53972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 53963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 53960,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53941,
                          "src": "3869:11:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 53961,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3881:15:121",
                        "memberName": "collateralToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50789,
                        "src": "3869:27:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 53962,
                        "name": "upFrontToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53943,
                        "src": "3900:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3869:43:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 53971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 53964,
                            "name": "leverParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53941,
                            "src": "3916:11:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                              "typeString": "struct LeverParams memory"
                            }
                          },
                          "id": 53965,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3928:7:121",
                          "memberName": "auxSwap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50795,
                          "src": "3916:19:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapParams_$54121_memory_ptr",
                            "typeString": "struct SwapParams memory"
                          }
                        },
                        "id": 53966,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3936:7:121",
                        "memberName": "assetIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54109,
                        "src": "3916:27:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 53969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3955:1:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 53968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3947:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53967,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3947:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3947:10:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3916:41:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3869:88:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 53982,
                    "nodeType": "Block",
                    "src": "4106:123:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 53980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53978,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53957,
                            "src": "4182:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 53979,
                            "name": "upFrontAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53945,
                            "src": "4205:13:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4182:36:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53981,
                        "nodeType": "ExpressionStatement",
                        "src": "4182:36:121"
                      }
                    ]
                  },
                  "id": 53983,
                  "nodeType": "IfStatement",
                  "src": "3865:364:121",
                  "trueBody": {
                    "id": 53977,
                    "nodeType": "Block",
                    "src": "3959:141:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 53975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53973,
                            "name": "upFrontCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53954,
                            "src": "4056:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 53974,
                            "name": "upFrontAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53945,
                            "src": "4076:13:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4056:33:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53976,
                        "nodeType": "ExpressionStatement",
                        "src": "4056:33:121"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    53985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53985,
                      "mutability": "mutable",
                      "name": "underlyingToken",
                      "nameLocation": "4295:15:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 54036,
                      "src": "4287:23:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53984,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4287:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53992,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53987,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53941,
                              "src": "4321:11:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 53988,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4333:15:121",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50789,
                            "src": "4321:27:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53986,
                          "name": "IYVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131992,
                          "src": "4313:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IYVault_$131992_$",
                            "typeString": "type(contract IYVault)"
                          }
                        },
                        "id": 53989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4313:36:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IYVault_$131992",
                          "typeString": "contract IYVault"
                        }
                      },
                      "id": 53990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4350:5:121",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131951,
                      "src": "4313:42:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 53991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4313:44:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4287:70:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53997,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53941,
                          "src": "4404:11:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 53998,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4416:15:121",
                        "memberName": "collateralToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50789,
                        "src": "4404:27:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53999,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53957,
                        "src": "4433:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 53994,
                            "name": "underlyingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53985,
                            "src": "4374:15:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53993,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "4367:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 53995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4367:23:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 53996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4391:12:121",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "4367:36:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 54000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4367:86:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54001,
                  "nodeType": "ExpressionStatement",
                  "src": "4367:86:121"
                },
                {
                  "expression": {
                    "id": 54012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54002,
                      "name": "addCollateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53957,
                      "src": "4463:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 54011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 54008,
                            "name": "addCollateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53957,
                            "src": "4530:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 54004,
                                  "name": "leverParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53941,
                                  "src": "4493:11:121",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                                    "typeString": "struct LeverParams memory"
                                  }
                                },
                                "id": 54005,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4505:15:121",
                                "memberName": "collateralToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50789,
                                "src": "4493:27:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 54003,
                              "name": "IYVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131992,
                              "src": "4485:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IYVault_$131992_$",
                                "typeString": "type(contract IYVault)"
                              }
                            },
                            "id": 54006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4485:36:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IYVault_$131992",
                              "typeString": "contract IYVault"
                            }
                          },
                          "id": 54007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4522:7:121",
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 131991,
                          "src": "4485:44:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) external returns (uint256)"
                          }
                        },
                        "id": 54009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4485:65:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 54010,
                        "name": "upFrontCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53954,
                        "src": "4553:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4485:85:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4463:107:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54013,
                  "nodeType": "ExpressionStatement",
                  "src": "4463:107:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54019,
                          "name": "leverParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53941,
                          "src": "4668:11:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                            "typeString": "struct LeverParams memory"
                          }
                        },
                        "id": 54020,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4680:5:121",
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50787,
                        "src": "4668:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54021,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53957,
                        "src": "4687:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54015,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53941,
                              "src": "4626:11:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54016,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4638:15:121",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50789,
                            "src": "4626:27:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54014,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34464,
                          "src": "4619:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$34464_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4619:35:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$34464",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 54018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4655:12:121",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "4619:48:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34464_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$34464_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 54022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4619:88:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54023,
                  "nodeType": "ExpressionStatement",
                  "src": "4619:88:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54031,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4769:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionActionYV_$54073",
                              "typeString": "contract PositionActionYV"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionActionYV_$54073",
                              "typeString": "contract PositionActionYV"
                            }
                          ],
                          "id": 54030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4761:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54029,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4761:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4761:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54033,
                        "name": "addCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53957,
                        "src": "4776:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54025,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53941,
                              "src": "4734:11:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54026,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4746:5:121",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50787,
                            "src": "4734:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54024,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48998,
                          "src": "4724:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48998_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 54027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4724:28:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$48998",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 54028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4753:7:121",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48892,
                      "src": "4724:36:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 54034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4724:72:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53952,
                  "id": 54035,
                  "nodeType": "Return",
                  "src": "4717:79:121"
                }
              ]
            },
            "baseFunctions": [
              50982
            ],
            "documentation": {
              "id": 53938,
              "nodeType": "StructuredDocumentation",
              "src": "2946:508:121",
              "text": "@notice Hook to decrease lever by depositing collateral into the Yearn Vault and the Yearn Vault\n @param leverParams LeverParams struct\n @param upFrontToken the token passed up front\n @param upFrontAmount the amount of tokens passed up front (or received from an auxSwap [CDPVault.tokenScale()]\n @param swapAmountOut the amount of tokens received from the stablecoin flash loan swap [CDPVault.tokenScale()]\n @return Amount of collateral added to CDPVault position [wad]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onIncreaseLever",
            "nameLocation": "3468:16:121",
            "overrides": {
              "id": 53949,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3632:8:121"
            },
            "parameters": {
              "id": 53948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53941,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "3513:11:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 54037,
                  "src": "3494:30:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 53940,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53939,
                      "name": "LeverParams",
                      "nameLocations": [
                        "3494:11:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50796,
                      "src": "3494:11:121"
                    },
                    "referencedDeclaration": 50796,
                    "src": "3494:11:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$50796_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53943,
                  "mutability": "mutable",
                  "name": "upFrontToken",
                  "nameLocation": "3542:12:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 54037,
                  "src": "3534:20:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3534:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53945,
                  "mutability": "mutable",
                  "name": "upFrontAmount",
                  "nameLocation": "3572:13:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 54037,
                  "src": "3564:21:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3564:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53947,
                  "mutability": "mutable",
                  "name": "swapAmountOut",
                  "nameLocation": "3603:13:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 54037,
                  "src": "3595:21:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3484:138:121"
            },
            "returnParameters": {
              "id": 53952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53951,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54037,
                  "src": "3650:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3650:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3649:9:121"
            },
            "scope": 54073,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54072,
            "nodeType": "FunctionDefinition",
            "src": "5141:456:121",
            "nodes": [],
            "body": {
              "id": 54071,
              "nodeType": "Block",
              "src": "5280:317:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54050,
                      "mutability": "mutable",
                      "name": "withdrawnCollateral",
                      "nameLocation": "5340:19:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 54071,
                      "src": "5332:27:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54049,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5332:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54062,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54058,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5408:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionActionYV_$54073",
                              "typeString": "contract PositionActionYV"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionActionYV_$54073",
                              "typeString": "contract PositionActionYV"
                            }
                          ],
                          "id": 54057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5400:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54056,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5400:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5400:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54060,
                        "name": "subCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54043,
                        "src": "5415:13:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54052,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54041,
                              "src": "5372:11:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54053,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5384:5:121",
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50787,
                            "src": "5372:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54051,
                          "name": "ICDPVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48998,
                          "src": "5362:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICDPVault_$48998_$",
                            "typeString": "type(contract ICDPVault)"
                          }
                        },
                        "id": 54054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5362:28:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDPVault_$48998",
                          "typeString": "contract ICDPVault"
                        }
                      },
                      "id": 54055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5391:8:121",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48901,
                      "src": "5362:37:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 54061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5362:67:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5332:97:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54068,
                        "name": "withdrawnCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54050,
                        "src": "5570:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54064,
                              "name": "leverParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54041,
                              "src": "5532:11:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                                "typeString": "struct LeverParams memory"
                              }
                            },
                            "id": 54065,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5544:15:121",
                            "memberName": "collateralToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50789,
                            "src": "5532:27:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54063,
                          "name": "IYVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131992,
                          "src": "5524:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IYVault_$131992_$",
                            "typeString": "type(contract IYVault)"
                          }
                        },
                        "id": 54066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5524:36:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IYVault_$131992",
                          "typeString": "contract IYVault"
                        }
                      },
                      "id": 54067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5561:8:121",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131973,
                      "src": "5524:45:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 54069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5524:66:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 54048,
                  "id": 54070,
                  "nodeType": "Return",
                  "src": "5517:73:121"
                }
              ]
            },
            "baseFunctions": [
              50993
            ],
            "documentation": {
              "id": 54038,
              "nodeType": "StructuredDocumentation",
              "src": "4809:327:121",
              "text": "@notice Hook to decrease lever by withdrawing collateral from the CDPVault and the Yearn Vault\n @param leverParams LeverParams struct\n @param subCollateral Amount of collateral to withdraw in CDPVault decimals [wad]\n @return Amount of underlying token withdrawn from yearn vault [CDPVault.tokenScale()]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onDecreaseLever",
            "nameLocation": "5150:16:121",
            "overrides": {
              "id": 54045,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5253:8:121"
            },
            "parameters": {
              "id": 54044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54041,
                  "mutability": "mutable",
                  "name": "leverParams",
                  "nameLocation": "5195:11:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 54072,
                  "src": "5176:30:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LeverParams_$50796_memory_ptr",
                    "typeString": "struct LeverParams"
                  },
                  "typeName": {
                    "id": 54040,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54039,
                      "name": "LeverParams",
                      "nameLocations": [
                        "5176:11:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50796,
                      "src": "5176:11:121"
                    },
                    "referencedDeclaration": 50796,
                    "src": "5176:11:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LeverParams_$50796_storage_ptr",
                      "typeString": "struct LeverParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54043,
                  "mutability": "mutable",
                  "name": "subCollateral",
                  "nameLocation": "5224:13:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 54072,
                  "src": "5216:21:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5216:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5166:77:121"
            },
            "returnParameters": {
              "id": 54048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54047,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54072,
                  "src": "5271:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5271:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5270:9:121"
            },
            "scope": 54073,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53792,
              "name": "PositionAction",
              "nameLocations": [
                "524:14:121"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52935,
              "src": "524:14:121"
            },
            "id": 53793,
            "nodeType": "InheritanceSpecifier",
            "src": "524:14:121"
          }
        ],
        "canonicalName": "PositionActionYV",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 53791,
          "nodeType": "StructuredDocumentation",
          "src": "382:113:121",
          "text": "@title PositionActionYV\n @notice Yearn Vault version 0.4.6 implementation of PositionAction base contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54073,
          52935,
          50675,
          54863,
          49414,
          49365
        ],
        "name": "PositionActionYV",
        "nameLocation": "504:16:121",
        "scope": 54074,
        "usedErrors": [
          50628,
          50844,
          50846,
          50848,
          50850,
          50852,
          50854,
          50856,
          50858,
          50860,
          50862,
          50864,
          50866,
          131187
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 121
}