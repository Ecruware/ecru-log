{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CDPVault__addLimitPriceTick_invalidPriceTickOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__addLimitPriceTick_limitPriceTickOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__calculateAssetsAndLiabilities_insufficientAssets",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__cancelLimitOrder_limitOrderDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__checkEmergencyMode_entered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__claimUndelegatedCredit_epochNotClaimable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__claimUndelegatedCredit_epochNotFixed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitOrderAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitOrderFloor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitPriceTickNotActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__delegateCredit_creditAmountTooSmall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__exchange_notEnoughExchanged",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__liquidatePosition_notUnsafe",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__liquidatePositions_argLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_maxUtilizationRatio",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_noPermission",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_notSafe",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyPosition_debtFloor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__setParameter_unrecognizedParameter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IdIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InterestRateModel__setBaseRate_invalidBaseRate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ItemInList",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ItemNotInList",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__add_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__mul_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__sub_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toInt256_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toUint64_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Permission__modifyPermission_notPermitted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "AddLimitPriceTick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "CancelLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sharesRedeemed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditClaimed",
          "type": "uint256"
        }
      ],
      "name": "ClaimUndelegatedCredit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "CreateLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditDelegated",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sharesIssued",
          "type": "uint256"
        }
      ],
      "name": "DelegateCredit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRedeemed",
          "type": "uint256"
        }
      ],
      "name": "Exchange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRedeemed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        }
      ],
      "name": "ExecuteLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralReleased",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "normalDebtRepaid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        }
      ],
      "name": "LiquidatePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        }
      ],
      "name": "ModifyCollateralAndDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "grant",
          "type": "bool"
        }
      ],
      "name": "ModifyPermission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalNormalDebt",
          "type": "uint256"
        }
      ],
      "name": "ModifyPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "RemoveLimitPriceTick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int64",
          "name": "baseRate",
          "type": "int64"
        }
      ],
      "name": "SetBaseRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SetGlobalIRS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "parameter",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "SetParameter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "grant",
          "type": "bool"
        }
      ],
      "name": "SetPermittedAgent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "position",
          "type": "address"
        }
      ],
      "name": "SetPositionIRS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "estimatedClaim",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimableAtEpoch",
          "type": "uint256"
        }
      ],
      "name": "UndelegateCredit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EPOCH_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EPOCH_FIX_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EPOCH_FIX_TIMEOUT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "name": "activeLimitPriceTicks",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextLimitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "addLimitPriceTick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buffer",
      "outputs": [
        {
          "internalType": "contract IBuffer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "name": "calculateRebateFactorForPriceTick",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cdm",
      "outputs": [
        {
          "internalType": "contract ICDM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feesClaimed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimForEpoch",
          "type": "uint256"
        }
      ],
      "name": "claimUndelegatedCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "createLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditWithholder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "creditAmount",
          "type": "uint256"
        }
      ],
      "name": "delegateCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sharesAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cashAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enterEmergencyMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        }
      ],
      "name": "epochs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalCreditClaimable",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalCreditWithheld",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSharesQueued",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "claimRatio",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "estimatedCreditClaimPerShare",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "upperLimitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditToExchange",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralExchanged",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "upperLimitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditToExchange",
          "type": "uint256"
        }
      ],
      "name": "exchangePreview",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralExchanged",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentEpoch",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGlobalIRS",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int64",
              "name": "baseRate",
              "type": "int64"
            },
            {
              "internalType": "uint64",
              "name": "lastUpdated",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "rateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "averageRebate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "globalAccruedRebate",
              "type": "uint256"
            }
          ],
          "internalType": "struct InterestRateModel.GlobalIRS",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getLimitOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "deltaCollateral_",
          "type": "int256"
        }
      ],
      "name": "getMaximumDebtForCollateral",
      "outputs": [
        {
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "creditNeeded",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        }
      ],
      "name": "getPositionIRS",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "snapshotRateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "rebateFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "accruedRebate",
              "type": "uint128"
            }
          ],
          "internalType": "struct InterestRateModel.PositionIRS",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getPriceTick",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "hasPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitOrderFloor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        }
      ],
      "name": "limitOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "repayAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "liquidatePositions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationConfig",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "liquidationPenalty",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "liquidationDiscount",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "targetHealthFactor",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        }
      ],
      "name": "modifyCollateralAndDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "modifyPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "modifyPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pausedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "normalDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "removeLimitPriceTick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "parameter",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "setParameter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "setPermissionAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "unwinderFactory",
          "type": "address"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        }
      ],
      "name": "sharesQueuedByEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sharesQueued",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spotPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAccruedFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCreditClaimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalNormalDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "prevQueuedEpochs",
          "type": "uint256[]"
        }
      ],
      "name": "undelegateCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "estimatedClaim",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimableAtEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fixableUntilEpoch",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultConfig",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "debtFloor",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "liquidationRatio",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "globalLiquidationRatio",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        }
      ],
      "name": "virtualIRS",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "rateAccumulator",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "accruedRebate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "globalAccruedRebate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101a06040523480156200001257600080fd5b506040516200630238038062006302833981016040819052620000359162000116565b6001805460ff1916905560408051639a295e7360e01b81529051829182916001600160a01b03831691639a295e739160048083019261012092919082900301816000875af11580156200008c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b291906200013d565b6001600160a01b03908116610140526101809190915261016091909152610120919091526101009190915290811660e05290811660c05290811660a0521660805250620001e5915050565b6001600160a01b03811681146200011357600080fd5b50565b6000602082840312156200012957600080fd5b81516200013681620000fd565b9392505050565b60008060008060008060008060006101208a8c0312156200015d57600080fd5b89516200016a81620000fd565b60208b01519099506200017d81620000fd565b60408b01519098506200019081620000fd565b60608b0151909750620001a381620000fd565b8096505060808a0151945060a08a0151935060c08a0151925060e08a015191506101008a0151620001d481620000fd565b809150509295985092959850929598565b60805160a05160c05160e0516101005161012051610140516101605161018051615fa26200036060003960006127e50152600081816127130152613f7501526000818161081201528181610fb40152818161176b01528181613598015281816136700152818161395301526139ea0152600081816107ba01526152310152600081816104b60152818161150f015281816131330152614665015260008181610aa0015281816111d4015281816112a8015281816114e1015281816131660152614687015260008181610a53015281816128e80152612fa301526000818161068901526111a70152600081816109d001528181610f87015281816112f70152818161173c01528181611e4901528181611ed601528181611f580152818161209001528181612296015281816125ee01528181612671015281816128b90152818161297601528181612ee70152818161356b0152818161364301528181613924015281816139c3015281816148e20152614deb0152615fa26000f3fe608060405234801561001057600080fd5b506004361061035b5760003560e01c8063842c311e116101ca578063c75a4b5e11610105578063dbe6b31c116100a8578063dbe6b31c14610963578063dc2ec249146109af578063df10f687146109b8578063e2dfb317146109cb578063eb953449146109f2578063edaafe2014610a4e578063ef0563fb14610a75578063f3fef3a314610a88578063fc0c546a14610a9b57600080fd5b8063c75a4b5e146108b1578063cb6238c8146108c4578063cde68041146108ef578063ce7c2ac214610902578063d294f09314610922578063d4b7eac31461092a578063d547741f1461093d578063d9c70f571461095057600080fd5b8063a3e2b4951161016d578063a3e2b4951461078b578063a70b9f0c146107ab578063b0e21e8a146107b5578063b6dc16f6146107dc578063b97dd9e2146107fc578063ba95534c14610804578063bf404a411461080d578063c6b61e4c1461083457600080fd5b8063842c311e146107035780638456cb591461070c57806388439aea146107145780638f1e5f631461072757806391d148541461075557806393f9eb35146107685780639844afd21461077b578063a217fddf1461078357600080fd5b80633f2601ef1161029a5780635fe83c7b1161023d5780635fe83c7b146105b4578063683f81a1146105bd5780636e5e741e146105e0578063723507be146106135780637cc34bb4146106265780637dc0d1d0146106845780638051ba75146106b85780638309dbdd146106f057600080fd5b80633f2601ef146104fc5780633f4ba83a1461050f57806344a3c66414610517578063472132f01461052a57806347e7ef241461053257806351f813ec1461054557806355f575101461056d5780635c975abb146105a957600080fd5b80632af8992b116103025780632af8992b1461046f5780632b2368a2146104825780632e55d0f2146104955780632f2ff15d1461049e578063342c02b1146104b157806336568abe146104d8578063398482d8146104eb5780633a98ef39146104f357600080fd5b806301ffc9a71461036057806314815a6d1461038857806319f1039c146103c15780631c580ad5146103c95780632202ce8c1461041c578063248a9ca314610426578063280c37ef146104495780632906f94e1461045c575b600080fd5b61037361036e36600461586e565b610ac2565b60405190151581526020015b60405180910390f35b6103b36103963660046158af565b601060209081526000928352604080842090915290825290205481565b60405190815260200161037f565b6103b3600381565b6018546103f2906001600160401b0380821691600160401b8104821691600160801b9091041683565b604080516001600160401b039485168152928416602084015292169181019190915260600161037f565b610424610af9565b005b6103b36104343660046158db565b60009081526020819052604090206001015490565b610424610457366004615902565b610bc2565b61042461046a3660046158db565b610c39565b6103b361047d366004615939565b610d72565b6103b36104903660046158db565b610dc0565b6103b360025481565b6104246104ac3660046158af565b6110e0565b6103b37f000000000000000000000000000000000000000000000000000000000000000081565b6104246104e63660046158af565b61110a565b6103b361118d565b6103b3600c5481565b61042461050a36600461595b565b611244565b610424611357565b610424610525366004615939565b611391565b6103b3600181565b6103b3610540366004615976565b6114ca565b6105586105533660046158db565b61156c565b6040805192835290151560208301520161037f565b61059461057b36600461595b565b6012602052600090815260409020805460019091015482565b6040805192835260208301919091520161037f565b60015460ff16610373565b6103b3600e5481565b6103736105cb3660046158db565b60136020526000908152604090205460ff1681565b6105f36105ee366004615a45565b6115c8565b60408051948552602085019390935291830152606082015260800161037f565b610424610621366004615939565b611949565b600954610655906001600160801b038116906001600160401b03600160801b8204811691600160c01b90041683565b604080516001600160801b0390941684526001600160401b03928316602085015291169082015260600161037f565b6106ab7f000000000000000000000000000000000000000000000000000000000000000081565b60405161037f9190615a8b565b6106cb6106c636600461595b565b611bad565b604080516001600160401b03909416845260208401929092529082015260600161037f565b6104246106fe366004615a9f565b611c3d565b6103b3600a5481565b610424611d0c565b610594610722366004615939565b611d41565b61073a610735366004615ae6565b611d64565b6040805193845260208401929092529082015260600161037f565b6103736107633660046158af565b6121ab565b6103b36107763660046158db565b6121d4565b610424612344565b6103b3600081565b6103b36107993660046158db565b60166020526000908152604090205481565b6103b36203f48081565b6103b37f000000000000000000000000000000000000000000000000000000000000000081565b6103b36107ea36600461595b565b60116020526000908152604090205481565b6103b3612396565b6103b3600b5481565b6106ab7f000000000000000000000000000000000000000000000000000000000000000081565b61087d6108423660046158db565b600f602052600090815260409020805460018201546002830154600390930154919290916001600160801b0380821691600160801b90041685565b604080519586526020860194909452928401919091526001600160801b03908116606084015216608082015260a00161037f565b6104246108bf366004615b31565b6123b4565b6108d76108d23660046158db565b6127c9565b6040516001600160401b03909116815260200161037f565b6103736108fd366004615b86565b61284b565b6103b361091036600461595b565b600d6020526000908152604090205481565b6103b3612899565b610594610938366004615939565b612947565b61042461094b3660046158af565b612a4f565b61042461095e366004615902565b612a74565b61097661097136600461595b565b612ad7565b6040805182516001600160401b03908116825260208085015190911690820152918101516001600160801b03169082015260600161037f565b6103b360175481565b6104246109c6366004615bb0565b612b42565b6106ab7f000000000000000000000000000000000000000000000000000000000000000081565b6109fa613025565b60405161037f9190600060a082019050825160070b825260208301516001600160401b0380821660208501528060408601511660408501525050606083015160608301526080830151608083015292915050565b6106ab7f000000000000000000000000000000000000000000000000000000000000000081565b610424610a833660046158db565b61307c565b6103b3610a96366004615976565b6130fe565b6106ab7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216637965db0b60e01b1480610af357506301ffc9a760e01b6001600160e01b03198316145b92915050565b3360008181526016602052604081205490819003610b2a57604051630573b42560e51b815260040160405180910390fd5b6000818152601560205260409020610b42908361318d565b6000828152601660209081526040808320839055338084526012909252822060010154600a54610b8e93610b7461118d565b600954600160c01b90046001600160401b0316600061320e565b505060405133915082907f6f36e2a381bc87c87bcc2043deb0a5cdf9a6d87eb14cbe13cf0f1fe39f324dd990600090a35050565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815194855291840192909252908201527f6501e8bfa2d3e686d62fe2c0c3275df594494583b0a63a70b7452d3eeb712bd6906060015b60405180910390a15050565b60008181526013602052604090205460ff16610c685760405163da4b118b60e01b815260040160405180910390fd5b33600090815260126020526040902060010154601754811015610c9e576040516305c0093760e21b815260040160405180910390fd5b3360008181526016602052604090205415610ccc5760405163345c017d60e01b815260040160405180910390fd5b600081815260166020908152604080832086905585835260158083528184208480528084529184206001015493879052909152610d0a9183906132d9565b610d3d3383600a546000610d1c61118d565b600954600160c01b90046001600160401b0316610d388a6127c9565b61320e565b505060405133915084907f85d7690ee90733d849878d2bbbd5bf047e442ce2d045c0308a58cfd2ce53031590600090a3505050565b6000828152601560209081526040808320838052909152812054905b828114610db95760008481526015602090815260408083208584529091529020549150600101610d8e565b5092915050565b600080610dcb612396565b905060018301811015610df15760405163d84d29d760e01b815260040160405180910390fd5b6000610dfc846133a6565b94505050505080604001516000148015610e21575060608101516001600160801b0316155b8015610e2f57506020810151155b15610e9057506000838152600f6020908152604091829020825160a081018452815481526001820154928101929092526002810154928201929092526003909101546001600160801b038082166060840152600160801b9091041660808201525b604081015115801590610eae575060608101516001600160801b0316155b15610ecc57604051632dcf9d3960e01b815260040160405180910390fd5b60008481526010602090815260408083203384529091528120546060830151909190610f029083906001600160801b0316613aaf565b60008781526010602090815260408083203384529091528120559050610f288183615c5c565b336000908152600d602052604081208054909190610f47908490615c6f565b9091555050604083015183519192508291610f63908390615c82565b610f6d9190615caf565b604051632b0b3a6f60e21b81529095506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc90610fe0907f00000000000000000000000000000000000000000000000000000000000000009033908a90600401615cd1565b600060405180830381600087803b158015610ffa57600080fd5b505af115801561100e573d6000803e3d6000fd5b5050505081836040018181516110249190615c5c565b905250825185908490611038908390615c5c565b9052506000868152600f60209081526040808320865181559186015160018301558501516002820155606085015160808601516001600160801b03908116600160801b02911617600390910155600e8054879290611097908490615c5c565b9091555050604080518381526020810187905233917f5a4beaa18eb50f2c5150783acec1964edb2e32cbf0f99957707375f76ffbd982910160405180910390a250505050919050565b6000828152602081905260409020600101546110fb81613add565b6111058383613ae7565b505050565b6001600160a01b038116331461117f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6111898282613b6b565b5050565b604051632cbf04c160e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632cbf04c1906111fc907f000000000000000000000000000000000000000000000000000000000000000090600401615a8b565b6020604051808303816000875af115801561121b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123f9190615cf5565b905090565b600061124e613025565b905080602001516001600160401b031660001461126a57600080fd5b611275600033613ae7565b6001600160401b0342166020820152670de0b6b3a7640000604082015261129b81613bd0565b6112d16001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683600019613c5e565b60405163d9c70f5760e01b81526001600160a01b038381166004830152600160248301527f0000000000000000000000000000000000000000000000000000000000000000169063d9c70f5790604401600060405180830381600087803b15801561133b57600080fd5b505af115801561134f573d6000803e3d6000fd5b505050505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61138181613add565b611389613da6565b506000600255565b611399613df2565b7ff96f3d6876b63665360200e15ed8964960110cbbd99e917fb50ad1e576f538ac6113c381613add565b670de0b6b3a76400008310806113e157508268056bc75e2d63100000105b156113ff576040516336bbc25960e01b815260040160405180910390fd5b600080526014602052600080516020615f4d833981519152548015801561142557508215155b806114425750821580159061144257508284118061144257508281115b8061145a575060008381526014602052604090205484105b15611478576040516346b0cc7160e11b815260040160405180910390fd5b611484601485856132d9565b600084815260136020526040808220805460ff191660011790555185917f3907a47dfbf148deb99efcd854a68497cbdc2a2db8488083ecb842ad6bde91a891a250505050565b60006114d4613df2565b6115096001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085613e3a565b611533827f0000000000000000000000000000000000000000000000000000000000000000613e61565b6001600160a01b038416600090815260116020526040812080549293508392909190611560908490615c6f565b90915550909392505050565b60008080526014602052600080516020615f4d8339815191525490805b8381146115ac576000838152601460205260409020600101549250600101611589565b5050600081815260136020526040902054909260ff9091169150565b6000806000806115d6612396565b925060008060008060006115e9886133a6565b945094509450945094506000805b8b518110156116ee5760008c828151811061161457611614615d0e565b602002602001015190508160010191508060001480611636575060038b038110155b8061165a57506000818152600f60205260409020600301546001600160801b031615155b8061167457506000818152600f6020526040902060020154155b1561167f57506115f7565b60008181526010602090815260408083203384529091529020546116a38185615c6f565b60008381526010602090815260408083203384528252808320839055858352600f9091528120600201805492965083929091906116e1908490615c5c565b909155506115f792505050565b50828c6116fb8789615c5c565b6117059190615c82565b61170f9190615caf565b99506000848b11611720578a611722565b845b604051632b0b3a6f60e21b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906117959030907f0000000000000000000000000000000000000000000000000000000000000000908690600401615cd1565b600060405180830381600087803b1580156117af57600080fd5b505af11580156117c3573d6000803e3d6000fd5b5050505080836020018181516117d99190615c6f565b905250506040820151156118125761180d82608001516001600160801b03166118028c8f613e61565b808218908211021890565b61181c565b61181c8a8d613e61565b6001600160801b031660808301526040820180518d919061183e908390615c6f565b9052506000898152600f6020908152604080832085518155828601516001820155818601516002820155606086015160808701516001600160801b03908116600160801b0291161760039091015560108252808320338452909152812080548e92906118ab908490615c6f565b9091555050336000908152600d60205260409020548c906118cd908390615c6f565b6118d79190615c5c565b336000818152600d60209081526040918290209390935580518f81529283018d905260018c01908301819052995060038b0198508a917fe5248481489259c5ccaad0795cac80cd527112765494ed5a8d98b93501b27f079060600160405180910390a350505050505092959194509250565b611951613df2565b7f7e2be3cffb06427cbcb9b1d12d4b78adcf14a2bf640e9bbdeb54bb711b65ec7161197b81613add565b82683232b13a233637b7b960b91b036119ae57600980546001600160801b0319166001600160801b038416179055611b6e565b826f6c69717569646174696f6e526174696f60801b036119f2576009805467ffffffffffffffff60801b1916600160801b6001600160401b03851602179055611b6e565b8275676c6f62616c4c69717569646174696f6e526174696f60501b03611a3757600980546001600160c01b0316600160c01b6001600160401b03851602179055611b6e565b826e3634b6b4ba27b93232b9233637b7b960891b03611a5a576017829055611b6e565b8267626173655261746560c01b03611a8b57611a866000198314611a7e5782613eb0565b600019613eb0565b611b6e565b82716c69717569646174696f6e50656e616c747960701b03611ac8576018805467ffffffffffffffff19166001600160401b038416179055611b6e565b82721b1a5c5d5a59185d1a5bdb911a5cd8dbdd5b9d606a1b03611b0f576018805467ffffffffffffffff60401b1916600160401b6001600160401b03851602179055611b6e565b82713a30b933b2ba2432b0b63a342330b1ba37b960711b03611b55576018805467ffffffffffffffff60801b1916600160801b6001600160401b03851602179055611b6e565b604051638dd691e760e01b815260040160405180910390fd5b827f4327e67d6578eb2c9293fb22f9334006073ac1397c7100f5dd5adca09ad71c0883604051611ba091815260200190565b60405180910390a2505050565b600080600080611bbb613025565b600a54909150611bcb8282613f58565b9450611be0828683600080600080600061406b565b506080810151935091506001600160a01b03861615611c3457611c28611c0587612ad7565b6001600160a01b038816600090815260126020526040902060010154879061420a565b6001600160801b031693505b50509193909250565b6001600160a01b0383163314801590611c7a57506001600160a01b038316600090815260046020908152604080832033845290915290205460ff16155b15611c9857604051638743d2ff60e01b815260040160405180910390fd5b6001600160a01b0383811660009081526003602090815260408083209386168352929052819020805460ff1916831515179055517fdcf2bd5a4c47afeb1792d170f6f5e6e528e30c6b546fffe62b697a11f8953b2b90611cff903390869086908690615d24565b60405180910390a1505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611d3681613add565b611d3e614245565b50565b6000803315611d4f57600080fd5b611d598484614253565b915091509250929050565b6001600160a01b03841660009081526012602090815260408083208151808301909252805482526001015491810191909152829190819081841215611dc157611dba848260000151611db590615d4e565b6144d9565b9350611de8565b6001600160a01b038716600090815260116020526040902054611de59085906144f0565b93505b6000611e19611dfb836000015187614501565b611e14611e06614546565b670c7d713b49da0000613aaf565b613aaf565b9050600080611e278b611bad565b50915091506000611e3d8560200151848461456b565b90506000611ff7611fe27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c3536e7306040518263ffffffff1660e01b8152600401611e939190615a8b565b602060405180830381865afa158015611eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed49190615cf5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638543d5e06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f569190615cf5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632efcc8666040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd89190615cf5565b6118029190615c5c565b611fec8488615d6a565b808218908213021890565b905060008082126120085781612011565b61201182615d4e565b905061201e81868661458b565b985060008212156120355761203289615d4e565b98505b5060008061205f60008b1261204b576000612054565b6120548b615d4e565b8960200151876145c7565b509050806001600160801b031661207f876001600160401b03168c614612565b6120899190615d8a565b91505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c3536e78e6040518263ffffffff1660e01b81526004016120da9190615a8b565b602060405180830381865afa1580156120f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211b9190615cf5565b90506000821380612133575061213082615d4e565b81135b612150578061214183615d4e565b61214b9190615d6a565b612153565b60005b985060008a89602001516121679190615d8a565b905060008113801561218657506009546001600160801b0316600f0b81125b156121985760009a5060009b50600099505b5050505050505050509450945094915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000670de0b6b3a76400008210156121ff57604051636396b11f60e01b815260040160405180910390fd5b600080600061221461220f612396565b6133a6565b5093505092509250806000148061223257506122308284615c5c565b155b612259576122408284615c5c565b61224a8683615c82565b6122549190615caf565b61225b565b845b336000908152600d60205260409020805482019055935061227c8482615c6f565b600c55604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906122cf90339030908a90600401615cd1565b600060405180830381600087803b1580156122e957600080fd5b505af11580156122fd573d6000803e3d6000fd5b505060408051888152602081018890523393507f12352042ba8d46dbbba12767322c1c3bb5ed774314b10c283f945bf69e83f15792500160405180910390a2505050919050565b61234c613df2565b6000806123596000611bad565b600954929450925061238991600160c01b90046001600160401b0316905061237f61118d565b600a54858561463c565b1561118957611189614245565b60006203f4808042064203816123ae576123ae615c99565b04905090565b60008113806123c35750600082125b80156123d657506123d4853361284b565b155b806123f357506000821380156123f357506123f1843361284b565b155b806124105750600081128015612410575061240e833361284b565b155b1561242e57604051634c26249960e01b815260040160405180910390fd5b6001600160a01b038516600090815260126020908152604080832081518083018352815481526001909101548184015281516060810183526009546001600160801b03811682526001600160401b03600160801b8204811695830195909552600160c01b900490931691830191909152600a5490926124ab61118d565b905060008060006124ca8c8860200151878b888b60400151600061320e565b9250925092506124de8c88848c8c8a61474c565b965060008813806124ef5750600089125b801561253257506125306125198860200151846000015185604001516001600160801b031661456b565b8851602089015187906001600160401b0316614853565b155b1561255057604051633f66923d60e01b815260040160405180910390fd5b6001600160a01b038b16600090815260116020526040902054612573908a614876565b6001600160a01b038c166000908152601160205260409020556125968589614501565b945084600a819055506000816001600160801b03166125c285604001516001600160401b03168b614612565b6125cc9190615d8a565b9050600081131561265e57604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906126279030908f908690600401615cd1565b600060405180830381600087803b15801561264157600080fd5b505af1158015612655573d6000803e3d6000fd5b505050506126f2565b60008112156126f2576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ac2ce9bc8c306126a185615d4e565b6040518463ffffffff1660e01b81526004016126bf93929190615cd1565b600060405180830381600087803b1580156126d957600080fd5b505af11580156126ed573d6000803e3d6000fd5b505050505b600089131561275a57600061270785886148bb565b90506001600160401b037f000000000000000000000000000000000000000000000000000000000000000060401c1680821115612757576040516329b823dd60e21b815260040160405180910390fd5b50505b8a6001600160a01b03168c6001600160a01b03168e6001600160a01b03167f7ce3e27b99e7e2e42f0ddcb6f6679a25081a5fd4ca991bcd05c45e54daa997088d8d6040516127b2929190918252602082015260400190565b60405180910390a450505050505050505050505050565b6000670de0b6b3a76400008210156127e357506000919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160801b0381169060801c61284361283e670de0b6b3a764000061282f85611e14838a615c5c565b6128399085615c6f565b613e61565b614990565b949350505050565b6000816001600160a01b0316836001600160a01b0316148061289257506001600160a01b0380841660009081526003602090815260408083209386168352929052205460ff165b9392505050565b600b80546000909155604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906129129030907f0000000000000000000000000000000000000000000000000000000000000000908690600401615cd1565b600060405180830381600087803b15801561292c57600080fd5b505af1158015612940573d6000803e3d6000fd5b5050505090565b6000806129548484614253565b909250905081156129e257604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906129af90339030908790600401615cd1565b600060405180830381600087803b1580156129c957600080fd5b505af11580156129dd573d6000803e3d6000fd5b505050505b8015612a0d573360009081526011602052604081208054839290612a07908490615c6f565b90915550505b604080518381526020810183905233917f26981b9aefbb0f732b0264bd34c255e831001eb50b06bc85b32cc39e14389721910160405180910390a29250929050565b600082815260208190526040902060010154612a6a81613add565b6111058383613b6b565b3360008181526003602090815260408083206001600160a01b038716845290915290819020805460ff1916841515179055517fdcf2bd5a4c47afeb1792d170f6f5e6e528e30c6b546fffe62b697a11f8953b2b91610c2d91819086908690615d24565b612adf615786565b6001600160a01b038216600090815260086020908152604091829020825160608101845290546001600160401b038082168352600160401b82041692820192909252600160801b9091046001600160801b031691810191909152610af3906149ba565b612b4a613df2565b80518214612b6b576040516338f30c4b60e11b815260040160405180910390fd5b6000612b75613025565b60408051606080820183526009546001600160801b03811683526001600160401b03600160801b8083048216602080870191909152600160c01b909304821685870152855193840186526018548083168552600160401b810483169385019390935290910416928101929092529192506000612bef61118d565b9050612bf96157a6565b848152600a5460208201526009546001600160801b031660a0820152601854612c33908390600160401b90046001600160401b0316613aaf565b60c08201526018546001600160401b031660e08201526020810151600090612c5c908790613f58565b905060005b88811015612e7a5760008a8a83818110612c7d57612c7d615d0e565b9050602002016020810190612c92919061595b565b90506001600160a01b0381161580612cc35750888281518110612cb757612cb7615d0e565b60200260200101516000145b612e71576001600160a01b0381166000908152601260209081526040808320815180830190925280548252600101549181018290529190612d06908490876149f1565b90506000612d2683602001518784604001516001600160801b031661456b565b9050871580612d4d5750612d4d8184600001518a8d602001516001600160401b0316614853565b15612d6b5760405163f87e38e960e01b815260040160405180910390fd5b6000806000612d94612d8187600001518d613aaf565b8e602001516001600160401b0316613e61565b905080612dae8d604001516001600160401b031686613aaf565b612db89190615c5c565b9150506000612de18d602001516001600160401b03168d602001516001600160401b0316613aaf565b90506000612df7670de0b6b3a764000083613e61565b612e128e604001516001600160401b03168d60e00151613aaf565b612e1c9190615c5c565b9050612e288382613e61565b9350505050612e588d8781518110612e4257612e42615d0e565b6020026020010151611802838b60e00151613e61565b610100890152612e6a88858588614a30565b9750505050505b50600101612c61565b50612ec28260000151612ea384606001518560e00151670de0b6b3a7640000611e149190615c5c565b8460800151612eb29190615c6f565b8460200151868960400151614c6a565b506020820151600a556060820151604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ac2ce9bc91612f1f913391309190600401615cd1565b600060405180830381600087803b158015612f3957600080fd5b505af1158015612f4d573d6000803e3d6000fd5b505050604080840151336000908152601160205291822080549193509190612f76908490615c6f565b90915550506101208201511561301a57610120820151604051630bd0dedd60e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632f437b74906024016020604051808303816000875af1158015612ff4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130189190615cf5565b505b505050505050505050565b61302d6157ff565b506040805160a081018252600554600781810b83526001600160401b03600160401b830481166020850152600160801b9092049091169282019290925260065460608201529054608082015290565b613084613df2565b7ff96f3d6876b63665360200e15ed8964960110cbbd99e917fb50ad1e576f538ac6130ae81613add565b6000828152601360205260409020805460ff191690556130cf60148361318d565b60405182907f343776161924dfe02a29fdf57e6087e2d25ca11fe703785a80632e9ab88c88a190600090a25050565b6000613108613df2565b3360009081526011602052604081208054849290613127908490615c5c565b909155506131579050827f0000000000000000000000000000000000000000000000000000000000000000613aaf565b9050610af36001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483614c9d565b6000818152602083815260409182902082518084019093528054835260010154908201526131bb8383614ccd565b6131d85760405163564e265760e11b815260040160405180910390fd5b60208082018051835160009081529590925260408086206001908101939093559251905185528285205591835282208281550155565b6132166157ff565b61321e615786565b6000613228613025565b92506132338a612ad7565b91506000613241848a613f58565b905061324e83828c61420a565b6001600160801b031660408401526001600160401b0316825261328d60008812613279576000613282565b61328288615d4e565b8a84604001516145c7565b6001600160801b03166040840152905060006132af8b85858c8e8d888c614d3b565b90945090506132ca84826132c38c8c614501565b8a8a614c6a565b50509750975097945050505050565b6132e38383614ccd565b1561330157604051631e2bbc4f60e11b815260040160405180910390fd5b801580159061331757506133158382614ccd565b155b156133355760405163564e265760e11b815260040160405180910390fd5b6000818152602084905260409020805490839055811580156133665750600082815260208590526040902060010154155b156133805760008281526020859052604090206001018390555b600081815260209490945260408085206001908101859055938552909320928355910155565b6000806000806133b461582d565b60006133be612396565b60408051600480825260a08201909252919250600091829160609190816020015b6133e761582d565b8152602001906001900390816133df5790505090506000805b6003811161354d57600219818701016000818152600f6020908152604091829020825160a081018452815481526001820154928101929092526002810154928201929092526003909101546001600160801b038082166060840152600160801b9091041660808201528451819086908590811061347f5761347f615d0e565b602002602001018190525080604001516000141580156134aa575060608101516001600160801b0316155b80156134c05750876134bd600184615c6f565b11155b1561350b5786156134e75760808101516001600160801b03168085119085180284186134f6565b80608001516001600160801b03165b93508060400151876135089190615c6f565b96505b60608101516001909301926001600160801b031615801561352f5750604081015115155b156135465760208101516135439087615c6f565b95505b5050613400565b50600e54604051632f2e037160e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635e5c06e2906135c0907f000000000000000000000000000000000000000000000000000000000000000090600401615a8b565b6040805180830381865afa1580156135dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136009190615db2565b5090506000828661361084614dc9565b61361a9190615c5c565b6136249190615c5c565b905080156136cf57604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc9061369c907f00000000000000000000000000000000000000000000000000000000000000009030908690600401615cd1565b600060405180830381600087803b1580156136b657600080fd5b505af11580156136ca573d6000803e3d6000fd5b505050505b5050600080600c5499506136e286614de0565b929f50909d50909b505089156137175789878d8f6137009190615c5c565b61370a9190615c82565b6137149190615caf565b90505b801561375d5761372b81611802868a613aaf565b90506000613739878d615c6f565b905061374d81808410848218028418613e61565b92506137598284613aaf565b9150505b6000805b600381116138f95760008160038c03019050600088838151811061378757613787615d0e565b6020026020010151905080604001516000141580156137b1575060608101516001600160801b0316155b80156137c757508b6137c4600184615c6f565b11155b156138ef576040518060a001604052808c8360400151886137e89190615c82565b6137f29190615caf565b81526020018260200151815260200161380f836040015189613aaf565b81526001600160801b0388166020820152600060409091015280519091506138379088615c6f565b965080604001518e6138499190615c5c565b9d506138588160200151614f5a565b815161386390614f5a565b61386d9190615d6a565b6138779085615d8a565b935060008160200181815250508089848151811061389757613897615d0e565b6020908102919091018101919091526000838152600f8252604090819020835181559183015160018301558201516002820155606082015160808301516001600160801b03908116600160801b029116176003909101555b5050600101613761565b50600e849055600c8b905560008113156139b057604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc9061397d9030907f0000000000000000000000000000000000000000000000000000000000000000908690600401615cd1565b600060405180830381600087803b15801561399757600080fd5b505af11580156139ab573d6000803e3d6000fd5b505050505b6000811215613a64576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ac2ce9bc7f000000000000000000000000000000000000000000000000000000000000000030613a1385615d4e565b6040518463ffffffff1660e01b8152600401613a3193929190615cd1565b600060405180830381600087803b158015613a4b57600080fd5b505af1158015613a5f573d6000803e3d6000fd5b505050505b60008f8a613a729190615c5c565b905080600310613a9c57868160030381518110613a9157613a91615d0e565b60200260200101519a505b5050505050505050505091939590929450565b600081600019048311820215613acd5763c4c5d7f56000526004601cfd5b50670de0b6b3a764000091020490565b611d3e8133614f80565b613af182826121ab565b611189576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055613b273390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b613b7582826121ab565b15611189576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b80516005805460208401516040808601516001600160401b03908116600160801b0267ffffffffffffffff60801b19938216600160401b026001600160801b03199095169190961617929092171692909217905560608201516006556080820151600755517f9334cbdde649ebcbf798eaa08c381dc574197dc53947470a9be908dbcccc330190600090a150565b801580613cd85750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015613cb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cd69190615cf5565b155b613d435760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401611176565b6040516001600160a01b03831660248201526044810182905261110590849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614fd9565b613dae6150ae565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051613de89190615a8b565b60405180910390a1565b60015460ff1615613e385760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401611176565b565b613e5b846323b872dd60e01b858585604051602401613d6f93929190615cd1565b50505050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a764000002158202613e9e5763bcbede656000526004601cfd5b50670de0b6b3a7640000919091020490565b60008160070b138015613ece5750670de0b6b3a7640000600782900b125b80613ee45750670de0b6b8c1e505ce600782900b135b15613f025760405163947800ab60e01b815260040160405180910390fd5b6005805467ffffffffffffffff19166001600160401b038316179055604051600782900b81527fcb1621676ff5c8c9deff7ffc0af9b2c296851bc5b191381ac07d97e82ec03fe69060200160405180910390a150565b6000806000846000015160070b121561405d576001600160401b037f000000000000000000000000000000000000000000000000000000000000000081811691604082901c1690670de0b6b3a764000064ffffffffff608083901c811682019260a881901c821683019260d09190911c909116016000613fd88a8a6148bb565b905084811115613fe55750835b85811161401957614008614002613ffc8685615c5c565b88613e61565b82613aaf565b6140129085615c6f565b9650614052565b61404561403b6140298486615c5c565b61283989670de0b6b3a7640000615c5c565b611e148884615c5c565b61404f9083615c6f565b96505b505050505050614061565b5082515b61284384826150f7565b6140736157ff565b6000806140808988614501565b60608c0151909150871515806140a85750856001600160401b0316876001600160401b031614155b156140f3576140c4866001600160401b0316611e148b8b614501565b6140d7886001600160401b03168b613aaf565b8d606001516140e69190615c5c565b6140f09190615c6f565b90505b60008a156141385761413361412d61410f8f606001518e613e61565b8f604001518f61411f9190615dd6565b6001600160401b0316613aaf565b84613aaf565b61413b565b60005b90506000866001600160801b0316828f608001516141599190615c6f565b6141639190615c5c565b90506040518060a001604052808f6000015160070b8152602001426001600160401b031681526020018e6001600160401b031681526020018481526020018281525095505050896000146141f6576141f16141eb6141c58e606001518d613e61565b6141d790670de0b6b3a7640000615c5c565b8e60400151876040015161411f9190615dd6565b8b613aaf565b6141f9565b60005b925050509850989650505050505050565b600061423661423085602001516001600160401b031686600001518661411f9190615dd6565b83613aaf565b84604001516128439190615df6565b61424d615135565b42600255565b6000806000614260613025565b604080516060810182526009546001600160801b03811682526001600160401b03600160801b820481166020840152600160c01b909104169181019190915290915060006142ac61118d565b90506142b66157a6565b838152600a546020820181905283516001600160801b031660a0830152670de0b6b3a764000060e08301526000906142ef908690613f58565b600080516020615f4d833981519152546000818152601560209081526040808320838052909152902054919250905b89846060015110156144735781158061433657508a82115b6144735760008281526013602052604090205460ff161580614356575080155b1561438a5750600090815260146020908152604080832060010154808452601583528184208480529092529091205461431e565b60008281526015602090815260408083208484529091529020548181036143b15750614473565b6001600160a01b038216600090815260126020908152604080832081518083019092528054825260010154918101829052849290916143f2908490896149f1565b90506143fe8987613aaf565b60c08901526060880151614412908f615c5c565b6101008901526020820151815160408301516144539261443c9290916001600160801b031661456b565b835160208d01518c906001600160401b0316614853565b156144675761446488838386614a30565b97505b8394505050505061431e565b614490846000015185608001518660200151888a60400151614c6a565b506020840151600a5560608401518a146144bd57604051633e6c5e0f60e01b815260040160405180910390fd5b8360600151846040015198509850505050505050509250929050565b6000818313156144ea575081610af3565b50919050565b6000818312156144ea575081610af3565b81810160008213801561451357508281105b80614528575060008212801561452857508281115b15610af3576040516354012a2960e11b815260040160405180910390fd5b600061123f61455361118d565b600954600160801b90046001600160401b0316613e61565b60008161458185856001600160401b0316613aaf565b6128439190615c5c565b60006145a961459a8386615c6f565b846001600160401b0316613e61565b9050836145b782858561456b565b1015612892576001019392505050565b60008184158015906145d857508315155b1561460a57836145f16001600160801b03851687615c82565b6145fb9190615caf565b91506146078282615e16565b90505b935093915050565b6000670de0b6b3a76400006146278484615170565b8161463457614634615c99565b059392505050565b60008061464a85858561456b565b9050801580159061472e5750866001600160401b031661472c7f0000000000000000000000000000000000000000000000000000000000000000887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016146d19190615a8b565b602060405180830381865afa1580156146ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147129190615cf5565b61471c9190615c82565b6147269190615caf565b83613e61565b105b1561473d576001915050614743565b60009150505b95945050505050565b6040805180820190915260008082526020820152855161476c9085614501565b8652602086015161477d9084614501565b60208701819052158015906147b657506009546020870151865160408801516001600160801b03938416936147b49392911661456b565b105b156147d457604051634b2c23a160e11b815260040160405180910390fd5b6001600160a01b038716600081815260126020908152604090912088518155908801516001909101557f71671d6112ff9270f1553ebc8fbf767a3221090f1002c7047475b6fa8f5801cd858561482a8682614501565b6040805193845260208401929092529082015260600160405180910390a2509395945050505050565b600084826148618587615c82565b61486b9190615caf565b101595945050505050565b80820360008213801561488857508281115b8061489d575060008212801561489d57508281105b15610af35760405163e942b9ed60e01b815260040160405180910390fd5b6000806148d1838560400151866080015161456b565b905080156149865761498181600b547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c3536e7306040518263ffffffff1660e01b815260040161492c9190615a8b565b602060405180830381865afa158015614949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061496d9190615cf5565b6149779085615c6f565b6128399190615c5c565b612843565b6000949350505050565b6000600160401b82106149b6576040516302217c1560e11b815260040160405180910390fd5b5090565b6149c2615786565b81516001600160401b03166000036149b657600060208301819052670de0b6b3a7640000835260408301525090565b6149f9615786565b614a0284612ad7565b9050614a0f81838561420a565b6001600160801b031660408201526001600160401b03909116815292915050565b614a386157a6565b6000806000806000614a60896020015189600001518a604001516001600160801b031661456b565b90506000614a778b61010001518c60e00151613aaf565b9050614add8183118015614a97575060a08c0151614a958385615c5c565b105b614aae57614aa9838d60e00151613e61565b614acb565b614acb8c60a0015184614ac19190615c5c565b8d60e00151613e61565b6118028c600001518e60c001516151b9565b6101008c0151909150818111818318021895506000614b00878d60e00151613aaf565b9050614b1181848c604001516145c7565b6001600160801b0390811660408d01528b51919550614b33918391871661458b565b9450614b43878d60c00151613e61565b8b51909650861115614b54578a5195505b8a5186148015614b675750848b60200151115b15614b9357614b768184615c5c565b8c61012001818151614b889190615c6f565b90525060208b015194505b5050506000896020015190506000614bcb888c600001518b858e60200151614bba8a614f5a565b614bc390615d4e565b896000614d3b565b908c529050614c00888b8b614bdf89614f5a565b614be890615d4e565b614bf189614f5a565b614bfa90615d4e565b8761474c565b50838b602001818151614c139190615c5c565b90525060408b018051869190614c2a908390615c6f565b90525060608b018051879190614c41908390615c6f565b90525060808b018051829190614c58908390615c6f565b905250999a9950505050505050505050565b6000614c8182848689604001518a608001516151ef565b614c8a86613bd0565b614c9385615221565b9695505050505050565b6040516001600160a01b03831660248201526044810182905261110590849063a9059cbb60e01b90606401613d6f565b600081600003614cf05760405163ee7efd5760e01b815260040160405180910390fd5b600082815260208490526040902054151580614d1c575060008281526020849052604090206001015415155b8061289257505060008080526020929092526040909120600101541490565b614d436157ff565b60208781015160008b815260169092526040822054614d87908c90614d688a8a614501565b6001600160401b03881615614d7d5787615274565b8c60200151615274565b6001600160401b031660208a0152614d9f8b8a6152ba565b614db78a8a600001518a8a8a868f602001518c61406b565b909c909b509950505050505050505050565b6000808212614dd85781610af3565b600092915050565b6000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635e5c06e2306040518263ffffffff1660e01b8152600401614e359190615a8b565b6040805180830381865afa158015614e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614e759190615db2565b91509150614e8282614dc9565b9350614e8e8282615354565b92506000614e9a613025565b600a549091506000614ebe83614eb08185613f58565b84600080600080600061406b565b90935090506000614eeb848385614ed361118d565b600954600160c01b90046001600160401b0316614c6a565b9050614f00838560400151866080015161456b565b614f0a8c8a615c6f565b614f149190615c6f565b995080614f208761537c565b614f2a9190615c6f565b9850888a1015614f4d5760405163702fbbed60e01b815260040160405180910390fd5b5050505050509193509193565b6000600160ff1b82106149b657604051632db27c5360e01b815260040160405180910390fd5b614f8a82826121ab565b61118957614f9781615393565b614fa28360206153a5565b604051602001614fb3929190615e5a565b60408051601f198184030181529082905262461bcd60e51b825261117691600401615ec9565b600061502e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166155409092919063ffffffff16565b905080516000148061504f57508080602001905181019061504f9190615efc565b6111055760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611176565b60015460ff16613e385760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401611176565b600061289283604001516001600160401b0316611e14846001600160401b031686602001516001600160401b03164203670de0b6b3a764000061554f565b61513d613df2565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833613ddb565b818102600083128061519b5750811580159061519b57508282828161519757615197615c99565b0514155b15610af357604051631eed389360e01b815260040160405180910390fd5b6000816000190483118202156151d75763c4c5d7f56000526004601cfd5b50670de0b6b3a7640000910281810615159190040190565b6151fc858585858561463c565b1561521a57604051632ce9f52360e01b815260040160405180910390fd5b5050505050565b600061522b613df2565b615255827f0000000000000000000000000000000000000000000000000000000000000000613aaf565b600b60008282546152669190615c6f565b92505081905590505b919050565b808315801590615285575082601754115b156128435760008481526015602052604090206152a2908661318d565b50505060009182525060166020526040812081905590565b6001600160a01b0382166000908152600860209081526040918290208351815492850151848601516001600160801b03908116600160801b026001600160401b03928316600160401b026001600160801b031990961692909316919091179390931792909216919091179055517f4fd60289e0d86501846be34d5f370dc28945d66ca81804a5f84e0e7c017c73a290610c2d908490615a8b565b60008061536083615d4e565b9050808412614986576153738482615d6a565b61498190615d4e565b6000808213614dd85761538e82615d4e565b610af3565b6060610af36001600160a01b03831660145b606060006153b4836002615c82565b6153bf906002615c6f565b6001600160401b038111156153d6576153d66159a0565b6040519080825280601f01601f191660200182016040528015615400576020820181803683370190505b509050600360fc1b8160008151811061541b5761541b615d0e565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061544a5761544a615d0e565b60200101906001600160f81b031916908160001a905350600061546e846002615c82565b615479906001615c6f565b90505b60018111156154f1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106154ad576154ad615d0e565b1a60f81b8282815181106154c3576154c3615d0e565b60200101906001600160f81b031916908160001a90535060049490941c936154ea81615f19565b905061547c565b5083156128925760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401611176565b6060612843848460008561560d565b6000828015615601578480156155f65760018516801561557157869350615575565b8493505b50600284046002860495505b85156155f0578687028760801c1561559857600080fd5b818101818110156155a857600080fd5b86900497505060018616156155e55786840284888204141588151516156155ce57600080fd5b818101818110156155de57600080fd5b8690049450505b600286049550615581565b506155fb565b600092505b50615605565b8291505b509392505050565b60608247101561566e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401611176565b600080866001600160a01b0316858760405161568a9190615f30565b60006040518083038185875af1925050503d80600081146156c7576040519150601f19603f3d011682016040523d82523d6000602084013e6156cc565b606091505b50915091506156dd878383876156e8565b979650505050505050565b60608315615757578251600003615750576001600160a01b0385163b6157505760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611176565b5081612843565b612843838381511561576c5781518083602001fd5b8060405162461bcd60e51b81526004016111769190615ec9565b604080516060810182526000808252602082018190529181019190915290565b6040518061014001604052806157ba6157ff565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b6040518060a0016040528060008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b031681525090565b60006020828403121561588057600080fd5b81356001600160e01b03198116811461289257600080fd5b80356001600160a01b038116811461526f57600080fd5b600080604083850312156158c257600080fd5b823591506158d260208401615898565b90509250929050565b6000602082840312156158ed57600080fd5b5035919050565b8015158114611d3e57600080fd5b6000806040838503121561591557600080fd5b61591e83615898565b9150602083013561592e816158f4565b809150509250929050565b6000806040838503121561594c57600080fd5b50508035926020909101359150565b60006020828403121561596d57600080fd5b61289282615898565b6000806040838503121561598957600080fd5b61599283615898565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126159c757600080fd5b813560206001600160401b03808311156159e3576159e36159a0565b8260051b604051601f19603f83011681018181108482111715615a0857615a086159a0565b604052938452858101830193838101925087851115615a2657600080fd5b83870191505b848210156156dd57813583529183019190830190615a2c565b60008060408385031215615a5857600080fd5b8235915060208301356001600160401b03811115615a7557600080fd5b615a81858286016159b6565b9150509250929050565b6001600160a01b0391909116815260200190565b600080600060608486031215615ab457600080fd5b615abd84615898565b9250615acb60208501615898565b91506040840135615adb816158f4565b809150509250925092565b60008060008060808587031215615afc57600080fd5b615b0585615898565b9350615b1360208601615898565b9250615b2160408601615898565b9396929550929360600135925050565b600080600080600060a08688031215615b4957600080fd5b615b5286615898565b9450615b6060208701615898565b9350615b6e60408701615898565b94979396509394606081013594506080013592915050565b60008060408385031215615b9957600080fd5b615ba283615898565b91506158d260208401615898565b600080600060408486031215615bc557600080fd5b83356001600160401b0380821115615bdc57600080fd5b818601915086601f830112615bf057600080fd5b813581811115615bff57600080fd5b8760208260051b8501011115615c1457600080fd5b602092830195509350908501359080821115615c2f57600080fd5b50615c3c868287016159b6565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b81810381811115610af357610af3615c46565b80820180821115610af357610af3615c46565b8082028115828204841417610af357610af3615c46565b634e487b7160e01b600052601260045260246000fd5b600082615ccc57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215615d0757600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b6000600160ff1b8201615d6357615d63615c46565b5060000390565b8181036000831280158383131683831282161715610db957610db9615c46565b8082018281126000831280158216821582161715615daa57615daa615c46565b505092915050565b60008060408385031215615dc557600080fd5b505080516020909101519092909150565b6001600160401b03828116828216039080821115610db957610db9615c46565b6001600160801b03818116838216019080821115610db957610db9615c46565b6001600160801b03828116828216039080821115610db957610db9615c46565b60005b83811015615e51578181015183820152602001615e39565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351615e8c816017850160208801615e36565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351615ebd816028840160208801615e36565b01602801949350505050565b6020815260008251806020840152615ee8816040850160208701615e36565b601f01601f19169190910160400192915050565b600060208284031215615f0e57600080fd5b8151612892816158f4565b600081615f2857615f28615c46565b506000190190565b60008251615f42818460208701615e36565b919091019291505056fe4f26c3876aa9f4b92579780beea1161a61f87ebf1ec6ee865b299e447ecba99da2646970667358221220eba494db9abb0c19fcf1cd5788a4855796b9904b88b1230d1f0cb66f768710be64736f6c63430008130033",
    "sourceMap": "383:2972:142:-:0;;;443:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;996:7:47;:15;;-1:-1:-1;;996:15:47;;;12011:47:88;;;-1:-1:-1;;;12011:47:88;;;;487:7:142;;;;-1:-1:-1;;;;;12011:45:88;;;;;:47;;;;;;;;;;;;;;1006:5:47;12011:45:88;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11786:272:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11786:272:88;;-1:-1:-1;11786:272:88;-1:-1:-1;383:2972:142;;-1:-1:-1;;383:2972:142;14:131:181;-1:-1:-1;;;;;89:31:181;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:251::-;220:6;273:2;261:9;252:7;248:23;244:32;241:52;;;289:1;286;279:12;241:52;321:9;315:16;340:31;365:5;340:31;:::i;:::-;390:5;150:251;-1:-1:-1;;;150:251:181:o;406:1101::-;612:6;620;628;636;644;652;660;668;676;729:3;717:9;708:7;704:23;700:33;697:53;;;746:1;743;736:12;697:53;778:9;772:16;797:31;822:5;797:31;:::i;:::-;897:2;882:18;;876:25;847:5;;-1:-1:-1;910:33:181;876:25;910:33;:::i;:::-;1014:2;999:18;;993:25;962:7;;-1:-1:-1;1027:33:181;993:25;1027:33;:::i;:::-;1131:2;1116:18;;1110:25;1079:7;;-1:-1:-1;1144:33:181;1110:25;1144:33;:::i;:::-;1196:7;1186:17;;;1243:3;1232:9;1228:19;1222:26;1212:36;;1288:3;1277:9;1273:19;1267:26;1257:36;;1333:3;1322:9;1318:19;1312:26;1302:36;;1378:3;1367:9;1363:19;1357:26;1347:36;;1428:3;1417:9;1413:19;1407:26;1442:33;1467:7;1442:33;:::i;:::-;1494:7;1484:17;;;406:1101;;;;;;;;;;;:::o;:::-;383:2972:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061035b5760003560e01c8063842c311e116101ca578063c75a4b5e11610105578063dbe6b31c116100a8578063dbe6b31c14610963578063dc2ec249146109af578063df10f687146109b8578063e2dfb317146109cb578063eb953449146109f2578063edaafe2014610a4e578063ef0563fb14610a75578063f3fef3a314610a88578063fc0c546a14610a9b57600080fd5b8063c75a4b5e146108b1578063cb6238c8146108c4578063cde68041146108ef578063ce7c2ac214610902578063d294f09314610922578063d4b7eac31461092a578063d547741f1461093d578063d9c70f571461095057600080fd5b8063a3e2b4951161016d578063a3e2b4951461078b578063a70b9f0c146107ab578063b0e21e8a146107b5578063b6dc16f6146107dc578063b97dd9e2146107fc578063ba95534c14610804578063bf404a411461080d578063c6b61e4c1461083457600080fd5b8063842c311e146107035780638456cb591461070c57806388439aea146107145780638f1e5f631461072757806391d148541461075557806393f9eb35146107685780639844afd21461077b578063a217fddf1461078357600080fd5b80633f2601ef1161029a5780635fe83c7b1161023d5780635fe83c7b146105b4578063683f81a1146105bd5780636e5e741e146105e0578063723507be146106135780637cc34bb4146106265780637dc0d1d0146106845780638051ba75146106b85780638309dbdd146106f057600080fd5b80633f2601ef146104fc5780633f4ba83a1461050f57806344a3c66414610517578063472132f01461052a57806347e7ef241461053257806351f813ec1461054557806355f575101461056d5780635c975abb146105a957600080fd5b80632af8992b116103025780632af8992b1461046f5780632b2368a2146104825780632e55d0f2146104955780632f2ff15d1461049e578063342c02b1146104b157806336568abe146104d8578063398482d8146104eb5780633a98ef39146104f357600080fd5b806301ffc9a71461036057806314815a6d1461038857806319f1039c146103c15780631c580ad5146103c95780632202ce8c1461041c578063248a9ca314610426578063280c37ef146104495780632906f94e1461045c575b600080fd5b61037361036e36600461586e565b610ac2565b60405190151581526020015b60405180910390f35b6103b36103963660046158af565b601060209081526000928352604080842090915290825290205481565b60405190815260200161037f565b6103b3600381565b6018546103f2906001600160401b0380821691600160401b8104821691600160801b9091041683565b604080516001600160401b039485168152928416602084015292169181019190915260600161037f565b610424610af9565b005b6103b36104343660046158db565b60009081526020819052604090206001015490565b610424610457366004615902565b610bc2565b61042461046a3660046158db565b610c39565b6103b361047d366004615939565b610d72565b6103b36104903660046158db565b610dc0565b6103b360025481565b6104246104ac3660046158af565b6110e0565b6103b37f000000000000000000000000000000000000000000000000000000000000000081565b6104246104e63660046158af565b61110a565b6103b361118d565b6103b3600c5481565b61042461050a36600461595b565b611244565b610424611357565b610424610525366004615939565b611391565b6103b3600181565b6103b3610540366004615976565b6114ca565b6105586105533660046158db565b61156c565b6040805192835290151560208301520161037f565b61059461057b36600461595b565b6012602052600090815260409020805460019091015482565b6040805192835260208301919091520161037f565b60015460ff16610373565b6103b3600e5481565b6103736105cb3660046158db565b60136020526000908152604090205460ff1681565b6105f36105ee366004615a45565b6115c8565b60408051948552602085019390935291830152606082015260800161037f565b610424610621366004615939565b611949565b600954610655906001600160801b038116906001600160401b03600160801b8204811691600160c01b90041683565b604080516001600160801b0390941684526001600160401b03928316602085015291169082015260600161037f565b6106ab7f000000000000000000000000000000000000000000000000000000000000000081565b60405161037f9190615a8b565b6106cb6106c636600461595b565b611bad565b604080516001600160401b03909416845260208401929092529082015260600161037f565b6104246106fe366004615a9f565b611c3d565b6103b3600a5481565b610424611d0c565b610594610722366004615939565b611d41565b61073a610735366004615ae6565b611d64565b6040805193845260208401929092529082015260600161037f565b6103736107633660046158af565b6121ab565b6103b36107763660046158db565b6121d4565b610424612344565b6103b3600081565b6103b36107993660046158db565b60166020526000908152604090205481565b6103b36203f48081565b6103b37f000000000000000000000000000000000000000000000000000000000000000081565b6103b36107ea36600461595b565b60116020526000908152604090205481565b6103b3612396565b6103b3600b5481565b6106ab7f000000000000000000000000000000000000000000000000000000000000000081565b61087d6108423660046158db565b600f602052600090815260409020805460018201546002830154600390930154919290916001600160801b0380821691600160801b90041685565b604080519586526020860194909452928401919091526001600160801b03908116606084015216608082015260a00161037f565b6104246108bf366004615b31565b6123b4565b6108d76108d23660046158db565b6127c9565b6040516001600160401b03909116815260200161037f565b6103736108fd366004615b86565b61284b565b6103b361091036600461595b565b600d6020526000908152604090205481565b6103b3612899565b610594610938366004615939565b612947565b61042461094b3660046158af565b612a4f565b61042461095e366004615902565b612a74565b61097661097136600461595b565b612ad7565b6040805182516001600160401b03908116825260208085015190911690820152918101516001600160801b03169082015260600161037f565b6103b360175481565b6104246109c6366004615bb0565b612b42565b6106ab7f000000000000000000000000000000000000000000000000000000000000000081565b6109fa613025565b60405161037f9190600060a082019050825160070b825260208301516001600160401b0380821660208501528060408601511660408501525050606083015160608301526080830151608083015292915050565b6106ab7f000000000000000000000000000000000000000000000000000000000000000081565b610424610a833660046158db565b61307c565b6103b3610a96366004615976565b6130fe565b6106ab7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216637965db0b60e01b1480610af357506301ffc9a760e01b6001600160e01b03198316145b92915050565b3360008181526016602052604081205490819003610b2a57604051630573b42560e51b815260040160405180910390fd5b6000818152601560205260409020610b42908361318d565b6000828152601660209081526040808320839055338084526012909252822060010154600a54610b8e93610b7461118d565b600954600160c01b90046001600160401b0316600061320e565b505060405133915082907f6f36e2a381bc87c87bcc2043deb0a5cdf9a6d87eb14cbe13cf0f1fe39f324dd990600090a35050565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815194855291840192909252908201527f6501e8bfa2d3e686d62fe2c0c3275df594494583b0a63a70b7452d3eeb712bd6906060015b60405180910390a15050565b60008181526013602052604090205460ff16610c685760405163da4b118b60e01b815260040160405180910390fd5b33600090815260126020526040902060010154601754811015610c9e576040516305c0093760e21b815260040160405180910390fd5b3360008181526016602052604090205415610ccc5760405163345c017d60e01b815260040160405180910390fd5b600081815260166020908152604080832086905585835260158083528184208480528084529184206001015493879052909152610d0a9183906132d9565b610d3d3383600a546000610d1c61118d565b600954600160c01b90046001600160401b0316610d388a6127c9565b61320e565b505060405133915084907f85d7690ee90733d849878d2bbbd5bf047e442ce2d045c0308a58cfd2ce53031590600090a3505050565b6000828152601560209081526040808320838052909152812054905b828114610db95760008481526015602090815260408083208584529091529020549150600101610d8e565b5092915050565b600080610dcb612396565b905060018301811015610df15760405163d84d29d760e01b815260040160405180910390fd5b6000610dfc846133a6565b94505050505080604001516000148015610e21575060608101516001600160801b0316155b8015610e2f57506020810151155b15610e9057506000838152600f6020908152604091829020825160a081018452815481526001820154928101929092526002810154928201929092526003909101546001600160801b038082166060840152600160801b9091041660808201525b604081015115801590610eae575060608101516001600160801b0316155b15610ecc57604051632dcf9d3960e01b815260040160405180910390fd5b60008481526010602090815260408083203384529091528120546060830151909190610f029083906001600160801b0316613aaf565b60008781526010602090815260408083203384529091528120559050610f288183615c5c565b336000908152600d602052604081208054909190610f47908490615c6f565b9091555050604083015183519192508291610f63908390615c82565b610f6d9190615caf565b604051632b0b3a6f60e21b81529095506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc90610fe0907f00000000000000000000000000000000000000000000000000000000000000009033908a90600401615cd1565b600060405180830381600087803b158015610ffa57600080fd5b505af115801561100e573d6000803e3d6000fd5b5050505081836040018181516110249190615c5c565b905250825185908490611038908390615c5c565b9052506000868152600f60209081526040808320865181559186015160018301558501516002820155606085015160808601516001600160801b03908116600160801b02911617600390910155600e8054879290611097908490615c5c565b9091555050604080518381526020810187905233917f5a4beaa18eb50f2c5150783acec1964edb2e32cbf0f99957707375f76ffbd982910160405180910390a250505050919050565b6000828152602081905260409020600101546110fb81613add565b6111058383613ae7565b505050565b6001600160a01b038116331461117f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6111898282613b6b565b5050565b604051632cbf04c160e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632cbf04c1906111fc907f000000000000000000000000000000000000000000000000000000000000000090600401615a8b565b6020604051808303816000875af115801561121b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123f9190615cf5565b905090565b600061124e613025565b905080602001516001600160401b031660001461126a57600080fd5b611275600033613ae7565b6001600160401b0342166020820152670de0b6b3a7640000604082015261129b81613bd0565b6112d16001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683600019613c5e565b60405163d9c70f5760e01b81526001600160a01b038381166004830152600160248301527f0000000000000000000000000000000000000000000000000000000000000000169063d9c70f5790604401600060405180830381600087803b15801561133b57600080fd5b505af115801561134f573d6000803e3d6000fd5b505050505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61138181613add565b611389613da6565b506000600255565b611399613df2565b7ff96f3d6876b63665360200e15ed8964960110cbbd99e917fb50ad1e576f538ac6113c381613add565b670de0b6b3a76400008310806113e157508268056bc75e2d63100000105b156113ff576040516336bbc25960e01b815260040160405180910390fd5b600080526014602052600080516020615f4d833981519152548015801561142557508215155b806114425750821580159061144257508284118061144257508281115b8061145a575060008381526014602052604090205484105b15611478576040516346b0cc7160e11b815260040160405180910390fd5b611484601485856132d9565b600084815260136020526040808220805460ff191660011790555185917f3907a47dfbf148deb99efcd854a68497cbdc2a2db8488083ecb842ad6bde91a891a250505050565b60006114d4613df2565b6115096001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085613e3a565b611533827f0000000000000000000000000000000000000000000000000000000000000000613e61565b6001600160a01b038416600090815260116020526040812080549293508392909190611560908490615c6f565b90915550909392505050565b60008080526014602052600080516020615f4d8339815191525490805b8381146115ac576000838152601460205260409020600101549250600101611589565b5050600081815260136020526040902054909260ff9091169150565b6000806000806115d6612396565b925060008060008060006115e9886133a6565b945094509450945094506000805b8b518110156116ee5760008c828151811061161457611614615d0e565b602002602001015190508160010191508060001480611636575060038b038110155b8061165a57506000818152600f60205260409020600301546001600160801b031615155b8061167457506000818152600f6020526040902060020154155b1561167f57506115f7565b60008181526010602090815260408083203384529091529020546116a38185615c6f565b60008381526010602090815260408083203384528252808320839055858352600f9091528120600201805492965083929091906116e1908490615c5c565b909155506115f792505050565b50828c6116fb8789615c5c565b6117059190615c82565b61170f9190615caf565b99506000848b11611720578a611722565b845b604051632b0b3a6f60e21b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906117959030907f0000000000000000000000000000000000000000000000000000000000000000908690600401615cd1565b600060405180830381600087803b1580156117af57600080fd5b505af11580156117c3573d6000803e3d6000fd5b5050505080836020018181516117d99190615c6f565b905250506040820151156118125761180d82608001516001600160801b03166118028c8f613e61565b808218908211021890565b61181c565b61181c8a8d613e61565b6001600160801b031660808301526040820180518d919061183e908390615c6f565b9052506000898152600f6020908152604080832085518155828601516001820155818601516002820155606086015160808701516001600160801b03908116600160801b0291161760039091015560108252808320338452909152812080548e92906118ab908490615c6f565b9091555050336000908152600d60205260409020548c906118cd908390615c6f565b6118d79190615c5c565b336000818152600d60209081526040918290209390935580518f81529283018d905260018c01908301819052995060038b0198508a917fe5248481489259c5ccaad0795cac80cd527112765494ed5a8d98b93501b27f079060600160405180910390a350505050505092959194509250565b611951613df2565b7f7e2be3cffb06427cbcb9b1d12d4b78adcf14a2bf640e9bbdeb54bb711b65ec7161197b81613add565b82683232b13a233637b7b960b91b036119ae57600980546001600160801b0319166001600160801b038416179055611b6e565b826f6c69717569646174696f6e526174696f60801b036119f2576009805467ffffffffffffffff60801b1916600160801b6001600160401b03851602179055611b6e565b8275676c6f62616c4c69717569646174696f6e526174696f60501b03611a3757600980546001600160c01b0316600160c01b6001600160401b03851602179055611b6e565b826e3634b6b4ba27b93232b9233637b7b960891b03611a5a576017829055611b6e565b8267626173655261746560c01b03611a8b57611a866000198314611a7e5782613eb0565b600019613eb0565b611b6e565b82716c69717569646174696f6e50656e616c747960701b03611ac8576018805467ffffffffffffffff19166001600160401b038416179055611b6e565b82721b1a5c5d5a59185d1a5bdb911a5cd8dbdd5b9d606a1b03611b0f576018805467ffffffffffffffff60401b1916600160401b6001600160401b03851602179055611b6e565b82713a30b933b2ba2432b0b63a342330b1ba37b960711b03611b55576018805467ffffffffffffffff60801b1916600160801b6001600160401b03851602179055611b6e565b604051638dd691e760e01b815260040160405180910390fd5b827f4327e67d6578eb2c9293fb22f9334006073ac1397c7100f5dd5adca09ad71c0883604051611ba091815260200190565b60405180910390a2505050565b600080600080611bbb613025565b600a54909150611bcb8282613f58565b9450611be0828683600080600080600061406b565b506080810151935091506001600160a01b03861615611c3457611c28611c0587612ad7565b6001600160a01b038816600090815260126020526040902060010154879061420a565b6001600160801b031693505b50509193909250565b6001600160a01b0383163314801590611c7a57506001600160a01b038316600090815260046020908152604080832033845290915290205460ff16155b15611c9857604051638743d2ff60e01b815260040160405180910390fd5b6001600160a01b0383811660009081526003602090815260408083209386168352929052819020805460ff1916831515179055517fdcf2bd5a4c47afeb1792d170f6f5e6e528e30c6b546fffe62b697a11f8953b2b90611cff903390869086908690615d24565b60405180910390a1505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611d3681613add565b611d3e614245565b50565b6000803315611d4f57600080fd5b611d598484614253565b915091509250929050565b6001600160a01b03841660009081526012602090815260408083208151808301909252805482526001015491810191909152829190819081841215611dc157611dba848260000151611db590615d4e565b6144d9565b9350611de8565b6001600160a01b038716600090815260116020526040902054611de59085906144f0565b93505b6000611e19611dfb836000015187614501565b611e14611e06614546565b670c7d713b49da0000613aaf565b613aaf565b9050600080611e278b611bad565b50915091506000611e3d8560200151848461456b565b90506000611ff7611fe27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c3536e7306040518263ffffffff1660e01b8152600401611e939190615a8b565b602060405180830381865afa158015611eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed49190615cf5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638543d5e06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f569190615cf5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632efcc8666040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd89190615cf5565b6118029190615c5c565b611fec8488615d6a565b808218908213021890565b905060008082126120085781612011565b61201182615d4e565b905061201e81868661458b565b985060008212156120355761203289615d4e565b98505b5060008061205f60008b1261204b576000612054565b6120548b615d4e565b8960200151876145c7565b509050806001600160801b031661207f876001600160401b03168c614612565b6120899190615d8a565b91505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c3536e78e6040518263ffffffff1660e01b81526004016120da9190615a8b565b602060405180830381865afa1580156120f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211b9190615cf5565b90506000821380612133575061213082615d4e565b81135b612150578061214183615d4e565b61214b9190615d6a565b612153565b60005b985060008a89602001516121679190615d8a565b905060008113801561218657506009546001600160801b0316600f0b81125b156121985760009a5060009b50600099505b5050505050505050509450945094915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000670de0b6b3a76400008210156121ff57604051636396b11f60e01b815260040160405180910390fd5b600080600061221461220f612396565b6133a6565b5093505092509250806000148061223257506122308284615c5c565b155b612259576122408284615c5c565b61224a8683615c82565b6122549190615caf565b61225b565b845b336000908152600d60205260409020805482019055935061227c8482615c6f565b600c55604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906122cf90339030908a90600401615cd1565b600060405180830381600087803b1580156122e957600080fd5b505af11580156122fd573d6000803e3d6000fd5b505060408051888152602081018890523393507f12352042ba8d46dbbba12767322c1c3bb5ed774314b10c283f945bf69e83f15792500160405180910390a2505050919050565b61234c613df2565b6000806123596000611bad565b600954929450925061238991600160c01b90046001600160401b0316905061237f61118d565b600a54858561463c565b1561118957611189614245565b60006203f4808042064203816123ae576123ae615c99565b04905090565b60008113806123c35750600082125b80156123d657506123d4853361284b565b155b806123f357506000821380156123f357506123f1843361284b565b155b806124105750600081128015612410575061240e833361284b565b155b1561242e57604051634c26249960e01b815260040160405180910390fd5b6001600160a01b038516600090815260126020908152604080832081518083018352815481526001909101548184015281516060810183526009546001600160801b03811682526001600160401b03600160801b8204811695830195909552600160c01b900490931691830191909152600a5490926124ab61118d565b905060008060006124ca8c8860200151878b888b60400151600061320e565b9250925092506124de8c88848c8c8a61474c565b965060008813806124ef5750600089125b801561253257506125306125198860200151846000015185604001516001600160801b031661456b565b8851602089015187906001600160401b0316614853565b155b1561255057604051633f66923d60e01b815260040160405180910390fd5b6001600160a01b038b16600090815260116020526040902054612573908a614876565b6001600160a01b038c166000908152601160205260409020556125968589614501565b945084600a819055506000816001600160801b03166125c285604001516001600160401b03168b614612565b6125cc9190615d8a565b9050600081131561265e57604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906126279030908f908690600401615cd1565b600060405180830381600087803b15801561264157600080fd5b505af1158015612655573d6000803e3d6000fd5b505050506126f2565b60008112156126f2576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ac2ce9bc8c306126a185615d4e565b6040518463ffffffff1660e01b81526004016126bf93929190615cd1565b600060405180830381600087803b1580156126d957600080fd5b505af11580156126ed573d6000803e3d6000fd5b505050505b600089131561275a57600061270785886148bb565b90506001600160401b037f000000000000000000000000000000000000000000000000000000000000000060401c1680821115612757576040516329b823dd60e21b815260040160405180910390fd5b50505b8a6001600160a01b03168c6001600160a01b03168e6001600160a01b03167f7ce3e27b99e7e2e42f0ddcb6f6679a25081a5fd4ca991bcd05c45e54daa997088d8d6040516127b2929190918252602082015260400190565b60405180910390a450505050505050505050505050565b6000670de0b6b3a76400008210156127e357506000919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160801b0381169060801c61284361283e670de0b6b3a764000061282f85611e14838a615c5c565b6128399085615c6f565b613e61565b614990565b949350505050565b6000816001600160a01b0316836001600160a01b0316148061289257506001600160a01b0380841660009081526003602090815260408083209386168352929052205460ff165b9392505050565b600b80546000909155604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906129129030907f0000000000000000000000000000000000000000000000000000000000000000908690600401615cd1565b600060405180830381600087803b15801561292c57600080fd5b505af1158015612940573d6000803e3d6000fd5b5050505090565b6000806129548484614253565b909250905081156129e257604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc906129af90339030908790600401615cd1565b600060405180830381600087803b1580156129c957600080fd5b505af11580156129dd573d6000803e3d6000fd5b505050505b8015612a0d573360009081526011602052604081208054839290612a07908490615c6f565b90915550505b604080518381526020810183905233917f26981b9aefbb0f732b0264bd34c255e831001eb50b06bc85b32cc39e14389721910160405180910390a29250929050565b600082815260208190526040902060010154612a6a81613add565b6111058383613b6b565b3360008181526003602090815260408083206001600160a01b038716845290915290819020805460ff1916841515179055517fdcf2bd5a4c47afeb1792d170f6f5e6e528e30c6b546fffe62b697a11f8953b2b91610c2d91819086908690615d24565b612adf615786565b6001600160a01b038216600090815260086020908152604091829020825160608101845290546001600160401b038082168352600160401b82041692820192909252600160801b9091046001600160801b031691810191909152610af3906149ba565b612b4a613df2565b80518214612b6b576040516338f30c4b60e11b815260040160405180910390fd5b6000612b75613025565b60408051606080820183526009546001600160801b03811683526001600160401b03600160801b8083048216602080870191909152600160c01b909304821685870152855193840186526018548083168552600160401b810483169385019390935290910416928101929092529192506000612bef61118d565b9050612bf96157a6565b848152600a5460208201526009546001600160801b031660a0820152601854612c33908390600160401b90046001600160401b0316613aaf565b60c08201526018546001600160401b031660e08201526020810151600090612c5c908790613f58565b905060005b88811015612e7a5760008a8a83818110612c7d57612c7d615d0e565b9050602002016020810190612c92919061595b565b90506001600160a01b0381161580612cc35750888281518110612cb757612cb7615d0e565b60200260200101516000145b612e71576001600160a01b0381166000908152601260209081526040808320815180830190925280548252600101549181018290529190612d06908490876149f1565b90506000612d2683602001518784604001516001600160801b031661456b565b9050871580612d4d5750612d4d8184600001518a8d602001516001600160401b0316614853565b15612d6b5760405163f87e38e960e01b815260040160405180910390fd5b6000806000612d94612d8187600001518d613aaf565b8e602001516001600160401b0316613e61565b905080612dae8d604001516001600160401b031686613aaf565b612db89190615c5c565b9150506000612de18d602001516001600160401b03168d602001516001600160401b0316613aaf565b90506000612df7670de0b6b3a764000083613e61565b612e128e604001516001600160401b03168d60e00151613aaf565b612e1c9190615c5c565b9050612e288382613e61565b9350505050612e588d8781518110612e4257612e42615d0e565b6020026020010151611802838b60e00151613e61565b610100890152612e6a88858588614a30565b9750505050505b50600101612c61565b50612ec28260000151612ea384606001518560e00151670de0b6b3a7640000611e149190615c5c565b8460800151612eb29190615c6f565b8460200151868960400151614c6a565b506020820151600a556060820151604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ac2ce9bc91612f1f913391309190600401615cd1565b600060405180830381600087803b158015612f3957600080fd5b505af1158015612f4d573d6000803e3d6000fd5b505050604080840151336000908152601160205291822080549193509190612f76908490615c6f565b90915550506101208201511561301a57610120820151604051630bd0dedd60e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632f437b74906024016020604051808303816000875af1158015612ff4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130189190615cf5565b505b505050505050505050565b61302d6157ff565b506040805160a081018252600554600781810b83526001600160401b03600160401b830481166020850152600160801b9092049091169282019290925260065460608201529054608082015290565b613084613df2565b7ff96f3d6876b63665360200e15ed8964960110cbbd99e917fb50ad1e576f538ac6130ae81613add565b6000828152601360205260409020805460ff191690556130cf60148361318d565b60405182907f343776161924dfe02a29fdf57e6087e2d25ca11fe703785a80632e9ab88c88a190600090a25050565b6000613108613df2565b3360009081526011602052604081208054849290613127908490615c5c565b909155506131579050827f0000000000000000000000000000000000000000000000000000000000000000613aaf565b9050610af36001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483614c9d565b6000818152602083815260409182902082518084019093528054835260010154908201526131bb8383614ccd565b6131d85760405163564e265760e11b815260040160405180910390fd5b60208082018051835160009081529590925260408086206001908101939093559251905185528285205591835282208281550155565b6132166157ff565b61321e615786565b6000613228613025565b92506132338a612ad7565b91506000613241848a613f58565b905061324e83828c61420a565b6001600160801b031660408401526001600160401b0316825261328d60008812613279576000613282565b61328288615d4e565b8a84604001516145c7565b6001600160801b03166040840152905060006132af8b85858c8e8d888c614d3b565b90945090506132ca84826132c38c8c614501565b8a8a614c6a565b50509750975097945050505050565b6132e38383614ccd565b1561330157604051631e2bbc4f60e11b815260040160405180910390fd5b801580159061331757506133158382614ccd565b155b156133355760405163564e265760e11b815260040160405180910390fd5b6000818152602084905260409020805490839055811580156133665750600082815260208590526040902060010154155b156133805760008281526020859052604090206001018390555b600081815260209490945260408085206001908101859055938552909320928355910155565b6000806000806133b461582d565b60006133be612396565b60408051600480825260a08201909252919250600091829160609190816020015b6133e761582d565b8152602001906001900390816133df5790505090506000805b6003811161354d57600219818701016000818152600f6020908152604091829020825160a081018452815481526001820154928101929092526002810154928201929092526003909101546001600160801b038082166060840152600160801b9091041660808201528451819086908590811061347f5761347f615d0e565b602002602001018190525080604001516000141580156134aa575060608101516001600160801b0316155b80156134c05750876134bd600184615c6f565b11155b1561350b5786156134e75760808101516001600160801b03168085119085180284186134f6565b80608001516001600160801b03165b93508060400151876135089190615c6f565b96505b60608101516001909301926001600160801b031615801561352f5750604081015115155b156135465760208101516135439087615c6f565b95505b5050613400565b50600e54604051632f2e037160e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635e5c06e2906135c0907f000000000000000000000000000000000000000000000000000000000000000090600401615a8b565b6040805180830381865afa1580156135dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136009190615db2565b5090506000828661361084614dc9565b61361a9190615c5c565b6136249190615c5c565b905080156136cf57604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc9061369c907f00000000000000000000000000000000000000000000000000000000000000009030908690600401615cd1565b600060405180830381600087803b1580156136b657600080fd5b505af11580156136ca573d6000803e3d6000fd5b505050505b5050600080600c5499506136e286614de0565b929f50909d50909b505089156137175789878d8f6137009190615c5c565b61370a9190615c82565b6137149190615caf565b90505b801561375d5761372b81611802868a613aaf565b90506000613739878d615c6f565b905061374d81808410848218028418613e61565b92506137598284613aaf565b9150505b6000805b600381116138f95760008160038c03019050600088838151811061378757613787615d0e565b6020026020010151905080604001516000141580156137b1575060608101516001600160801b0316155b80156137c757508b6137c4600184615c6f565b11155b156138ef576040518060a001604052808c8360400151886137e89190615c82565b6137f29190615caf565b81526020018260200151815260200161380f836040015189613aaf565b81526001600160801b0388166020820152600060409091015280519091506138379088615c6f565b965080604001518e6138499190615c5c565b9d506138588160200151614f5a565b815161386390614f5a565b61386d9190615d6a565b6138779085615d8a565b935060008160200181815250508089848151811061389757613897615d0e565b6020908102919091018101919091526000838152600f8252604090819020835181559183015160018301558201516002820155606082015160808301516001600160801b03908116600160801b029116176003909101555b5050600101613761565b50600e849055600c8b905560008113156139b057604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc9061397d9030907f0000000000000000000000000000000000000000000000000000000000000000908690600401615cd1565b600060405180830381600087803b15801561399757600080fd5b505af11580156139ab573d6000803e3d6000fd5b505050505b6000811215613a64576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ac2ce9bc7f000000000000000000000000000000000000000000000000000000000000000030613a1385615d4e565b6040518463ffffffff1660e01b8152600401613a3193929190615cd1565b600060405180830381600087803b158015613a4b57600080fd5b505af1158015613a5f573d6000803e3d6000fd5b505050505b60008f8a613a729190615c5c565b905080600310613a9c57868160030381518110613a9157613a91615d0e565b60200260200101519a505b5050505050505050505091939590929450565b600081600019048311820215613acd5763c4c5d7f56000526004601cfd5b50670de0b6b3a764000091020490565b611d3e8133614f80565b613af182826121ab565b611189576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055613b273390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b613b7582826121ab565b15611189576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b80516005805460208401516040808601516001600160401b03908116600160801b0267ffffffffffffffff60801b19938216600160401b026001600160801b03199095169190961617929092171692909217905560608201516006556080820151600755517f9334cbdde649ebcbf798eaa08c381dc574197dc53947470a9be908dbcccc330190600090a150565b801580613cd85750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015613cb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cd69190615cf5565b155b613d435760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401611176565b6040516001600160a01b03831660248201526044810182905261110590849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614fd9565b613dae6150ae565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051613de89190615a8b565b60405180910390a1565b60015460ff1615613e385760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401611176565b565b613e5b846323b872dd60e01b858585604051602401613d6f93929190615cd1565b50505050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a764000002158202613e9e5763bcbede656000526004601cfd5b50670de0b6b3a7640000919091020490565b60008160070b138015613ece5750670de0b6b3a7640000600782900b125b80613ee45750670de0b6b8c1e505ce600782900b135b15613f025760405163947800ab60e01b815260040160405180910390fd5b6005805467ffffffffffffffff19166001600160401b038316179055604051600782900b81527fcb1621676ff5c8c9deff7ffc0af9b2c296851bc5b191381ac07d97e82ec03fe69060200160405180910390a150565b6000806000846000015160070b121561405d576001600160401b037f000000000000000000000000000000000000000000000000000000000000000081811691604082901c1690670de0b6b3a764000064ffffffffff608083901c811682019260a881901c821683019260d09190911c909116016000613fd88a8a6148bb565b905084811115613fe55750835b85811161401957614008614002613ffc8685615c5c565b88613e61565b82613aaf565b6140129085615c6f565b9650614052565b61404561403b6140298486615c5c565b61283989670de0b6b3a7640000615c5c565b611e148884615c5c565b61404f9083615c6f565b96505b505050505050614061565b5082515b61284384826150f7565b6140736157ff565b6000806140808988614501565b60608c0151909150871515806140a85750856001600160401b0316876001600160401b031614155b156140f3576140c4866001600160401b0316611e148b8b614501565b6140d7886001600160401b03168b613aaf565b8d606001516140e69190615c5c565b6140f09190615c6f565b90505b60008a156141385761413361412d61410f8f606001518e613e61565b8f604001518f61411f9190615dd6565b6001600160401b0316613aaf565b84613aaf565b61413b565b60005b90506000866001600160801b0316828f608001516141599190615c6f565b6141639190615c5c565b90506040518060a001604052808f6000015160070b8152602001426001600160401b031681526020018e6001600160401b031681526020018481526020018281525095505050896000146141f6576141f16141eb6141c58e606001518d613e61565b6141d790670de0b6b3a7640000615c5c565b8e60400151876040015161411f9190615dd6565b8b613aaf565b6141f9565b60005b925050509850989650505050505050565b600061423661423085602001516001600160401b031686600001518661411f9190615dd6565b83613aaf565b84604001516128439190615df6565b61424d615135565b42600255565b6000806000614260613025565b604080516060810182526009546001600160801b03811682526001600160401b03600160801b820481166020840152600160c01b909104169181019190915290915060006142ac61118d565b90506142b66157a6565b838152600a546020820181905283516001600160801b031660a0830152670de0b6b3a764000060e08301526000906142ef908690613f58565b600080516020615f4d833981519152546000818152601560209081526040808320838052909152902054919250905b89846060015110156144735781158061433657508a82115b6144735760008281526013602052604090205460ff161580614356575080155b1561438a5750600090815260146020908152604080832060010154808452601583528184208480529092529091205461431e565b60008281526015602090815260408083208484529091529020548181036143b15750614473565b6001600160a01b038216600090815260126020908152604080832081518083019092528054825260010154918101829052849290916143f2908490896149f1565b90506143fe8987613aaf565b60c08901526060880151614412908f615c5c565b6101008901526020820151815160408301516144539261443c9290916001600160801b031661456b565b835160208d01518c906001600160401b0316614853565b156144675761446488838386614a30565b97505b8394505050505061431e565b614490846000015185608001518660200151888a60400151614c6a565b506020840151600a5560608401518a146144bd57604051633e6c5e0f60e01b815260040160405180910390fd5b8360600151846040015198509850505050505050509250929050565b6000818313156144ea575081610af3565b50919050565b6000818312156144ea575081610af3565b81810160008213801561451357508281105b80614528575060008212801561452857508281115b15610af3576040516354012a2960e11b815260040160405180910390fd5b600061123f61455361118d565b600954600160801b90046001600160401b0316613e61565b60008161458185856001600160401b0316613aaf565b6128439190615c5c565b60006145a961459a8386615c6f565b846001600160401b0316613e61565b9050836145b782858561456b565b1015612892576001019392505050565b60008184158015906145d857508315155b1561460a57836145f16001600160801b03851687615c82565b6145fb9190615caf565b91506146078282615e16565b90505b935093915050565b6000670de0b6b3a76400006146278484615170565b8161463457614634615c99565b059392505050565b60008061464a85858561456b565b9050801580159061472e5750866001600160401b031661472c7f0000000000000000000000000000000000000000000000000000000000000000887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016146d19190615a8b565b602060405180830381865afa1580156146ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147129190615cf5565b61471c9190615c82565b6147269190615caf565b83613e61565b105b1561473d576001915050614743565b60009150505b95945050505050565b6040805180820190915260008082526020820152855161476c9085614501565b8652602086015161477d9084614501565b60208701819052158015906147b657506009546020870151865160408801516001600160801b03938416936147b49392911661456b565b105b156147d457604051634b2c23a160e11b815260040160405180910390fd5b6001600160a01b038716600081815260126020908152604090912088518155908801516001909101557f71671d6112ff9270f1553ebc8fbf767a3221090f1002c7047475b6fa8f5801cd858561482a8682614501565b6040805193845260208401929092529082015260600160405180910390a2509395945050505050565b600084826148618587615c82565b61486b9190615caf565b101595945050505050565b80820360008213801561488857508281115b8061489d575060008212801561489d57508281105b15610af35760405163e942b9ed60e01b815260040160405180910390fd5b6000806148d1838560400151866080015161456b565b905080156149865761498181600b547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c3536e7306040518263ffffffff1660e01b815260040161492c9190615a8b565b602060405180830381865afa158015614949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061496d9190615cf5565b6149779085615c6f565b6128399190615c5c565b612843565b6000949350505050565b6000600160401b82106149b6576040516302217c1560e11b815260040160405180910390fd5b5090565b6149c2615786565b81516001600160401b03166000036149b657600060208301819052670de0b6b3a7640000835260408301525090565b6149f9615786565b614a0284612ad7565b9050614a0f81838561420a565b6001600160801b031660408201526001600160401b03909116815292915050565b614a386157a6565b6000806000806000614a60896020015189600001518a604001516001600160801b031661456b565b90506000614a778b61010001518c60e00151613aaf565b9050614add8183118015614a97575060a08c0151614a958385615c5c565b105b614aae57614aa9838d60e00151613e61565b614acb565b614acb8c60a0015184614ac19190615c5c565b8d60e00151613e61565b6118028c600001518e60c001516151b9565b6101008c0151909150818111818318021895506000614b00878d60e00151613aaf565b9050614b1181848c604001516145c7565b6001600160801b0390811660408d01528b51919550614b33918391871661458b565b9450614b43878d60c00151613e61565b8b51909650861115614b54578a5195505b8a5186148015614b675750848b60200151115b15614b9357614b768184615c5c565b8c61012001818151614b889190615c6f565b90525060208b015194505b5050506000896020015190506000614bcb888c600001518b858e60200151614bba8a614f5a565b614bc390615d4e565b896000614d3b565b908c529050614c00888b8b614bdf89614f5a565b614be890615d4e565b614bf189614f5a565b614bfa90615d4e565b8761474c565b50838b602001818151614c139190615c5c565b90525060408b018051869190614c2a908390615c6f565b90525060608b018051879190614c41908390615c6f565b90525060808b018051829190614c58908390615c6f565b905250999a9950505050505050505050565b6000614c8182848689604001518a608001516151ef565b614c8a86613bd0565b614c9385615221565b9695505050505050565b6040516001600160a01b03831660248201526044810182905261110590849063a9059cbb60e01b90606401613d6f565b600081600003614cf05760405163ee7efd5760e01b815260040160405180910390fd5b600082815260208490526040902054151580614d1c575060008281526020849052604090206001015415155b8061289257505060008080526020929092526040909120600101541490565b614d436157ff565b60208781015160008b815260169092526040822054614d87908c90614d688a8a614501565b6001600160401b03881615614d7d5787615274565b8c60200151615274565b6001600160401b031660208a0152614d9f8b8a6152ba565b614db78a8a600001518a8a8a868f602001518c61406b565b909c909b509950505050505050505050565b6000808212614dd85781610af3565b600092915050565b6000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635e5c06e2306040518263ffffffff1660e01b8152600401614e359190615a8b565b6040805180830381865afa158015614e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614e759190615db2565b91509150614e8282614dc9565b9350614e8e8282615354565b92506000614e9a613025565b600a549091506000614ebe83614eb08185613f58565b84600080600080600061406b565b90935090506000614eeb848385614ed361118d565b600954600160c01b90046001600160401b0316614c6a565b9050614f00838560400151866080015161456b565b614f0a8c8a615c6f565b614f149190615c6f565b995080614f208761537c565b614f2a9190615c6f565b9850888a1015614f4d5760405163702fbbed60e01b815260040160405180910390fd5b5050505050509193509193565b6000600160ff1b82106149b657604051632db27c5360e01b815260040160405180910390fd5b614f8a82826121ab565b61118957614f9781615393565b614fa28360206153a5565b604051602001614fb3929190615e5a565b60408051601f198184030181529082905262461bcd60e51b825261117691600401615ec9565b600061502e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166155409092919063ffffffff16565b905080516000148061504f57508080602001905181019061504f9190615efc565b6111055760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611176565b60015460ff16613e385760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401611176565b600061289283604001516001600160401b0316611e14846001600160401b031686602001516001600160401b03164203670de0b6b3a764000061554f565b61513d613df2565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833613ddb565b818102600083128061519b5750811580159061519b57508282828161519757615197615c99565b0514155b15610af357604051631eed389360e01b815260040160405180910390fd5b6000816000190483118202156151d75763c4c5d7f56000526004601cfd5b50670de0b6b3a7640000910281810615159190040190565b6151fc858585858561463c565b1561521a57604051632ce9f52360e01b815260040160405180910390fd5b5050505050565b600061522b613df2565b615255827f0000000000000000000000000000000000000000000000000000000000000000613aaf565b600b60008282546152669190615c6f565b92505081905590505b919050565b808315801590615285575082601754115b156128435760008481526015602052604090206152a2908661318d565b50505060009182525060166020526040812081905590565b6001600160a01b0382166000908152600860209081526040918290208351815492850151848601516001600160801b03908116600160801b026001600160401b03928316600160401b026001600160801b031990961692909316919091179390931792909216919091179055517f4fd60289e0d86501846be34d5f370dc28945d66ca81804a5f84e0e7c017c73a290610c2d908490615a8b565b60008061536083615d4e565b9050808412614986576153738482615d6a565b61498190615d4e565b6000808213614dd85761538e82615d4e565b610af3565b6060610af36001600160a01b03831660145b606060006153b4836002615c82565b6153bf906002615c6f565b6001600160401b038111156153d6576153d66159a0565b6040519080825280601f01601f191660200182016040528015615400576020820181803683370190505b509050600360fc1b8160008151811061541b5761541b615d0e565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061544a5761544a615d0e565b60200101906001600160f81b031916908160001a905350600061546e846002615c82565b615479906001615c6f565b90505b60018111156154f1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106154ad576154ad615d0e565b1a60f81b8282815181106154c3576154c3615d0e565b60200101906001600160f81b031916908160001a90535060049490941c936154ea81615f19565b905061547c565b5083156128925760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401611176565b6060612843848460008561560d565b6000828015615601578480156155f65760018516801561557157869350615575565b8493505b50600284046002860495505b85156155f0578687028760801c1561559857600080fd5b818101818110156155a857600080fd5b86900497505060018616156155e55786840284888204141588151516156155ce57600080fd5b818101818110156155de57600080fd5b8690049450505b600286049550615581565b506155fb565b600092505b50615605565b8291505b509392505050565b60608247101561566e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401611176565b600080866001600160a01b0316858760405161568a9190615f30565b60006040518083038185875af1925050503d80600081146156c7576040519150601f19603f3d011682016040523d82523d6000602084013e6156cc565b606091505b50915091506156dd878383876156e8565b979650505050505050565b60608315615757578251600003615750576001600160a01b0385163b6157505760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611176565b5081612843565b612843838381511561576c5781518083602001fd5b8060405162461bcd60e51b81526004016111769190615ec9565b604080516060810182526000808252602082018190529181019190915290565b6040518061014001604052806157ba6157ff565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b6040518060a0016040528060008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b031681525090565b60006020828403121561588057600080fd5b81356001600160e01b03198116811461289257600080fd5b80356001600160a01b038116811461526f57600080fd5b600080604083850312156158c257600080fd5b823591506158d260208401615898565b90509250929050565b6000602082840312156158ed57600080fd5b5035919050565b8015158114611d3e57600080fd5b6000806040838503121561591557600080fd5b61591e83615898565b9150602083013561592e816158f4565b809150509250929050565b6000806040838503121561594c57600080fd5b50508035926020909101359150565b60006020828403121561596d57600080fd5b61289282615898565b6000806040838503121561598957600080fd5b61599283615898565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126159c757600080fd5b813560206001600160401b03808311156159e3576159e36159a0565b8260051b604051601f19603f83011681018181108482111715615a0857615a086159a0565b604052938452858101830193838101925087851115615a2657600080fd5b83870191505b848210156156dd57813583529183019190830190615a2c565b60008060408385031215615a5857600080fd5b8235915060208301356001600160401b03811115615a7557600080fd5b615a81858286016159b6565b9150509250929050565b6001600160a01b0391909116815260200190565b600080600060608486031215615ab457600080fd5b615abd84615898565b9250615acb60208501615898565b91506040840135615adb816158f4565b809150509250925092565b60008060008060808587031215615afc57600080fd5b615b0585615898565b9350615b1360208601615898565b9250615b2160408601615898565b9396929550929360600135925050565b600080600080600060a08688031215615b4957600080fd5b615b5286615898565b9450615b6060208701615898565b9350615b6e60408701615898565b94979396509394606081013594506080013592915050565b60008060408385031215615b9957600080fd5b615ba283615898565b91506158d260208401615898565b600080600060408486031215615bc557600080fd5b83356001600160401b0380821115615bdc57600080fd5b818601915086601f830112615bf057600080fd5b813581811115615bff57600080fd5b8760208260051b8501011115615c1457600080fd5b602092830195509350908501359080821115615c2f57600080fd5b50615c3c868287016159b6565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b81810381811115610af357610af3615c46565b80820180821115610af357610af3615c46565b8082028115828204841417610af357610af3615c46565b634e487b7160e01b600052601260045260246000fd5b600082615ccc57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215615d0757600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b6000600160ff1b8201615d6357615d63615c46565b5060000390565b8181036000831280158383131683831282161715610db957610db9615c46565b8082018281126000831280158216821582161715615daa57615daa615c46565b505092915050565b60008060408385031215615dc557600080fd5b505080516020909101519092909150565b6001600160401b03828116828216039080821115610db957610db9615c46565b6001600160801b03818116838216019080821115610db957610db9615c46565b6001600160801b03828116828216039080821115610db957610db9615c46565b60005b83811015615e51578181015183820152602001615e39565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351615e8c816017850160208801615e36565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351615ebd816028840160208801615e36565b01602801949350505050565b6020815260008251806020840152615ee8816040850160208701615e36565b601f01601f19169190910160400192915050565b600060208284031215615f0e57600080fd5b8151612892816158f4565b600081615f2857615f28615c46565b506000190190565b60008251615f42818460208701615e36565b919091019291505056fe4f26c3876aa9f4b92579780beea1161a61f87ebf1ec6ee865b299e447ecba99da2646970667358221220eba494db9abb0c19fcf1cd5788a4855796b9904b88b1230d1f0cb66f768710be64736f6c63430008130033",
    "sourceMap": "383:2972:142:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:31;;;;;;:::i;:::-;;:::i;:::-;;;470:14:181;;463:22;445:41;;433:2;418:18;2732:202:31;;;;;;;;7657:103:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1080:25:181;;;1068:2;1053:18;7657:103:88;934:177:181;3886:45:88;;3930:1;3886:45;;1738:42:90;;;;;-1:-1:-1;;;;;1738:42:90;;;;-1:-1:-1;;;1738:42:90;;;;;-1:-1:-1;;;1738:42:90;;;;;;;;;;-1:-1:-1;;;;;1367:15:181;;;1349:34;;1419:15;;;1414:2;1399:18;;1392:43;1471:15;;1451:18;;;1444:43;;;;1300:2;1285:18;1738:42:90;1116:377:181;56336:696:88;;;:::i;:::-;;4504:129:31;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;2861:194:173;;;;;;:::i;:::-;;:::i;54991:1263:88:-;;;;;;:::i;:::-;;:::i;51478:330::-;;;;;;:::i;:::-;;:::i;30386:2242::-;;;;;;:::i;:::-;;:::i;585:23:172:-;;;;;;4929:145:31;;;;;;:::i;:::-;;:::i;3397:35:88:-;;;;;6038:214:31;;;;;;:::i;:::-;;:::i;38773:97:88:-;;;:::i;6424:26::-;;;;;;12071:647;;;;;;:::i;:::-;;:::i;1173:99:172:-;;;:::i;52988:1248:88:-;;;;;;:::i;:::-;;:::i;3766:43::-;;3808:1;3766:43;;33194:250;;;;;;:::i;:::-;;:::i;50849:344::-;;;;;;:::i;:::-;;:::i;:::-;;;;3623:25:181;;;3691:14;;3684:22;3679:2;3664:18;;3657:50;3596:18;50849:344:88;3455:258:181;8083:51:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3892:25:181;;;3948:2;3933:18;;3926:34;;;;3865:18;8083:51:88;3718:248:181;1615:84:47;1685:7;;;;1615:84;;6680:35:88;;;;;;8229:72;;;;;;:::i;:::-;;;;;;;;;;;;;;;;26886:3077;;;;;;:::i;:::-;;:::i;:::-;;;;5662:25:181;;;5718:2;5703:18;;5696:34;;;;5746:18;;;5739:34;5804:2;5789:18;;5782:34;5649:3;5634:19;26886:3077:88;5431:391:181;3204:1188:90;;;;;;:::i;:::-;;:::i;6035:30:88:-;;;;;-1:-1:-1;;;;;6035:30:88;;;-1:-1:-1;;;;;;;;6035:30:88;;;;;-1:-1:-1;;;6035:30:88;;;;;;;;;-1:-1:-1;;;;;6296:32:181;;;6278:51;;-1:-1:-1;;;;;6402:15:181;;;6397:2;6382:18;;6375:43;6454:15;;6434:18;;;6427:43;6266:2;6251:18;6035:30:88;6080:396:181;3141:31:88;;;;;;;;;;;;:::i;37453:724::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6924:31:181;;;6906:50;;6987:2;6972:18;;6965:34;;;;7015:18;;;7008:34;6894:2;6879:18;37453:724:88;6706:342:181;2268::173;;;;;;:::i;:::-;;:::i;6170:30:88:-;;;;;;998:73:172;;;:::i;67130:294:88:-;;;;;;:::i;:::-;;:::i;504:2460:142:-;;;;;;:::i;:::-;;:::i;:::-;;;;8052:25:181;;;8108:2;8093:18;;8086:34;;;;8136:18;;;8129:34;8040:2;8025:18;504:2460:142;7854:315:181;3021:145:31;;;;;;:::i;:::-;;:::i;25335:839:88:-;;;;;;:::i;:::-;;:::i;14396:320::-;;;:::i;2153:49:31:-;;2198:4;2153:49;;8715:69:88;;;;;;:::i;:::-;;;;;;;;;;;;;;3628:47;;3669:6;3628:47;;3506:36;;;;;7856:53;;;;;;:::i;:::-;;;;;;;;;;;;;;15050:187;;;:::i;6274:31::-;;;;;;4094:41;;;;;7481:56;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7481:56:88;;;;-1:-1:-1;;;7481:56:88;;;;;;;;;8641:25:181;;;8697:2;8682:18;;8675:34;;;;8725:18;;;8718:34;;;;-1:-1:-1;;;;;8826:15:181;;;8821:2;8806:18;;8799:43;8879:15;8779:3;8858:19;;8851:44;8628:3;8613:19;7481:56:88;8382:519:181;46996:3390:88;;;;;;:::i;:::-;;:::i;52006:330::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;9543:31:181;;;9525:50;;9513:2;9498:18;52006:330:88;9381:200:181;3297:149:173;;;;;;:::i;:::-;;:::i;6527:55:88:-;;;;;;:::i;:::-;;;;;;;;;;;;;;38241:209;;;:::i;67769:633::-;;;;;;:::i;:::-;;:::i;5354:147:31:-;;;;;;:::i;:::-;;:::i;1776:200:173:-;;;;;;:::i;:::-;;:::i;3546:148:94:-;;;;;;:::i;:::-;;:::i;:::-;;;;10116:13:181;;-1:-1:-1;;;;;10112:22:181;;;10094:41;;10195:4;10183:17;;;10177:24;10173:33;;;10151:20;;;10144:63;10255:17;;;10249:24;-1:-1:-1;;;;;10245:50:181;10223:20;;;10216:80;10045:2;10030:18;3546:148:94;9851:451:181;8854:30:88;;;;;;5576:4001:90;;;;;;:::i;:::-;;:::i;3063:25:88:-;;;;;3275:97:94;;;:::i;:::-;;;;;;11529:4:181;11571:3;11560:9;11556:19;11548:27;;11622:6;11616:13;11613:1;11602:28;11591:9;11584:47;11678:4;11670:6;11666:17;11660:24;-1:-1:-1;;;;;11777:2:181;11763:12;11759:21;11752:4;11741:9;11737:20;11730:51;11849:2;11841:4;11833:6;11829:17;11823:24;11819:33;11812:4;11801:9;11797:20;11790:63;;;11909:4;11901:6;11897:17;11891:24;11884:4;11873:9;11869:20;11862:54;11972:4;11964:6;11960:17;11954:24;11947:4;11936:9;11932:20;11925:54;11381:604;;;;;3225:31:88;;;;;54408:268;;;;;;:::i;:::-;;:::i;33733:235::-;;;;;;:::i;:::-;;:::i;3295:29::-;;;;;2732:202:31;2817:4;-1:-1:-1;;;;;;2840:47:31;;-1:-1:-1;;;2840:47:31;;:87;;-1:-1:-1;;;;;;;;;;937:40:73;;;2891:36:31;2833:94;2732:202;-1:-1:-1;;2732:202:31:o;56336:696:88:-;56424:10;56381:20;56465:25;;;:11;:25;;;;;;;56504:14;;;56500:78;;56527:51;;-1:-1:-1;;;56527:51:88;;;;;;;;;;;56500:78;56588:27;;;;:16;:27;;;;;:48;;56623:12;56588:34;:48::i;:::-;56653:25;;;;:11;:25;;;;;;;;56646:32;;;56772:10;56796:21;;;:9;:21;;;;;:32;;;56842:15;;56735:235;;56886:11;:9;:11::i;:::-;56911;:34;-1:-1:-1;;;56911:34:88;;-1:-1:-1;;;;;56911:34:88;;56735:23;:235::i;:::-;-1:-1:-1;;56986:39:88;;57014:10;;-1:-1:-1;57003:9:88;;56986:39;;;;;56371:661;;56336:696::o;2861:194:173:-;2956:10;2939:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2939:35:173;;;;;;;;;;;;:47;;-1:-1:-1;;2939:47:173;;;;;;;;;;3001;;12673:34:181;;;12723:18;;;12716:43;;;;12775:18;;;12768:50;3001:47:173;;12623:2:181;12608:18;3001:47:173;;;;;;;;2861:194;;:::o;54991:1263:88:-;55063:37;;;;:21;:37;;;;;;;;55058:115;;55121:52;;-1:-1:-1;;;55121:52:88;;;;;;;;;;;55058:115;55223:10;55192:18;55213:21;;;:9;:21;;;;;:32;;;55259:15;;:28;-1:-1:-1;55255:97:88;;;55308:44;;-1:-1:-1;;;55308:44:88;;;;;;;;;;;55255:97;55414:10;55371:20;55439:25;;;:11;:25;;;;;;:30;55435:107;;55490:52;;-1:-1:-1;;;55490:52:88;;;;;;;;;;;55435:107;55642:25;;;;:11;:25;;;;;;;;:42;;;55825:32;;;:16;:32;;;;;;1276:13:170;;;;;;;;;:18;;;55771:32:88;;;;;;;:97;;55642:25;;55771:39;:97::i;:::-;55926:261;55963:10;55987;56011:15;;56040:1;56055:11;:9;:11::i;:::-;56080;:34;-1:-1:-1;;;56080:34:88;;-1:-1:-1;;;;;56080:34:88;56128:49;56162:14;56128:33;:49::i;:::-;55926:23;:261::i;:::-;-1:-1:-1;;56203:44:88;;56236:10;;-1:-1:-1;56220:14:88;;56203:44;;;;;55048:1206;;54991:1263;:::o;51478:330::-;51558:20;51605:27;;;:16;:27;;;;;;;;1539:13:170;;;;;;;;:18;;51652:150:88;51673:5;51668:1;:10;51652:150;;51711:27;;;;:16;:27;;;;;;;;2335:14:170;;;;;;;;:19;51696:64:88;-1:-1:-1;51786:3:88;;51652:150;;;;51478:330;;;;:::o;30386:2242::-;30459:20;30491;30514:17;:15;:17::i;:::-;30491:40;;3808:1;30584:13;:31;30569:12;:46;30565:127;;;30640:52;;-1:-1:-1;;;30640:52:88;;;;;;;;;;;30565:127;30770:23;30797:37;30820:13;30797:22;:37::i;:::-;30764:70;;;;;;30924:10;:28;;;30956:1;30924:33;:63;;;;-1:-1:-1;30961:21:88;;;;-1:-1:-1;;;;;30961:26:88;;30924:63;:102;;;;-1:-1:-1;30991:30:88;;;;:35;30924:102;30920:154;;;-1:-1:-1;31053:21:88;;;;:6;:21;;;;;;;;;31040:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;31040:34:88;;;;;;;-1:-1:-1;;;31040:34:88;;;;;;;;30920:154;31143:28;;;;:33;;;;:63;;-1:-1:-1;31180:21:88;;;;-1:-1:-1;;;;;31180:26:88;;31143:63;31139:136;;;31227:48;;-1:-1:-1;;;31227:48:88;;;;;;;;;;;31139:136;31330:19;31352:34;;;:19;:34;;;;;;;;31387:10;31352:46;;;;;;;;31451:21;;;;31352:46;;31330:19;31433:40;;31352:46;;-1:-1:-1;;;;;31433:40:88;:4;:40::i;:::-;31534:34;;;;:19;:34;;;;;;;;31569:10;31534:46;;;;;;;31527:53;31408:65;-1:-1:-1;31800:28:88;31408:65;31800:11;:28;:::i;:::-;31785:10;31778:18;;;;:6;:18;;;;;:50;;:18;;;:50;;;;;:::i;:::-;;;;-1:-1:-1;;32163:28:88;;;;32115:31;;31852:14;;-1:-1:-1;31852:14:88;;32115:45;;31852:14;;32115:45;:::i;:::-;:76;;;;:::i;:::-;32201:61;;-1:-1:-1;;;32201:61:88;;32100:91;;-1:-1:-1;;;;;;32201:3:88;:17;;;;:61;;32219:16;;32237:10;;32100:91;;32201:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32378:11;32346:10;:28;;:43;;;;;;;:::i;:::-;;;-1:-1:-1;32399:47:88;;32434:12;;32399:10;;:47;;32434:12;;32399:47;:::i;:::-;;;-1:-1:-1;32456:21:88;;;;:6;:21;;;;;;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;32456:34:88;;;-1:-1:-1;;;32456:34:88;;;;;;;;;32500:20;:36;;32524:12;;32456:21;32500:36;;32524:12;;32500:36;:::i;:::-;;;;-1:-1:-1;;32560:61:88;;;3892:25:181;;;3948:2;3933:18;;3926:34;;;32583:10:88;;32560:61;;3865:18:181;32560:61:88;;;;;;;30481:2147;;;;30386:2242;;;:::o;4929:145:31:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:31;;719:10:66;6133:23:31;6125:83;;;;-1:-1:-1;;;6125:83:31;;14333:2:181;6125:83:31;;;14315:21:181;14372:2;14352:18;;;14345:30;14411:34;14391:18;;;14384:62;-1:-1:-1;;;14462:18:181;;;14455:45;14517:19;;6125:83:31;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;38773:97:88:-;38836:27;;-1:-1:-1;;;38836:27:88;;38810:7;;-1:-1:-1;;;;;38836:6:88;:11;;;;:27;;38856:5;;38836:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38829:34;;38773:97;:::o;12071:647::-;12136:26;12165:14;:12;:14::i;:::-;12136:43;;12193:9;:21;;;-1:-1:-1;;;;;12193:26:88;12218:1;12193:26;12189:40;;12221:8;;;12189:40;12277:42;2198:4:31;12308:10:88;12277;:42::i;:::-;-1:-1:-1;;;;;12393:15:88;12362:47;:21;;;:47;368:4:171;12419:25:88;;;:39;12468:24;12362:9;12468:13;:24::i;:::-;12605:53;-1:-1:-1;;;;;12605:5:88;:17;12623:15;-1:-1:-1;;12605:17:88;:53::i;:::-;12668:43;;-1:-1:-1;;;12668:43:88;;-1:-1:-1;;;;;14922:32:181;;;12668:43:88;;;14904:51:181;12706:4:88;14971:18:181;;;14964:50;12668:3:88;:20;;;;14877:18:181;;12668:43:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12126:592;12071:647;:::o;1173:99:172:-;313:24;2631:16:31;2642:4;2631:10;:16::i;:::-;1233:10:172::1;:8;:10::i;:::-;-1:-1:-1::0;1264:1:172::1;1253:8;:12:::0;1173:99::o;52988:1248:88:-;1239:19:47;:17;:19::i;:::-;1079:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;53171:9:88::2;53154:14;:26;:56;;;;53196:14;53184:9;:26;53154:56;53150:135;;;53231:54;;-1:-1:-1::0;;;53231:54:88::2;;;;;;;;;;;53150:135;53335:28;1276:13:170::0;;53366:16:88::2;1276:13:170::0;;-1:-1:-1;;;;;;;;;;;1276:18:170;53489:25:88;;:52;::::2;;;-1:-1:-1::0;53518:23:88;;::::2;53489:52;53488:317;;;-1:-1:-1::0;53662:23:88;;;::::2;::::0;:129:::2;;;53724:18;53707:14;:35;53706:84;;;;53771:18;53748:20;:41;53706:84;53488:498;;;-1:-1:-1::0;2309:7:170;2335:14;;;53942:16:88::2;2335:14:170::0;;;;;:19;53925:14:88::2;:61;53488:498;53402:653;;;54004:51;;-1:-1:-1::0;;;54004:51:88::2;;;;;;;;;;;53402:653;54066:59;:16;54090:14:::0;54106:18;54066:23:::2;:59::i;:::-;54135:37;::::0;;;:21:::2;:37;::::0;;;;;:44;;-1:-1:-1;;54135:44:88::2;54175:4;54135:44;::::0;;54195:33;54157:14;;54195:33:::2;::::0;::::2;53140:1096;1268:1:47::1;52988:1248:88::0;;:::o;33194:250::-;33271:18;1239:19:47;:17;:19::i;:::-;33301:57:88::1;-1:-1:-1::0;;;;;33301:5:88::1;:22;33324:10;33344:4;33351:6:::0;33301:22:::1;:57::i;:::-;33381:24;33386:6;33394:10;33381:4;:24::i;:::-;-1:-1:-1::0;;;;;33415:8:88;::::1;;::::0;;;:4:::1;:8;::::0;;;;:22;;33368:37;;-1:-1:-1;33368:37:88;;33415:8;;;:22:::1;::::0;33368:37;;33415:22:::1;:::i;:::-;::::0;;;-1:-1:-1;33194:250:88;;;-1:-1:-1;;;33194:250:88:o;50849:344::-;50909:17;1276:13:170;;;50965:16:88;1276:13:170;;-1:-1:-1;;;;;;;;;;;1276:18:170;;50909:17:88;51001:133;51022:5;51017:1;:10;51001:133;;1908:7:170;1934:14;;;51057:16:88;1934:14:170;;;;;:19;;;51045:47:88;-1:-1:-1;51118:3:88;;51001:133;;;-1:-1:-1;;51154:32:88;;;;:21;:32;;;;;;51176:9;;51154:32;;;;;-1:-1:-1;50849:344:88:o;26886:3077::-;26995:22;27019:20;27041:24;27067:25;27124:17;:15;:17::i;:::-;27109:32;;27217:14;27233:19;27254:18;27274:20;27296:23;27332:36;27355:12;27332:22;:36::i;:::-;27203:165;;;;;;;;;;27450:22;27487:9;27482:865;27502:16;:23;27498:1;:27;27482:865;;;27543:23;27569:16;27586:1;27569:19;;;;;;;;:::i;:::-;;;;;;;27543:45;;27630:3;;;;;27774:15;27793:1;27774:20;:95;;;;3930:1;27837:12;:32;27818:15;:51;;27774:95;:158;;;-1:-1:-1;27893:23:88;;;;:6;:23;;;;;:34;;;-1:-1:-1;;;;;27893:34:88;:39;;27774:158;:228;;;-1:-1:-1;27956:23:88;;;;:6;:23;;;;;:41;;;:46;27774:228;27770:259;;;28021:8;27482:865;;27770:259;28057:28;28088:36;;;:19;:36;;;;;;;;28125:10;28088:48;;;;;;;;28150:38;28088:48;28150:38;;:::i;:::-;28209:36;;;;:19;:36;;;;;;;;28246:10;28209:48;;;;;;;28202:55;;;28271:23;;;:6;:23;;;;;:41;;:65;;28150:38;;-1:-1:-1;28316:20:88;;28271:41;;28209:36;28271:65;;28316:20;;28271:65;:::i;:::-;;;;-1:-1:-1;27482:865:88;;-1:-1:-1;;;27482:865:88;;-1:-1:-1;28724:12:88;28710:11;28686:20;28695:11;28686:6;:20;:::i;:::-;28685:36;;;;:::i;:::-;:51;;;;:::i;:::-;28668:68;;28858:16;28895:10;28878:14;:27;28877:59;;28922:14;28877:59;;;28909:10;28877:59;28946:60;;-1:-1:-1;;;28946:60:88;;28858:78;;-1:-1:-1;;;;;;28946:3:88;:17;;;;:60;;28972:4;;28979:16;;28858:78;;28946:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29050:8;29016:10;:30;;:42;;;;;;;:::i;:::-;;;-1:-1:-1;;29223:28:88;;;;:33;29222:195;;29337:79;29341:10;:39;;;-1:-1:-1;;;;;29337:79:88;29382:33;29387:14;29403:11;29382:4;:33::i;:::-;1473:9:171;;;1484:8;;-1:-1:-1;1469:24:171;1462:32;;1357:145;29337:79:88;29222:195;;;29280:33;29285:14;29301:11;29280:4;:33::i;:::-;-1:-1:-1;;;;;29180:237:88;:39;;;:237;29464:28;;;:43;;29496:11;;29464:28;:43;;29496:11;;29464:43;:::i;:::-;;;-1:-1:-1;29517:20:88;;;;:6;:20;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29517:33:88;;;-1:-1:-1;;;29517:33:88;;;;;;;;;;29560;;;;;29594:10;29560:45;;;;;;;:60;;29609:11;;29517:20;29560:60;;29609:11;;29560:60;:::i;:::-;;;;-1:-1:-1;;29658:10:88;29651:18;;;;:6;:18;;;;;;29689:11;;29651:35;;29672:14;;29651:35;:::i;:::-;:49;;;;:::i;:::-;29637:10;29630:18;;;;:6;:18;;;;;;;;;:70;;;;29867:89;;8052:25:181;;;8093:18;;;8086:34;;;3808:1:88;29776:30;;8136:18:181;;;8129:34;;;29776:30:88;-1:-1:-1;3930:1:88;29808:32;;;-1:-1:-1;29776:12:88;;29867:89;;8040:2:181;8025:18;29867:89:88;;;;;;;27099:2864;;;;;;26886:3077;;;;;;;:::o;3204:1188:90:-;1239:19:47;:17;:19::i;:::-;1010:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;3324:9:90::2;-1:-1:-1::0;;;3324:24:90;3320:1021:::2;;3350:11;:37:::0;;-1:-1:-1;;;;;;3350:37:90::2;-1:-1:-1::0;;;;;3350:37:90;::::2;;::::0;;3320:1021:::2;;;3406:9;-1:-1:-1::0;;;3406:31:90;3402:939:::2;;3439:11;:43:::0;;-1:-1:-1;;;;3439:43:90::2;-1:-1:-1::0;;;;;;;;3439:43:90;::::2;;;::::0;;3402:939:::2;;;3501:9;-1:-1:-1::0;;;3501:37:90;3497:844:::2;;3540:11;:49:::0;;-1:-1:-1;;;;;3540:49:90::2;-1:-1:-1::0;;;;;;;;3540:49:90;::::2;;;::::0;;3497:844:::2;;;3608:9;-1:-1:-1::0;;;3608:30:90;3604:737:::2;;3640:15;:22:::0;;;3604:737:::2;;;3863:9;-1:-1:-1::0;;;3863:23:90;3859:482:::2;;3888:68;-1:-1:-1::0;;3902:4:90::2;:25;3901:54;;3949:4;3888:12;:68::i;3901:54::-;-1:-1:-1::0;;3888:12:90::2;:68::i;:::-;3859:482;;;3975:9;-1:-1:-1::0;;;3975:33:90;3971:370:::2;;4010:17;:51:::0;;-1:-1:-1;;4010:51:90::2;-1:-1:-1::0;;;;;4010:51:90;::::2;;::::0;;3971:370:::2;;;4080:9;-1:-1:-1::0;;;4080:34:90;4076:265:::2;;4116:17;:52:::0;;-1:-1:-1;;;;4116:52:90::2;-1:-1:-1::0;;;;;;;;4116:52:90;::::2;;;::::0;;4076:265:::2;;;4187:9;-1:-1:-1::0;;;4187:33:90;4183:158:::2;;4222:17;:51:::0;;-1:-1:-1;;;;4222:51:90::2;-1:-1:-1::0;;;;;;;;4222:51:90;::::2;;;::::0;;4183:158:::2;;;4295:46;;-1:-1:-1::0;;;4295:46:90::2;;;;;;;;;;;4183:158;4369:9;4356:29;4380:4;4356:29;;;;1080:25:181::0;;1068:2;1053:18;;934:177;4356:29:90::2;;;;;;;;1268:1:47::1;3204:1188:90::0;;:::o;37453:724:88:-;37530:22;37554:21;37577:27;37621:26;37650:14;:12;:14::i;:::-;37701:15;;37621:43;;-1:-1:-1;37744:54:88;37621:43;37701:15;37744:25;:54::i;:::-;37726:72;;37824:80;37844:9;37855:15;37872:16;37890:1;37893;37896;37899;37902;37824:19;:80::i;:::-;-1:-1:-1;37936:29:88;;;;;-1:-1:-1;37808:96:88;-1:-1:-1;;;;;;37979:22:88;;;37975:196;;38032:128;38073:24;38088:8;38073:14;:24::i;:::-;-1:-1:-1;;;;;38116:19:88;;;;;;:9;:19;;;;;:30;;;38099:15;;38032:23;:128::i;:::-;-1:-1:-1;;;;;38016:144:88;;;37975:196;37611:566;;37453:724;;;;;:::o;2268:342:173:-;-1:-1:-1;;;;;2364:19:173;;2373:10;2364:19;;;;:59;;-1:-1:-1;;;;;;2388:23:173;;;;;;:16;:23;;;;;;;;2412:10;2388:35;;;;;;;;;;2387:36;2364:59;2360:127;;;2444:43;;-1:-1:-1;;;2444:43:173;;;;;;;;;;;2360:127;-1:-1:-1;;;;;2497:17:173;;;;;;;:10;:17;;;;;;;;:25;;;;;;;;;;;:37;;-1:-1:-1;;2497:37:173;;;;;;;2549:54;;;;;2566:10;;2497:17;;:25;;:37;;2549:54;:::i;:::-;;;;;;;;2268:342;;;:::o;998:73:172:-;313:24;2631:16:31;2642:4;2631:10;:16::i;:::-;1056:8:172::1;:6;:8::i;:::-;998:73:::0;:::o;67130:294:88:-;67250:23;;67318:10;:24;67314:38;;67344:8;;;67314:38;67369:48;67379:19;67400:16;67369:9;:48::i;:::-;67362:55;;;;67130:294;;;;;:::o;504:2460:142:-;-1:-1:-1;;;;;760:16:142;;653:22;760:16;;;:9;:16;;;;;;;;733:43;;;;;;;;;;;;;;;;;;;;;;805:16;;653:22;;;836:19;;;832:178;;;875:51;880:15;905:8;:19;;;897:28;;;:::i;:::-;875:4;:51::i;:::-;857:69;;832:178;;;-1:-1:-1;;;;;988:20:142;;;;;;:4;:20;;;;;;959:51;;964:15;;959:4;:51::i;:::-;941:69;;832:178;1021:27;1051:231;1069:41;1073:8;:19;;;1094:15;1069:3;:41::i;:::-;1228:44;1233:18;:16;:18::i;:::-;1261:9;1228:4;:44::i;:::-;1051:4;:231::i;:::-;1021:261;;1294:22;1318:21;1344:17;1355:5;1344:10;:17::i;:::-;1293:68;;;;;1371:12;1386:66;1400:8;:19;;;1421:15;1438:13;1386;:66::i;:::-;1371:81;;1462:19;1549:170;1573:78;1577:3;-1:-1:-1;;;;;1577:14:142;;1600:4;1577:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1634:3;-1:-1:-1;;;;;1634:14:142;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1608:3;-1:-1:-1;;;;;1608:21:142;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;;:::i;1573:78::-;1667:42;1704:4;1674:19;1667:42;:::i;:::-;1757:9:171;;;1768;;-1:-1:-1;1753:25:171;1746:33;;1644:143;1549:170:142;1534:185;;1738:28;1792:1;1777:12;:16;:47;;1812:12;1777:47;;;1796:13;1797:12;1796:13;:::i;:::-;1738:87;;1860:73;1880:20;1902:15;1919:13;1860:19;:73::i;:::-;1835:99;;1971:1;1956:12;:16;1953:55;;;1992:16;1993:15;1992:16;:::i;:::-;1974:34;;1953:55;1524:495;2029:16;2098:21;2125:143;2179:1;2161:15;:19;2160:53;;2212:1;2160:53;;;2192:16;2193:15;2192:16;:::i;:::-;2215:8;:19;;;2244:13;2125:21;:143::i;:::-;2097:171;;;2346:13;-1:-1:-1;;;;;2338:22:142;2290:38;2295:15;-1:-1:-1;;;;;2290:38:142;2312:15;2290:4;:38::i;:::-;:71;;;;:::i;:::-;2278:83;;2087:285;2382:17;2409:3;-1:-1:-1;;;;;2409:14:142;;2424:8;2409:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2382:52;;2472:1;2460:9;:13;:40;;;-1:-1:-1;2490:10:142;2491:9;2490:10;:::i;:::-;2477;:23;2460:40;2459:90;;2538:10;2525;2526:9;2525:10;:::i;:::-;:23;;;;:::i;:::-;2459:90;;;2512:1;2459:90;2444:105;;2560:22;2615:15;2592:8;:19;;;2585:45;;;;:::i;:::-;2560:70;;2725:1;2707:15;:19;:78;;;;-1:-1:-1;2762:11:142;:21;-1:-1:-1;;;;;2762:21:142;2748:37;;2730:55;;2707:78;2704:189;;;2818:1;2800:19;;2851:1;2833:19;;2881:1;2866:16;;2704:189;2902:55;;;;;;;;;504:2460;;;;;;;;:::o;3021:145:31:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:31;;;;;;;;;;;;;;;3021:145::o;25335:839:88:-;25399:20;368:4:171;25435:12:88;:18;25431:78;;;25462:47;;-1:-1:-1;;;25462:47:88;;;;;;;;;;;25431:78;25585:14;25601:19;25623:20;25657:41;25680:17;:15;:17::i;:::-;25657:22;:41::i;:::-;25571:127;;;;;;;;25791:12;25807:1;25791:17;:46;;;-1:-1:-1;25812:20:88;25821:11;25812:6;:20;:::i;:::-;:25;25791:46;25790:130;;25899:20;25908:11;25899:6;:20;:::i;:::-;25868:27;25883:12;25868;:27;:::i;:::-;:52;;;;:::i;:::-;25790:130;;;25853:12;25790:130;25949:10;25942:18;;;;:6;:18;;;;;:34;;;;;;25775:145;-1:-1:-1;26002:27:88;25775:145;26002:12;:27;:::i;:::-;25988:11;:41;26039:58;;-1:-1:-1;;;26039:58:88;;-1:-1:-1;;;;;26039:3:88;:17;;;;:58;;26057:10;;26077:4;;26084:12;;26039:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26113:54:88;;;3892:25:181;;;3948:2;3933:18;;3926:34;;;26128:10:88;;-1:-1:-1;26113:54:88;;-1:-1:-1;3865:18:181;26113:54:88;;;;;;;25421:753;;;25335:839;;;:::o;14396:320::-;1239:19:47;:17;:19::i;:::-;14460:22:88::1;14485:27:::0;14516:22:::1;14535:1;14516:10;:22::i;:::-;14587:11;:34:::0;14459:79;;-1:-1:-1;14459:79:88;-1:-1:-1;14552:147:88::1;::::0;-1:-1:-1;;;14587:34:88;::::1;-1:-1:-1::0;;;;;14587:34:88::1;::::0;-1:-1:-1;14623:11:88::1;:9;:11::i;:::-;14636:15;;14653;14670:19;14552:21;:147::i;:::-;14548:161;;;14701:8;:6;:8::i;15050:187::-:0;15098:20;3669:6;;15177:15;:32;15158:15;:52;15157:71;;;;;:::i;:::-;;15142:86;;15050:187;:::o;46996:3390::-;47339:1;47321:15;:19;:42;;;;47362:1;47344:15;:19;47321:42;47320:81;;;;;47369:32;47383:5;47390:10;47369:13;:32::i;:::-;47368:33;47320:81;:278;;;;47550:1;47532:15;:19;:65;;;;;47556:41;47570:14;47586:10;47556:13;:41::i;:::-;47555:42;47532:65;47320:454;;;;47732:1;47714:15;:19;:59;;;;;47738:35;47752:8;47762:10;47738:13;:35::i;:::-;47737:36;47714:59;47199:641;;;47792:48;;-1:-1:-1;;;47792:48:88;;;;;;;;;;;47199:641;-1:-1:-1;;;;;47878:16:88;;47851:24;47878:16;;;:9;:16;;;;;;;;47851:43;;;;;;;;;;;;;;;;;;;;47904:45;;;;;;;47938:11;47904:45;-1:-1:-1;;;;;47904:45:88;;;;-1:-1:-1;;;;;;;;47904:45:88;;;;;;;;;;;-1:-1:-1;;;47904:45:88;;;;;;;;;;;;47986:15;;47851:43;;48032:11;:9;:11::i;:::-;48011:32;;48163:26;48191:30;48223:21;48248:232;48285:5;48304:8;:19;;;48337:16;48367:15;48396:10;48420:12;:35;;;48469:1;48248:23;:232::i;:::-;48162:318;;;;;;48545:97;48561:5;48568:8;48578:11;48591:15;48608;48625:16;48545:15;:97::i;:::-;48534:108;;48756:1;48738:15;:19;:42;;;;48779:1;48761:15;:19;48738:42;48737:308;;;;;48786:259;48821:98;48835:8;:19;;;48856:11;:35;;;48893:11;:25;;;-1:-1:-1;;;;;48821:98:88;:13;:98::i;:::-;48937:19;;49002:29;;;;48974:10;;-1:-1:-1;;;;;48786:259:88;:17;:259::i;:::-;48785:260;48737:308;48720:386;;;49063:43;;-1:-1:-1;;;49063:43:88;;;;;;;;;;;48720:386;-1:-1:-1;;;;;49208:20:88;;;;;;:4;:20;;;;;;49204:42;;49230:15;49204:3;:42::i;:::-;-1:-1:-1;;;;;49181:20:88;;;;;;:4;:20;;;;;:65;49275:38;49279:16;49297:15;49275:3;:38::i;:::-;49256:57;;49342:16;49324:15;:34;;;;49538:16;49623:13;-1:-1:-1;;;;;49615:22:88;49557:48;49562:9;:25;;;-1:-1:-1;;;;;49557:48:88;49589:15;49557:4;:48::i;:::-;:81;;;;:::i;:::-;49538:100;;49664:1;49652:9;:13;49648:219;;;49681:62;;-1:-1:-1;;;49681:62:88;;-1:-1:-1;;;;;49681:3:88;:17;;;;:62;;49707:4;;49714:8;;49732:9;;49681:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49648:219;;;49776:1;49764:9;:13;49760:107;;;-1:-1:-1;;;;;49793:3:88;:17;;49811:8;49829:4;49844:10;49845:9;49844:10;:::i;:::-;49793:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49760:107;49937:1;49919:15;:19;49916:357;;;49954:24;49981:55;50008:9;50019:16;49981:26;:55::i;:::-;49954:82;-1:-1:-1;;;;;;50087:17:88;50108:2;50087:23;50050:61;50128:38;;;50125:138;;;50193:55;;-1:-1:-1;;;50193:55:88;;;;;;;;;;;50125:138;49940:333;;49916:357;50336:8;-1:-1:-1;;;;;50289:90:88;50320:14;-1:-1:-1;;;;;50289:90:88;50313:5;-1:-1:-1;;;;;50289:90:88;;50346:15;50363;50289:90;;;;;;3892:25:181;;;3948:2;3933:18;;3926:34;3880:2;3865:18;;3718:248;50289:90:88;;;;;;;;47189:3197;;;;;;;;46996:3390;;;;;:::o;52006:330::-;52089:6;368:4:171;52111:9:88;:15;52107:29;;;-1:-1:-1;52135:1:88;;52006:330;-1:-1:-1;52006:330:88:o;52107:29::-;52175:12;-1:-1:-1;;;;;52146:42:88;;;52242:3;52226:19;52263:66;52272:56;368:4:171;52294:33:88;52146:42;52311:15;368:4:171;52311:9:88;:15;:::i;52294:33::-;52282:45;;:9;:45;:::i;:::-;52272:4;:56::i;:::-;52263:8;:66::i;:::-;52256:73;52006:330;-1:-1:-1;;;;52006:330:88:o;3297:149:173:-;3372:4;3404:6;-1:-1:-1;;;;;3395:15:173;:5;-1:-1:-1;;;;;3395:15:173;;:44;;;-1:-1:-1;;;;;;3414:17:173;;;;;;;:10;:17;;;;;;;;:25;;;;;;;;;;;;3395:44;3388:51;3297:149;-1:-1:-1;;;3297:149:173:o;38241:209:88:-;38325:16;;;38280:19;38351:20;;;38381:62;;-1:-1:-1;;;38381:62:88;;-1:-1:-1;;;;;38381:3:88;:17;;;;:62;;38407:4;;38422:6;;38325:16;;38381:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38241:209;:::o;67769:633::-;67882:23;67907:27;67987:48;67997:19;68018:16;67987:9;:48::i;:::-;67946:89;;-1:-1:-1;67946:89:88;-1:-1:-1;68105:19:88;;68101:86;;68126:61;;-1:-1:-1;;;68126:61:88;;-1:-1:-1;;;;;68126:3:88;:17;;;;:61;;68144:10;;68164:4;;68171:15;;68126:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;68101:86;68201:23;;68197:68;;68231:10;68226:16;;;;:4;:16;;;;;:39;;68246:19;;68226:16;:39;;68246:19;;68226:39;:::i;:::-;;;;-1:-1:-1;;68197:68:88;68281:58;;;3892:25:181;;;3948:2;3933:18;;3926:34;;;68290:10:88;;68281:58;;3865:18:181;68281:58:88;;;;;;;67769:633;;;;;:::o;5354:147:31:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;1776:200:173:-:0;1864:10;1853:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;1853:30:173;;;;;;;;;;;:42;;-1:-1:-1;;1853:42:173;;;;;;;1910:59;;;;;1864:10;;1853:30;;:42;;1910:59;:::i;3546:148:94:-;3609:18;;:::i;:::-;-1:-1:-1;;;;;3664:22:94;;;;;;:12;:22;;;;;;;;;3646:41;;;;;;;;;-1:-1:-1;;;;;3646:41:94;;;;;-1:-1:-1;;;3646:41:94;;;;;;;;;;-1:-1:-1;;;3646:41:94;;;-1:-1:-1;;;;;3646:41:94;;;;;;;;;;:17;:41::i;5576:4001:90:-;1239:19:47;:17;:19::i;:::-;5716::90;;5699:36;::::1;5695:97;;5744:48;;-1:-1:-1::0;;;5744:48:90::1;;;;;;;;;;;5695:97;5803:26;5832:14;:12;:14::i;:::-;5856:45;::::0;;::::1;::::0;;::::1;::::0;;5890:11:::1;5856:45:::0;-1:-1:-1;;;;;5856:45:90;::::1;::::0;;-1:-1:-1;;;;;;;;5856:45:90;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;;-1:-1:-1;;;5856:45:90;;::::1;::::0;::::1;::::0;;;;5911:63;;;;::::1;::::0;;5856:45:::1;5911:63:::0;;;::::1;::::0;;-1:-1:-1;;;5911:63:90;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;;::::0;;;;;;;5803:43;;-1:-1:-1;5856:31:90::1;6005:11;:9;:11::i;:::-;5984:32;;6027:26;;:::i;:::-;6063:27:::0;;;6124:15:::1;::::0;6100:21:::1;::::0;::::1;:39:::0;6167:11:::1;:21:::0;-1:-1:-1;;;;;6167:21:90::1;6149:15;::::0;::::1;:39:::0;6238:17:::1;:37:::0;6221:55:::1;::::0;6226:10;;-1:-1:-1;;;6238:37:90;::::1;-1:-1:-1::0;;;;;6238:37:90::1;6221:4;:55::i;:::-;6198:20;::::0;::::1;:78:::0;6312:17:::1;:36:::0;-1:-1:-1;;;;;6312:36:90::1;6286:23;::::0;::::1;:62:::0;6421:21:::1;::::0;::::1;::::0;6312:36:::1;::::0;6384:59:::1;::::0;6410:9;;6384:25:::1;:59::i;:::-;6359:84;;6459:9;6454:2047;6470:17:::0;;::::1;6454:2047;;;6505:13;6521:6;;6528:1;6521:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6505:25:::0;-1:-1:-1;;;;;;6550:19:90;::::1;::::0;;:43:::1;;;6573:12;6586:1;6573:15;;;;;;;;:::i;:::-;;;;;;;6592:1;6573:20;6550:43;6544:1915;;-1:-1:-1::0;;;;;6641:16:90;::::1;6614:24;6641:16:::0;;;:9:::1;:16;::::0;;;;;;;6614:43;;;;::::1;::::0;;;;;;;::::1;;::::0;;;::::1;::::0;;;;:24;6708:67:::1;::::0;6651:5;;6759:15;6708:22:::1;:67::i;:::-;6675:100;;6858:12;6873:78;6887:8;:19;;;6908:15;6925:11;:25;;;-1:-1:-1::0;;;;;6873:78:90::1;:13;:78::i;:::-;6858:93:::0;-1:-1:-1;7035:15:90;;;:144:::1;;;7054:125;7093:4;7099:8;:19;;;7120:10;7132:12;:29;;;-1:-1:-1::0;;;;;7054:125:90::1;:17;:125::i;:::-;7031:196;;;7188:39;;-1:-1:-1::0;;;7188:39:90::1;;;;;;;;;;;7031:196;7432:24;7492:17:::0;7545:23:::1;7571:74;7576:37;7581:8;:19;;;7602:10;7576:4;:37::i;:::-;7615:12;:29;;;-1:-1:-1::0;;;;;7571:74:90::1;:4;:74::i;:::-;7545:100;;7727:15;7675:49;7680:18;:37;;;-1:-1:-1::0;;;;;7675:49:90::1;7719:4;7675;:49::i;:::-;:67;;;;:::i;:::-;7663:79;;7527:234;7778:21;7802:75;7807:12;:29;;;-1:-1:-1::0;;;;;7802:75:90::1;7838:18;:38;;;-1:-1:-1::0;;;;;7802:75:90::1;:4;:75::i;:::-;7778:99;;7895:19;8008:24;368:4:171;8018:13:90;8008:4;:24::i;:::-;7917:68;7922:18;:37;;;-1:-1:-1::0;;;;;7917:68:90::1;7961:5;:23;;;7917:4;:68::i;:::-;:115;;;;:::i;:::-;7895:137;;8069:28;8074:9;8085:11;8069:4;:28::i;:::-;8050:47;;7474:642;;;8238:69;8242:12;8255:1;8242:15;;;;;;;;:::i;:::-;;;;;;;8259:47;8264:16;8282:5;:23;;;8259:4;:47::i;8238:69::-;8210:25;::::0;::::1;:97:::0;8376:68:::1;8210:5:::0;8415:8;8425:11;8438:5;8376:31:::1;:68::i;:::-;8368:76;;6596:1863;;;;6544:1915;-1:-1:-1::0;8485:3:90::1;;6454:2047;;;;8630:296;8697:5;:15;;;8750:58;8755:5;:21;;;8784:5;:23;;;368:4:171;8778:29:90;;;;:::i;8750:58::-;8726:5;:21;;;:82;;;;:::i;:::-;8822:5;:21;;;8857:10;8881:12;:35;;;8630:53;:296::i;:::-;-1:-1:-1::0;9012:21:90::1;::::0;::::1;::::0;8994:15:::1;:39:::0;9159:21:::1;::::0;::::1;::::0;9114:67:::1;::::0;-1:-1:-1;;;9114:67:90;;-1:-1:-1;;;;;9114:3:90::1;:17;::::0;::::1;::::0;:67:::1;::::0;9132:10:::1;::::0;9152:4:::1;::::0;9159:21;9114:67:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;9281:25:90::1;::::0;;::::1;::::0;9266:10:::1;9261:16;::::0;;;:4:::1;:16;::::0;;;;:45;;9281:25;;-1:-1:-1;9261:16:90;;:45:::1;::::0;9281:25;;9261:45:::1;:::i;:::-;::::0;;;-1:-1:-1;;9430:20:90::1;::::0;::::1;::::0;:25;9426:145:::1;;9538:20;::::0;::::1;::::0;9523:36:::1;::::0;-1:-1:-1;;;9523:36:90;;::::1;::::0;::::1;1080:25:181::0;;;;9523:6:90::1;-1:-1:-1::0;;;;;9523:14:90::1;::::0;::::1;::::0;1053:18:181;;9523:36:90::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9426:145;5685:3892;;;;;;5576:4001:::0;;;:::o;3275:97:94:-;3320:16;;:::i;:::-;-1:-1:-1;3348:17:94;;;;;;;;3355:10;3348:17;;;;;;;-1:-1:-1;;;;;;;;3348:17:94;;;;;;;;-1:-1:-1;;;3348:17:94;;;;;;;;;;;;;;;;;;;;;;;;;;3275:97::o;54408:268:88:-;1239:19:47;:17;:19::i;:::-;1079:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;54563:5:88::2;54523:37:::0;;;:21:::2;:37;::::0;;;;:45;;-1:-1:-1;;54523:45:88::2;::::0;;54578:39:::2;:16;54545:14:::0;54578:23:::2;:39::i;:::-;54632:36;::::0;54653:14;;54632:36:::2;::::0;;;::::2;1268:1:47::1;54408:268:88::0;:::o;33733:235::-;33811:19;1239::47;:17;:19::i;:::-;33847:10:88::1;33842:16;::::0;;;:4:::1;:16;::::0;;;;:26;;33862:6;;33842:16;:26:::1;::::0;33862:6;;33842:26:::1;:::i;:::-;::::0;;;-1:-1:-1;33892:24:88::1;::::0;-1:-1:-1;33897:6:88;33905:10:::1;33892:4;:24::i;:::-;33878:38:::0;-1:-1:-1;33926:35:88::1;-1:-1:-1::0;;;;;33926:5:88::1;:18;33945:2:::0;33878:38;33926:18:::1;:35::i;3063:290:170:-:0;3129:16;3148:14;;;;;;;;;;;;3129:33;;;;;;;;;;;;;;;;;;;3177:18;3148:4;3159:2;3177:8;:18::i;:::-;3172:47;;3204:15;;-1:-1:-1;;;3204:15:170;;;;;;;;;;;3172:47;3258:9;;;;;;3240;;3229:10;:21;;;;;;;;;;;:26;;;;:38;;;;3306:9;;3288;;3277:21;;;;;:38;3332:14;;;;;3325:21;;;;;3063:290::o;42487:1736:88:-;42784:26;;:::i;:::-;42812:30;;:::i;:::-;42844:21;42894:14;:12;:14::i;:::-;42882:26;;42932:21;42947:5;42932:14;:21::i;:::-;42918:35;;43191:22;43216:59;43242:9;43253:21;43216:25;:59::i;:::-;43191:84;;43321:71;43345:11;43358:15;43375:16;43321:23;:71::i;:::-;-1:-1:-1;;;;;43293:99:88;:25;;;:99;-1:-1:-1;;;;;43402:53:88;;;43520:143;43402:35;43556:19;;43555:53;;43607:1;43555:53;;;43587:16;43588:15;43587:16;:::i;:::-;43610;43628:11;:25;;;43520:21;:143::i;:::-;-1:-1:-1;;;;;43475:188:88;43491:25;;;43475:188;;-1:-1:-1;43674:23:88;43738:283;43804:5;43823:9;43491:11;43871:21;43906:16;43936:15;43475:188;43992:19;43738:52;:283::i;:::-;43707:314;;-1:-1:-1;43707:314:88;-1:-1:-1;44032:184:88;43707:314;;44127:43;44131:21;44154:15;44127:3;:43::i;:::-;44172:10;44184:22;44032:53;:184::i;:::-;;42872:1351;42487:1736;;;;;;;;;;;:::o;3915:473:170:-;3999:18;4008:4;4014:2;3999:8;:18::i;:::-;3995:43;;;4026:12;;-1:-1:-1;;;4026:12:170;;;;;;;;;;;3995:43;4052:9;;;;;:34;;;4066:20;4075:4;4081;4066:8;:20::i;:::-;4065:21;4052:34;4048:62;;;4095:15;;-1:-1:-1;;;4095:15:170;;;;;;;;;;;4048:62;4120:12;4135:16;;;;;;;;;;:21;;4166:26;;;;4206:9;;:39;;;;-1:-1:-1;4219:10:170;:16;;;;;;;;;;:21;;;:26;4206:39;4202:71;;;4247:10;:16;;;;;;;;;;:21;;:26;;;4202:71;4283:10;:16;;;;;;;;;;;;:21;;;;:26;;;4319:14;;;;;;:26;;;4355:19;;:26;3915:473::o;18161:6907:88:-;18256:14;18280:19;18309:18;18337:20;18367:45;;:::i;:::-;18429:20;18452:17;:15;:17::i;:::-;18792:34;;;18804:21;18792:34;;;;;;;;;18429:40;;-1:-1:-1;18550:25:88;;;;18730:26;;18792:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18778:48;;19018:41;19074:9;19069:1299;3930:1;19085;:22;19069:1299;;-1:-1:-1;;19230:36:88;;;;19183:13;19308;;;:6;:13;;;;;;;;;19282:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3930:1;19282:39;;;;-1:-1:-1;;;;;19282:39:88;;;;;;;-1:-1:-1;;;19282:39:88;;;;;;;;19335:14;;19282:39;;19335:14;;19230:36;;19335:14;;;;;;:::i;:::-;;;;;;:27;;;;19500:10;:28;;;19532:1;19500:33;;:79;;;;-1:-1:-1;19553:21:88;;;;-1:-1:-1;;;;;19553:26:88;;19500:79;:138;;;;-1:-1:-1;19626:12:88;19599:23;3808:1;19599:5;:23;:::i;:::-;:39;;19500:138;19496:481;;;19708:22;;19707:188;;19855:39;;;;-1:-1:-1;;;;;19816:79:88;-1:-1:-1;;;1473:9:171;;;1469:24;1462:32;;19707:188:88;;;19754:10;:39;;;-1:-1:-1;;;;;19707:188:88;;19671:224;;19934:10;:28;;;19913:49;;;;;:::i;:::-;;;19496:481;20103:21;;;;20002:3;;;;;-1:-1:-1;;;;;20103:26:88;;:63;;;;-1:-1:-1;20133:28:88;;;;:33;;20103:63;20099:258;;;20327:30;;;;20288:69;;;;:::i;:::-;;;20099:258;19111:1257;;19069:1299;;;-1:-1:-1;20482:20:88;;20542:30;;-1:-1:-1;;;20542:30:88;;20450:29;;-1:-1:-1;;;;;20542:3:88;:12;;;;:30;;20555:16;;20542:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20522:50;;;20582:27;20671:21;20633:35;20612:18;20622:7;20612:9;:18::i;:::-;:56;;;;:::i;:::-;:80;;;;:::i;:::-;20582:110;-1:-1:-1;20706:23:88;;20702:100;;20731:71;;-1:-1:-1;;;20731:71:88;;-1:-1:-1;;;;;20731:3:88;:17;;;;:71;;20749:16;;20775:4;;20782:19;;20731:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20702:100;20512:301;;20914:18;20942:24;20991:11;;20976:26;;21140:67;21171:35;21140:30;:67::i;:::-;21103:104;;-1:-1:-1;21103:104:88;;-1:-1:-1;21103:104:88;;-1:-1:-1;;21221:17:88;;21217:112;;21317:12;21297:17;21282:11;21273:6;:20;;;;:::i;:::-;21272:42;;;;:::i;:::-;:57;;;;:::i;:::-;21253:76;;21217:112;21343:21;;21339:838;;21603:81;21607:16;21625:58;21630:33;21665:17;21625:4;:58::i;21603:81::-;21584:100;-1:-1:-1;21761:26:88;21790:48;21803:35;21790:10;:48;:::i;:::-;21761:77;-1:-1:-1;21964:67:88;21761:77;-1:-1:-1;;;2045:9:171;;;2041:24;2034:32;;52272:4:88;:56::i;21964:67::-;21951:80;;22132:34;22137:16;22155:10;22132:4;:34::i;:::-;22113:53;;21366:811;21339:838;22276:18;22309:9;22304:1814;3930:1;22320;:22;22304:1814;;22414:13;22496:1;3930;22461:12;:32;:36;22453:44;;22513:23;22539:11;22551:1;22539:14;;;;;;;;:::i;:::-;;;;;;;22513:40;;22691:10;:28;;;22723:1;22691:33;;:79;;;;-1:-1:-1;22744:21:88;;;;-1:-1:-1;;;;;22744:26:88;;22691:79;:138;;;;-1:-1:-1;22817:12:88;22790:23;3808:1;22790:5;:23;:::i;:::-;:39;;22691:138;22687:1390;;;22954:513;;;;;;;;23126:17;23095:10;:28;;;23076:16;:47;;;;:::i;:::-;:67;;;;:::i;:::-;22954:513;;;;23186:10;:30;;;22954:513;;;;23257:46;23262:10;:28;;;23292:10;23257:4;:46::i;:::-;22954:513;;-1:-1:-1;;;;;22954:513:88;;;;;;-1:-1:-1;22954:513:88;;;;;23511:31;;22941:526;;-1:-1:-1;23486:56:88;;;;:::i;:::-;;;23576:10;:28;;;23560:44;;;;;:::i;:::-;;;23808:40;23817:10;:30;;;23808:8;:40::i;:::-;23773:31;;23764:41;;:8;:41::i;:::-;:84;;;;:::i;:::-;23749:99;;;;:::i;:::-;;;23899:1;23866:10;:30;;:34;;;;;24008:10;23991:11;24003:1;23991:14;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;24036:13;;;;:6;:13;;;;;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24036:26:88;;;-1:-1:-1;;;24036:26:88;;;;;;;;;22687:1390;-1:-1:-1;;24102:3:88;;22304:1814;;;-1:-1:-1;24165:20:88;:44;;;24219:11;:26;;;-1:-1:-1;24464:15:88;;24460:93;;;24481:72;;-1:-1:-1;;;24481:72:88;;-1:-1:-1;;;;;24481:3:88;:17;;;;:72;;24507:4;;24514:16;;24540:11;;24481:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24460:93;24691:1;24677:11;:15;24673:94;;;-1:-1:-1;;;;;24694:3:88;:17;;24712:16;24738:4;24753:12;24754:11;24753:12;:::i;:::-;24694:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24673:94;24824:22;24864:26;24849:12;:41;;;;:::i;:::-;24824:66;;24925:14;3930:1;24904:35;24900:162;;25002:11;25034:14;3930:1;25014:34;25002:47;;;;;;;;:::i;:::-;;;;;;;24967:82;;24900:162;18419:6649;;;;;;;;;;18161:6907;;;;;;;:::o;3233:443:171:-;3283:9;3436:1;3432;3428:6;3424:14;3421:1;3418:21;3415:1;3411:29;3408:227;;;3539:10;3533:4;3526:24;3620:4;3614;3607:18;3408:227;-1:-1:-1;3664:3:171;3653:9;;3649:19;;3233:443::o;3460:103:31:-;3526:30;3537:4;719:10:66;3526::31;:30::i;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:31;;;;;;;;;:36;;-1:-1:-1;;7708:36:31;7740:4;7708:36;;;7790:12;719:10:66;;640:96;7790:12:31;-1:-1:-1;;;;;7763:40:31;7781:7;-1:-1:-1;;;;;7763:40:31;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:31;;;;;;;;;;:37;;-1:-1:-1;;8112:37:31;;;8168:40;719:10:66;;8112:12:31;;8168:40;;8144:5;8168:40;7991:234;;:::o;3808:128:94:-;3878:22;;:10;:22;;;;;;;;;;;-1:-1:-1;;;;;3878:22:94;;;-1:-1:-1;;;3878:22:94;-1:-1:-1;;;;3878:22:94;;;-1:-1:-1;;;3878:22:94;-1:-1:-1;;;;;;3878:22:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3915:14;;;3878:22;;3915:14;3808:128;:::o;1818:573:62:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:62;;-1:-1:-1;;;2159:39:62;;2183:4;2159:39;;;17229:34:181;-1:-1:-1;;;;;17299:15:181;;;17279:18;;;17272:43;2159:15:62;;;;;17164:18:181;;2159:39:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;-1:-1:-1;;;2121:163:62;;17528:2:181;2121:163:62;;;17510:21:181;17567:2;17547:18;;;17540:30;17606:34;17586:18;;;17579:62;-1:-1:-1;;;17657:18:181;;;17650:52;17719:19;;2121:163:62;17326:418:181;2121:163:62;2321:62;;-1:-1:-1;;;;;17941:32:181;;2321:62:62;;;17923:51:181;17990:18;;;17983:34;;;2294:90:62;;2314:5;;-1:-1:-1;;;2344:22:62;17896:18:181;;2321:62:62;;;;-1:-1:-1;;2321:62:62;;;;;;;;;;;;;;-1:-1:-1;;;;;2321:62:62;-1:-1:-1;;;;;;2321:62:62;;;;;;;;;;2294:19;:90::i;2433:117:47:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:47::1;::::0;;2521:22:::1;719:10:66::0;2530:12:47::1;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;1767:106::-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:47;;18230:2:181;1828:38:47;;;18212:21:181;18269:2;18249:18;;;18242:30;-1:-1:-1;;;18288:18:181;;;18281:46;18344:18;;1828:38:47;18028:340:181;1828:38:47;1767:106::o;1355:203:62:-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;1455:96::-;1355:203;;;;:::o;4704:487:171:-;4754:9;4934:16;4928:23;;4946:3;4919:33;4912:41;4905:49;;4895:255;;5054:10;5048:4;5041:24;5135:4;5129;5122:18;4895:255;-1:-1:-1;5175:3:171;5168:11;;;;5164:19;;4704:487::o;4399:285:94:-;4471:1;4460:8;:12;;;:45;;;;-1:-1:-1;368:4:171;4476:29:94;;;;;4460:45;:72;;;-1:-1:-1;473:19:94;4509:23;;;;;4460:72;4456:145;;;4553:48;;-1:-1:-1;;;4553:48:94;;;;;;;;;;;4456:145;4611:10;:30;;-1:-1:-1;;4611:30:94;-1:-1:-1;;;;;4611:30:94;;;;;4656:21;;18544:1:181;18533:21;;;18515:40;;4656:21:94;;18503:2:181;18488:18;4656:21:94;;;;;;;4399:285;:::o;34692:2121:88:-;34818:6;34836:19;34889:1;34868:9;:18;;;:22;;;34865:1869;;;-1:-1:-1;;;;;34989:17:88;34949:58;;;;35079:2;35058:23;;;35021:61;;368:4:171;35096:58:88;35150:3;35129:24;;;35096:58;;35415:22;;;35222:3;35201:24;;;35168:58;;35498:22;;;35297:3;35276:24;;;;35240:61;;;35455:25;34949:30;35629:55;35656:9;35667:16;35629:26;:55::i;:::-;35602:82;;35720:19;35701:16;:38;35698:81;;;-1:-1:-1;35760:19:88;35698:81;35981:22;35961:16;:42;35957:695;;36062:148;36088:66;36093:36;36114:15;36093:18;:36;:::i;:::-;36131:22;36088:4;:66::i;:::-;36176:16;36062:4;:148::i;:::-;36044:166;;:15;:166;:::i;:::-;36022:189;;35957:695;;;36456:180;36482:72;36487:36;36505:18;36487:15;:36;:::i;:::-;36525:28;36531:22;368:4:171;36525:28:88;:::i;36482:72::-;36577:41;36596:22;36577:16;:41;:::i;36456:180::-;36435:201;;:18;:201;:::i;:::-;36413:224;;35957:695;34891:1771;;;;;;34865:1869;;;-1:-1:-1;36704:18:88;;34865:1869;36750:56;36782:9;36793:12;36750:31;:56::i;7568:1940:94:-;7910:31;;:::i;:::-;7943:23;7978:28;8009:43;8013:21;8036:15;8009:3;:43::i;:::-;8086:29;;;;7978:74;;-1:-1:-1;8130:20:94;;;;:63;;;8176:17;-1:-1:-1;;;;;8154:39:94;:18;-1:-1:-1;;;;;8154:39:94;;;8130:63;8126:327;;;8365:63;8370:17;-1:-1:-1;;;;;8365:63:94;8389:38;8393:16;8411:15;8389:3;:38::i;8365:63::-;8304:42;8309:18;-1:-1:-1;;;;;8304:42:94;8329:16;8304:4;:42::i;:::-;8256:15;:29;;;:90;;;;:::i;:::-;:172;;;;:::i;:::-;8209:233;;8126:327;8473:32;8509:26;;8508:263;;8543:228;8561:165;8583:57;8588:15;:29;;;8618:21;8583:4;:57::i;:::-;8681:15;:31;;;8658:20;:54;;;;:::i;:::-;-1:-1:-1;;;;;8561:165:94;:4;:165::i;:::-;8741:20;8543:4;:228::i;:::-;8508:263;;;8539:1;8508:263;8473:298;;8782:27;8877:13;-1:-1:-1;;;;;8812:78:94;8850:24;8812:15;:35;;;:62;;;;:::i;:::-;:78;;;;:::i;:::-;8782:108;;8917:266;;;;;;;;8951:15;:24;;;8917:266;;;;;;9063:15;-1:-1:-1;;;;;8917:266:94;;;;;9110:20;-1:-1:-1;;;;;8917:266:94;;;;;9159:13;8917:266;;;;9010:19;8917:266;;;8900:283;;8463:731;;9223:21;9248:1;9223:26;9222:279;;9257:244;9275:181;9303:57;9308:15;:29;;;9338:21;9303:4;:57::i;:::-;9297:63;;368:4:171;9297:63:94;:::i;:::-;9411:15;:31;;;9378:14;:30;;;:64;;;;:::i;9275:181::-;9470:21;9257:4;:244::i;:::-;9222:279;;;9253:1;9222:279;9204:297;;7968:1540;;7568:1940;;;;;;;;;;;:::o;6417:375::-;6562:21;6647:137;6665:85;6670:11;:24;;;-1:-1:-1;;;;;6665:85:94;6714:11;:35;;;6696:15;:53;;;;:::i;6665:85::-;6764:10;6647:4;:137::i;:::-;6611:11;:25;;;:174;;;;:::i;795:103:172:-;841:14;:12;:14::i;:::-;876:15;865:8;:26;795:103::o;63176:3599:88:-;63290:23;63315:27;63354:26;63383:14;:12;:14::i;:::-;63407:45;;;;;;;;63441:11;63407:45;-1:-1:-1;;;;;63407:45:88;;;;-1:-1:-1;;;;;;;;63407:45:88;;;;;;;;-1:-1:-1;;;63407:45:88;;;;;;;;;;;63354:43;;-1:-1:-1;63407:31:88;63483:11;:9;:11::i;:::-;63462:32;;63505:26;;:::i;:::-;63541:27;;;63602:15;;63578:21;;;:39;;;63645:22;;-1:-1:-1;;;;;63627:40:88;:15;;;:40;368:4:171;63677:23:88;;;:29;63541:15;;63742:59;;63559:9;;63742:25;:59::i;:::-;-1:-1:-1;;;;;;;;;;;1276:18:170;63878:22:88;64060:32;;;:16;1276:13:170;64060:32:88;;;;;;;1539:13:170;;;;;;;;:18;63717:84:88;;-1:-1:-1;1276:18:170;64113:1954:88;64144:16;64120:5;:21;;;:40;64113:1954;;;64274:19;;;:59;;;64314:19;64297:14;:36;64274:59;64335:5;64270:70;64434:37;;;;:21;:37;;;;;;;;64433:38;;:59;;-1:-1:-1;64475:17:88;;64433:59;64429:414;;;-1:-1:-1;1908:7:170;1934:14;;;64581:16:88;1934:14:170;;;;;;;;:19;;;64760:32:88;;;:16;:32;;;;;1539:13:170;;;;;;;;;:18;64820:8:88;;64429:414;64972:24;64999:32;;;:16;:32;;;;;;;;2335:14:170;;;;;;;;:19;65071:32:88;;;65067:43;;65105:5;;;65067:43;-1:-1:-1;;;;;65257:16:88;;65170:13;65257:16;;;:9;:16;;;;;;;;65230:43;;;;;;;;;;;;;;;;;;;;;65202:12;;65230:43;;65320:67;;65202:12;;65371:15;65320:22;:67::i;:::-;65287:100;;65424:32;65429:10;65441:14;65424:4;:32::i;:::-;65401:20;;;:55;65517:21;;;;65498:40;;:16;:40;:::i;:::-;65470:25;;;:68;65690:19;;;;65711:35;;65748:25;;;;65641:259;;65676:98;;65690:19;;-1:-1:-1;;;;;65676:98:88;:13;:98::i;:::-;65792:19;;65857:29;;;;65829:10;;-1:-1:-1;;;;;65641:259:88;:17;:259::i;:::-;65637:374;;;65928:68;65960:5;65967:8;65977:11;65990:5;65928:31;:68::i;:::-;65920:76;;65637:374;66040:16;66025:31;;64162:1905;;;;64113:1954;;;66196:235;66263:5;:15;;;66292:5;:21;;;66327:5;:21;;;66362:10;66386:12;:35;;;66196:53;:235::i;:::-;-1:-1:-1;66522:21:88;;;;66504:15;:39;66631:21;;;;66611:41;;66607:93;;66661:39;;-1:-1:-1;;;66661:39:88;;;;;;;;;;;66607:93;66719:5;:21;;;66742:5;:25;;;66711:57;;;;;;;;;;;63176:3599;;;;;:::o;3110:117:142:-;3166:6;3191:1;3187;:5;3184:18;;;-1:-1:-1;3201:1:142;3194:8;;3184:18;-1:-1:-1;3219:1:142;3110:117;-1:-1:-1;3110:117:142:o;3233:120::-;3289:6;3314:1;3310;:5;3307:18;;;-1:-1:-1;3324:1:142;3317:8;;2190:205:171;2294:9;;;2238;2320:5;;:14;;;;;2333:1;2329;:5;2320:14;2319:36;;;;2344:1;2340;:5;:14;;;;;2353:1;2349;:5;2340:14;2314:78;;;2365:27;;-1:-1:-1;;;2365:27:171;;;;;;;;;;;2970:134:142;3016:7;3041:56;3046:11;:9;:11::i;:::-;3067;:28;-1:-1:-1;;;3067:28:142;;-1:-1:-1;;;;;3067:28:142;3041:4;:56::i;1470:197:88:-;1588:12;1651:13;1615:33;1620:10;1632:15;-1:-1:-1;;;;;1615:33:88;:4;:33::i;:::-;:49;;;;:::i;1944:373::-;2062:18;2101:43;2106:20;2113:13;2106:4;:20;:::i;:::-;2128:15;-1:-1:-1;;;;;2101:43:88;:4;:43::i;:::-;2088:56;;2266:4;2206:57;2220:10;2232:15;2249:13;2206;:57::i;:::-;:64;2202:113;;;2294:12;;1944:373;;;;;:::o;5614:457:94:-;5736:21;5810:13;5837:12;;;;;:25;;-1:-1:-1;5853:9:94;;;5837:25;5833:232;;;6004:4;5978:23;-1:-1:-1;;;;;5978:23:94;;:7;:23;:::i;:::-;:30;;;;:::i;:::-;5954:55;-1:-1:-1;6023:31:94;5954:55;6023:31;;:::i;:::-;;;5833:232;5614:457;;;;;;:::o;3678:121:171:-;3727:8;368:4;3767:9;3771:1;3774;3767:3;:9::i;:::-;:23;;;;;:::i;:::-;;;3678:121;-1:-1:-1;;;3678:121:171:o;13002:556:88:-;13232:4;13248:17;13268:69;13282:16;13300:15;13317:19;13268:13;:69::i;:::-;13248:89;-1:-1:-1;13364:14:88;;;;;:143;;;13484:22;-1:-1:-1;;;;;13476:31:88;13382:75;13434:10;13421;13388:5;-1:-1:-1;;;;;13388:15:88;;13412:4;13388:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;:56;;;;:::i;:::-;13447:9;13382:4;:75::i;:::-;:125;13364:143;13347:182;;;13525:4;13518:11;;;;;13347:182;13546:5;13539:12;;;13002:556;;;;;;;;:::o;44423:1034::-;-1:-1:-1;;;;;;;;;;;;;;;;;44791:19:88;;44787:41;;44812:15;44787:3;:41::i;:::-;44765:63;;44864:19;;;;44860:41;;44885:15;44860:3;:41::i;:::-;44838:19;;;:63;;;44988:24;;;;:188;;-1:-1:-1;45154:11:88;:21;45043:19;;;;45064:35;;45101:25;;;;-1:-1:-1;;;;;45154:21:88;;;;45029:98;;45043:19;45064:35;45029:98;:13;:98::i;:::-;:147;44988:188;44984:246;;;45194:36;;-1:-1:-1;;;45194:36:88;;;;;;;;;;;44984:246;-1:-1:-1;;;;;45282:16:88;;;;;;:9;:16;;;;;;;;:27;;;;;;;;;;;;;45325:95;45347:15;45364;45381:38;45385:16;45364:15;45381:3;:38::i;:::-;45325:95;;;8052:25:181;;;8108:2;8093:18;;8086:34;;;;8136:18;;;8129:34;8040:2;8025:18;45325:95:88;;;;;;;-1:-1:-1;45442:8:88;;44423:1034;-1:-1:-1;;;;;44423:1034:88:o;45550:226::-;45694:4;45764;45744:16;45718:23;45731:10;45718;:23;:::i;:::-;:42;;;;:::i;:::-;:50;;;45550:226;-1:-1:-1;;;;;45550:226:88:o;2511:205:171:-;2615:9;;;2559;2641:5;;:14;;;;;2654:1;2650;:5;2641:14;2640:36;;;;2665:1;2661;:5;:14;;;;;2674:1;2670;:5;2661:14;2635:78;;;2686:27;;-1:-1:-1;;;2686:27:171;;;;;;;;;;;34159:424:88;34286:24;34322:18;34343:89;34357:16;34375:9;:25;;;34402:9;:29;;;34343:13;:89::i;:::-;34322:110;-1:-1:-1;34462:15:88;;34461:115;;34497:79;34502:10;34559:16;;34527:3;-1:-1:-1;;;;;34527:14:88;;34550:4;34527:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34514:42;;:10;:42;:::i;:::-;:61;;;;:::i;34497:79::-;34461:115;;;34493:1;34442:134;34159:424;-1:-1:-1;;;;34159:424:88:o;777:132:171:-;820:6;-1:-1:-1;;;838:1:171;:12;834:50;;859:25;;-1:-1:-1;;;859:25:171;;;;;;;;;;;834:50;-1:-1:-1;904:1:171;777:132::o;2819:350:94:-;2900:18;;:::i;:::-;2934:35;;-1:-1:-1;;;;;2934:40:94;:35;:40;2930:205;;3017:1;2990:24;;;:28;;;368:4:171;3032:49:94;;3095:25;;;:29;-1:-1:-1;3151:11:94;2819:350::o;58789:378:88:-;58917:30;;:::i;:::-;58973:21;58988:5;58973:14;:21::i;:::-;58959:35;;59032:65;59056:11;59069:15;59086:10;59032:23;:65::i;:::-;-1:-1:-1;;;;;59004:93:88;:25;;;:93;-1:-1:-1;;;;;59107:53:88;;;;;59004:11;58789:378;-1:-1:-1;;58789:378:88:o;59261:3570::-;59435:20;;:::i;:::-;59548:24;59582:28;59620:23;59653:21;59694:12;59709:120;59736:8;:19;;;59757:11;:35;;;59794:11;:25;;;-1:-1:-1;;;;;59709:120:88;:13;:120::i;:::-;59694:135;;59839:23;59865:56;59870:5;:25;;;59897:5;:23;;;59865:4;:56::i;:::-;59839:82;;60064:479;60292:15;60285:4;:22;:66;;;;-1:-1:-1;60336:15:88;;;;60311:22;60318:15;60311:4;:22;:::i;:::-;:40;60285:66;60284:182;;60431:35;60436:4;60442:5;:23;;;60431:4;:35::i;:::-;60284:182;;;60375:53;60387:5;:15;;;60380:4;:22;;;;:::i;:::-;60404:5;:23;;;60375:4;:53::i;:::-;60484:49;60491:8;:19;;;60512:5;:20;;;60484:6;:49::i;60064:479::-;60641:25;;;;59931:612;;-1:-1:-1;;;;1473:9:171;;;1469:24;1462:32;60618:66:88;;60754:17;60774:47;60779:16;60797:5;:23;;;60774:4;:47::i;:::-;60754:67;;60877:65;60899:9;60910:4;60916:11;:25;;;60877:21;:65::i;:::-;-1:-1:-1;;;;;60832:110:88;;;60848:25;;;60832:110;61001:35;;60832:110;;-1:-1:-1;60970:82:88;;60990:9;;60970:82;;:19;:82::i;:::-;60952:100;;61154:44;61159:16;61177:5;:20;;;61154:4;:44::i;:::-;61235:19;;61131:67;;-1:-1:-1;61212:42:88;;61208:90;;;61279:19;;;-1:-1:-1;61208:90:88;61407:19;;61383:43;;:97;;;;;61465:15;61443:8;:19;;;:37;61383:97;61366:240;;;61528:16;61535:9;61528:4;:16;:::i;:::-;61504:5;:20;;:40;;;;;;;:::i;:::-;;;-1:-1:-1;61576:19:88;;;;;-1:-1:-1;61366:240:88;59684:1932;;;61651:24;61678:5;:21;;;61651:48;;61818:23;61888:280;61954:5;61973;:15;;;62002:11;62027:16;62057:8;:19;;;62091:25;62100:15;62091:8;:25::i;:::-;62090:26;;;:::i;:::-;62130:13;62157:1;61888:52;:280::i;:::-;61851:317;;;;-1:-1:-1;62265:206:88;62294:5;62313:8;62335:11;62361:30;62370:20;62361:8;:30::i;:::-;62360:31;;;:::i;:::-;62406:25;62415:15;62406:8;:25::i;:::-;62405:26;;;:::i;:::-;62445:16;62265:15;:206::i;:::-;;62626:15;62601:5;:21;;:40;;;;;;;:::i;:::-;;;-1:-1:-1;62651:25:88;;;:49;;62680:20;;62651:25;:49;;62680:20;;62651:49;:::i;:::-;;;-1:-1:-1;62710:21:88;;;:41;;62735:16;;62710:21;:41;;62735:16;;62710:41;:::i;:::-;;;-1:-1:-1;62761:21:88;;;:40;;62786:15;;62761:21;:40;;62786:15;;62761:40;:::i;:::-;;;-1:-1:-1;62819:5:88;;59261:3570;-1:-1:-1;;;;;;;;;;59261:3570:88:o;41240:691::-;41486:7;41554:201;41587:22;41623:10;41647:16;41677:9;:25;;;41716:9;:29;;;41554:19;:201::i;:::-;41804:24;41818:9;41804:13;:24::i;:::-;41906:18;41919:4;41906:12;:18::i;:::-;41899:25;41240:691;-1:-1:-1;;;;;;41240:691:88:o;941:175:62:-;1050:58;;-1:-1:-1;;;;;17941:32:181;;1050:58:62;;;17923:51:181;17990:18;;;17983:34;;;1023:86:62;;1043:5;;-1:-1:-1;;;1073:23:62;17896:18:181;;1050:58:62;17749:274:181;2601:224:170;2673:4;2693:2;2699:1;2693:7;2689:30;;2709:10;;-1:-1:-1;;;2709:10:170;;;;;;;;;;;2689:30;2737:10;:14;;;;;;;;;;:19;:24;;;:52;;-1:-1:-1;2765:10:170;:14;;;;;;;;;;:19;;;:24;;2737:52;:80;;;-1:-1:-1;;2793:10:170;:13;;;;;;;;;;;;:18;;;:24;;2601:224::o;39515:1359:88:-;39872:27;;:::i;:::-;39964:24;;;;;39901:23;40187:39;;;:11;:39;;;;;;;40117:260;;40167:5;;40240:38;40244:16;40262:15;40240:3;:38::i;:::-;-1:-1:-1;;;;;40293:24:88;;;40292:75;;40348:19;40117:16;:260::i;40292:75::-;40321:11;:24;;;40117:16;:260::i;:::-;-1:-1:-1;;;;;40090:287:88;:24;;;:287;40441:35;40457:5;40090:11;40441:15;:35::i;:::-;40575:292;40608:9;40631:11;:35;;;40680:21;40715:16;40745:15;40774:18;40806:11;:24;;;40844:13;40575:19;:292::i;:::-;40543:324;;;;-1:-1:-1;39515:1359:88;-1:-1:-1;;;;;;;;;;39515:1359:88:o;442:110:87:-;491:7;524:1;514:7;:11;513:36;;541:7;513:36;;;529:1;506:43;442:110;-1:-1:-1;;442:110:87:o;15395:1592:88:-;15499:14;15515:19;15536:14;15552:18;15588:14;15604:19;15627:3;-1:-1:-1;;;;;15627:12:88;;15648:4;15627:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15587:67;;;;15673:18;15683:7;15673:9;:18::i;:::-;15664:27;;15714:35;15728:7;15737:11;15714:13;:35::i;:::-;15701:48;;15806:26;15835:14;:12;:14::i;:::-;15886:15;;15806:43;;-1:-1:-1;15859:24:88;15976:141;15806:43;16020:54;15806:43;15886:15;16020:25;:54::i;:::-;16076:16;16094:1;16097;16100;16103;16106;15976:19;:141::i;:::-;15945:172;;-1:-1:-1;15945:172:88;-1:-1:-1;16128:25:88;16156:170;15945:172;;16251:16;16269:11;:9;:11::i;:::-;16282;:34;-1:-1:-1;;;16282:34:88;;-1:-1:-1;;;;;16282:34:88;16156:53;:170::i;:::-;16128:198;;16482:111;16509:16;16527:9;:25;;;16554:9;:29;;;16482:13;:111::i;:::-;16443:36;16452:27;16443:6;:36;:::i;:::-;:150;;;;:::i;:::-;16434:159;;16789:17;16770:16;16778:7;16770;:16::i;:::-;:36;;;;:::i;:::-;16756:50;;16900:11;16891:6;:20;16887:93;;;16920:60;;-1:-1:-1;;;16920:60:88;;;;;;;;;;;16887:93;15577:1410;;;;;;15395:1592;;;;;:::o;509:133:171:-;552:6;-1:-1:-1;;;570:1:171;:13;566:51;;592:25;;-1:-1:-1;;;592:25:171;;;;;;;;;;;3844:479:31;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:31;;;;;;;;;;-1:-1:-1;;;3970:336:31;;;;;;;:::i;5173:642:62:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:62;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:62;;21056:2:181;5697:111:62;;;21038:21:181;21095:2;21075:18;;;21068:30;21134:34;21114:18;;;21107:62;-1:-1:-1;;;21185:18:181;;;21178:40;21235:19;;5697:111:62;20854:406:181;1945:106:47;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:47;;21467:2:181;2003:41:47;;;21449:21:181;21506:2;21486:18;;;21479:30;-1:-1:-1;;;21525:18:181;;;21518:50;21585:18;;2003:41:47;21265:344:181;5107:368:94;5224:22;5307:150;5329:9;:25;;;-1:-1:-1;;;;;5307:150:94;5372:71;5385:8;-1:-1:-1;;;;;5377:17:94;5415:9;:21;;;-1:-1:-1;;;;;5397:39:94;:15;:39;368:4:171;5372::94;:71::i;2186:115:47:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:14:::0;;-1:-1:-1;;2245:14:47::1;::::0;::::1;::::0;;2274:20:::1;719:10:66::0;2281:12:47::1;640:96:66::0;2832:207:171;2920:13;;;2880:8;2947:13;;;:47;;-1:-1:-1;2965:6:171;;;;;:28;;;2991:1;2979;2975;:5;;;;;:::i;:::-;;:18;;2965:28;2943:87;;;3003:27;;-1:-1:-1;;;3003:27:171;;;;;;;;;;;4001:509;4053:9;4230:1;4226;4222:6;4218:14;4215:1;4212:21;4209:1;4205:29;4202:225;;;4332:10;4326:4;4319:24;4412:4;4406;4399:18;4202:225;-1:-1:-1;4497:3:171;4486:9;;4459:19;;;4452:27;4445:35;4482:19;;;4441:61;;4001:509::o;13754:422:88:-;13987:135;14022:22;14046:10;14058:16;14076:15;14093:19;13987:21;:135::i;:::-;13983:186;;;14131:38;;-1:-1:-1;;;14131:38:88;;;;;;;;;;;13983:186;13754:422;;;;;:::o;36873:166::-;36952:7;1239:19:47;:17;:19::i;:::-;36998:34:88::1;37003:15;37020:11;36998:4;:34::i;:::-;36978:16;;:54;;;;;;;:::i;:::-;;;;;;;36971:61;;1268:1:47;36873:166:88::0;;;:::o;57639:429::-;57832:19;57865:14;;;;;:46;;;57901:10;57883:15;;:28;57865:46;57861:201;;;57927:27;;;;:16;:27;;;;;:48;;57962:12;57927:34;:48::i;:::-;-1:-1:-1;;;57996:25:88;;;;-1:-1:-1;57996:11:88;:25;;;;;57989:32;;;57996:25;57639:429::o;4120:176:94:-;-1:-1:-1;;;;;4214:22:94;;;;;;:12;:22;;;;;;;;;:36;;;;;;;;;;;;-1:-1:-1;;;;;4214:36:94;;;-1:-1:-1;;;4214:36:94;-1:-1:-1;;;;;4214:36:94;;;-1:-1:-1;;;4214:36:94;-1:-1:-1;;;;;;4214:36:94;;;;;;;;;;;;;;;;;;;;;;;;;4265:24;;;;;4227:8;;4265:24;:::i;665:206:87:-;739:7;;774:20;782:11;774:20;:::i;:::-;754:40;;818:10;808:7;:20;807:61;;846:20;859:7;846:10;:20;:::i;:::-;844:23;;;:::i;554:109::-;601:7;634:1;624:7;:11;623:37;;651:8;652:7;651:8;:::i;:::-;623:37;;2407:149:70;2465:13;2497:52;-1:-1:-1;;;;;2509:22:70;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:70;;1918:47;;-1:-1:-1;;;1975:6:70;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:70;;;;;;;;;-1:-1:-1;;;2000:6:70;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:70;;;;;;;;-1:-1:-1;2030:9:70;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:70;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:70;;;;;;;;-1:-1:-1;2141:1:70;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:70;;2162:55;;;;-1:-1:-1;;;2162:55:70;;21957:2:181;2162:55:70;;;21939:21:181;;;21976:18;;;21969:30;22035:34;22015:18;;;22008:62;22087:18;;2162:55:70;21755:356:181;4109:223:65;4242:12;4273:52;4295:6;4303:4;4309:1;4312:12;4273:21;:52::i;6052:1709:171:-;6127:9;6209:1;6223:45;;;;6314:1;6332:53;;;;6439:9;;;6469:61;;;;6590:1;6585:6;;6432:181;;6469:61;6507:1;6502:6;;6432:181;;6653:1;6650;6646:9;6735:1;6732;6728:9;6723:14;;6693:1018;6760:1;6693:1018;;;6868:1;6865;6861:9;6907:1;6902:3;6898:11;6895:83;;;6950:1;6947;6940:12;6895:83;7026:4;7022:2;7018:13;7071:2;7062:7;7059:15;7056:87;;;7115:1;7112;7105:12;7056:87;7173:15;;;;-1:-1:-1;;7216:9:171;;;7213:476;;;7273:1;7270;7266:9;7352:1;7348;7344:2;7340:10;7337:17;7330:25;7325:1;7318:9;7311:17;7307:49;7304:129;;;7401:1;7398;7391:12;7304:129;7485:4;7481:2;7477:13;7534:2;7525:7;7522:15;7519:95;;;7582:1;7579;7572:12;7519:95;7648:15;;;;-1:-1:-1;;7213:476:171;6800:1;6797;6793:9;6788:14;;6693:1018;;;6697:62;6307:1422;;6332:53;6366:1;6361:6;;6307:1422;;6202:1541;;6223:45;6253:1;6248:6;;6202:1541;;6052:1709;;;;;:::o;5166:446:65:-;5331:12;5388:5;5363:21;:30;;5355:81;;;;-1:-1:-1;;;5355:81:65;;22318:2:181;5355:81:65;;;22300:21:181;22357:2;22337:18;;;22330:30;22396:34;22376:18;;;22369:62;-1:-1:-1;;;22447:18:181;;;22440:36;22493:19;;5355:81:65;22116:402:181;5355:81:65;5447:12;5461:23;5488:6;-1:-1:-1;;;;;5488:11:65;5507:5;5514:4;5488:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:73;;;;5536:69;5563:6;5571:7;5580:10;5592:12;5536:26;:69::i;:::-;5529:76;5166:446;-1:-1:-1;;;;;;;5166:446:65:o;7672:628::-;7852:12;7880:7;7876:418;;;7907:10;:17;7928:1;7907:22;7903:286;;-1:-1:-1;;;;;1702:19:65;;;8114:60;;;;-1:-1:-1;;;8114:60:65;;23017:2:181;8114:60:65;;;22999:21:181;23056:2;23036:18;;;23029:30;23095:31;23075:18;;;23068:59;23144:18;;8114:60:65;22815:353:181;8114:60:65;-1:-1:-1;8209:10:65;8202:17;;7876:418;8250:33;8258:10;8270:12;8981:17;;:21;8977:379;;9209:10;9203:17;9265:15;9252:10;9248:2;9244:19;9237:44;8977:379;9332:12;9325:20;;-1:-1:-1;;;9325:20:65;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:181:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:181;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:181;;604:42;;594:70;;660:1;657;650:12;675:254;743:6;751;804:2;792:9;783:7;779:23;775:32;772:52;;;820:1;817;810:12;772:52;856:9;843:23;833:33;;885:38;919:2;908:9;904:18;885:38;:::i;:::-;875:48;;675:254;;;;;:::o;1498:180::-;1557:6;1610:2;1598:9;1589:7;1585:23;1581:32;1578:52;;;1626:1;1623;1616:12;1578:52;-1:-1:-1;1649:23:181;;1498:180;-1:-1:-1;1498:180:181:o;1865:118::-;1951:5;1944:13;1937:21;1930:5;1927:32;1917:60;;1973:1;1970;1963:12;1988:315;2053:6;2061;2114:2;2102:9;2093:7;2089:23;2085:32;2082:52;;;2130:1;2127;2120:12;2082:52;2153:29;2172:9;2153:29;:::i;:::-;2143:39;;2232:2;2221:9;2217:18;2204:32;2245:28;2267:5;2245:28;:::i;:::-;2292:5;2282:15;;;1988:315;;;;;:::o;2493:248::-;2561:6;2569;2622:2;2610:9;2601:7;2597:23;2593:32;2590:52;;;2638:1;2635;2628:12;2590:52;-1:-1:-1;;2661:23:181;;;2731:2;2716:18;;;2703:32;;-1:-1:-1;2493:248:181:o;3005:186::-;3064:6;3117:2;3105:9;3096:7;3092:23;3088:32;3085:52;;;3133:1;3130;3123:12;3085:52;3156:29;3175:9;3156:29;:::i;3196:254::-;3264:6;3272;3325:2;3313:9;3304:7;3300:23;3296:32;3293:52;;;3341:1;3338;3331:12;3293:52;3364:29;3383:9;3364:29;:::i;:::-;3354:39;3440:2;3425:18;;;;3412:32;;-1:-1:-1;;;3196:254:181:o;3971:127::-;4032:10;4027:3;4023:20;4020:1;4013:31;4063:4;4060:1;4053:15;4087:4;4084:1;4077:15;4103:902;4157:5;4210:3;4203:4;4195:6;4191:17;4187:27;4177:55;;4228:1;4225;4218:12;4177:55;4264:6;4251:20;4290:4;-1:-1:-1;;;;;4350:2:181;4346;4343:10;4340:36;;;4356:18;;:::i;:::-;4402:2;4399:1;4395:10;4434:2;4428:9;4497:2;4493:7;4488:2;4484;4480:11;4476:25;4468:6;4464:38;4552:6;4540:10;4537:22;4532:2;4520:10;4517:18;4514:46;4511:72;;;4563:18;;:::i;:::-;4599:2;4592:22;4649:18;;;4725:15;;;4721:24;;;4683:15;;;;-1:-1:-1;4757:15:181;;;4754:35;;;4785:1;4782;4775:12;4754:35;4821:2;4813:6;4809:15;4798:26;;4833:142;4849:6;4844:3;4841:15;4833:142;;;4915:17;;4903:30;;4953:12;;;;4866;;;;4833:142;;5010:416;5103:6;5111;5164:2;5152:9;5143:7;5139:23;5135:32;5132:52;;;5180:1;5177;5170:12;5132:52;5216:9;5203:23;5193:33;;5277:2;5266:9;5262:18;5249:32;-1:-1:-1;;;;;5296:6:181;5293:30;5290:50;;;5336:1;5333;5326:12;5290:50;5359:61;5412:7;5403:6;5392:9;5388:22;5359:61;:::i;:::-;5349:71;;;5010:416;;;;;:::o;6481:220::-;-1:-1:-1;;;;;6662:32:181;;;;6644:51;;6632:2;6617:18;;6481:220::o;7053:389::-;7127:6;7135;7143;7196:2;7184:9;7175:7;7171:23;7167:32;7164:52;;;7212:1;7209;7202:12;7164:52;7235:29;7254:9;7235:29;:::i;:::-;7225:39;;7283:38;7317:2;7306:9;7302:18;7283:38;:::i;:::-;7273:48;;7371:2;7360:9;7356:18;7343:32;7384:28;7406:5;7384:28;:::i;:::-;7431:5;7421:15;;;7053:389;;;;;:::o;7447:402::-;7532:6;7540;7548;7556;7609:3;7597:9;7588:7;7584:23;7580:33;7577:53;;;7626:1;7623;7616:12;7577:53;7649:29;7668:9;7649:29;:::i;:::-;7639:39;;7697:38;7731:2;7720:9;7716:18;7697:38;:::i;:::-;7687:48;;7754:38;7788:2;7777:9;7773:18;7754:38;:::i;:::-;7447:402;;;;-1:-1:-1;7744:48:181;;7839:2;7824:18;7811:32;;-1:-1:-1;;7447:402:181:o;8906:470::-;8999:6;9007;9015;9023;9031;9084:3;9072:9;9063:7;9059:23;9055:33;9052:53;;;9101:1;9098;9091:12;9052:53;9124:29;9143:9;9124:29;:::i;:::-;9114:39;;9172:38;9206:2;9195:9;9191:18;9172:38;:::i;:::-;9162:48;;9229:38;9263:2;9252:9;9248:18;9229:38;:::i;:::-;8906:470;;;;-1:-1:-1;9219:48:181;;9314:2;9299:18;;9286:32;;-1:-1:-1;9365:3:181;9350:19;9337:33;;8906:470;-1:-1:-1;;8906:470:181:o;9586:260::-;9654:6;9662;9715:2;9703:9;9694:7;9690:23;9686:32;9683:52;;;9731:1;9728;9721:12;9683:52;9754:29;9773:9;9754:29;:::i;:::-;9744:39;;9802:38;9836:2;9825:9;9821:18;9802:38;:::i;10307:847::-;10427:6;10435;10443;10496:2;10484:9;10475:7;10471:23;10467:32;10464:52;;;10512:1;10509;10502:12;10464:52;10552:9;10539:23;-1:-1:-1;;;;;10622:2:181;10614:6;10611:14;10608:34;;;10638:1;10635;10628:12;10608:34;10676:6;10665:9;10661:22;10651:32;;10721:7;10714:4;10710:2;10706:13;10702:27;10692:55;;10743:1;10740;10733:12;10692:55;10783:2;10770:16;10809:2;10801:6;10798:14;10795:34;;;10825:1;10822;10815:12;10795:34;10880:7;10873:4;10863:6;10860:1;10856:14;10852:2;10848:23;10844:34;10841:47;10838:67;;;10901:1;10898;10891:12;10838:67;10932:4;10924:13;;;;-1:-1:-1;10956:6:181;-1:-1:-1;11000:20:181;;;10987:34;;11033:16;;;11030:36;;;11062:1;11059;11052:12;11030:36;;11085:63;11140:7;11129:8;11118:9;11114:24;11085:63;:::i;:::-;11075:73;;;10307:847;;;;;:::o;12829:127::-;12890:10;12885:3;12881:20;12878:1;12871:31;12921:4;12918:1;12911:15;12945:4;12942:1;12935:15;12961:128;13028:9;;;13049:11;;;13046:37;;;13063:18;;:::i;13094:125::-;13159:9;;;13180:10;;;13177:36;;;13193:18;;:::i;13224:168::-;13297:9;;;13328;;13345:15;;;13339:22;;13325:37;13315:71;;13366:18;;:::i;13397:127::-;13458:10;13453:3;13449:20;13446:1;13439:31;13489:4;13486:1;13479:15;13513:4;13510:1;13503:15;13529:217;13569:1;13595;13585:132;;13639:10;13634:3;13630:20;13627:1;13620:31;13674:4;13671:1;13664:15;13702:4;13699:1;13692:15;13585:132;-1:-1:-1;13731:9:181;;13529:217::o;13751:375::-;-1:-1:-1;;;;;14009:15:181;;;13991:34;;14061:15;;;;14056:2;14041:18;;14034:43;14108:2;14093:18;;14086:34;;;;13941:2;13926:18;;13751:375::o;14547:184::-;14617:6;14670:2;14658:9;14649:7;14645:23;14641:32;14638:52;;;14686:1;14683;14676:12;14638:52;-1:-1:-1;14709:16:181;;14547:184;-1:-1:-1;14547:184:181:o;15025:127::-;15086:10;15081:3;15077:20;15074:1;15067:31;15117:4;15114:1;15107:15;15141:4;15138:1;15131:15;15481:466;-1:-1:-1;;;;;15762:15:181;;;15744:34;;15814:15;;;15809:2;15794:18;;15787:43;15866:15;;15861:2;15846:18;;15839:43;15925:14;;15918:22;15913:2;15898:18;;15891:50;15693:3;15678:19;;15481:466::o;15952:136::-;15987:3;-1:-1:-1;;;16008:22:181;;16005:48;;16033:18;;:::i;:::-;-1:-1:-1;16073:1:181;16069:13;;15952:136::o;16093:200::-;16159:9;;;16132:4;16187:9;;16215:10;;16227:12;;;16211:29;16250:12;;;16242:21;;16208:56;16205:82;;;16267:18;;:::i;16298:216::-;16362:9;;;16390:11;;;16337:3;16420:9;;16448:10;;16444:19;;16473:10;;16465:19;;16441:44;16438:70;;;16488:18;;:::i;:::-;16438:70;;16298:216;;;;:::o;16768:244::-;16846:6;16854;16907:2;16895:9;16886:7;16882:23;16878:32;16875:52;;;16923:1;16920;16913:12;16875:52;-1:-1:-1;;16946:16:181;;17002:2;16987:18;;;16981:25;16946:16;;16981:25;;-1:-1:-1;16768:244:181:o;18566:183::-;-1:-1:-1;;;;;18685:10:181;;;18673;;;18669:27;;18708:12;;;18705:38;;;18723:18;;:::i;18754:182::-;-1:-1:-1;;;;;18861:10:181;;;18873;;;18857:27;;18896:11;;;18893:37;;;18910:18;;:::i;18941:185::-;-1:-1:-1;;;;;19062:10:181;;;19050;;;19046:27;;19085:12;;;19082:38;;;19100:18;;:::i;19131:250::-;19216:1;19226:113;19240:6;19237:1;19234:13;19226:113;;;19316:11;;;19310:18;19297:11;;;19290:39;19262:2;19255:10;19226:113;;;-1:-1:-1;;19373:1:181;19355:16;;19348:27;19131:250::o;19386:812::-;-1:-1:-1;;;19792:3:181;19785:38;19767:3;19852:6;19846:13;19868:75;19936:6;19931:2;19926:3;19922:12;19915:4;19907:6;19903:17;19868:75;:::i;:::-;-1:-1:-1;;;20002:2:181;19962:16;;;19994:11;;;19987:40;20052:13;;20074:76;20052:13;20136:2;20128:11;;20121:4;20109:17;;20074:76;:::i;:::-;20170:17;20189:2;20166:26;;19386:812;-1:-1:-1;;;;19386:812:181:o;20203:396::-;20352:2;20341:9;20334:21;20315:4;20384:6;20378:13;20427:6;20422:2;20411:9;20407:18;20400:34;20443:79;20515:6;20510:2;20499:9;20495:18;20490:2;20482:6;20478:15;20443:79;:::i;:::-;20583:2;20562:15;-1:-1:-1;;20558:29:181;20543:45;;;;20590:2;20539:54;;20203:396;-1:-1:-1;;20203:396:181:o;20604:245::-;20671:6;20724:2;20712:9;20703:7;20699:23;20695:32;20692:52;;;20740:1;20737;20730:12;20692:52;20772:9;20766:16;20791:28;20813:5;20791:28;:::i;21614:136::-;21653:3;21681:5;21671:39;;21690:18;;:::i;:::-;-1:-1:-1;;;21726:18:181;;21614:136::o;22523:287::-;22652:3;22690:6;22684:13;22706:66;22765:6;22760:3;22753:4;22745:6;22741:17;22706:66;:::i;:::-;22788:16;;;;;22523:287;-1:-1:-1;;22523:287:181:o",
    "linkReferences": {},
    "immutableReferences": {
      "41561": [
        {
          "start": 2512,
          "length": 32
        },
        {
          "start": 3975,
          "length": 32
        },
        {
          "start": 4855,
          "length": 32
        },
        {
          "start": 5948,
          "length": 32
        },
        {
          "start": 7753,
          "length": 32
        },
        {
          "start": 7894,
          "length": 32
        },
        {
          "start": 8024,
          "length": 32
        },
        {
          "start": 8336,
          "length": 32
        },
        {
          "start": 8854,
          "length": 32
        },
        {
          "start": 9710,
          "length": 32
        },
        {
          "start": 9841,
          "length": 32
        },
        {
          "start": 10425,
          "length": 32
        },
        {
          "start": 10614,
          "length": 32
        },
        {
          "start": 12007,
          "length": 32
        },
        {
          "start": 13675,
          "length": 32
        },
        {
          "start": 13891,
          "length": 32
        },
        {
          "start": 14628,
          "length": 32
        },
        {
          "start": 14787,
          "length": 32
        },
        {
          "start": 18658,
          "length": 32
        },
        {
          "start": 19947,
          "length": 32
        }
      ],
      "41565": [
        {
          "start": 1673,
          "length": 32
        },
        {
          "start": 4519,
          "length": 32
        }
      ],
      "41569": [
        {
          "start": 2643,
          "length": 32
        },
        {
          "start": 10472,
          "length": 32
        },
        {
          "start": 12195,
          "length": 32
        }
      ],
      "41573": [
        {
          "start": 2720,
          "length": 32
        },
        {
          "start": 4564,
          "length": 32
        },
        {
          "start": 4776,
          "length": 32
        },
        {
          "start": 5345,
          "length": 32
        },
        {
          "start": 12646,
          "length": 32
        },
        {
          "start": 18055,
          "length": 32
        }
      ],
      "41576": [
        {
          "start": 1206,
          "length": 32
        },
        {
          "start": 5391,
          "length": 32
        },
        {
          "start": 12595,
          "length": 32
        },
        {
          "start": 18021,
          "length": 32
        }
      ],
      "41579": [
        {
          "start": 1978,
          "length": 32
        },
        {
          "start": 21041,
          "length": 32
        }
      ],
      "41594": [
        {
          "start": 2066,
          "length": 32
        },
        {
          "start": 4020,
          "length": 32
        },
        {
          "start": 5995,
          "length": 32
        },
        {
          "start": 13720,
          "length": 32
        },
        {
          "start": 13936,
          "length": 32
        },
        {
          "start": 14675,
          "length": 32
        },
        {
          "start": 14826,
          "length": 32
        }
      ],
      "41597": [
        {
          "start": 10003,
          "length": 32
        },
        {
          "start": 16245,
          "length": 32
        }
      ],
      "41600": [
        {
          "start": 10213,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "EPOCH_DURATION()": "a70b9f0c",
    "EPOCH_FIX_DELAY()": "472132f0",
    "EPOCH_FIX_TIMEOUT()": "19f1039c",
    "activeLimitPriceTicks(uint256)": "683f81a1",
    "addLimitPriceTick(uint256,uint256)": "44a3c664",
    "buffer()": "edaafe20",
    "calculateRebateFactorForPriceTick(uint256)": "cb6238c8",
    "cancelLimitOrder()": "2202ce8c",
    "cash(address)": "b6dc16f6",
    "cdm()": "e2dfb317",
    "claimFees()": "d294f093",
    "claimUndelegatedCredit(uint256)": "2b2368a2",
    "createLimitOrder(uint256)": "2906f94e",
    "creditWithholder()": "bf404a41",
    "delegateCredit(uint256)": "93f9eb35",
    "deposit(address,uint256)": "47e7ef24",
    "enterEmergencyMode()": "9844afd2",
    "epochs(uint256)": "c6b61e4c",
    "exchange(uint256,uint256)": "d4b7eac3",
    "exchangePreview(uint256,uint256)": "88439aea",
    "getCurrentEpoch()": "b97dd9e2",
    "getGlobalIRS()": "eb953449",
    "getLimitOrder(uint256,uint256)": "2af8992b",
    "getMaximumDebtForCollateral(address,address,address,int256)": "8f1e5f63",
    "getPositionIRS(address)": "dbe6b31c",
    "getPriceTick(uint256)": "51f813ec",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasPermission(address,address)": "cde68041",
    "hasRole(bytes32,address)": "91d14854",
    "limitOrderFloor()": "dc2ec249",
    "limitOrders(uint256)": "a3e2b495",
    "liquidatePositions(address[],uint256[])": "df10f687",
    "liquidationConfig()": "1c580ad5",
    "modifyCollateralAndDebt(address,address,address,int256,int256)": "c75a4b5e",
    "modifyPermission(address,address,bool)": "8309dbdd",
    "modifyPermission(address,bool)": "d9c70f57",
    "oracle()": "7dc0d1d0",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "pausedAt()": "2e55d0f2",
    "positions(address)": "55f57510",
    "protocolFee()": "b0e21e8a",
    "removeLimitPriceTick(uint256)": "ef0563fb",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setParameter(bytes32,uint256)": "723507be",
    "setPermissionAgent(address,bool)": "280c37ef",
    "setUp(address)": "3f2601ef",
    "shares(address)": "ce7c2ac2",
    "sharesQueuedByEpoch(uint256,address)": "14815a6d",
    "spotPrice()": "398482d8",
    "supportsInterface(bytes4)": "01ffc9a7",
    "token()": "fc0c546a",
    "tokenScale()": "342c02b1",
    "totalAccruedFees()": "ba95534c",
    "totalCreditClaimable()": "5fe83c7b",
    "totalNormalDebt()": "842c311e",
    "totalShares()": "3a98ef39",
    "undelegateCredit(uint256,uint256[])": "6e5e741e",
    "unpause()": "3f4ba83a",
    "vaultConfig()": "7cc34bb4",
    "virtualIRS(address)": "8051ba75",
    "withdraw(address,uint256)": "f3fef3a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CDPVault__addLimitPriceTick_invalidPriceTickOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__addLimitPriceTick_limitPriceTickOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__calculateAssetsAndLiabilities_insufficientAssets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__cancelLimitOrder_limitOrderDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__checkEmergencyMode_entered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__claimUndelegatedCredit_epochNotClaimable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__claimUndelegatedCredit_epochNotFixed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitOrderAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitOrderFloor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitPriceTickNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__delegateCredit_creditAmountTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__exchange_notEnoughExchanged\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__liquidatePosition_notUnsafe\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__liquidatePositions_argLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_maxUtilizationRatio\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_noPermission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_notSafe\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyPosition_debtFloor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__setParameter_unrecognizedParameter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InterestRateModel__setBaseRate_invalidBaseRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ItemInList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ItemNotInList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__add_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__mul_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__sub_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toInt256_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toUint64_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permission__modifyPermission_notPermitted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"AddLimitPriceTick\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"CancelLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesRedeemed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditClaimed\",\"type\":\"uint256\"}],\"name\":\"ClaimUndelegatedCredit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"CreateLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditDelegated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesIssued\",\"type\":\"uint256\"}],\"name\":\"DelegateCredit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRedeemed\",\"type\":\"uint256\"}],\"name\":\"Exchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRedeemed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"}],\"name\":\"ExecuteLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralReleased\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"normalDebtRepaid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"}],\"name\":\"LiquidatePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"}],\"name\":\"ModifyCollateralAndDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"grant\",\"type\":\"bool\"}],\"name\":\"ModifyPermission\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalNormalDebt\",\"type\":\"uint256\"}],\"name\":\"ModifyPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"RemoveLimitPriceTick\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"baseRate\",\"type\":\"int64\"}],\"name\":\"SetBaseRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SetGlobalIRS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"SetParameter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"grant\",\"type\":\"bool\"}],\"name\":\"SetPermittedAgent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"}],\"name\":\"SetPositionIRS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"estimatedClaim\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimableAtEpoch\",\"type\":\"uint256\"}],\"name\":\"UndelegateCredit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EPOCH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EPOCH_FIX_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EPOCH_FIX_TIMEOUT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"name\":\"activeLimitPriceTicks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextLimitPriceTick\",\"type\":\"uint256\"}],\"name\":\"addLimitPriceTick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buffer\",\"outputs\":[{\"internalType\":\"contract IBuffer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"name\":\"calculateRebateFactorForPriceTick\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"cash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cdm\",\"outputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feesClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimForEpoch\",\"type\":\"uint256\"}],\"name\":\"claimUndelegatedCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"createLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditWithholder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditAmount\",\"type\":\"uint256\"}],\"name\":\"delegateCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cashAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterEmergencyMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"epochs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCreditClaimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCreditWithheld\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSharesQueued\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"claimRatio\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"estimatedCreditClaimPerShare\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"upperLimitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditToExchange\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralExchanged\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"upperLimitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditToExchange\",\"type\":\"uint256\"}],\"name\":\"exchangePreview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralExchanged\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentEpoch\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalIRS\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"baseRate\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"lastUpdated\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"rateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"averageRebate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"globalAccruedRebate\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.GlobalIRS\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getLimitOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"deltaCollateral_\",\"type\":\"int256\"}],\"name\":\"getMaximumDebtForCollateral\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"creditNeeded\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"}],\"name\":\"getPositionIRS\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"snapshotRateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"rebateFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"accruedRebate\",\"type\":\"uint128\"}],\"internalType\":\"struct InterestRateModel.PositionIRS\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPriceTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitOrderFloor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"}],\"name\":\"limitOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"repayAmounts\",\"type\":\"uint256[]\"}],\"name\":\"liquidatePositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationConfig\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"liquidationPenalty\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationDiscount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"targetHealthFactor\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"}],\"name\":\"modifyCollateralAndDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"modifyPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"modifyPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"normalDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"removeLimitPriceTick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"setParameter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"setPermissionAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"unwinderFactory\",\"type\":\"address\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"sharesQueuedByEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesQueued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spotPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAccruedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCreditClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalNormalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"prevQueuedEpochs\",\"type\":\"uint256[]\"}],\"name\":\"undelegateCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"estimatedClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableAtEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixableUntilEpoch\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultConfig\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"debtFloor\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"liquidationRatio\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"globalLiquidationRatio\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"}],\"name\":\"virtualIRS\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"rateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"accruedRebate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"globalAccruedRebate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addLimitPriceTick(uint256,uint256)\":{\"details\":\"Requires caller to have 'TICK_MANAGER_ROLE' role\",\"params\":{\"limitPriceTick\":\"The limit price tick to add [wad]\",\"nextLimitPriceTick\":\"The next (higher) limit price tick (0 if there's no higher price tick) [wad]\"}},\"calculateRebateFactorForPriceTick(uint256)\":{\"params\":{\"priceTick\":\"Price tick from which to derive the rebate factor from [wad]\"},\"returns\":{\"_0\":\"_ Rebate factor [wad]\"}},\"claimUndelegatedCredit(uint256)\":{\"details\":\"The undelegated amount of credit can be claimed after the epoch fix delay has passed\",\"params\":{\"claimForEpoch\":\"Epoch at which the undelegation was initiated\"},\"returns\":{\"creditAmount\":\"Amount of credit undelegated [wad]\"}},\"createLimitOrder(uint256)\":{\"params\":{\"limitPriceTick\":\"Limit price tick of the limit order (between 1.0 and 100) [wad]\"}},\"delegateCredit(uint256)\":{\"details\":\"The caller needs to permit this contract to transfer credit on their behalf\",\"params\":{\"creditAmount\":\"Amount of credit to delegate [wad]\"},\"returns\":{\"sharesAmount\":\"Amount of shares issued [wad]\"}},\"deposit(address,uint256)\":{\"details\":\"The caller needs to approve this contract to transfer tokens on their behalf\",\"params\":{\"amount\":\"Amount of tokens to deposit [tokenScale]\",\"to\":\"Address of the user to attribute the cash to\"},\"returns\":{\"cashAmount\":\"Amount of cash deposited [wad]\"}},\"enterEmergencyMode()\":{\"details\":\"This method will revert if the vault has already been paused\"},\"exchange(uint256,uint256)\":{\"params\":{\"creditToExchange\":\"Amount of credit to exchange for collateral [wad]\",\"upperLimitPriceTick\":\"Upper limit price tick (> 1.0) [wad]\"},\"returns\":{\"collateralExchanged\":\"Amount of collateral exchanged [wad]\",\"creditExchanged\":\"Amount of credit exchanged [wad]\"}},\"exchangePreview(uint256,uint256)\":{\"params\":{\"creditToExchange\":\"Amount of credit to exchange for collateral [wad]\",\"upperLimitPriceTick\":\"Upper limit price tick (> 1.0) [wad]\"},\"returns\":{\"collateralExchanged\":\"Amount of collateral exchanged [wad]\",\"creditExchanged\":\"Amount of credit exchanged [wad]\"}},\"getCurrentEpoch()\":{\"returns\":{\"currentEpoch\":\"Current epoch\"}},\"getGlobalIRS()\":{\"returns\":{\"_0\":\"_ Global interest rate state\"}},\"getLimitOrder(uint256,uint256)\":{\"params\":{\"index\":\"Index of the limit order in the linked list\",\"priceTick\":\"Price tick of the limit order\"},\"returns\":{\"limitOrderId\":\"Limit order id\"}},\"getPositionIRS(address)\":{\"params\":{\"position\":\"Address of position (owner)\"},\"returns\":{\"_0\":\"_ Interest rate state of the position\"}},\"getPriceTick(uint256)\":{\"params\":{\"index\":\"Index of the price tick in the linked list\"},\"returns\":{\"isActive\":\"Whether the price tick is active\",\"priceTick\":\"Price tick [wad]\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasPermission(address,address)\":{\"params\":{\"caller\":\"Address of the caller\",\"owner\":\"Address of the owner\"},\"returns\":{\"_0\":\"_ whether `caller` has the permission\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"liquidatePositions(address[],uint256[])\":{\"details\":\"The liquidator has to approve the vault to transfer the sum of `repayAmounts`.\",\"params\":{\"owners\":\"Owners of the positions to liquidate\",\"repayAmounts\":\"Amounts the liquidator wants to repay for each position [wad]\"}},\"modifyCollateralAndDebt(address,address,address,int256,int256)\":{\"details\":\"Checks that the global debt ceiling and the vault's debt ceiling have not been exceeded via the CDM, - that the Position is still safe after the modification, - that the msg.sender has the permission of the owner to decrease the collateral-to-debt ratio, - that the msg.sender has the permission of the collateralizer to put up new collateral, - that the msg.sender has the permission of the creditor to settle debt with their credit, - that that the vault debt floor is exceeded - that the vault minimum collateralization ratio is met, otherwise it will transition into emergency mode\",\"params\":{\"collateralizer\":\"Address of who puts up or receives the collateral delta\",\"creditor\":\"Address of who provides or receives the credit delta for the debt delta\",\"deltaCollateral\":\"Amount of collateral to put up (+) or to remove (-) from the position [wad]\",\"deltaNormalDebt\":\"Amount of normalized debt (gross, before rate is applied) to generate (+) or to settle (-) on this position [wad]\",\"owner\":\"Address of the owner of the position\"}},\"modifyPermission(address,address,bool)\":{\"params\":{\"caller\":\"Address of the caller to grant or revoke permission for\",\"owner\":\"Address of the owner\",\"permitted\":\"Whether to grant or revoke permission\"}},\"modifyPermission(address,bool)\":{\"params\":{\"caller\":\"Address of the caller to grant or revoke permission for\",\"permitted\":\"Whether to grant or revoke permission\"}},\"pause()\":{\"details\":\"Sender has to be allowed to call this method\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeLimitPriceTick(uint256)\":{\"details\":\"Requires caller to have 'TICK_MANAGER_ROLE' role\",\"params\":{\"limitPriceTick\":\"limit price tick to remove [wad]\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setParameter(bytes32,uint256)\":{\"details\":\"Sender has to be allowed to call this method\",\"params\":{\"data\":\"New value to set for the variable [wad]\",\"parameter\":\"Name of the variable to set\"}},\"setPermissionAgent(address,bool)\":{\"params\":{\"agent\":\"Address of the agent to grant or revoke permission for\",\"permitted\":\"Whether to grant or revoke permission\"}},\"spotPrice()\":{\"returns\":{\"_0\":\"_ Current spot price of the collateral token [wad]\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"undelegateCredit(uint256,uint256[])\":{\"details\":\"Transfer an estimated amount of credit to be undelegated to the credit withholder contract\",\"params\":{\"prevQueuedEpochs\":\"Array of stale epochs for which shares were queued\",\"shareAmount\":\"Amount of shares to redeem [wad]\"},\"returns\":{\"claimableAtEpoch\":\"Epoch at which the undelegated credit can be claimed by the delegator\",\"currentEpoch\":\"Epoch at which the undelegation was initiated\",\"estimatedClaim\":\"Estimated amount of withdrawable credit, if no bad debt is accrued [wad]\",\"fixableUntilEpoch\":\"Epoch at which the credit claim of the epoch has to be fixed by\"}},\"unpause()\":{\"details\":\"Sender has to be allowed to call this method\"},\"virtualIRS(address)\":{\"params\":{\"position\":\"Address of the position to return the accrued rebate for\"},\"returns\":{\"accruedRebate\":\"The accrued rebate of a position [wad]\",\"globalAccruedRebate\":\"The global accrued rebate [wad]\",\"rateAccumulator\":\"Current global rate accumulator [wad]\"}},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"Amount of tokens to withdraw [wad]\",\"to\":\"Address of the user to withdraw tokens to\"},\"returns\":{\"tokenAmount\":\"Amount of tokens withdrawn [tokenScale]\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"EPOCH_DURATION()\":{\"notice\":\"Number of seconds in an epoch [seconds]\"},\"EPOCH_FIX_DELAY()\":{\"notice\":\"Number of epochs that have to pass until an epoch claim can be fixed\"},\"EPOCH_FIX_TIMEOUT()\":{\"notice\":\"Number of epochs for which an epoch claim can be fixed\"},\"activeLimitPriceTicks(uint256)\":{\"notice\":\"Map specifying if a given price tick is active [wad]\"},\"addLimitPriceTick(uint256,uint256)\":{\"notice\":\"Adds a new price tick to the limit price tick linked list\"},\"buffer()\":{\"notice\":\"Global surplus and debt Buffer\"},\"calculateRebateFactorForPriceTick(uint256)\":{\"notice\":\"Calculates the rebate factor for a given price tick\"},\"cancelLimitOrder()\":{\"notice\":\"Cancels an existing limit order for a given position (user)\"},\"cash(address)\":{\"notice\":\"Map specifying the cash balances a user has [wad]\"},\"cdm()\":{\"notice\":\"CDM (Credit and Debt Manager)\"},\"claimFees()\":{\"notice\":\"Sends accrued protocol fees to the Buffer\"},\"claimUndelegatedCredit(uint256)\":{\"notice\":\"Claims the undelegated amount of credit. If the claim has not been fixed within the timeout then the resulting credit claim will be 0 (it will not revert).\"},\"createLimitOrder(uint256)\":{\"notice\":\"Creates a new limit order for a given position (user). The price tick represents a fee on the current oracle price of the collateral asset for which it can be redeemed for Stablecoin\"},\"creditWithholder()\":{\"notice\":\"Withholder for amounts of credit to be undelegated (claims that are fixed or are about to be fixed)\"},\"delegateCredit(uint256)\":{\"notice\":\"Delegates credit to this contract\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits collateral tokens into this contract and increases a users cash balance\"},\"enterEmergencyMode()\":{\"notice\":\"Triggers the emergency mode by pausing the vault if global collateralization ratio is below the emergency threshold\"},\"epochs(uint256)\":{\"notice\":\"Map of epochs\"},\"exchange(uint256,uint256)\":{\"notice\":\"Exchange credit for collateral\"},\"exchangePreview(uint256,uint256)\":{\"notice\":\"Preview exchanging credit for collateral\"},\"getCurrentEpoch()\":{\"notice\":\"Computes the current epoch based on the block.timestamp and the duration of an epoch\"},\"getGlobalIRS()\":{\"notice\":\"Returns the global interest rate state\"},\"getLimitOrder(uint256,uint256)\":{\"notice\":\"Returns a limit order id at an index in the limit order linked list (sorted from oldest to newest)\"},\"getPositionIRS(address)\":{\"notice\":\"Returns the interest rate state of a position\"},\"getPriceTick(uint256)\":{\"notice\":\"Returns a price tick at an index in the price tick linked list (sorted from lowest to highest)\"},\"hasPermission(address,address)\":{\"notice\":\"Checks if `caller` has the permission to perform an action on behalf of `owner`\"},\"limitOrderFloor()\":{\"notice\":\"Minimum principal amount of a limit order [wad]\"},\"limitOrders(uint256)\":{\"notice\":\"Map of limit order makers\"},\"liquidatePositions(address[],uint256[])\":{\"notice\":\"Liquidates multiple unsafe positions by selling as much collateral as required to cover the debt in order to make the positions safe again. The collateral can be bought at a discount (`liquidationDiscount`) to the current spot price. The liquidator has to provide the amount he wants repay or sell (`repayAmounts`) for each position. From that repay amount a penalty (`liquidationPenalty`) is subtracted to mitigate against profitable self liquidations. If the available collateral of a position is not sufficient to cover the debt the vault is able to apply for a bail out from the global Buffer, any residual bad debt not covered by the  Buffer will be attributed to the credit delegators.\"},\"liquidationConfig()\":{\"notice\":\"Liquidation configuration\"},\"modifyCollateralAndDebt(address,address,address,int256,int256)\":{\"notice\":\"Modifies a Position's collateral and debt balances\"},\"modifyPermission(address,address,bool)\":{\"notice\":\"Gives or revokes the permission for `caller` to perform an action on behalf of `owner`\"},\"modifyPermission(address,bool)\":{\"notice\":\"Gives or revokes the permission for `caller` to perform an action on behalf of `msg.sender`\"},\"oracle()\":{\"notice\":\"Oracle of the collateral token\"},\"pause()\":{\"notice\":\"Pauses the contract\"},\"positions(address)\":{\"notice\":\"Map of user positions\"},\"protocolFee()\":{\"notice\":\"Portion of interest that goes to the protocol [wad]\"},\"removeLimitPriceTick(uint256)\":{\"notice\":\"Removes limit price tick\"},\"setParameter(bytes32,uint256)\":{\"notice\":\"Sets various variables for this contract\"},\"setPermissionAgent(address,bool)\":{\"notice\":\"Gives or revokes the permission for the `agent` to modify the permissions of `msg.sender`\"},\"shares(address)\":{\"notice\":\"Number of shares currently issued to a delegator [wad]\"},\"sharesQueuedByEpoch(uint256,address)\":{\"notice\":\"Number of shares that have been queued for undelegation for a specific epoch by a delegator [wad]\"},\"spotPrice()\":{\"notice\":\"Returns the current spot price of the collateral token\"},\"token()\":{\"notice\":\"collateral token\"},\"tokenScale()\":{\"notice\":\"Collateral token's decimals scale (10 ** decimals)\"},\"totalAccruedFees()\":{\"notice\":\"Total current amount of accrued protocol fees [wad]\"},\"totalCreditClaimable()\":{\"notice\":\"Total credit claimable by undelegating delegators in all fixed epochs [wad]\"},\"totalNormalDebt()\":{\"notice\":\"Sum of backed normalized debt over all positions [wad]\"},\"totalShares()\":{\"notice\":\"Total number of shares currently issued to delegators [wad]\"},\"undelegateCredit(uint256,uint256[])\":{\"notice\":\"Signals (initiates) the undelegation of credit from this vault\"},\"unpause()\":{\"notice\":\"Unpauses the contract\"},\"vaultConfig()\":{\"notice\":\"CDPVault configuration\"},\"virtualIRS(address)\":{\"notice\":\"Returns the current global rate accumulator, global accrued rebate and the accrued rebate of a position\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws collateral tokens from this contract and decreases a users cash balance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/invariant/CDPVault_TypeAWrapper.sol\":\"CDPVault_TypeAWrapper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/CDM.sol\":{\"keccak256\":\"0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99\",\"dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L\"]},\"src/CDPVault.sol\":{\"keccak256\":\"0xb59663a5a96b5abe638f2fb4a5e4d0918a41607cbaee2e974ab2317f271be131\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4292cb1e12fe471b852e223ce612c5c666cdaac948f1b2803e45edc2ea8c213\",\"dweb:/ipfs/QmNykUHbviSx2HKe6v45qU7B7wjC5Fre3xunPYCAjdcZMx\"]},\"src/CDPVault_TypeA.sol\":{\"keccak256\":\"0x295d22000f94f24713ca284f6a5cedd1a32deaa9fe125622dbebd011f2be31aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d9c0b0f59e9bae0a036b325b16cb999de39b33d08637986ef93ff31a8d11cd7\",\"dweb:/ipfs/QmbgTUAes12DrcbTac6TRfpvM9iEdRp4Zx7XJPowGrcMBR\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x681ca8dbbb9637f112fd4668dd549380579f269e3c60af2e84578192f4cfeda8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b4b3abe1c4c38c8ea7c5f1ed9e4d5d1a4cedeadbf65b466a3ca96ebbdb2b77\",\"dweb:/ipfs/Qmd1RVYuiiESg4rwWVR2qB9zSxQvpfqbtPJxGagP6KES6L\"]},\"src/interfaces/IBuffer.sol\":{\"keccak256\":\"0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff\",\"dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/ICDPVault.sol\":{\"keccak256\":\"0x7ce3b81164802c14566697092c69fb355d9c31ab846dfc8d90edd5d6a6eb68e3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://343c84ea42c9846dc3907a6ca2d4c55df6e0cbaea7a83ed2c7458174560a86d6\",\"dweb:/ipfs/QmWcAoAFQYL7YzeFnd5t4HMHxEZHiFirsNHJGL7FoBCkF6\"]},\"src/interfaces/ICDPVault_TypeA.sol\":{\"keccak256\":\"0x67e73a065253428bf75f8541da4b1530e4bae6c57ffb17520aba4a48aa132b5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94911a895e5a455a2eb23eea973a36c847f27dd1a3ee7a34470bc226751f0aa6\",\"dweb:/ipfs/Qmcv7WBZnEnm6zjYBGZFikYeyjnMyPb65XEA8cBUkXZ9BR\"]},\"src/interfaces/ICDPVault_TypeA_Deployer.sol\":{\"keccak256\":\"0x8245ec611a017f4e12fd4a0b077bad26f11fbc6ed648724a746398398a1692f0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://35c624fc1f5ecf6f7027ed98859b41f36b89109a8adaf740c93668f97958b66b\",\"dweb:/ipfs/QmPupkyJYaVSbVGPHPj4H5LZgJXtKqX7NgN7bCwwWZ7Tyj\"]},\"src/interfaces/ICDPVault_TypeA_Factory.sol\":{\"keccak256\":\"0x9ea6fe3a8b5d6ab2f041c72b6058e1e59b3df5e12d54ccc845a27f90f45ddf01\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c805f1c1b060173d445de751c4a8565232938ad23a6d200c08b99eb634679638\",\"dweb:/ipfs/QmSajnrXMZHMwYF8Y2C6obNp1K7bq2XjexdkqcVoHDFhGm\"]},\"src/interfaces/IInterestRateModel.sol\":{\"keccak256\":\"0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599\",\"dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da\",\"dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF\"]},\"src/interfaces/IPause.sol\":{\"keccak256\":\"0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec\",\"dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]},\"src/test/invariant/CDPVault_TypeAWrapper.sol\":{\"keccak256\":\"0xc28d4a79e5ea012a44d6c0fc2f4ddf2c43f4c611f02dbd7b4a07db8c39964432\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://926f4e983bf1dd15111e60582d5dd3cc2f7f643f8ab977d9c98da416ced9a0e0\",\"dweb:/ipfs/QmcURjzxdbPS3rkFpBejwBL7CsBJRGv92QH9wgRCZtN7XY\"]},\"src/utils/DoubleLinkedList.sol\":{\"keccak256\":\"0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb\",\"dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/utils/Pause.sol\":{\"keccak256\":\"0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1\",\"dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL\"]},\"src/utils/Permission.sol\":{\"keccak256\":\"0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb\",\"dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__addLimitPriceTick_invalidPriceTickOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__addLimitPriceTick_limitPriceTickOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__calculateAssetsAndLiabilities_insufficientAssets"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__cancelLimitOrder_limitOrderDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__checkEmergencyMode_entered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__claimUndelegatedCredit_epochNotClaimable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__claimUndelegatedCredit_epochNotFixed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitOrderAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitOrderFloor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitPriceTickNotActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__delegateCredit_creditAmountTooSmall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__exchange_notEnoughExchanged"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__liquidatePosition_notUnsafe"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__liquidatePositions_argLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_maxUtilizationRatio"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_noPermission"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_notSafe"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyPosition_debtFloor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__setParameter_unrecognizedParameter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IdIsZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InterestRateModel__setBaseRate_invalidBaseRate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ItemInList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ItemNotInList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__add_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__mul_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__sub_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toInt256_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toUint64_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Permission__modifyPermission_notPermitted"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddLimitPriceTick",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CancelLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "sharesRedeemed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "creditClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimUndelegatedCredit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CreateLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "creditDelegated",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "sharesIssued",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateCredit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "redeemer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "collateralRedeemed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Exchange",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "collateralRedeemed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecuteLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "collateralReleased",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "normalDebtRepaid",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LiquidatePosition",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyCollateralAndDebt",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authorizer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "grant",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyPermission",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalNormalDebt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyPosition",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemoveLimitPriceTick",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int64",
              "name": "baseRate",
              "type": "int64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetBaseRate",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "SetGlobalIRS",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "parameter",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "data",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetParameter",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "grant",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetPermittedAgent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetPositionIRS",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "shareAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "estimatedClaim",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "claimableAtEpoch",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UndelegateCredit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EPOCH_DURATION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EPOCH_FIX_DELAY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EPOCH_FIX_TIMEOUT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "activeLimitPriceTicks",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextLimitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLimitPriceTick"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "buffer",
          "outputs": [
            {
              "internalType": "contract IBuffer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateRebateFactorForPriceTick",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelLimitOrder"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cdm",
          "outputs": [
            {
              "internalType": "contract ICDM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "feesClaimed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimForEpoch",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimUndelegatedCredit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createLimitOrder"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creditWithholder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateCredit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sharesAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cashAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enterEmergencyMode"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "epochs",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalCreditClaimable",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalCreditWithheld",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSharesQueued",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "claimRatio",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "estimatedCreditClaimPerShare",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "upperLimitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditToExchange",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exchange",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralExchanged",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "upperLimitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditToExchange",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exchangePreview",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralExchanged",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentEpoch",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentEpoch",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGlobalIRS",
          "outputs": [
            {
              "internalType": "struct InterestRateModel.GlobalIRS",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int64",
                  "name": "baseRate",
                  "type": "int64"
                },
                {
                  "internalType": "uint64",
                  "name": "lastUpdated",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "rateAccumulator",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "averageRebate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "globalAccruedRebate",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLimitOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral_",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getMaximumDebtForCollateral",
          "outputs": [
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "creditNeeded",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionIRS",
          "outputs": [
            {
              "internalType": "struct InterestRateModel.PositionIRS",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "snapshotRateAccumulator",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "rebateFactor",
                  "type": "uint64"
                },
                {
                  "internalType": "uint128",
                  "name": "accruedRebate",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriceTick",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasPermission",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "limitOrderFloor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "limitOrders",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "repayAmounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidatePositions"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidationConfig",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "liquidationPenalty",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidationDiscount",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "targetHealthFactor",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyCollateralAndDebt"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyPermission"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyPermission"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "contract IOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pausedAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "positions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "normalDebt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLimitPriceTick"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "parameter",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "data",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setParameter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPermissionAgent"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "unwinderFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "shares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesQueuedByEpoch",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sharesQueued",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "spotPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAccruedFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalCreditClaimable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalNormalDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shareAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "prevQueuedEpochs",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegateCredit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "estimatedClaim",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentEpoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimableAtEpoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fixableUntilEpoch",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultConfig",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "debtFloor",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "liquidationRatio",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "globalLiquidationRatio",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "virtualIRS",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "rateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "accruedRebate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "globalAccruedRebate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addLimitPriceTick(uint256,uint256)": {
            "details": "Requires caller to have 'TICK_MANAGER_ROLE' role",
            "params": {
              "limitPriceTick": "The limit price tick to add [wad]",
              "nextLimitPriceTick": "The next (higher) limit price tick (0 if there's no higher price tick) [wad]"
            }
          },
          "calculateRebateFactorForPriceTick(uint256)": {
            "params": {
              "priceTick": "Price tick from which to derive the rebate factor from [wad]"
            },
            "returns": {
              "_0": "_ Rebate factor [wad]"
            }
          },
          "claimUndelegatedCredit(uint256)": {
            "details": "The undelegated amount of credit can be claimed after the epoch fix delay has passed",
            "params": {
              "claimForEpoch": "Epoch at which the undelegation was initiated"
            },
            "returns": {
              "creditAmount": "Amount of credit undelegated [wad]"
            }
          },
          "createLimitOrder(uint256)": {
            "params": {
              "limitPriceTick": "Limit price tick of the limit order (between 1.0 and 100) [wad]"
            }
          },
          "delegateCredit(uint256)": {
            "details": "The caller needs to permit this contract to transfer credit on their behalf",
            "params": {
              "creditAmount": "Amount of credit to delegate [wad]"
            },
            "returns": {
              "sharesAmount": "Amount of shares issued [wad]"
            }
          },
          "deposit(address,uint256)": {
            "details": "The caller needs to approve this contract to transfer tokens on their behalf",
            "params": {
              "amount": "Amount of tokens to deposit [tokenScale]",
              "to": "Address of the user to attribute the cash to"
            },
            "returns": {
              "cashAmount": "Amount of cash deposited [wad]"
            }
          },
          "enterEmergencyMode()": {
            "details": "This method will revert if the vault has already been paused"
          },
          "exchange(uint256,uint256)": {
            "params": {
              "creditToExchange": "Amount of credit to exchange for collateral [wad]",
              "upperLimitPriceTick": "Upper limit price tick (> 1.0) [wad]"
            },
            "returns": {
              "collateralExchanged": "Amount of collateral exchanged [wad]",
              "creditExchanged": "Amount of credit exchanged [wad]"
            }
          },
          "exchangePreview(uint256,uint256)": {
            "params": {
              "creditToExchange": "Amount of credit to exchange for collateral [wad]",
              "upperLimitPriceTick": "Upper limit price tick (> 1.0) [wad]"
            },
            "returns": {
              "collateralExchanged": "Amount of collateral exchanged [wad]",
              "creditExchanged": "Amount of credit exchanged [wad]"
            }
          },
          "getCurrentEpoch()": {
            "returns": {
              "currentEpoch": "Current epoch"
            }
          },
          "getGlobalIRS()": {
            "returns": {
              "_0": "_ Global interest rate state"
            }
          },
          "getLimitOrder(uint256,uint256)": {
            "params": {
              "index": "Index of the limit order in the linked list",
              "priceTick": "Price tick of the limit order"
            },
            "returns": {
              "limitOrderId": "Limit order id"
            }
          },
          "getPositionIRS(address)": {
            "params": {
              "position": "Address of position (owner)"
            },
            "returns": {
              "_0": "_ Interest rate state of the position"
            }
          },
          "getPriceTick(uint256)": {
            "params": {
              "index": "Index of the price tick in the linked list"
            },
            "returns": {
              "isActive": "Whether the price tick is active",
              "priceTick": "Price tick [wad]"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasPermission(address,address)": {
            "params": {
              "caller": "Address of the caller",
              "owner": "Address of the owner"
            },
            "returns": {
              "_0": "_ whether `caller` has the permission"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "liquidatePositions(address[],uint256[])": {
            "details": "The liquidator has to approve the vault to transfer the sum of `repayAmounts`.",
            "params": {
              "owners": "Owners of the positions to liquidate",
              "repayAmounts": "Amounts the liquidator wants to repay for each position [wad]"
            }
          },
          "modifyCollateralAndDebt(address,address,address,int256,int256)": {
            "details": "Checks that the global debt ceiling and the vault's debt ceiling have not been exceeded via the CDM, - that the Position is still safe after the modification, - that the msg.sender has the permission of the owner to decrease the collateral-to-debt ratio, - that the msg.sender has the permission of the collateralizer to put up new collateral, - that the msg.sender has the permission of the creditor to settle debt with their credit, - that that the vault debt floor is exceeded - that the vault minimum collateralization ratio is met, otherwise it will transition into emergency mode",
            "params": {
              "collateralizer": "Address of who puts up or receives the collateral delta",
              "creditor": "Address of who provides or receives the credit delta for the debt delta",
              "deltaCollateral": "Amount of collateral to put up (+) or to remove (-) from the position [wad]",
              "deltaNormalDebt": "Amount of normalized debt (gross, before rate is applied) to generate (+) or to settle (-) on this position [wad]",
              "owner": "Address of the owner of the position"
            }
          },
          "modifyPermission(address,address,bool)": {
            "params": {
              "caller": "Address of the caller to grant or revoke permission for",
              "owner": "Address of the owner",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "modifyPermission(address,bool)": {
            "params": {
              "caller": "Address of the caller to grant or revoke permission for",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "pause()": {
            "details": "Sender has to be allowed to call this method"
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "removeLimitPriceTick(uint256)": {
            "details": "Requires caller to have 'TICK_MANAGER_ROLE' role",
            "params": {
              "limitPriceTick": "limit price tick to remove [wad]"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "setParameter(bytes32,uint256)": {
            "details": "Sender has to be allowed to call this method",
            "params": {
              "data": "New value to set for the variable [wad]",
              "parameter": "Name of the variable to set"
            }
          },
          "setPermissionAgent(address,bool)": {
            "params": {
              "agent": "Address of the agent to grant or revoke permission for",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "spotPrice()": {
            "returns": {
              "_0": "_ Current spot price of the collateral token [wad]"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "undelegateCredit(uint256,uint256[])": {
            "details": "Transfer an estimated amount of credit to be undelegated to the credit withholder contract",
            "params": {
              "prevQueuedEpochs": "Array of stale epochs for which shares were queued",
              "shareAmount": "Amount of shares to redeem [wad]"
            },
            "returns": {
              "claimableAtEpoch": "Epoch at which the undelegated credit can be claimed by the delegator",
              "currentEpoch": "Epoch at which the undelegation was initiated",
              "estimatedClaim": "Estimated amount of withdrawable credit, if no bad debt is accrued [wad]",
              "fixableUntilEpoch": "Epoch at which the credit claim of the epoch has to be fixed by"
            }
          },
          "unpause()": {
            "details": "Sender has to be allowed to call this method"
          },
          "virtualIRS(address)": {
            "params": {
              "position": "Address of the position to return the accrued rebate for"
            },
            "returns": {
              "accruedRebate": "The accrued rebate of a position [wad]",
              "globalAccruedRebate": "The global accrued rebate [wad]",
              "rateAccumulator": "Current global rate accumulator [wad]"
            }
          },
          "withdraw(address,uint256)": {
            "params": {
              "amount": "Amount of tokens to withdraw [wad]",
              "to": "Address of the user to withdraw tokens to"
            },
            "returns": {
              "tokenAmount": "Amount of tokens withdrawn [tokenScale]"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "EPOCH_DURATION()": {
            "notice": "Number of seconds in an epoch [seconds]"
          },
          "EPOCH_FIX_DELAY()": {
            "notice": "Number of epochs that have to pass until an epoch claim can be fixed"
          },
          "EPOCH_FIX_TIMEOUT()": {
            "notice": "Number of epochs for which an epoch claim can be fixed"
          },
          "activeLimitPriceTicks(uint256)": {
            "notice": "Map specifying if a given price tick is active [wad]"
          },
          "addLimitPriceTick(uint256,uint256)": {
            "notice": "Adds a new price tick to the limit price tick linked list"
          },
          "buffer()": {
            "notice": "Global surplus and debt Buffer"
          },
          "calculateRebateFactorForPriceTick(uint256)": {
            "notice": "Calculates the rebate factor for a given price tick"
          },
          "cancelLimitOrder()": {
            "notice": "Cancels an existing limit order for a given position (user)"
          },
          "cash(address)": {
            "notice": "Map specifying the cash balances a user has [wad]"
          },
          "cdm()": {
            "notice": "CDM (Credit and Debt Manager)"
          },
          "claimFees()": {
            "notice": "Sends accrued protocol fees to the Buffer"
          },
          "claimUndelegatedCredit(uint256)": {
            "notice": "Claims the undelegated amount of credit. If the claim has not been fixed within the timeout then the resulting credit claim will be 0 (it will not revert)."
          },
          "createLimitOrder(uint256)": {
            "notice": "Creates a new limit order for a given position (user). The price tick represents a fee on the current oracle price of the collateral asset for which it can be redeemed for Stablecoin"
          },
          "creditWithholder()": {
            "notice": "Withholder for amounts of credit to be undelegated (claims that are fixed or are about to be fixed)"
          },
          "delegateCredit(uint256)": {
            "notice": "Delegates credit to this contract"
          },
          "deposit(address,uint256)": {
            "notice": "Deposits collateral tokens into this contract and increases a users cash balance"
          },
          "enterEmergencyMode()": {
            "notice": "Triggers the emergency mode by pausing the vault if global collateralization ratio is below the emergency threshold"
          },
          "epochs(uint256)": {
            "notice": "Map of epochs"
          },
          "exchange(uint256,uint256)": {
            "notice": "Exchange credit for collateral"
          },
          "exchangePreview(uint256,uint256)": {
            "notice": "Preview exchanging credit for collateral"
          },
          "getCurrentEpoch()": {
            "notice": "Computes the current epoch based on the block.timestamp and the duration of an epoch"
          },
          "getGlobalIRS()": {
            "notice": "Returns the global interest rate state"
          },
          "getLimitOrder(uint256,uint256)": {
            "notice": "Returns a limit order id at an index in the limit order linked list (sorted from oldest to newest)"
          },
          "getPositionIRS(address)": {
            "notice": "Returns the interest rate state of a position"
          },
          "getPriceTick(uint256)": {
            "notice": "Returns a price tick at an index in the price tick linked list (sorted from lowest to highest)"
          },
          "hasPermission(address,address)": {
            "notice": "Checks if `caller` has the permission to perform an action on behalf of `owner`"
          },
          "limitOrderFloor()": {
            "notice": "Minimum principal amount of a limit order [wad]"
          },
          "limitOrders(uint256)": {
            "notice": "Map of limit order makers"
          },
          "liquidatePositions(address[],uint256[])": {
            "notice": "Liquidates multiple unsafe positions by selling as much collateral as required to cover the debt in order to make the positions safe again. The collateral can be bought at a discount (`liquidationDiscount`) to the current spot price. The liquidator has to provide the amount he wants repay or sell (`repayAmounts`) for each position. From that repay amount a penalty (`liquidationPenalty`) is subtracted to mitigate against profitable self liquidations. If the available collateral of a position is not sufficient to cover the debt the vault is able to apply for a bail out from the global Buffer, any residual bad debt not covered by the  Buffer will be attributed to the credit delegators."
          },
          "liquidationConfig()": {
            "notice": "Liquidation configuration"
          },
          "modifyCollateralAndDebt(address,address,address,int256,int256)": {
            "notice": "Modifies a Position's collateral and debt balances"
          },
          "modifyPermission(address,address,bool)": {
            "notice": "Gives or revokes the permission for `caller` to perform an action on behalf of `owner`"
          },
          "modifyPermission(address,bool)": {
            "notice": "Gives or revokes the permission for `caller` to perform an action on behalf of `msg.sender`"
          },
          "oracle()": {
            "notice": "Oracle of the collateral token"
          },
          "pause()": {
            "notice": "Pauses the contract"
          },
          "positions(address)": {
            "notice": "Map of user positions"
          },
          "protocolFee()": {
            "notice": "Portion of interest that goes to the protocol [wad]"
          },
          "removeLimitPriceTick(uint256)": {
            "notice": "Removes limit price tick"
          },
          "setParameter(bytes32,uint256)": {
            "notice": "Sets various variables for this contract"
          },
          "setPermissionAgent(address,bool)": {
            "notice": "Gives or revokes the permission for the `agent` to modify the permissions of `msg.sender`"
          },
          "shares(address)": {
            "notice": "Number of shares currently issued to a delegator [wad]"
          },
          "sharesQueuedByEpoch(uint256,address)": {
            "notice": "Number of shares that have been queued for undelegation for a specific epoch by a delegator [wad]"
          },
          "spotPrice()": {
            "notice": "Returns the current spot price of the collateral token"
          },
          "token()": {
            "notice": "collateral token"
          },
          "tokenScale()": {
            "notice": "Collateral token's decimals scale (10 ** decimals)"
          },
          "totalAccruedFees()": {
            "notice": "Total current amount of accrued protocol fees [wad]"
          },
          "totalCreditClaimable()": {
            "notice": "Total credit claimable by undelegating delegators in all fixed epochs [wad]"
          },
          "totalNormalDebt()": {
            "notice": "Sum of backed normalized debt over all positions [wad]"
          },
          "totalShares()": {
            "notice": "Total number of shares currently issued to delegators [wad]"
          },
          "undelegateCredit(uint256,uint256[])": {
            "notice": "Signals (initiates) the undelegation of credit from this vault"
          },
          "unpause()": {
            "notice": "Unpauses the contract"
          },
          "vaultConfig()": {
            "notice": "CDPVault configuration"
          },
          "virtualIRS(address)": {
            "notice": "Returns the current global rate accumulator, global accrued rebate and the accrued rebate of a position"
          },
          "withdraw(address,uint256)": {
            "notice": "Withdraws collateral tokens from this contract and decreases a users cash balance"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/invariant/CDPVault_TypeAWrapper.sol": "CDPVault_TypeAWrapper"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/CDM.sol": {
        "keccak256": "0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5",
        "urls": [
          "bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99",
          "dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L"
        ],
        "license": "MIT"
      },
      "src/CDPVault.sol": {
        "keccak256": "0xb59663a5a96b5abe638f2fb4a5e4d0918a41607cbaee2e974ab2317f271be131",
        "urls": [
          "bzz-raw://b4292cb1e12fe471b852e223ce612c5c666cdaac948f1b2803e45edc2ea8c213",
          "dweb:/ipfs/QmNykUHbviSx2HKe6v45qU7B7wjC5Fre3xunPYCAjdcZMx"
        ],
        "license": "MIT"
      },
      "src/CDPVault_TypeA.sol": {
        "keccak256": "0x295d22000f94f24713ca284f6a5cedd1a32deaa9fe125622dbebd011f2be31aa",
        "urls": [
          "bzz-raw://7d9c0b0f59e9bae0a036b325b16cb999de39b33d08637986ef93ff31a8d11cd7",
          "dweb:/ipfs/QmbgTUAes12DrcbTac6TRfpvM9iEdRp4Zx7XJPowGrcMBR"
        ],
        "license": "MIT"
      },
      "src/InterestRateModel.sol": {
        "keccak256": "0x681ca8dbbb9637f112fd4668dd549380579f269e3c60af2e84578192f4cfeda8",
        "urls": [
          "bzz-raw://89b4b3abe1c4c38c8ea7c5f1ed9e4d5d1a4cedeadbf65b466a3ca96ebbdb2b77",
          "dweb:/ipfs/Qmd1RVYuiiESg4rwWVR2qB9zSxQvpfqbtPJxGagP6KES6L"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBuffer.sol": {
        "keccak256": "0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f",
        "urls": [
          "bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff",
          "dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault.sol": {
        "keccak256": "0x7ce3b81164802c14566697092c69fb355d9c31ab846dfc8d90edd5d6a6eb68e3",
        "urls": [
          "bzz-raw://343c84ea42c9846dc3907a6ca2d4c55df6e0cbaea7a83ed2c7458174560a86d6",
          "dweb:/ipfs/QmWcAoAFQYL7YzeFnd5t4HMHxEZHiFirsNHJGL7FoBCkF6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_TypeA.sol": {
        "keccak256": "0x67e73a065253428bf75f8541da4b1530e4bae6c57ffb17520aba4a48aa132b5b",
        "urls": [
          "bzz-raw://94911a895e5a455a2eb23eea973a36c847f27dd1a3ee7a34470bc226751f0aa6",
          "dweb:/ipfs/Qmcv7WBZnEnm6zjYBGZFikYeyjnMyPb65XEA8cBUkXZ9BR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_TypeA_Deployer.sol": {
        "keccak256": "0x8245ec611a017f4e12fd4a0b077bad26f11fbc6ed648724a746398398a1692f0",
        "urls": [
          "bzz-raw://35c624fc1f5ecf6f7027ed98859b41f36b89109a8adaf740c93668f97958b66b",
          "dweb:/ipfs/QmPupkyJYaVSbVGPHPj4H5LZgJXtKqX7NgN7bCwwWZ7Tyj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_TypeA_Factory.sol": {
        "keccak256": "0x9ea6fe3a8b5d6ab2f041c72b6058e1e59b3df5e12d54ccc845a27f90f45ddf01",
        "urls": [
          "bzz-raw://c805f1c1b060173d445de751c4a8565232938ad23a6d200c08b99eb634679638",
          "dweb:/ipfs/QmSajnrXMZHMwYF8Y2C6obNp1K7bq2XjexdkqcVoHDFhGm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IInterestRateModel.sol": {
        "keccak256": "0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055",
        "urls": [
          "bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599",
          "dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417",
        "urls": [
          "bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da",
          "dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPause.sol": {
        "keccak256": "0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d",
        "urls": [
          "bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec",
          "dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/test/invariant/CDPVault_TypeAWrapper.sol": {
        "keccak256": "0xc28d4a79e5ea012a44d6c0fc2f4ddf2c43f4c611f02dbd7b4a07db8c39964432",
        "urls": [
          "bzz-raw://926f4e983bf1dd15111e60582d5dd3cc2f7f643f8ab977d9c98da416ced9a0e0",
          "dweb:/ipfs/QmcURjzxdbPS3rkFpBejwBL7CsBJRGv92QH9wgRCZtN7XY"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/DoubleLinkedList.sol": {
        "keccak256": "0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691",
        "urls": [
          "bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb",
          "dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/utils/Pause.sol": {
        "keccak256": "0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19",
        "urls": [
          "bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1",
          "dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL"
        ],
        "license": "MIT"
      },
      "src/utils/Permission.sol": {
        "keccak256": "0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1",
        "urls": [
          "bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb",
          "dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/invariant/CDPVault_TypeAWrapper.sol",
    "id": 96983,
    "exportedSymbols": {
      "CDM": [
        41425
      ],
      "CDPVault_TypeA": [
        47013
      ],
      "CDPVault_TypeAWrapper": [
        96961
      ],
      "CDPVault_TypeAWrapper_Deployer": [
        96982
      ],
      "ICDPVault_TypeA_Deployer": [
        49215
      ],
      "add": [
        131315
      ],
      "calculateDebt": [
        41503
      ],
      "calculateNormalDebt": [
        41538
      ],
      "min": [
        131258,
        131270
      ],
      "mul": [
        131393
      ],
      "wdiv": [
        131452
      ],
      "wmul": [
        131405,
        131428
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3517:142",
    "nodes": [
      {
        "id": 96602,
        "nodeType": "PragmaDirective",
        "src": "39:24:142",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 96604,
        "nodeType": "ImportDirective",
        "src": "65:87:142",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDPVault_TypeA_Deployer.sol",
        "file": "../../interfaces/ICDPVault_TypeA_Deployer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96983,
        "sourceUnit": 49216,
        "symbolAliases": [
          {
            "foreign": {
              "id": 96603,
              "name": "ICDPVault_TypeA_Deployer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49215,
              "src": "73:24:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 96610,
        "nodeType": "ImportDirective",
        "src": "154:63:142",
        "nodes": [],
        "absolutePath": "src/utils/Math.sol",
        "file": "../../utils/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96983,
        "sourceUnit": 131480,
        "symbolAliases": [
          {
            "foreign": {
              "id": 96605,
              "name": "wmul",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "162:4:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 96606,
              "name": "wdiv",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131452,
              "src": "168:4:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 96607,
              "name": "min",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "174:3:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 96608,
              "name": "add",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131315,
              "src": "179:3:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 96609,
              "name": "mul",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131393,
              "src": "184:3:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 96612,
        "nodeType": "ImportDirective",
        "src": "219:34:142",
        "nodes": [],
        "absolutePath": "src/CDM.sol",
        "file": "../../CDM.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96983,
        "sourceUnit": 41426,
        "symbolAliases": [
          {
            "foreign": {
              "id": 96611,
              "name": "CDM",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41425,
              "src": "227:3:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 96615,
        "nodeType": "ImportDirective",
        "src": "254:70:142",
        "nodes": [],
        "absolutePath": "src/CDPVault.sol",
        "file": "../../CDPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96983,
        "sourceUnit": 45137,
        "symbolAliases": [
          {
            "foreign": {
              "id": 96613,
              "name": "calculateDebt",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41503,
              "src": "262:13:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 96614,
              "name": "calculateNormalDebt",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41538,
              "src": "277:19:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 96617,
        "nodeType": "ImportDirective",
        "src": "325:56:142",
        "nodes": [],
        "absolutePath": "src/CDPVault_TypeA.sol",
        "file": "../../CDPVault_TypeA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96983,
        "sourceUnit": 47014,
        "symbolAliases": [
          {
            "foreign": {
              "id": 96616,
              "name": "CDPVault_TypeA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47013,
              "src": "333:14:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 96961,
        "nodeType": "ContractDefinition",
        "src": "383:2972:142",
        "nodes": [
          {
            "id": 96628,
            "nodeType": "FunctionDefinition",
            "src": "443:55:142",
            "nodes": [],
            "body": {
              "id": 96627,
              "nodeType": "Block",
              "src": "496:2:142",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 96624,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 96621,
                    "src": "487:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 96625,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 96623,
                  "name": "CDPVault_TypeA",
                  "nameLocations": [
                    "472:14:142"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47013,
                  "src": "472:14:142"
                },
                "nodeType": "ModifierInvocation",
                "src": "472:23:142"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 96622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96621,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "463:7:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96628,
                  "src": "455:15:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:142",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:17:142"
            },
            "returnParameters": {
              "id": 96626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:142"
            },
            "scope": 96961,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 96908,
            "nodeType": "FunctionDefinition",
            "src": "504:2460:142",
            "nodes": [],
            "body": {
              "id": 96907,
              "nodeType": "Block",
              "src": "723:2241:142",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    96647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96647,
                      "mutability": "mutable",
                      "name": "position",
                      "nameLocation": "749:8:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 96907,
                      "src": "733:24:142",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                        "typeString": "struct CDPVault.Position"
                      },
                      "typeName": {
                        "id": 96646,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 96645,
                          "name": "Position",
                          "nameLocations": [
                            "733:8:142"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41670,
                          "src": "733:8:142"
                        },
                        "referencedDeclaration": 41670,
                        "src": "733:8:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Position_$41670_storage_ptr",
                          "typeString": "struct CDPVault.Position"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96651,
                  "initialValue": {
                    "baseExpression": {
                      "id": 96648,
                      "name": "positions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41676,
                      "src": "760:9:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$41670_storage_$",
                        "typeString": "mapping(address => struct CDPVault.Position storage ref)"
                      }
                    },
                    "id": 96650,
                    "indexExpression": {
                      "id": 96649,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96630,
                      "src": "770:5:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "760:16:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Position_$41670_storage",
                      "typeString": "struct CDPVault.Position storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "733:43:142"
                },
                {
                  "expression": {
                    "id": 96654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96652,
                      "name": "deltaCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96639,
                      "src": "787:15:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 96653,
                      "name": "deltaCollateral_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96636,
                      "src": "805:16:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "787:34:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 96655,
                  "nodeType": "ExpressionStatement",
                  "src": "787:34:142"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 96658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 96656,
                      "name": "deltaCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96639,
                      "src": "836:15:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 96657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "854:1:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "836:19:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 96681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 96671,
                        "name": "deltaCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96639,
                        "src": "941:15:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 96673,
                            "name": "deltaCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96639,
                            "src": "964:15:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 96676,
                                  "name": "cash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41665,
                                  "src": "988:4:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 96678,
                                "indexExpression": {
                                  "id": 96677,
                                  "name": "collateralizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 96632,
                                  "src": "993:14:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "988:20:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 96675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "981:6:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 96674,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "981:6:142",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 96679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "981:28:142",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 96672,
                          "name": "_min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96960,
                          "src": "959:4:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                            "typeString": "function (int256,int256) pure returns (int256)"
                          }
                        },
                        "id": 96680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "959:51:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "941:69:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 96682,
                    "nodeType": "ExpressionStatement",
                    "src": "941:69:142"
                  },
                  "id": 96683,
                  "nodeType": "IfStatement",
                  "src": "832:178:142",
                  "trueBody": {
                    "expression": {
                      "id": 96669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 96659,
                        "name": "deltaCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96639,
                        "src": "857:15:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 96661,
                            "name": "deltaCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96639,
                            "src": "880:15:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "id": 96667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "897:28:142",
                            "subExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 96664,
                                    "name": "position",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96647,
                                    "src": "905:8:142",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                                      "typeString": "struct CDPVault.Position memory"
                                    }
                                  },
                                  "id": 96665,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "914:10:142",
                                  "memberName": "collateral",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 41667,
                                  "src": "905:19:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 96663,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "898:6:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 96662,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "898:6:142",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 96666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "898:27:142",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 96660,
                          "name": "_max",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96942,
                          "src": "875:4:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                            "typeString": "function (int256,int256) pure returns (int256)"
                          }
                        },
                        "id": 96668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "875:51:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "857:69:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 96670,
                    "nodeType": "ExpressionStatement",
                    "src": "857:69:142"
                  }
                },
                {
                  "assignments": [
                    96685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96685,
                      "mutability": "mutable",
                      "name": "positionDebtCeiling",
                      "nameLocation": "1029:19:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 96907,
                      "src": "1021:27:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96684,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1021:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96701,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 96688,
                              "name": "position",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96647,
                              "src": "1073:8:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                                "typeString": "struct CDPVault.Position memory"
                              }
                            },
                            "id": 96689,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1082:10:142",
                            "memberName": "collateral",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41667,
                            "src": "1073:19:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 96690,
                            "name": "deltaCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96639,
                            "src": "1094:15:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 96687,
                          "name": "add",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131315,
                          "src": "1069:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,int256) pure returns (uint256)"
                          }
                        },
                        "id": 96691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1069:41:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 96693,
                              "name": "liquidationPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96924,
                              "src": "1233:16:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                                "typeString": "function () returns (uint256)"
                              }
                            },
                            "id": 96694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1233:18:142",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "302e39",
                                "id": 96697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1261:9:142",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_900000000000000000_by_1",
                                  "typeString": "int_const 900000000000000000"
                                },
                                "value": "0.9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_900000000000000000_by_1",
                                  "typeString": "int_const 900000000000000000"
                                }
                              ],
                              "id": 96696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1253:7:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 96695,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1253:7:142",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 96698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1253:18:142",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 96692,
                          "name": "wmul",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            131405,
                            131428
                          ],
                          "referencedDeclaration": 131405,
                          "src": "1228:4:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 96699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1228:44:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 96686,
                      "name": "wmul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        131405,
                        131428
                      ],
                      "referencedDeclaration": 131405,
                      "src": "1051:4:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 96700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:231:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1021:261:142"
                },
                {
                  "assignments": [
                    96703,
                    96705,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96703,
                      "mutability": "mutable",
                      "name": "rateAccumulator",
                      "nameLocation": "1301:15:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 96907,
                      "src": "1294:22:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 96702,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1294:6:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 96705,
                      "mutability": "mutable",
                      "name": "accruedRebate",
                      "nameLocation": "1326:13:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 96907,
                      "src": "1318:21:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96704,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1318:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 96709,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 96707,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96630,
                        "src": "1355:5:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 96706,
                      "name": "virtualIRS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43409,
                      "src": "1344:10:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint64_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint64,uint256,uint256)"
                      }
                    },
                    "id": 96708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:17:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint64_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint64,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1293:68:142"
                },
                {
                  "assignments": [
                    96711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96711,
                      "mutability": "mutable",
                      "name": "debt",
                      "nameLocation": "1379:4:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 96907,
                      "src": "1371:12:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96710,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1371:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96718,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 96713,
                          "name": "position",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96647,
                          "src": "1400:8:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                            "typeString": "struct CDPVault.Position memory"
                          }
                        },
                        "id": 96714,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1409:10:142",
                        "memberName": "normalDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41669,
                        "src": "1400:19:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 96715,
                        "name": "rateAccumulator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96703,
                        "src": "1421:15:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 96716,
                        "name": "accruedRebate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96705,
                        "src": "1438:13:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 96712,
                      "name": "calculateDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41503,
                      "src": "1386:13:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint64_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint64,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 96717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1386:66:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1371:81:142"
                },
                {
                  "assignments": [
                    96720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96720,
                      "mutability": "mutable",
                      "name": "debtCapacity",
                      "nameLocation": "1469:12:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 96907,
                      "src": "1462:19:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 96719,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1462:6:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96721,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1462:19:142"
                },
                {
                  "id": 96788,
                  "nodeType": "Block",
                  "src": "1524:495:142",
                  "statements": [
                    {
                      "expression": {
                        "id": 96753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 96722,
                          "name": "debtCapacity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96720,
                          "src": "1534:12:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 96731,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "1600:4:142",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_CDPVault_TypeAWrapper_$96961",
                                                "typeString": "contract CDPVault_TypeAWrapper"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_CDPVault_TypeAWrapper_$96961",
                                                "typeString": "contract CDPVault_TypeAWrapper"
                                              }
                                            ],
                                            "id": 96730,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1592:7:142",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 96729,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "1592:7:142",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 96732,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1592:13:142",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 96727,
                                          "name": "cdm",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 41561,
                                          "src": "1577:3:142",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ICDM_$48682",
                                            "typeString": "contract ICDM"
                                          }
                                        },
                                        "id": 96728,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1581:10:142",
                                        "memberName": "creditLine",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48672,
                                        "src": "1577:14:142",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 96733,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1577:29:142",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 96740,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "id": 96734,
                                            "name": "cdm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41561,
                                            "src": "1608:3:142",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ICDM_$48682",
                                              "typeString": "contract ICDM"
                                            }
                                          },
                                          "id": 96735,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1612:17:142",
                                          "memberName": "globalDebtCeiling",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 48640,
                                          "src": "1608:21:142",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view external returns (uint256)"
                                          }
                                        },
                                        "id": 96736,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1608:23:142",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "id": 96737,
                                            "name": "cdm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41561,
                                            "src": "1634:3:142",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ICDM_$48682",
                                              "typeString": "contract ICDM"
                                            }
                                          },
                                          "id": 96738,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1638:10:142",
                                          "memberName": "globalDebt",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 48635,
                                          "src": "1634:14:142",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view external returns (uint256)"
                                          }
                                        },
                                        "id": 96739,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1634:16:142",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "1608:42:142",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 96726,
                                    "name": "min",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      131258,
                                      131270
                                    ],
                                    "referencedDeclaration": 131258,
                                    "src": "1573:3:142",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 96741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1573:78:142",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 96725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1566:6:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 96724,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1566:6:142",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 96742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1566:86:142",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 96751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 96745,
                                    "name": "positionDebtCeiling",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96685,
                                    "src": "1674:19:142",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 96744,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1667:6:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 96743,
                                    "name": "int256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1667:6:142",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 96746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1667:27:142",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 96749,
                                    "name": "debt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96711,
                                    "src": "1704:4:142",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 96748,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1697:6:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 96747,
                                    "name": "int256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1697:6:142",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 96750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1697:12:142",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "1667:42:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 96723,
                            "name": "min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              131258,
                              131270
                            ],
                            "referencedDeclaration": 131270,
                            "src": "1549:3:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                              "typeString": "function (int256,int256) pure returns (int256)"
                            }
                          },
                          "id": 96752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1549:170:142",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "1534:185:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 96754,
                      "nodeType": "ExpressionStatement",
                      "src": "1534:185:142"
                    },
                    {
                      "assignments": [
                        96756
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 96756,
                          "mutability": "mutable",
                          "name": "absoluteDebtCapacity",
                          "nameLocation": "1746:20:142",
                          "nodeType": "VariableDeclaration",
                          "scope": 96788,
                          "src": "1738:28:142",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 96755,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1738:7:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 96767,
                      "initialValue": {
                        "arguments": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 96761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 96759,
                                "name": "debtCapacity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96720,
                                "src": "1777:12:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 96760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1792:1:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1777:16:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 96764,
                              "name": "debtCapacity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96720,
                              "src": "1812:12:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "id": 96765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "1777:47:142",
                            "trueExpression": {
                              "id": 96763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "1796:13:142",
                              "subExpression": {
                                "id": 96762,
                                "name": "debtCapacity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96720,
                                "src": "1797:12:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 96758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1769:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 96757,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1769:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 96766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1769:56:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1738:87:142"
                    },
                    {
                      "expression": {
                        "id": 96777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 96768,
                          "name": "deltaNormalDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96641,
                          "src": "1835:15:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 96772,
                                  "name": "absoluteDebtCapacity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 96756,
                                  "src": "1880:20:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 96773,
                                  "name": "rateAccumulator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 96703,
                                  "src": "1902:15:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                {
                                  "id": 96774,
                                  "name": "accruedRebate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 96705,
                                  "src": "1919:13:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 96771,
                                "name": "calculateNormalDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41538,
                                "src": "1860:19:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint64_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint64,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 96775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1860:73:142",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 96770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1853:6:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 96769,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1853:6:142",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 96776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1853:81:142",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "1835:99:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 96778,
                      "nodeType": "ExpressionStatement",
                      "src": "1835:99:142"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 96781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 96779,
                          "name": "debtCapacity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96720,
                          "src": "1956:12:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 96780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1971:1:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1956:16:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 96787,
                      "nodeType": "IfStatement",
                      "src": "1953:55:142",
                      "trueBody": {
                        "expression": {
                          "id": 96785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 96782,
                            "name": "deltaNormalDebt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96641,
                            "src": "1974:15:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 96784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "1992:16:142",
                            "subExpression": {
                              "id": 96783,
                              "name": "deltaNormalDebt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96641,
                              "src": "1993:15:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1974:34:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 96786,
                        "nodeType": "ExpressionStatement",
                        "src": "1974:34:142"
                      }
                    }
                  ]
                },
                {
                  "assignments": [
                    96790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96790,
                      "mutability": "mutable",
                      "name": "deltaDebt",
                      "nameLocation": "2036:9:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 96907,
                      "src": "2029:16:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 96789,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2029:6:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96791,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2029:16:142"
                },
                {
                  "id": 96829,
                  "nodeType": "Block",
                  "src": "2087:285:142",
                  "statements": [
                    {
                      "assignments": [
                        96793,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 96793,
                          "mutability": "mutable",
                          "name": "claimedRebate",
                          "nameLocation": "2106:13:142",
                          "nodeType": "VariableDeclaration",
                          "scope": 96829,
                          "src": "2098:21:142",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "typeName": {
                            "id": 96792,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "2098:7:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "visibility": "internal"
                        },
                        null
                      ],
                      "id": 96813,
                      "initialValue": {
                        "arguments": [
                          {
                            "condition": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  "id": 96797,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 96795,
                                    "name": "deltaNormalDebt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96641,
                                    "src": "2161:15:142",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 96796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2179:1:142",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "2161:19:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 96798,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2160:21:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "hexValue": "30",
                              "id": 96804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2212:1:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "id": 96805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "2160:53:142",
                            "trueExpression": {
                              "arguments": [
                                {
                                  "id": 96802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "2192:16:142",
                                  "subExpression": {
                                    "id": 96801,
                                    "name": "deltaNormalDebt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96641,
                                    "src": "2193:15:142",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 96800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2184:7:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 96799,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2184:7:142",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 96803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2184:25:142",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 96806,
                              "name": "position",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96647,
                              "src": "2215:8:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                                "typeString": "struct CDPVault.Position memory"
                              }
                            },
                            "id": 96807,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2224:10:142",
                            "memberName": "normalDebt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41669,
                            "src": "2215:19:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 96810,
                                "name": "accruedRebate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96705,
                                "src": "2244:13:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 96809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2236:7:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 96808,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "2236:7:142",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 96811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2236:22:142",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 96794,
                          "name": "_calculateRebateClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48164,
                          "src": "2125:21:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint128_$returns$_t_uint128_$_t_uint128_$",
                            "typeString": "function (uint256,uint256,uint128) pure returns (uint128,uint128)"
                          }
                        },
                        "id": 96812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2125:143:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                          "typeString": "tuple(uint128,uint128)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2097:171:142"
                    },
                    {
                      "expression": {
                        "id": 96827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 96814,
                          "name": "deltaDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96790,
                          "src": "2278:9:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 96826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 96816,
                                "name": "rateAccumulator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96703,
                                "src": "2295:15:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              {
                                "id": 96817,
                                "name": "deltaNormalDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96641,
                                "src": "2312:15:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                },
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 96815,
                              "name": "wmul",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                131405,
                                131428
                              ],
                              "referencedDeclaration": 131428,
                              "src": "2290:4:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_int256_$",
                                "typeString": "function (uint256,int256) pure returns (int256)"
                              }
                            },
                            "id": 96818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2290:38:142",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 96823,
                                    "name": "claimedRebate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96793,
                                    "src": "2346:13:142",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "id": 96822,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2338:7:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 96821,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2338:7:142",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 96824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2338:22:142",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 96820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2331:6:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 96819,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2331:6:142",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 96825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2331:30:142",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "2290:71:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "2278:83:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 96828,
                      "nodeType": "ExpressionStatement",
                      "src": "2278:83:142"
                    }
                  ]
                },
                {
                  "assignments": [
                    96831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96831,
                      "mutability": "mutable",
                      "name": "creditLine",
                      "nameLocation": "2389:10:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 96907,
                      "src": "2382:17:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 96830,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2382:6:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96839,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 96836,
                            "name": "creditor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96634,
                            "src": "2424:8:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 96834,
                            "name": "cdm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41561,
                            "src": "2409:3:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDM_$48682",
                              "typeString": "contract ICDM"
                            }
                          },
                          "id": 96835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2413:10:142",
                          "memberName": "creditLine",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48672,
                          "src": "2409:14:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 96837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2409:24:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 96833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2402:6:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 96832,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2402:6:142",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 96838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:32:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2382:52:142"
                },
                {
                  "expression": {
                    "id": 96862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96840,
                      "name": "creditNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96643,
                      "src": "2444:12:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 96848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 96843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 96841,
                                "name": "deltaDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96790,
                                "src": "2460:9:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 96842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2472:1:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2460:13:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 96847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 96844,
                                "name": "creditLine",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96831,
                                "src": "2477:10:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 96846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "2490:10:142",
                                "subExpression": {
                                  "id": 96845,
                                  "name": "deltaDebt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 96790,
                                  "src": "2491:9:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "2477:23:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2460:40:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 96849,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2459:42:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 96859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 96857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "2525:10:142",
                              "subExpression": {
                                "id": 96856,
                                "name": "deltaDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96790,
                                "src": "2526:9:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 96858,
                              "name": "creditLine",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96831,
                              "src": "2538:10:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "2525:23:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 96855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2517:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 96854,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2517:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 96860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2517:32:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 96861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2459:90:142",
                      "trueExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 96852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2512:1:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 96851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2504:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 96850,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2504:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 96853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2504:10:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2444:105:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 96863,
                  "nodeType": "ExpressionStatement",
                  "src": "2444:105:142"
                },
                {
                  "assignments": [
                    96865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96865,
                      "mutability": "mutable",
                      "name": "newPositionDebt",
                      "nameLocation": "2567:15:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 96907,
                      "src": "2560:22:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 96864,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2560:6:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96873,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 96872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 96868,
                            "name": "position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96647,
                            "src": "2592:8:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Position_$41670_memory_ptr",
                              "typeString": "struct CDPVault.Position memory"
                            }
                          },
                          "id": 96869,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2601:10:142",
                          "memberName": "normalDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41669,
                          "src": "2592:19:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 96867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2585:6:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 96866,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2585:6:142",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 96870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2585:27:142",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 96871,
                      "name": "deltaNormalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96641,
                      "src": "2615:15:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "2585:45:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2560:70:142"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 96887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 96876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 96874,
                        "name": "newPositionDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96865,
                        "src": "2707:15:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 96875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2725:1:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2707:19:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 96886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 96877,
                        "name": "newPositionDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96865,
                        "src": "2730:15:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 96882,
                                  "name": "vaultConfig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41614,
                                  "src": "2762:11:142",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VaultConfig_$41610_storage",
                                    "typeString": "struct CDPVault.VaultConfig storage ref"
                                  }
                                },
                                "id": 96883,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2774:9:142",
                                "memberName": "debtFloor",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 41603,
                                "src": "2762:21:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "id": 96881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2755:6:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int128_$",
                                "typeString": "type(int128)"
                              },
                              "typeName": {
                                "id": 96880,
                                "name": "int128",
                                "nodeType": "ElementaryTypeName",
                                "src": "2755:6:142",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 96884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2755:29:142",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          ],
                          "id": 96879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2748:6:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 96878,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2748:6:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 96885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2748:37:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "2730:55:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2707:78:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 96901,
                  "nodeType": "IfStatement",
                  "src": "2704:189:142",
                  "trueBody": {
                    "id": 96900,
                    "nodeType": "Block",
                    "src": "2786:107:142",
                    "statements": [
                      {
                        "expression": {
                          "id": 96890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 96888,
                            "name": "deltaNormalDebt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96641,
                            "src": "2800:15:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 96889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2818:1:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2800:19:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 96891,
                        "nodeType": "ExpressionStatement",
                        "src": "2800:19:142"
                      },
                      {
                        "expression": {
                          "id": 96894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 96892,
                            "name": "deltaCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96639,
                            "src": "2833:15:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 96893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2851:1:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2833:19:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 96895,
                        "nodeType": "ExpressionStatement",
                        "src": "2833:19:142"
                      },
                      {
                        "expression": {
                          "id": 96898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 96896,
                            "name": "creditNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96643,
                            "src": "2866:12:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 96897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2881:1:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2866:16:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 96899,
                        "nodeType": "ExpressionStatement",
                        "src": "2866:16:142"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 96902,
                        "name": "deltaCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96639,
                        "src": "2910:15:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 96903,
                        "name": "deltaNormalDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96641,
                        "src": "2927:15:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 96904,
                        "name": "creditNeeded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96643,
                        "src": "2944:12:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 96905,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2909:48:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_uint256_$",
                      "typeString": "tuple(int256,int256,uint256)"
                    }
                  },
                  "functionReturnParameters": 96644,
                  "id": 96906,
                  "nodeType": "Return",
                  "src": "2902:55:142"
                }
              ]
            },
            "functionSelector": "8f1e5f63",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaximumDebtForCollateral",
            "nameLocation": "513:27:142",
            "parameters": {
              "id": 96637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96630,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "558:5:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96908,
                  "src": "550:13:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:142",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96632,
                  "mutability": "mutable",
                  "name": "collateralizer",
                  "nameLocation": "573:14:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96908,
                  "src": "565:22:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:142",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96634,
                  "mutability": "mutable",
                  "name": "creditor",
                  "nameLocation": "597:8:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96908,
                  "src": "589:16:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:142",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96636,
                  "mutability": "mutable",
                  "name": "deltaCollateral_",
                  "nameLocation": "614:16:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96908,
                  "src": "607:23:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96635,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:6:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:96:142"
            },
            "returnParameters": {
              "id": 96644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96639,
                  "mutability": "mutable",
                  "name": "deltaCollateral",
                  "nameLocation": "660:15:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96908,
                  "src": "653:22:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96638,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:6:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96641,
                  "mutability": "mutable",
                  "name": "deltaNormalDebt",
                  "nameLocation": "684:15:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96908,
                  "src": "677:22:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96640,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:6:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96643,
                  "mutability": "mutable",
                  "name": "creditNeeded",
                  "nameLocation": "709:12:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96908,
                  "src": "701:20:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:70:142"
            },
            "scope": 96961,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 96924,
            "nodeType": "FunctionDefinition",
            "src": "2970:134:142",
            "nodes": [],
            "body": {
              "id": 96923,
              "nodeType": "Block",
              "src": "3025:79:142",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 96914,
                          "name": "spotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43453,
                          "src": "3046:9:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                            "typeString": "function () returns (uint256)"
                          }
                        },
                        "id": 96915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3046:11:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 96918,
                              "name": "vaultConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41614,
                              "src": "3067:11:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultConfig_$41610_storage",
                                "typeString": "struct CDPVault.VaultConfig storage ref"
                              }
                            },
                            "id": 96919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3079:16:142",
                            "memberName": "liquidationRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41606,
                            "src": "3067:28:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "id": 96917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3059:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 96916,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3059:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 96920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3059:37:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 96913,
                      "name": "wdiv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131452,
                      "src": "3041:4:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 96921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3041:56:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 96912,
                  "id": 96922,
                  "nodeType": "Return",
                  "src": "3034:63:142"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidationPrice",
            "nameLocation": "2979:16:142",
            "parameters": {
              "id": 96909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2995:2:142"
            },
            "returnParameters": {
              "id": 96912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96911,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 96924,
                  "src": "3016:7:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3015:9:142"
            },
            "scope": 96961,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 96942,
            "nodeType": "FunctionDefinition",
            "src": "3110:117:142",
            "nodes": [],
            "body": {
              "id": 96941,
              "nodeType": "Block",
              "src": "3174:53:142",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 96935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 96933,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96926,
                      "src": "3187:1:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 96934,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96928,
                      "src": "3191:1:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "3187:5:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 96938,
                  "nodeType": "IfStatement",
                  "src": "3184:18:142",
                  "trueBody": {
                    "expression": {
                      "id": 96936,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96926,
                      "src": "3201:1:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "functionReturnParameters": 96932,
                    "id": 96937,
                    "nodeType": "Return",
                    "src": "3194:8:142"
                  }
                },
                {
                  "expression": {
                    "id": 96939,
                    "name": "b",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 96928,
                    "src": "3219:1:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 96932,
                  "id": 96940,
                  "nodeType": "Return",
                  "src": "3212:8:142"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_max",
            "nameLocation": "3119:4:142",
            "parameters": {
              "id": 96929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96926,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "3131:1:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96942,
                  "src": "3124:8:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96925,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3124:6:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96928,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "3141:1:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96942,
                  "src": "3134:8:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96927,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:6:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3123:20:142"
            },
            "returnParameters": {
              "id": 96932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96931,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 96942,
                  "src": "3166:6:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96930,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3166:6:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3165:8:142"
            },
            "scope": 96961,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 96960,
            "nodeType": "FunctionDefinition",
            "src": "3233:120:142",
            "nodes": [],
            "body": {
              "id": 96959,
              "nodeType": "Block",
              "src": "3297:56:142",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 96953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 96951,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96944,
                      "src": "3310:1:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 96952,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96946,
                      "src": "3314:1:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "3310:5:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 96956,
                  "nodeType": "IfStatement",
                  "src": "3307:18:142",
                  "trueBody": {
                    "expression": {
                      "id": 96954,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96944,
                      "src": "3324:1:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "functionReturnParameters": 96950,
                    "id": 96955,
                    "nodeType": "Return",
                    "src": "3317:8:142"
                  }
                },
                {
                  "expression": {
                    "id": 96957,
                    "name": "b",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 96946,
                    "src": "3342:1:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 96950,
                  "id": 96958,
                  "nodeType": "Return",
                  "src": "3335:8:142"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_min",
            "nameLocation": "3242:4:142",
            "parameters": {
              "id": 96947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96944,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "3254:1:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96960,
                  "src": "3247:8:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96943,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:6:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96946,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "3264:1:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96960,
                  "src": "3257:8:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96945,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3257:6:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3246:20:142"
            },
            "returnParameters": {
              "id": 96950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96949,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 96960,
                  "src": "3289:6:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96948,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:6:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3288:8:142"
            },
            "scope": 96961,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 96618,
              "name": "CDPVault_TypeA",
              "nameLocations": [
                "417:14:142"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47013,
              "src": "417:14:142"
            },
            "id": 96619,
            "nodeType": "InheritanceSpecifier",
            "src": "417:14:142"
          }
        ],
        "canonicalName": "CDPVault_TypeAWrapper",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          96961,
          47013,
          49207,
          45136,
          48975,
          48340,
          131698,
          49660,
          131542,
          49632,
          33608,
          32230,
          37491,
          37503,
          32428,
          36317
        ],
        "name": "CDPVault_TypeAWrapper",
        "nameLocation": "392:21:142",
        "scope": 96983,
        "usedErrors": [
          41789,
          41791,
          41793,
          41795,
          41797,
          41799,
          41801,
          41803,
          41805,
          41807,
          41809,
          41811,
          41813,
          41815,
          41817,
          41819,
          46553,
          46555,
          46557,
          47946,
          130901,
          130903,
          130905,
          131175,
          131177,
          131179,
          131181,
          131183,
          131567
        ]
      },
      {
        "id": 96982,
        "nodeType": "ContractDefinition",
        "src": "3357:198:142",
        "nodes": [
          {
            "id": 96981,
            "nodeType": "FunctionDefinition",
            "src": "3431:122:142",
            "nodes": [],
            "body": {
              "id": 96980,
              "nodeType": "Block",
              "src": "3482:71:142",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 96978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96968,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96966,
                      "src": "3492:5:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 96974,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3534:3:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 96975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3538:6:142",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3534:10:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 96973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3508:25:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_CDPVault_TypeAWrapper_$96961_$",
                              "typeString": "function (address) returns (contract CDPVault_TypeAWrapper)"
                            },
                            "typeName": {
                              "id": 96972,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 96971,
                                "name": "CDPVault_TypeAWrapper",
                                "nameLocations": [
                                  "3512:21:142"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 96961,
                                "src": "3512:21:142"
                              },
                              "referencedDeclaration": 96961,
                              "src": "3512:21:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CDPVault_TypeAWrapper_$96961",
                                "typeString": "contract CDPVault_TypeAWrapper"
                              }
                            }
                          },
                          "id": 96976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3508:37:142",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CDPVault_TypeAWrapper_$96961",
                            "typeString": "contract CDPVault_TypeAWrapper"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CDPVault_TypeAWrapper_$96961",
                            "typeString": "contract CDPVault_TypeAWrapper"
                          }
                        ],
                        "id": 96970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3500:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 96969,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3500:7:142",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 96977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3500:46:142",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3492:54:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 96979,
                  "nodeType": "ExpressionStatement",
                  "src": "3492:54:142"
                }
              ]
            },
            "baseFunctions": [
              49214
            ],
            "functionSelector": "775c300c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nameLocation": "3440:6:142",
            "parameters": {
              "id": 96964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3446:2:142"
            },
            "returnParameters": {
              "id": 96967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96966,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "3475:5:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 96981,
                  "src": "3467:13:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3467:7:142",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3466:15:142"
            },
            "scope": 96982,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 96962,
              "name": "ICDPVault_TypeA_Deployer",
              "nameLocations": [
                "3400:24:142"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49215,
              "src": "3400:24:142"
            },
            "id": 96963,
            "nodeType": "InheritanceSpecifier",
            "src": "3400:24:142"
          }
        ],
        "canonicalName": "CDPVault_TypeAWrapper_Deployer",
        "contractDependencies": [
          96961
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          96982,
          49215
        ],
        "name": "CDPVault_TypeAWrapper_Deployer",
        "nameLocation": "3366:30:142",
        "scope": 96983,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 142
}