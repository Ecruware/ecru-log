{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CDPVault__addLimitPriceTick_invalidPriceTickOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__addLimitPriceTick_limitPriceTickOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__cancelLimitOrder_limitOrderDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__checkEmergencyMode_entered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitOrderAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitOrderFloor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__createLimitOrder_limitPriceTickNotActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__exchange_notEnoughExchanged",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__liquidatePosition_notUnsafe",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__liquidatePositions_argLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_maxUtilizationRatio",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_noPermission",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyCollateralAndDebt_notSafe",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__modifyPosition_debtFloor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CDPVault__setParameter_unrecognizedParameter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IdIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InterestRateModel__setBaseRate_invalidBaseRate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ItemInList",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ItemNotInList",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__add_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__mul_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__sub_overflow_signed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toInt256_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Math__toUint64_overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Permission__modifyPermission_notPermitted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "AddLimitPriceTick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "CancelLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "CreateLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRedeemed",
          "type": "uint256"
        }
      ],
      "name": "Exchange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRedeemed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        }
      ],
      "name": "ExecuteLimitOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralReleased",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "normalDebtRepaid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        }
      ],
      "name": "LiquidatePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        }
      ],
      "name": "ModifyCollateralAndDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "grant",
          "type": "bool"
        }
      ],
      "name": "ModifyPermission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalNormalDebt",
          "type": "uint256"
        }
      ],
      "name": "ModifyPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "RemoveLimitPriceTick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int64",
          "name": "baseRate",
          "type": "int64"
        }
      ],
      "name": "SetBaseRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SetGlobalIRS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "parameter",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "SetParameter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "grant",
          "type": "bool"
        }
      ],
      "name": "SetPermittedAgent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "position",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "snapshotRateAccumulator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accruedRebate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rebateFactor",
          "type": "uint256"
        }
      ],
      "name": "SetPositionIRS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "name": "activeLimitPriceTicks",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextLimitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "addLimitPriceTick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buffer",
      "outputs": [
        {
          "internalType": "contract IBuffer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "name": "calculateRebateFactorForPriceTick",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cdm",
      "outputs": [
        {
          "internalType": "contract ICDM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feesClaimed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "createLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cashAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enterEmergencyMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "upperLimitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditToExchange",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralExchanged",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "upperLimitPriceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditToExchange",
          "type": "uint256"
        }
      ],
      "name": "exchangePreview",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditExchanged",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralExchanged",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGlobalIRS",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int64",
              "name": "baseRate",
              "type": "int64"
            },
            {
              "internalType": "uint64",
              "name": "lastUpdated",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "rateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "averageRebate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "globalAccruedRebate",
              "type": "uint256"
            }
          ],
          "internalType": "struct InterestRateModel.GlobalIRS",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getLimitOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "deltaCollateral_",
          "type": "int256"
        }
      ],
      "name": "getMaximumDebtForCollateral",
      "outputs": [
        {
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "creditNeeded",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        }
      ],
      "name": "getPositionIRS",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "snapshotRateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "rebateFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "accruedRebate",
              "type": "uint128"
            }
          ],
          "internalType": "struct InterestRateModel.PositionIRS",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getPriceTick",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "hasPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitOrderFloor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitOrderId",
          "type": "uint256"
        }
      ],
      "name": "limitOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceTick",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "repayAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "liquidatePositions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationConfig",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "liquidationPenalty",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "liquidationDiscount",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "targetHealthFactor",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralizer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "deltaNormalDebt",
          "type": "int256"
        }
      ],
      "name": "modifyCollateralAndDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "modifyPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "modifyPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pausedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "normalDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limitPriceTick",
          "type": "uint256"
        }
      ],
      "name": "removeLimitPriceTick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "parameter",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "setParameter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permitted",
          "type": "bool"
        }
      ],
      "name": "setPermissionAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spotPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAccruedFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalNormalDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultConfig",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "debtFloor",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "liquidationRatio",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "globalLiquidationRatio",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        }
      ],
      "name": "virtualIRS",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "rateAccumulator",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "accruedRebate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "globalAccruedRebate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101806040523480156200001257600080fd5b5060405162004cd738038062004cd7833981016040819052620000359162000103565b6001805460ff1916905560408051639a295e7360e01b81529051829182916001600160a01b03831691639a295e739160048083019261010092919082900301816000875af11580156200008c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b291906200012a565b610160526101405261012052610100526001600160a01b0390811660e05290811660c05290811660a0521660805250620001b9915050565b6001600160a01b03811681146200010057600080fd5b50565b6000602082840312156200011657600080fd5b81516200012381620000ea565b9392505050565b600080600080600080600080610100898b0312156200014857600080fd5b88516200015581620000ea565b60208a01519098506200016881620000ea565b60408a01519097506200017b81620000ea565b60608a01519096506200018e81620000ea565b60808a015160a08b015160c08c015160e0909c01519a9d999c50979a91999098919650945092505050565b60805160a05160c05160e05161010051610120516101405161016051614a1e620002b96000396000611ced015260008181611c1b0152612c350152600081816106700152613d8e0152600081816103e901528181610f1e0152818161263b015261335301526000818161088a01528181610cf801528181610ef00152818161266e015261337501526000818161083d01528181611df001526124ab01526000818161055c0152610ccb0152600081816107ba015281816114d401528181611561015281816115e30152818161172601528181611af601528181611b7901528181611dc101528181611e7e015281816123ef01526135d00152614a1e6000f3fe608060405234801561001057600080fd5b50600436106102cc5760003560e01c80638456cb591161017d578063d294f093116100d9578063df10f68711610092578063df10f687146107a2578063e2dfb317146107b5578063eb953449146107dc578063edaafe2014610838578063ef0563fb1461085f578063f3fef3a314610872578063fc0c546a1461088557600080fd5b8063d294f0931461070c578063d4b7eac314610714578063d547741f14610727578063d9c70f571461073a578063dbe6b31c1461074d578063dc2ec2491461079957600080fd5b8063a3e2b49511610136578063a3e2b4951461064b578063b0e21e8a1461066b578063b6dc16f614610692578063ba95534c146106b2578063c75a4b5e146106bb578063cb6238c8146106ce578063cde68041146106f957600080fd5b80638456cb59146105df57806388439aea146105e75780638f1e5f63146105fa57806391d14854146106285780639844afd21461063b578063a217fddf1461064357600080fd5b80633f4ba83a1161022c578063683f81a1116101e5578063683f81a1146104c3578063723507be146104e65780637cc34bb4146104f95780637dc0d1d0146105575780638051ba751461058b5780638309dbdd146105c3578063842c311e146105d657600080fd5b80633f4ba83a1461042657806344a3c6641461042e57806347e7ef241461044157806351f813ec1461045457806355f575101461047c5780635c975abb146104b857600080fd5b80632906f94e116102895780632906f94e146103a25780632af8992b146103b55780632e55d0f2146103c85780632f2ff15d146103d1578063342c02b1146103e457806336568abe1461040b578063398482d81461041e57600080fd5b806301ffc9a7146102d15780630a9254e4146102f95780631c580ad5146103035780632202ce8c14610356578063248a9ca31461035e578063280c37ef1461038f575b600080fd5b6102e46102df366004614360565b6108ac565b60405190151581526020015b60405180910390f35b6103016108e3565b005b60135461032c906001600160401b0380821691600160401b8104821691600160801b9091041683565b604080516001600160401b03948516815292841660208401529216918101919091526060016102f0565b61030161093d565b61038161036c36600461438a565b60009081526020819052604090206001015490565b6040519081526020016102f0565b61030161039d3660046143c8565b610a06565b6103016103b036600461438a565b610a7d565b6103816103c33660046143ff565b610bb6565b61038160025481565b6103016103df366004614421565b610c04565b6103817f000000000000000000000000000000000000000000000000000000000000000081565b610301610419366004614421565b610c2e565b610381610cb1565b610301610d66565b61030161043c3660046143ff565b610da0565b61038161044f36600461444d565b610ed9565b61046761046236600461438a565b610f7b565b604080519283529015156020830152016102f0565b6104a361048a366004614477565b600d602052600090815260409020805460019091015482565b604080519283526020830191909152016102f0565b60015460ff166102e4565b6102e46104d136600461438a565b600e6020526000908152604090205460ff1681565b6103016104f43660046143ff565b610fd7565b600954610528906001600160801b038116906001600160401b03600160801b8204811691600160c01b90041683565b604080516001600160801b0390941684526001600160401b0392831660208501529116908201526060016102f0565b61057e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516102f09190614492565b61059e610599366004614477565b61123b565b604080516001600160401b0390941684526020840192909252908201526060016102f0565b6103016105d13660046144a6565b6112cb565b610381600a5481565b61030161139a565b6104a36105f53660046143ff565b6113cc565b61060d6106083660046144ed565b6113ef565b604080519384526020840192909252908201526060016102f0565b6102e4610636366004614421565b611841565b61030161186a565b610381600081565b61038161065936600461438a565b60116020526000908152604090205481565b6103817f000000000000000000000000000000000000000000000000000000000000000081565b6103816106a0366004614477565b600c6020526000908152604090205481565b610381600b5481565b6103016106c9366004614538565b6118bc565b6106e16106dc36600461438a565b611cd1565b6040516001600160401b0390911681526020016102f0565b6102e461070736600461458d565b611d53565b610381611da1565b6104a36107223660046143ff565b611e4f565b610301610735366004614421565b611f57565b6103016107483660046143c8565b611f7c565b61076061075b366004614477565b611fdf565b6040805182516001600160401b03908116825260208085015190911690820152918101516001600160801b0316908201526060016102f0565b61038160125481565b6103016107b03660046145cd565b61204a565b61057e7f000000000000000000000000000000000000000000000000000000000000000081565b6107e461252d565b6040516102f09190600060a082019050825160070b825260208301516001600160401b0380821660208501528060408601511660408501525050606083015160608301526080830151608083015292915050565b61057e7f000000000000000000000000000000000000000000000000000000000000000081565b61030161086d36600461438a565b612584565b61038161088036600461444d565b612606565b61057e7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216637965db0b60e01b14806108dd57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006108ed61252d565b905080602001516001600160401b031660001461090957600080fd5b610914600033612695565b6001600160401b0342166020820152670de0b6b3a7640000604082015261093a81612719565b50565b336000818152601160205260408120549081900361096e57604051630573b42560e51b815260040160405180910390fd5b600081815260106020526040902061098690836127a7565b600082815260116020908152604080832083905533808452600d909252822060010154600a546109d2936109b8610cb1565b600954600160c01b90046001600160401b03166000612828565b505060405133915082907f6f36e2a381bc87c87bcc2043deb0a5cdf9a6d87eb14cbe13cf0f1fe39f324dd990600090a35050565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815194855291840192909252908201527f6501e8bfa2d3e686d62fe2c0c3275df594494583b0a63a70b7452d3eeb712bd6906060015b60405180910390a15050565b6000818152600e602052604090205460ff16610aac5760405163da4b118b60e01b815260040160405180910390fd5b336000908152600d6020526040902060010154601254811015610ae2576040516305c0093760e21b815260040160405180910390fd5b3360008181526011602052604090205415610b105760405163345c017d60e01b815260040160405180910390fd5b600081815260116020908152604080832086905585835260108083528184208480528084529184206001015493879052909152610b4e9183906128f3565b610b813383600a546000610b60610cb1565b600954600160c01b90046001600160401b0316610b7c8a611cd1565b612828565b505060405133915084907f85d7690ee90733d849878d2bbbd5bf047e442ce2d045c0308a58cfd2ce53031590600090a3505050565b6000828152601060209081526040808320838052909152812054905b828114610bfd5760008481526010602090815260408083208584529091529020549150600101610bd2565b5092915050565b600082815260208190526040902060010154610c1f816129c0565b610c298383612695565b505050565b6001600160a01b0381163314610ca35760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610cad82826129ca565b5050565b604051632cbf04c160e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632cbf04c190610d20907f000000000000000000000000000000000000000000000000000000000000000090600401614492565b602060405180830381865afa158015610d3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6191906146e6565b905090565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610d90816129c0565b610d98612a2f565b506000600255565b610da8612a7b565b7ff96f3d6876b63665360200e15ed8964960110cbbd99e917fb50ad1e576f538ac610dd2816129c0565b670de0b6b3a7640000831080610df057508268056bc75e2d63100000105b15610e0e576040516336bbc25960e01b815260040160405180910390fd5b60008052600f6020526000805160206149c98339815191525480158015610e3457508215155b80610e5157508215801590610e51575082841180610e5157508281115b80610e6957506000838152600f602052604090205484105b15610e87576040516346b0cc7160e11b815260040160405180910390fd5b610e93600f85856128f3565b6000848152600e6020526040808220805460ff191660011790555185917f3907a47dfbf148deb99efcd854a68497cbdc2a2db8488083ecb842ad6bde91a891a250505050565b6000610ee3612a7b565b610f186001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085612ac3565b610f42827f0000000000000000000000000000000000000000000000000000000000000000612b21565b6001600160a01b0384166000908152600c6020526040812080549293508392909190610f6f908490614715565b90915550909392505050565b6000808052600f6020526000805160206149c98339815191525490805b838114610fbb576000838152600f60205260409020600101549250600101610f98565b50506000818152600e6020526040902054909260ff9091169150565b610fdf612a7b565b7f7e2be3cffb06427cbcb9b1d12d4b78adcf14a2bf640e9bbdeb54bb711b65ec71611009816129c0565b82683232b13a233637b7b960b91b0361103c57600980546001600160801b0319166001600160801b0384161790556111fc565b826f6c69717569646174696f6e526174696f60801b03611080576009805467ffffffffffffffff60801b1916600160801b6001600160401b038516021790556111fc565b8275676c6f62616c4c69717569646174696f6e526174696f60501b036110c557600980546001600160c01b0316600160c01b6001600160401b038516021790556111fc565b826e3634b6b4ba27b93232b9233637b7b960891b036110e85760128290556111fc565b8267626173655261746560c01b0361111957611114600019831461110c5782612b70565b600019612b70565b6111fc565b82716c69717569646174696f6e50656e616c747960701b03611156576013805467ffffffffffffffff19166001600160401b0384161790556111fc565b82721b1a5c5d5a59185d1a5bdb911a5cd8dbdd5b9d606a1b0361119d576013805467ffffffffffffffff60401b1916600160401b6001600160401b038516021790556111fc565b82713a30b933b2ba2432b0b63a342330b1ba37b960711b036111e3576013805467ffffffffffffffff60801b1916600160801b6001600160401b038516021790556111fc565b604051638dd691e760e01b815260040160405180910390fd5b827f4327e67d6578eb2c9293fb22f9334006073ac1397c7100f5dd5adca09ad71c088360405161122e91815260200190565b60405180910390a2505050565b60008060008061124961252d565b600a549091506112598282612c18565b945061126e8286836000806000806000612d2b565b506080810151935091506001600160a01b038616156112c2576112b661129387611fdf565b6001600160a01b0388166000908152600d60205260409020600101548790612eca565b6001600160801b031693505b50509193909250565b6001600160a01b038316331480159061130857506001600160a01b038316600090815260046020908152604080832033845290915290205460ff16155b1561132657604051638743d2ff60e01b815260040160405180910390fd5b6001600160a01b0383811660009081526003602090815260408083209386168352929052819020805460ff1916831515179055517fdcf2bd5a4c47afeb1792d170f6f5e6e528e30c6b546fffe62b697a11f8953b2b9061138d903390869086908690614728565b60405180910390a1505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6113c4816129c0565b61093a612f05565b60008033156113da57600080fd5b6113e48484612f13565b915091509250929050565b6001600160a01b0384166000908152600d60209081526040808320815180830190925280548252600101549181019190915282919081908184121561144c5761144584826000015161144090614752565b613199565b9350611473565b6001600160a01b0387166000908152600c60205260409020546114709085906131b0565b93505b60006114a46114868360000151876131c1565b61149f611491613206565b670c7d713b49da000061322b565b61322b565b90506000806114b28b61123b565b509150915060006114c885602001518484613259565b9050600061168d6116787f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c3536e7306040518263ffffffff1660e01b815260040161151e9190614492565b602060405180830381865afa15801561153b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155f91906146e6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638543d5e06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e191906146e6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632efcc8666040518163ffffffff1660e01b8152600401602060405180830381865afa15801561163f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166391906146e6565b61166d919061476e565b808218908211021890565b6116828488614781565b808218908213021890565b9050600080821261169e57816116a7565b6116a782614752565b90506116b4818686613279565b985060008212156116cb576116c889614752565b98505b506000806116f560008b126116e15760006116ea565b6116ea8b614752565b8960200151876132b5565b509050806001600160801b0316611715876001600160401b03168c613300565b61171f91906147a1565b91505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c3536e78e6040518263ffffffff1660e01b81526004016117709190614492565b602060405180830381865afa15801561178d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b191906146e6565b905060008213806117c957506117c682614752565b81135b6117e657806117d783614752565b6117e19190614781565b6117e9565b60005b985060008a89602001516117fd91906147a1565b905060008113801561181c57506009546001600160801b0316600f0b81125b1561182e5760009a5060009b50600099505b5050505050505050509450945094915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b611872612a7b565b60008061187f600061123b565b60095492945092506118af91600160c01b90046001600160401b031690506118a5610cb1565b600a54858561332a565b15610cad57610cad612f05565b60008113806118cb5750600082125b80156118de57506118dc8533611d53565b155b806118fb57506000821380156118fb57506118f98433611d53565b155b80611918575060008112801561191857506119168333611d53565b155b1561193657604051634c26249960e01b815260040160405180910390fd5b6001600160a01b0385166000908152600d6020908152604080832081518083018352815481526001909101548184015281516060810183526009546001600160801b03811682526001600160401b03600160801b8204811695830195909552600160c01b900490931691830191909152600a5490926119b3610cb1565b905060008060006119d28c8860200151878b888b604001516000612828565b9250925092506119e68c88848c8c8a61343a565b965060008813806119f75750600089125b8015611a3a5750611a38611a218860200151846000015185604001516001600160801b0316613259565b8851602089015187906001600160401b0316613541565b155b15611a5857604051633f66923d60e01b815260040160405180910390fd5b6001600160a01b038b166000908152600c6020526040902054611a7b908a613564565b6001600160a01b038c166000908152600c6020526040902055611a9e85896131c1565b945084600a819055506000816001600160801b0316611aca85604001516001600160401b03168b613300565b611ad491906147a1565b90506000811315611b6657604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc90611b2f9030908f9086906004016147c9565b600060405180830381600087803b158015611b4957600080fd5b505af1158015611b5d573d6000803e3d6000fd5b50505050611bfa565b6000811215611bfa576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ac2ce9bc8c30611ba985614752565b6040518463ffffffff1660e01b8152600401611bc7939291906147c9565b600060405180830381600087803b158015611be157600080fd5b505af1158015611bf5573d6000803e3d6000fd5b505050505b6000891315611c62576000611c0f85886135a9565b90506001600160401b037f000000000000000000000000000000000000000000000000000000000000000060401c1680821115611c5f576040516329b823dd60e21b815260040160405180910390fd5b50505b8a6001600160a01b03168c6001600160a01b03168e6001600160a01b03167f7ce3e27b99e7e2e42f0ddcb6f6679a25081a5fd4ca991bcd05c45e54daa997088d8d604051611cba929190918252602082015260400190565b60405180910390a450505050505050505050505050565b6000670de0b6b3a7640000821015611ceb57506000919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160801b0381169060801c611d4b611d46670de0b6b3a7640000611d378561149f838a61476e565b611d419085614715565b612b21565b61367e565b949350505050565b6000816001600160a01b0316836001600160a01b03161480611d9a57506001600160a01b0380841660009081526003602090815260408083209386168352929052205460ff165b9392505050565b600b80546000909155604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc90611e1a9030907f00000000000000000000000000000000000000000000000000000000000000009086906004016147c9565b600060405180830381600087803b158015611e3457600080fd5b505af1158015611e48573d6000803e3d6000fd5b5050505090565b600080611e5c8484612f13565b90925090508115611eea57604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac2ce9bc90611eb7903390309087906004016147c9565b600060405180830381600087803b158015611ed157600080fd5b505af1158015611ee5573d6000803e3d6000fd5b505050505b8015611f1557336000908152600c602052604081208054839290611f0f908490614715565b90915550505b604080518381526020810183905233917f26981b9aefbb0f732b0264bd34c255e831001eb50b06bc85b32cc39e14389721910160405180910390a29250929050565b600082815260208190526040902060010154611f72816129c0565b610c2983836129ca565b3360008181526003602090815260408083206001600160a01b038716845290915290819020805460ff1916841515179055517fdcf2bd5a4c47afeb1792d170f6f5e6e528e30c6b546fffe62b697a11f8953b2b91610a7191819086908690614728565b611fe76142b9565b6001600160a01b038216600090815260086020908152604091829020825160608101845290546001600160401b038082168352600160401b82041692820192909252600160801b9091046001600160801b0316918101919091526108dd906136a8565b612052612a7b565b80518214612073576040516338f30c4b60e11b815260040160405180910390fd5b600061207d61252d565b60408051606080820183526009546001600160801b03811683526001600160401b03600160801b8083048216602080870191909152600160c01b909304821685870152855193840186526013548083168552600160401b8104831693850193909352909104169281019290925291925060006120f7610cb1565b90506121016142d9565b848152600a5460208201526009546001600160801b031660a082015260135461213b908390600160401b90046001600160401b031661322b565b60c08201526013546001600160401b031660e08201526020810151600090612164908790612c18565b905060005b888110156123825760008a8a83818110612185576121856147ed565b905060200201602081019061219a9190614477565b90506001600160a01b03811615806121cb57508882815181106121bf576121bf6147ed565b60200260200101516000145b612379576001600160a01b0381166000908152600d6020908152604080832081518083019092528054825260010154918101829052919061220e908490876136df565b9050600061222e83602001518784604001516001600160801b0316613259565b905087158061225557506122558184600001518a8d602001516001600160401b0316613541565b156122735760405163f87e38e960e01b815260040160405180910390fd5b600080600061229c61228987600001518d61322b565b8e602001516001600160401b0316612b21565b9050806122b68d604001516001600160401b03168661322b565b6122c0919061476e565b91505060006122e98d602001516001600160401b03168d602001516001600160401b031661322b565b905060006122ff670de0b6b3a764000083612b21565b61231a8e604001516001600160401b03168d60e0015161322b565b612324919061476e565b90506123308382612b21565b93505050506123608d878151811061234a5761234a6147ed565b602002602001015161166d838b60e00151612b21565b6101008901526123728885858861371e565b9750505050505b50600101612169565b506123ca82600001516123ab84606001518560e00151670de0b6b3a764000061149f919061476e565b84608001516123ba9190614715565b8460200151868960400151613958565b506020820151600a556060820151604051632b0b3a6f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ac2ce9bc916124279133913091906004016147c9565b600060405180830381600087803b15801561244157600080fd5b505af1158015612455573d6000803e3d6000fd5b505050604080840151336000908152600c6020529182208054919350919061247e908490614715565b90915550506101208201511561252257610120820151604051630bd0dedd60e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632f437b74906024016020604051808303816000875af11580156124fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061252091906146e6565b505b505050505050505050565b612535614332565b506040805160a081018252600554600781810b83526001600160401b03600160401b830481166020850152600160801b9092049091169282019290925260065460608201529054608082015290565b61258c612a7b565b7ff96f3d6876b63665360200e15ed8964960110cbbd99e917fb50ad1e576f538ac6125b6816129c0565b6000828152600e60205260409020805460ff191690556125d7600f836127a7565b60405182907f343776161924dfe02a29fdf57e6087e2d25ca11fe703785a80632e9ab88c88a190600090a25050565b6000612610612a7b565b336000908152600c60205260408120805484929061262f90849061476e565b9091555061265f9050827f000000000000000000000000000000000000000000000000000000000000000061322b565b90506108dd6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848361398b565b61269f8282611841565b610cad576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556126d53390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516005805460208401516040808601516001600160401b03908116600160801b0267ffffffffffffffff60801b19938216600160401b026001600160801b03199095169190961617929092171692909217905560608201516006556080820151600755517f9334cbdde649ebcbf798eaa08c381dc574197dc53947470a9be908dbcccc330190600090a150565b6000818152602083815260409182902082518084019093528054835260010154908201526127d583836139bb565b6127f25760405163564e265760e11b815260040160405180910390fd5b60208082018051835160009081529590925260408086206001908101939093559251905185528285205591835282208281550155565b612830614332565b6128386142b9565b600061284261252d565b925061284d8a611fdf565b9150600061285b848a612c18565b905061286883828c612eca565b6001600160801b031660408401526001600160401b031682526128a76000881261289357600061289c565b61289c88614752565b8a84604001516132b5565b6001600160801b03166040840152905060006128c98b85858c8e8d888c613a29565b90945090506128e484826128dd8c8c6131c1565b8a8a613958565b50509750975097945050505050565b6128fd83836139bb565b1561291b57604051631e2bbc4f60e11b815260040160405180910390fd5b8015801590612931575061292f83826139bb565b155b1561294f5760405163564e265760e11b815260040160405180910390fd5b6000818152602084905260409020805490839055811580156129805750600082815260208590526040902060010154155b1561299a5760008281526020859052604090206001018390555b600081815260209490945260408085206001908101859055938552909320928355910155565b61093a8133613ab7565b6129d48282611841565b15610cad576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b612a37613b10565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051612a719190614492565b60405180910390a1565b60015460ff1615612ac15760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610c9a565b565b612b1b846323b872dd60e01b858585604051602401612ae4939291906147c9565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613b59565b50505050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218311670de0b6b3a764000002158202612b5e5763bcbede656000526004601cfd5b50670de0b6b3a7640000919091020490565b60008160070b138015612b8e5750670de0b6b3a7640000600782900b125b80612ba45750670de0b6b8c1e505ce600782900b135b15612bc25760405163947800ab60e01b815260040160405180910390fd5b6005805467ffffffffffffffff19166001600160401b038316179055604051600782900b81527fcb1621676ff5c8c9deff7ffc0af9b2c296851bc5b191381ac07d97e82ec03fe69060200160405180910390a150565b6000806000846000015160070b1215612d1d576001600160401b037f000000000000000000000000000000000000000000000000000000000000000081811691604082901c1690670de0b6b3a764000064ffffffffff608083901c811682019260a881901c821683019260d09190911c909116016000612c988a8a6135a9565b905084811115612ca55750835b858111612cd957612cc8612cc2612cbc868561476e565b88612b21565b8261322b565b612cd29085614715565b9650612d12565b612d05612cfb612ce9848661476e565b611d4189670de0b6b3a764000061476e565b61149f888461476e565b612d0f9083614715565b96505b505050505050612d21565b5082515b611d4b8482613c2e565b612d33614332565b600080612d4089886131c1565b60608c015190915087151580612d685750856001600160401b0316876001600160401b031614155b15612db357612d84866001600160401b031661149f8b8b6131c1565b612d97886001600160401b03168b61322b565b8d60600151612da6919061476e565b612db09190614715565b90505b60008a15612df857612df3612ded612dcf8f606001518e612b21565b8f604001518f612ddf9190614803565b6001600160401b031661322b565b8461322b565b612dfb565b60005b90506000866001600160801b0316828f60800151612e199190614715565b612e23919061476e565b90506040518060a001604052808f6000015160070b8152602001426001600160401b031681526020018e6001600160401b03168152602001848152602001828152509550505089600014612eb657612eb1612eab612e858e606001518d612b21565b612e9790670de0b6b3a764000061476e565b8e604001518760400151612ddf9190614803565b8b61322b565b612eb9565b60005b925050509850989650505050505050565b6000612ef6612ef085602001516001600160401b0316866000015186612ddf9190614803565b8361322b565b8460400151611d4b9190614823565b612f0d613c6c565b42600255565b6000806000612f2061252d565b604080516060810182526009546001600160801b03811682526001600160401b03600160801b820481166020840152600160c01b90910416918101919091529091506000612f6c610cb1565b9050612f766142d9565b838152600a546020820181905283516001600160801b031660a0830152670de0b6b3a764000060e0830152600090612faf908690612c18565b6000805160206149c9833981519152546000818152601060209081526040808320838052909152902054919250905b898460600151101561313357811580612ff657508a82115b613133576000828152600e602052604090205460ff161580613016575080155b1561304a57506000908152600f60209081526040808320600101548084526010835281842084805290925290912054612fde565b60008281526010602090815260408083208484529091529020548181036130715750613133565b6001600160a01b0382166000908152600d6020908152604080832081518083019092528054825260010154918101829052849290916130b2908490896136df565b90506130be898761322b565b60c089015260608801516130d2908f61476e565b610100890152602082015181516040830151613113926130fc9290916001600160801b0316613259565b835160208d01518c906001600160401b0316613541565b15613127576131248883838661371e565b97505b83945050505050612fde565b613150846000015185608001518660200151888a60400151613958565b506020840151600a5560608401518a1461317d57604051633e6c5e0f60e01b815260040160405180910390fd5b8360600151846040015198509850505050505050509250929050565b6000818313156131aa5750816108dd565b50919050565b6000818312156131aa5750816108dd565b8181016000821380156131d357508281105b806131e857506000821280156131e857508281115b156108dd576040516354012a2960e11b815260040160405180910390fd5b6000610d61613213610cb1565b600954600160801b90046001600160401b0316612b21565b6000816000190483118202156132495763c4c5d7f56000526004601cfd5b50670de0b6b3a764000091020490565b60008161326f85856001600160401b031661322b565b611d4b919061476e565b60006132976132888386614715565b846001600160401b0316612b21565b9050836132a5828585613259565b1015611d9a576001019392505050565b60008184158015906132c657508315155b156132f857836132df6001600160801b03851687614843565b6132e99190614870565b91506132f58282614892565b90505b935093915050565b6000670de0b6b3a76400006133158484613ca7565b816133225761332261485a565b059392505050565b600080613338858585613259565b9050801580159061341c5750866001600160401b031661341a7f0000000000000000000000000000000000000000000000000000000000000000887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016133bf9190614492565b602060405180830381865afa1580156133dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061340091906146e6565b61340a9190614843565b6134149190614870565b83612b21565b105b1561342b576001915050613431565b60009150505b95945050505050565b6040805180820190915260008082526020820152855161345a90856131c1565b8652602086015161346b90846131c1565b60208701819052158015906134a457506009546020870151865160408801516001600160801b03938416936134a293929116613259565b105b156134c257604051634b2c23a160e11b815260040160405180910390fd5b6001600160a01b0387166000818152600d6020908152604090912088518155908801516001909101557f71671d6112ff9270f1553ebc8fbf767a3221090f1002c7047475b6fa8f5801cd858561351886826131c1565b6040805193845260208401929092529082015260600160405180910390a2509395945050505050565b6000848261354f8587614843565b6135599190614870565b101595945050505050565b80820360008213801561357657508281115b8061358b575060008212801561358b57508281105b156108dd5760405163e942b9ed60e01b815260040160405180910390fd5b6000806135bf8385604001518660800151613259565b905080156136745761366f81600b547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c3536e7306040518263ffffffff1660e01b815260040161361a9190614492565b602060405180830381865afa158015613637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061365b91906146e6565b6136659085614715565b611d41919061476e565b611d4b565b6000949350505050565b6000600160401b82106136a4576040516302217c1560e11b815260040160405180910390fd5b5090565b6136b06142b9565b81516001600160401b03166000036136a457600060208301819052670de0b6b3a7640000835260408301525090565b6136e76142b9565b6136f084611fdf565b90506136fd818385612eca565b6001600160801b031660408201526001600160401b03909116815292915050565b6137266142d9565b600080600080600061374e896020015189600001518a604001516001600160801b0316613259565b905060006137658b61010001518c60e0015161322b565b90506137cb8183118015613785575060a08c0151613783838561476e565b105b61379c57613797838d60e00151612b21565b6137b9565b6137b98c60a00151846137af919061476e565b8d60e00151612b21565b61166d8c600001518e60c00151613cf0565b6101008c01519091508181118183180218955060006137ee878d60e0015161322b565b90506137ff81848c604001516132b5565b6001600160801b0390811660408d01528b519195506138219183918716613279565b9450613831878d60c00151612b21565b8b51909650861115613842578a5195505b8a51861480156138555750848b60200151115b1561388157613864818461476e565b8c610120018181516138769190614715565b90525060208b015194505b50505060008960200151905060006138b9888c600001518b858e602001516138a88a613d26565b6138b190614752565b896000613a29565b908c5290506138ee888b8b6138cd89613d26565b6138d690614752565b6138df89613d26565b6138e890614752565b8761343a565b50838b602001818151613901919061476e565b90525060408b018051869190613918908390614715565b90525060608b01805187919061392f908390614715565b90525060808b018051829190613946908390614715565b905250999a9950505050505050505050565b600061396f82848689604001518a60800151613d4c565b61397886612719565b61398185613d7e565b9695505050505050565b6040516001600160a01b038316602482015260448101829052610c2990849063a9059cbb60e01b90606401612ae4565b6000816000036139de5760405163ee7efd5760e01b815260040160405180910390fd5b600082815260208490526040902054151580613a0a575060008281526020849052604090206001015415155b80611d9a57505060008080526020929092526040909120600101541490565b613a31614332565b60208781015160008b815260119092526040822054613a75908c90613a568a8a6131c1565b6001600160401b03881615613a6b5787613dd1565b8c60200151613dd1565b6001600160401b031660208a0152613a8d8b8a613e17565b613aa58a8a600001518a8a8a868f602001518c612d2b565b909c909b509950505050505050505050565b613ac18282611841565b610cad57613ace81613ec6565b613ad9836020613ed8565b604051602001613aea9291906148d6565b60408051601f198184030181529082905262461bcd60e51b8252610c9a91600401614945565b60015460ff16612ac15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610c9a565b6000613bae826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166140739092919063ffffffff16565b9050805160001480613bcf575080806020019051810190613bcf9190614978565b610c295760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c9a565b6000611d9a83604001516001600160401b031661149f846001600160401b031686602001516001600160401b03164203670de0b6b3a7640000614082565b613c74612a7b565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833612a64565b8181026000831280613cd257508115801590613cd2575082828281613cce57613cce61485a565b0514155b156108dd57604051631eed389360e01b815260040160405180910390fd5b600081600019048311820215613d0e5763c4c5d7f56000526004601cfd5b50670de0b6b3a7640000910281810615159190040190565b6000600160ff1b82106136a457604051632db27c5360e01b815260040160405180910390fd5b613d59858585858561332a565b15613d7757604051632ce9f52360e01b815260040160405180910390fd5b5050505050565b6000613d88612a7b565b613db2827f000000000000000000000000000000000000000000000000000000000000000061322b565b600b6000828254613dc39190614715565b92505081905590505b919050565b808315801590613de2575082601254115b15611d4b576000848152601060205260409020613dff90866127a7565b50505060009182525060116020526040812081905590565b6001600160a01b0382166000818152600860209081526040918290208451815486840151878601516001600160801b03908116600160801b81026001600160401b03938416600160401b81026001600160801b031990961694909616938417949094179190911692909217909355845192835292820192909252918201527f491dea4b757c9c18e4b668fc545a09f969bd7a6ca7c9f79bb5f53a1e996aeac89060600160405180910390a25050565b60606108dd6001600160a01b03831660145b60606000613ee7836002614843565b613ef2906002614715565b6001600160401b03811115613f0957613f096145b7565b6040519080825280601f01601f191660200182016040528015613f33576020820181803683370190505b509050600360fc1b81600081518110613f4e57613f4e6147ed565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613f7d57613f7d6147ed565b60200101906001600160f81b031916908160001a9053506000613fa1846002614843565b613fac906001614715565b90505b6001811115614024576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613fe057613fe06147ed565b1a60f81b828281518110613ff657613ff66147ed565b60200101906001600160f81b031916908160001a90535060049490941c9361401d81614995565b9050613faf565b508315611d9a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610c9a565b6060611d4b8484600085614140565b600082801561413457848015614129576001851680156140a4578693506140a8565b8493505b50600284046002860495505b8515614123578687028760801c156140cb57600080fd5b818101818110156140db57600080fd5b869004975050600186161561411857868402848882041415881515161561410157600080fd5b8181018181101561411157600080fd5b8690049450505b6002860495506140b4565b5061412e565b600092505b50614138565b8291505b509392505050565b6060824710156141a15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610c9a565b600080866001600160a01b031685876040516141bd91906149ac565b60006040518083038185875af1925050503d80600081146141fa576040519150601f19603f3d011682016040523d82523d6000602084013e6141ff565b606091505b50915091506142108783838761421b565b979650505050505050565b6060831561428a578251600003614283576001600160a01b0385163b6142835760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c9a565b5081611d4b565b611d4b838381511561429f5781518083602001fd5b8060405162461bcd60e51b8152600401610c9a9190614945565b604080516060810182526000808252602082018190529181019190915290565b6040518061014001604052806142ed614332565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b60006020828403121561437257600080fd5b81356001600160e01b031981168114611d9a57600080fd5b60006020828403121561439c57600080fd5b5035919050565b80356001600160a01b0381168114613dcc57600080fd5b801515811461093a57600080fd5b600080604083850312156143db57600080fd5b6143e4836143a3565b915060208301356143f4816143ba565b809150509250929050565b6000806040838503121561441257600080fd5b50508035926020909101359150565b6000806040838503121561443457600080fd5b82359150614444602084016143a3565b90509250929050565b6000806040838503121561446057600080fd5b614469836143a3565b946020939093013593505050565b60006020828403121561448957600080fd5b611d9a826143a3565b6001600160a01b0391909116815260200190565b6000806000606084860312156144bb57600080fd5b6144c4846143a3565b92506144d2602085016143a3565b915060408401356144e2816143ba565b809150509250925092565b6000806000806080858703121561450357600080fd5b61450c856143a3565b935061451a602086016143a3565b9250614528604086016143a3565b9396929550929360600135925050565b600080600080600060a0868803121561455057600080fd5b614559866143a3565b9450614567602087016143a3565b9350614575604087016143a3565b94979396509394606081013594506080013592915050565b600080604083850312156145a057600080fd5b6145a9836143a3565b9150614444602084016143a3565b634e487b7160e01b600052604160045260246000fd5b6000806000604084860312156145e257600080fd5b83356001600160401b03808211156145f957600080fd5b818601915086601f83011261460d57600080fd5b81358181111561461c57600080fd5b602088818360051b860101111561463257600080fd5b80840196508195508088013593508284111561464d57600080fd5b838801935088601f85011261466157600080fd5b8335915082821115614675576146756145b7565b8160051b604051601f19603f8301168101818110868211171561469a5761469a6145b7565b60405292835281830193508481018201928a8411156146b857600080fd5b948201945b838610156146d6578535855294820194938201936146bd565b8096505050505050509250925092565b6000602082840312156146f857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156108dd576108dd6146ff565b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b6000600160ff1b8201614767576147676146ff565b5060000390565b818103818111156108dd576108dd6146ff565b8181036000831280158383131683831282161715610bfd57610bfd6146ff565b80820182811260008312801582168215821617156147c1576147c16146ff565b505092915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052603260045260246000fd5b6001600160401b03828116828216039080821115610bfd57610bfd6146ff565b6001600160801b03818116838216019080821115610bfd57610bfd6146ff565b80820281158282048414176108dd576108dd6146ff565b634e487b7160e01b600052601260045260246000fd5b60008261488d57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160801b03828116828216039080821115610bfd57610bfd6146ff565b60005b838110156148cd5781810151838201526020016148b5565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516149088160178501602088016148b2565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516149398160288401602088016148b2565b01602801949350505050565b60208152600082518060208401526149648160408501602087016148b2565b601f01601f19169190910160400192915050565b60006020828403121561498a57600080fd5b8151611d9a816143ba565b6000816149a4576149a46146ff565b506000190190565b600082516149be8184602087016148b2565b919091019291505056fef4803e074bd026baaf6ed2e288c9515f68c72fb7216eebdd7cae1718a53ec376a2646970667358221220b6486c9c50fd735d62f4d003434135df2082dafe5e4016f029083d281cd94c2364736f6c63430008130033",
    "sourceMap": "371:2982:151:-:0;;;431:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;996:7:47;:15;;-1:-1:-1;;996:15:47;;;9271:45:88;;;-1:-1:-1;;;9271:45:88;;;;475:7:151;;;;-1:-1:-1;;;;;9271:43:88;;;;;:45;;;;;996:15:47;;9271:45:88;;;;;;;1006:5:47;9271:43:88;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9076:240;;;;;;;;-1:-1:-1;;;;;9076:240:88;;;;;;;;;;;;;-1:-1:-1;9076:240:88;;-1:-1:-1;9076:240:88;-1:-1:-1;371:2982:151;;-1:-1:-1;;371:2982:151;14:131:193;-1:-1:-1;;;;;89:31:193;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:251::-;220:6;273:2;261:9;252:7;248:23;244:32;241:52;;;289:1;286;279:12;241:52;321:9;315:16;340:31;365:5;340:31;:::i;:::-;390:5;150:251;-1:-1:-1;;;150:251:193:o;406:966::-;603:6;611;619;627;635;643;651;659;712:3;700:9;691:7;687:23;683:33;680:53;;;729:1;726;719:12;680:53;761:9;755:16;780:31;805:5;780:31;:::i;:::-;880:2;865:18;;859:25;830:5;;-1:-1:-1;893:33:193;859:25;893:33;:::i;:::-;997:2;982:18;;976:25;945:7;;-1:-1:-1;1010:33:193;976:25;1010:33;:::i;:::-;1114:2;1099:18;;1093:25;1062:7;;-1:-1:-1;1127:33:193;1093:25;1127:33;:::i;:::-;1226:3;1211:19;;1205:26;1271:3;1256:19;;1250:26;1316:3;1301:19;;1295:26;1361:3;1346:19;;;1340:26;406:966;;;;-1:-1:-1;406:966:193;;1179:7;;1205:26;;1295;;-1:-1:-1;1340:26:193;-1:-1:-1;406:966:193;-1:-1:-1;;;406:966:193:o;:::-;371:2982:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "371:2982:151:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:31;;;;;;:::i;:::-;;:::i;:::-;;;470:14:193;;463:22;445:41;;433:2;418:18;2732:202:31;;;;;;;;9329:405:88;;;:::i;:::-;;1713:42:90;;;;;-1:-1:-1;;;;;1713:42:90;;;;-1:-1:-1;;;1713:42:90;;;;;-1:-1:-1;;;1713:42:90;;;;;;;;;;-1:-1:-1;;;;;748:15:193;;;730:34;;800:15;;;795:2;780:18;;773:43;852:15;;832:18;;;825:43;;;;681:2;666:18;1713:42:90;497:377:193;35445:696:88;;;:::i;4504:129:31:-;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;;;;1210:25:193;;;1198:2;1183:18;4504:129:31;1064:177:193;2861:194:183;;;;;;:::i;:::-;;:::i;34100:1263:88:-;;;;;;:::i;:::-;;:::i;30587:330::-;;;;;;:::i;:::-;;:::i;585:23:182:-;;;;;;4929:145:31;;;;;;:::i;:::-;;:::i;3393:35:88:-;;;;;6038:214:31;;;;;;:::i;:::-;;:::i;17877:102:88:-;;;:::i;1173:99:182:-;;;:::i;32097:1248:88:-;;;;;;:::i;:::-;;:::i;12298:250::-;;;;;;:::i;:::-;;:::i;29958:344::-;;;;;;:::i;:::-;;:::i;:::-;;;;3173:25:193;;;3241:14;;3234:22;3229:2;3214:18;;3207:50;3146:18;29958:344:88;3005:258:193;6027:51:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3633:25:193;;;3689:2;3674:18;;3667:34;;;;3606:18;6027:51:88;3459:248:193;1615:84:47;1685:7;;;;1615:84;;6173:72:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3179:1188:90;;;;;;:::i;:::-;;:::i;5434:30:88:-;;;;;-1:-1:-1;;;;;5434:30:88;;;-1:-1:-1;;;;;;;;5434:30:88;;;;;-1:-1:-1;;;5434:30:88;;;;;;;;;-1:-1:-1;;;;;4181:32:193;;;4163:51;;-1:-1:-1;;;;;4287:15:193;;;4282:2;4267:18;;4260:43;4339:15;;4319:18;;;4312:43;4151:2;4136:18;5434:30:88;3965:396:193;3137:31:88;;;;;;;;;;;;:::i;16557:724::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4809:31:193;;;4791:50;;4872:2;4857:18;;4850:34;;;;4900:18;;;4893:34;4779:2;4764:18;16557:724:88;4591:342:193;2268::183;;;;;;:::i;:::-;;:::i;5569:30:88:-;;;;;;998:73:182;;;:::i;46239:294:88:-;;;;;;:::i;:::-;;:::i;492:2465:151:-;;;;;;:::i;:::-;;:::i;:::-;;;;5937:25:193;;;5993:2;5978:18;;5971:34;;;;6021:18;;;6014:34;5925:2;5910:18;492:2465:151;5739:315:193;3021:145:31;;;;;;:::i;:::-;;:::i;11412:320:88:-;;;:::i;2153:49:31:-;;2198:4;2153:49;;6659:69:88;;;;;;:::i;:::-;;;;;;;;;;;;;;3502:36;;;;;5800:53;;;;;;:::i;:::-;;;;;;;;;;;;;;5673:31;;;;;;26105:3390;;;;;;:::i;:::-;;:::i;31115:330::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;6696:31:193;;;6678:50;;6666:2;6651:18;31115:330:88;6534:200:193;3297:149:183;;;;;;:::i;:::-;;:::i;17345:209:88:-;;;:::i;46878:633::-;;;;;;:::i;:::-;;:::i;5354:147:31:-;;;;;;:::i;:::-;;:::i;1776:200:183:-;;;;;;:::i;:::-;;:::i;3632:148:96:-;;;;;;:::i;:::-;;:::i;:::-;;;;7269:13:193;;-1:-1:-1;;;;;7265:22:193;;;7247:41;;7348:4;7336:17;;;7330:24;7326:33;;;7304:20;;;7297:63;7408:17;;;7402:24;-1:-1:-1;;;;;7398:50:193;7376:20;;;7369:80;7198:2;7183:18;3632:148:96;7004:451:193;6798:30:88;;;;;;5449:4001:90;;;;;;:::i;:::-;;:::i;3059:25:88:-;;;;;3361:97:96;;;:::i;:::-;;;;;;9556:4:193;9598:3;9587:9;9583:19;9575:27;;9649:6;9643:13;9640:1;9629:28;9618:9;9611:47;9705:4;9697:6;9693:17;9687:24;-1:-1:-1;;;;;9804:2:193;9790:12;9786:21;9779:4;9768:9;9764:20;9757:51;9876:2;9868:4;9860:6;9856:17;9850:24;9846:33;9839:4;9828:9;9824:20;9817:63;;;9936:4;9928:6;9924:17;9918:24;9911:4;9900:9;9896:20;9889:54;9999:4;9991:6;9987:17;9981:24;9974:4;9963:9;9959:20;9952:54;9408:604;;;;;3221:31:88;;;;;33517:268;;;;;;:::i;:::-;;:::i;12837:235::-;;;;;;:::i;:::-;;:::i;3291:29::-;;;;;2732:202:31;2817:4;-1:-1:-1;;;;;;2840:47:31;;-1:-1:-1;;;2840:47:31;;:87;;-1:-1:-1;;;;;;;;;;937:40:73;;;2891:36:31;2833:94;2732:202;-1:-1:-1;;2732:202:31:o;9329:405:88:-;9371:26;9400:14;:12;:14::i;:::-;9371:43;;9428:9;:21;;;-1:-1:-1;;;;;9428:26:88;9453:1;9428:26;9424:40;;9456:8;;;9424:40;9512:42;2198:4:31;9543:10:88;9512;:42::i;:::-;-1:-1:-1;;;;;9628:15:88;9597:47;:21;;;:47;368:4:181;9654:25:88;;;:39;9703:24;9597:9;9703:13;:24::i;:::-;9361:373;9329:405::o;35445:696::-;35533:10;35490:20;35574:25;;;:11;:25;;;;;;;35613:14;;;35609:78;;35636:51;;-1:-1:-1;;;35636:51:88;;;;;;;;;;;35609:78;35697:27;;;;:16;:27;;;;;:48;;35732:12;35697:34;:48::i;:::-;35762:25;;;;:11;:25;;;;;;;;35755:32;;;35881:10;35905:21;;;:9;:21;;;;;:32;;;35951:15;;35844:235;;35995:11;:9;:11::i;:::-;36020;:34;-1:-1:-1;;;36020:34:88;;-1:-1:-1;;;;;36020:34:88;;35844:23;:235::i;:::-;-1:-1:-1;;36095:39:88;;36123:10;;-1:-1:-1;36112:9:88;;36095:39;;;;;35480:661;;35445:696::o;2861:194:183:-;2956:10;2939:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2939:35:183;;;;;;;;;;;;:47;;-1:-1:-1;;2939:47:183;;;;;;;;;;3001;;10700:34:193;;;10750:18;;;10743:43;;;;10802:18;;;10795:50;3001:47:183;;10650:2:193;10635:18;3001:47:183;;;;;;;;2861:194;;:::o;34100:1263:88:-;34172:37;;;;:21;:37;;;;;;;;34167:115;;34230:52;;-1:-1:-1;;;34230:52:88;;;;;;;;;;;34167:115;34332:10;34301:18;34322:21;;;:9;:21;;;;;:32;;;34368:15;;:28;-1:-1:-1;34364:97:88;;;34417:44;;-1:-1:-1;;;34417:44:88;;;;;;;;;;;34364:97;34523:10;34480:20;34548:25;;;:11;:25;;;;;;:30;34544:107;;34599:52;;-1:-1:-1;;;34599:52:88;;;;;;;;;;;34544:107;34751:25;;;;:11;:25;;;;;;;;:42;;;34934:32;;;:16;:32;;;;;;1276:13:180;;;;;;;;;:18;;;34880:32:88;;;;;;;:97;;34751:25;;34880:39;:97::i;:::-;35035:261;35072:10;35096;35120:15;;35149:1;35164:11;:9;:11::i;:::-;35189;:34;-1:-1:-1;;;35189:34:88;;-1:-1:-1;;;;;35189:34:88;35237:49;35271:14;35237:33;:49::i;:::-;35035:23;:261::i;:::-;-1:-1:-1;;35312:44:88;;35345:10;;-1:-1:-1;35329:14:88;;35312:44;;;;;34157:1206;;34100:1263;:::o;30587:330::-;30667:20;30714:27;;;:16;:27;;;;;;;;1539:13:180;;;;;;;;:18;;30761:150:88;30782:5;30777:1;:10;30761:150;;30820:27;;;;:16;:27;;;;;;;;2335:14:180;;;;;;;;:19;30805:64:88;-1:-1:-1;30895:3:88;;30761:150;;;;30587:330;;;;:::o;4929:145:31:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:31;;719:10:66;6133:23:31;6125:83;;;;-1:-1:-1;;;6125:83:31;;11058:2:193;6125:83:31;;;11040:21:193;11097:2;11077:18;;;11070:30;11136:34;11116:18;;;11109:62;-1:-1:-1;;;11187:18:193;;;11180:45;11242:19;;6125:83:31;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;17877:102:88:-;17945:27;;-1:-1:-1;;;17945:27:88;;17919:7;;-1:-1:-1;;;;;17945:6:88;:11;;;;:27;;17965:5;;17945:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17938:34;;17877:102;:::o;1173:99:182:-;313:24;2631:16:31;2642:4;2631:10;:16::i;:::-;1233:10:182::1;:8;:10::i;:::-;-1:-1:-1::0;1264:1:182::1;1253:8;:12:::0;1173:99::o;32097:1248:88:-;1239:19:47;:17;:19::i;:::-;1075:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;32280:9:88::2;32263:14;:26;:56;;;;32305:14;32293:9;:26;32263:56;32259:135;;;32340:54;;-1:-1:-1::0;;;32340:54:88::2;;;;;;;;;;;32259:135;32444:28;1276:13:180::0;;32475:16:88::2;1276:13:180::0;;-1:-1:-1;;;;;;;;;;;1276:18:180;32598:25:88;;:52;::::2;;;-1:-1:-1::0;32627:23:88;;::::2;32598:52;32597:317;;;-1:-1:-1::0;32771:23:88;;;::::2;::::0;:129:::2;;;32833:18;32816:14;:35;32815:84;;;;32880:18;32857:20;:41;32815:84;32597:498;;;-1:-1:-1::0;2309:7:180;2335:14;;;33051:16:88::2;2335:14:180::0;;;;;:19;33034:14:88::2;:61;32597:498;32511:653;;;33113:51;;-1:-1:-1::0;;;33113:51:88::2;;;;;;;;;;;32511:653;33175:59;:16;33199:14:::0;33215:18;33175:23:::2;:59::i;:::-;33244:37;::::0;;;:21:::2;:37;::::0;;;;;:44;;-1:-1:-1;;33244:44:88::2;33284:4;33244:44;::::0;;33304:33;33266:14;;33304:33:::2;::::0;::::2;32249:1096;1268:1:47::1;32097:1248:88::0;;:::o;12298:250::-;12375:18;1239:19:47;:17;:19::i;:::-;12405:57:88::1;-1:-1:-1::0;;;;;12405:5:88::1;:22;12428:10;12448:4;12455:6:::0;12405:22:::1;:57::i;:::-;12485:24;12490:6;12498:10;12485:4;:24::i;:::-;-1:-1:-1::0;;;;;12519:8:88;::::1;;::::0;;;:4:::1;:8;::::0;;;;:22;;12472:37;;-1:-1:-1;12472:37:88;;12519:8;;;:22:::1;::::0;12472:37;;12519:22:::1;:::i;:::-;::::0;;;-1:-1:-1;12298:250:88;;;-1:-1:-1;;;12298:250:88:o;29958:344::-;30018:17;1276:13:180;;;30074:16:88;1276:13:180;;-1:-1:-1;;;;;;;;;;;1276:18:180;;30018:17:88;30110:133;30131:5;30126:1;:10;30110:133;;1908:7:180;1934:14;;;30166:16:88;1934:14:180;;;;;:19;;;30154:47:88;-1:-1:-1;30227:3:88;;30110:133;;;-1:-1:-1;;30263:32:88;;;;:21;:32;;;;;;30285:9;;30263:32;;;;;-1:-1:-1;29958:344:88:o;3179:1188:90:-;1239:19:47;:17;:19::i;:::-;1006:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;3299:9:90::2;-1:-1:-1::0;;;3299:24:90;3295:1021:::2;;3325:11;:37:::0;;-1:-1:-1;;;;;;3325:37:90::2;-1:-1:-1::0;;;;;3325:37:90;::::2;;::::0;;3295:1021:::2;;;3381:9;-1:-1:-1::0;;;3381:31:90;3377:939:::2;;3414:11;:43:::0;;-1:-1:-1;;;;3414:43:90::2;-1:-1:-1::0;;;;;;;;3414:43:90;::::2;;;::::0;;3377:939:::2;;;3476:9;-1:-1:-1::0;;;3476:37:90;3472:844:::2;;3515:11;:49:::0;;-1:-1:-1;;;;;3515:49:90::2;-1:-1:-1::0;;;;;;;;3515:49:90;::::2;;;::::0;;3472:844:::2;;;3583:9;-1:-1:-1::0;;;3583:30:90;3579:737:::2;;3615:15;:22:::0;;;3579:737:::2;;;3838:9;-1:-1:-1::0;;;3838:23:90;3834:482:::2;;3863:68;-1:-1:-1::0;;3877:4:90::2;:25;3876:54;;3924:4;3863:12;:68::i;3876:54::-;-1:-1:-1::0;;3863:12:90::2;:68::i;:::-;3834:482;;;3950:9;-1:-1:-1::0;;;3950:33:90;3946:370:::2;;3985:17;:51:::0;;-1:-1:-1;;3985:51:90::2;-1:-1:-1::0;;;;;3985:51:90;::::2;;::::0;;3946:370:::2;;;4055:9;-1:-1:-1::0;;;4055:34:90;4051:265:::2;;4091:17;:52:::0;;-1:-1:-1;;;;4091:52:90::2;-1:-1:-1::0;;;;;;;;4091:52:90;::::2;;;::::0;;4051:265:::2;;;4162:9;-1:-1:-1::0;;;4162:33:90;4158:158:::2;;4197:17;:51:::0;;-1:-1:-1;;;;4197:51:90::2;-1:-1:-1::0;;;;;;;;4197:51:90;::::2;;;::::0;;4158:158:::2;;;4270:46;;-1:-1:-1::0;;;4270:46:90::2;;;;;;;;;;;4158:158;4344:9;4331:29;4355:4;4331:29;;;;1210:25:193::0;;1198:2;1183:18;;1064:177;4331:29:90::2;;;;;;;;1268:1:47::1;3179:1188:90::0;;:::o;16557:724:88:-;16634:22;16658:21;16681:27;16725:26;16754:14;:12;:14::i;:::-;16805:15;;16725:43;;-1:-1:-1;16848:54:88;16725:43;16805:15;16848:25;:54::i;:::-;16830:72;;16928:80;16948:9;16959:15;16976:16;16994:1;16997;17000;17003;17006;16928:19;:80::i;:::-;-1:-1:-1;17040:29:88;;;;;-1:-1:-1;16912:96:88;-1:-1:-1;;;;;;17083:22:88;;;17079:196;;17136:128;17177:24;17192:8;17177:14;:24::i;:::-;-1:-1:-1;;;;;17220:19:88;;;;;;:9;:19;;;;;:30;;;17203:15;;17136:23;:128::i;:::-;-1:-1:-1;;;;;17120:144:88;;;17079:196;16715:566;;16557:724;;;;;:::o;2268:342:183:-;-1:-1:-1;;;;;2364:19:183;;2373:10;2364:19;;;;:59;;-1:-1:-1;;;;;;2388:23:183;;;;;;:16;:23;;;;;;;;2412:10;2388:35;;;;;;;;;;2387:36;2364:59;2360:127;;;2444:43;;-1:-1:-1;;;2444:43:183;;;;;;;;;;;2360:127;-1:-1:-1;;;;;2497:17:183;;;;;;;:10;:17;;;;;;;;:25;;;;;;;;;;;:37;;-1:-1:-1;;2497:37:183;;;;;;;2549:54;;;;;2566:10;;2497:17;;:25;;:37;;2549:54;:::i;:::-;;;;;;;;2268:342;;;:::o;998:73:182:-;313:24;2631:16:31;2642:4;2631:10;:16::i;:::-;1056:8:182::1;:6;:8::i;46239:294:88:-:0;46359:23;;46427:10;:24;46423:38;;46453:8;;;46423:38;46478:48;46488:19;46509:16;46478:9;:48::i;:::-;46471:55;;;;46239:294;;;;;:::o;492:2465:151:-;-1:-1:-1;;;;;753:16:151;;646:22;753:16;;;:9;:16;;;;;;;;726:43;;;;;;;;;;;;;;;;;;;;;;798:16;;646:22;;;829:19;;;825:178;;;868:51;873:15;898:8;:19;;;890:28;;;:::i;:::-;868:4;:51::i;:::-;850:69;;825:178;;;-1:-1:-1;;;;;981:20:151;;;;;;:4;:20;;;;;;952:51;;957:15;;952:4;:51::i;:::-;934:69;;825:178;1014:27;1044:231;1062:41;1066:8;:19;;;1087:15;1062:3;:41::i;:::-;1221:44;1226:18;:16;:18::i;:::-;1254:9;1221:4;:44::i;:::-;1044:4;:231::i;:::-;1014:261;;1287:22;1311:21;1337:17;1348:5;1337:10;:17::i;:::-;1286:68;;;;;1364:12;1379:66;1393:8;:19;;;1414:15;1431:13;1379;:66::i;:::-;1364:81;;1455:19;1542:170;1566:78;1570:3;-1:-1:-1;;;;;1570:14:151;;1593:4;1570:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1627:3;-1:-1:-1;;;;;1627:14:151;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:3;-1:-1:-1;;;;;1601:21:151;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;;:::i;:::-;1473:9:181;;;1484:8;;-1:-1:-1;1469:24:181;1462:32;;1357:145;1566:78:151;1660:42;1697:4;1667:19;1660:42;:::i;:::-;1757:9:181;;;1768;;-1:-1:-1;1753:25:181;1746:33;;1644:143;1542:170:151;1527:185;;1731:28;1785:1;1770:12;:16;:47;;1805:12;1770:47;;;1789:13;1790:12;1789:13;:::i;:::-;1731:87;;1853:73;1873:20;1895:15;1912:13;1853:19;:73::i;:::-;1828:99;;1964:1;1949:12;:16;1946:55;;;1985:16;1986:15;1985:16;:::i;:::-;1967:34;;1946:55;1517:495;2022:16;2091:21;2118:143;2172:1;2154:15;:19;2153:53;;2205:1;2153:53;;;2185:16;2186:15;2185:16;:::i;:::-;2208:8;:19;;;2237:13;2118:21;:143::i;:::-;2090:171;;;2339:13;-1:-1:-1;;;;;2331:22:151;2283:38;2288:15;-1:-1:-1;;;;;2283:38:151;2305:15;2283:4;:38::i;:::-;:71;;;;:::i;:::-;2271:83;;2080:285;2375:17;2402:3;-1:-1:-1;;;;;2402:14:151;;2417:8;2402:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2375:52;;2465:1;2453:9;:13;:40;;;-1:-1:-1;2483:10:151;2484:9;2483:10;:::i;:::-;2470;:23;2453:40;2452:90;;2531:10;2518;2519:9;2518:10;:::i;:::-;:23;;;;:::i;:::-;2452:90;;;2505:1;2452:90;2437:105;;2553:22;2608:15;2585:8;:19;;;2578:45;;;;:::i;:::-;2553:70;;2718:1;2700:15;:19;:78;;;;-1:-1:-1;2755:11:151;:21;-1:-1:-1;;;;;2755:21:151;2741:37;;2723:55;;2700:78;2697:189;;;2811:1;2793:19;;2844:1;2826:19;;2874:1;2859:16;;2697:189;2895:55;;;;;;;;;492:2465;;;;;;;;:::o;3021:145:31:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:31;;;;;;;;;;;;;;;3021:145::o;11412:320:88:-;1239:19:47;:17;:19::i;:::-;11476:22:88::1;11501:27:::0;11532:22:::1;11551:1;11532:10;:22::i;:::-;11603:11;:34:::0;11475:79;;-1:-1:-1;11475:79:88;-1:-1:-1;11568:147:88::1;::::0;-1:-1:-1;;;11603:34:88;::::1;-1:-1:-1::0;;;;;11603:34:88::1;::::0;-1:-1:-1;11639:11:88::1;:9;:11::i;:::-;11652:15;;11669;11686:19;11568:21;:147::i;:::-;11564:161;;;11717:8;:6;:8::i;26105:3390::-:0;26448:1;26430:15;:19;:42;;;;26471:1;26453:15;:19;26430:42;26429:81;;;;;26478:32;26492:5;26499:10;26478:13;:32::i;:::-;26477:33;26429:81;:278;;;;26659:1;26641:15;:19;:65;;;;;26665:41;26679:14;26695:10;26665:13;:41::i;:::-;26664:42;26641:65;26429:454;;;;26841:1;26823:15;:19;:59;;;;;26847:35;26861:8;26871:10;26847:13;:35::i;:::-;26846:36;26823:59;26308:641;;;26901:48;;-1:-1:-1;;;26901:48:88;;;;;;;;;;;26308:641;-1:-1:-1;;;;;26987:16:88;;26960:24;26987:16;;;:9;:16;;;;;;;;26960:43;;;;;;;;;;;;;;;;;;;;27013:45;;;;;;;27047:11;27013:45;-1:-1:-1;;;;;27013:45:88;;;;-1:-1:-1;;;;;;;;27013:45:88;;;;;;;;;;;-1:-1:-1;;;27013:45:88;;;;;;;;;;;;27095:15;;26960:43;;27141:11;:9;:11::i;:::-;27120:32;;27272:26;27300:30;27332:21;27357:232;27394:5;27413:8;:19;;;27446:16;27476:15;27505:10;27529:12;:35;;;27578:1;27357:23;:232::i;:::-;27271:318;;;;;;27654:97;27670:5;27677:8;27687:11;27700:15;27717;27734:16;27654:15;:97::i;:::-;27643:108;;27865:1;27847:15;:19;:42;;;;27888:1;27870:15;:19;27847:42;27846:308;;;;;27895:259;27930:98;27944:8;:19;;;27965:11;:35;;;28002:11;:25;;;-1:-1:-1;;;;;27930:98:88;:13;:98::i;:::-;28046:19;;28111:29;;;;28083:10;;-1:-1:-1;;;;;27895:259:88;:17;:259::i;:::-;27894:260;27846:308;27829:386;;;28172:43;;-1:-1:-1;;;28172:43:88;;;;;;;;;;;27829:386;-1:-1:-1;;;;;28317:20:88;;;;;;:4;:20;;;;;;28313:42;;28339:15;28313:3;:42::i;:::-;-1:-1:-1;;;;;28290:20:88;;;;;;:4;:20;;;;;:65;28384:38;28388:16;28406:15;28384:3;:38::i;:::-;28365:57;;28451:16;28433:15;:34;;;;28647:16;28732:13;-1:-1:-1;;;;;28724:22:88;28666:48;28671:9;:25;;;-1:-1:-1;;;;;28666:48:88;28698:15;28666:4;:48::i;:::-;:81;;;;:::i;:::-;28647:100;;28773:1;28761:9;:13;28757:219;;;28790:62;;-1:-1:-1;;;28790:62:88;;-1:-1:-1;;;;;28790:3:88;:17;;;;:62;;28816:4;;28823:8;;28841:9;;28790:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28757:219;;;28885:1;28873:9;:13;28869:107;;;-1:-1:-1;;;;;28902:3:88;:17;;28920:8;28938:4;28953:10;28954:9;28953:10;:::i;:::-;28902:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28869:107;29046:1;29028:15;:19;29025:357;;;29063:24;29090:55;29117:9;29128:16;29090:26;:55::i;:::-;29063:82;-1:-1:-1;;;;;;29196:17:88;29217:2;29196:23;29159:61;29237:38;;;29234:138;;;29302:55;;-1:-1:-1;;;29302:55:88;;;;;;;;;;;29234:138;29049:333;;29025:357;29445:8;-1:-1:-1;;;;;29398:90:88;29429:14;-1:-1:-1;;;;;29398:90:88;29422:5;-1:-1:-1;;;;;29398:90:88;;29455:15;29472;29398:90;;;;;;3633:25:193;;;3689:2;3674:18;;3667:34;3621:2;3606:18;;3459:248;29398:90:88;;;;;;;;26298:3197;;;;;;;;26105:3390;;;;;:::o;31115:330::-;31198:6;368:4:181;31220:9:88;:15;31216:29;;;-1:-1:-1;31244:1:88;;31115:330;-1:-1:-1;31115:330:88:o;31216:29::-;31284:12;-1:-1:-1;;;;;31255:42:88;;;31351:3;31335:19;31372:66;31381:56;368:4:181;31403:33:88;31255:42;31420:15;368:4:181;31420:9:88;:15;:::i;31403:33::-;31391:45;;:9;:45;:::i;:::-;31381:4;:56::i;:::-;31372:8;:66::i;:::-;31365:73;31115:330;-1:-1:-1;;;;31115:330:88:o;3297:149:183:-;3372:4;3404:6;-1:-1:-1;;;;;3395:15:183;:5;-1:-1:-1;;;;;3395:15:183;;:44;;;-1:-1:-1;;;;;;3414:17:183;;;;;;;:10;:17;;;;;;;;:25;;;;;;;;;;;;3395:44;3388:51;3297:149;-1:-1:-1;;;3297:149:183:o;17345:209:88:-;17429:16;;;17384:19;17455:20;;;17485:62;;-1:-1:-1;;;17485:62:88;;-1:-1:-1;;;;;17485:3:88;:17;;;;:62;;17511:4;;17526:6;;17429:16;;17485:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17345:209;:::o;46878:633::-;46991:23;47016:27;47096:48;47106:19;47127:16;47096:9;:48::i;:::-;47055:89;;-1:-1:-1;47055:89:88;-1:-1:-1;47214:19:88;;47210:86;;47235:61;;-1:-1:-1;;;47235:61:88;;-1:-1:-1;;;;;47235:3:88;:17;;;;:61;;47253:10;;47273:4;;47280:15;;47235:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47210:86;47310:23;;47306:68;;47340:10;47335:16;;;;:4;:16;;;;;:39;;47355:19;;47335:16;:39;;47355:19;;47335:39;:::i;:::-;;;;-1:-1:-1;;47306:68:88;47390:58;;;3633:25:193;;;3689:2;3674:18;;3667:34;;;47399:10:88;;47390:58;;3606:18:193;47390:58:88;;;;;;;46878:633;;;;;:::o;5354:147:31:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;1776:200:183:-:0;1864:10;1853:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;1853:30:183;;;;;;;;;;;:42;;-1:-1:-1;;1853:42:183;;;;;;;1910:59;;;;;1864:10;;1853:30;;:42;;1910:59;:::i;3632:148:96:-;3695:18;;:::i;:::-;-1:-1:-1;;;;;3750:22:96;;;;;;:12;:22;;;;;;;;;3732:41;;;;;;;;;-1:-1:-1;;;;;3732:41:96;;;;;-1:-1:-1;;;3732:41:96;;;;;;;;;;-1:-1:-1;;;3732:41:96;;;-1:-1:-1;;;;;3732:41:96;;;;;;;;;;:17;:41::i;5449:4001:90:-;1239:19:47;:17;:19::i;:::-;5589::90;;5572:36;::::1;5568:97;;5617:48;;-1:-1:-1::0;;;5617:48:90::1;;;;;;;;;;;5568:97;5676:26;5705:14;:12;:14::i;:::-;5729:45;::::0;;::::1;::::0;;::::1;::::0;;5763:11:::1;5729:45:::0;-1:-1:-1;;;;;5729:45:90;::::1;::::0;;-1:-1:-1;;;;;;;;5729:45:90;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;;-1:-1:-1;;;5729:45:90;;::::1;::::0;::::1;::::0;;;;5784:63;;;;::::1;::::0;;5830:17:::1;5784:63:::0;;;::::1;::::0;;-1:-1:-1;;;5784:63:90;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;;::::0;;;;;;;5676:43;;-1:-1:-1;5729:31:90::1;5878:11;:9;:11::i;:::-;5857:32;;5900:26;;:::i;:::-;5936:27:::0;;;5997:15:::1;::::0;5973:21:::1;::::0;::::1;:39:::0;6040:11:::1;:21:::0;-1:-1:-1;;;;;6040:21:90::1;6022:15;::::0;::::1;:39:::0;6111:17:::1;:37:::0;6094:55:::1;::::0;6099:10;;-1:-1:-1;;;6111:37:90;::::1;-1:-1:-1::0;;;;;6111:37:90::1;6094:4;:55::i;:::-;6071:20;::::0;::::1;:78:::0;6185:17:::1;:36:::0;-1:-1:-1;;;;;6185:36:90::1;6159:23;::::0;::::1;:62:::0;6294:21:::1;::::0;::::1;::::0;6185:36:::1;::::0;6257:59:::1;::::0;6283:9;;6257:25:::1;:59::i;:::-;6232:84;;6332:9;6327:2047;6343:17:::0;;::::1;6327:2047;;;6378:13;6394:6;;6401:1;6394:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6378:25:::0;-1:-1:-1;;;;;;6423:19:90;::::1;::::0;;:43:::1;;;6446:12;6459:1;6446:15;;;;;;;;:::i;:::-;;;;;;;6465:1;6446:20;6423:43;6417:1915;;-1:-1:-1::0;;;;;6514:16:90;::::1;6487:24;6514:16:::0;;;:9:::1;:16;::::0;;;;;;;6487:43;;;;::::1;::::0;;;;;;;::::1;;::::0;;;::::1;::::0;;;;:24;6581:67:::1;::::0;6524:5;;6632:15;6581:22:::1;:67::i;:::-;6548:100;;6731:12;6746:78;6760:8;:19;;;6781:15;6798:11;:25;;;-1:-1:-1::0;;;;;6746:78:90::1;:13;:78::i;:::-;6731:93:::0;-1:-1:-1;6908:15:90;;;:144:::1;;;6927:125;6966:4;6972:8;:19;;;6993:10;7005:12;:29;;;-1:-1:-1::0;;;;;6927:125:90::1;:17;:125::i;:::-;6904:196;;;7061:39;;-1:-1:-1::0;;;7061:39:90::1;;;;;;;;;;;6904:196;7305:24;7365:17:::0;7418:23:::1;7444:74;7449:37;7454:8;:19;;;7475:10;7449:4;:37::i;:::-;7488:12;:29;;;-1:-1:-1::0;;;;;7444:74:90::1;:4;:74::i;:::-;7418:100;;7600:15;7548:49;7553:18;:37;;;-1:-1:-1::0;;;;;7548:49:90::1;7592:4;7548;:49::i;:::-;:67;;;;:::i;:::-;7536:79;;7400:234;7651:21;7675:75;7680:12;:29;;;-1:-1:-1::0;;;;;7675:75:90::1;7711:18;:38;;;-1:-1:-1::0;;;;;7675:75:90::1;:4;:75::i;:::-;7651:99;;7768:19;7881:24;368:4:181;7891:13:90;7881:4;:24::i;:::-;7790:68;7795:18;:37;;;-1:-1:-1::0;;;;;7790:68:90::1;7834:5;:23;;;7790:4;:68::i;:::-;:115;;;;:::i;:::-;7768:137;;7942:28;7947:9;7958:11;7942:4;:28::i;:::-;7923:47;;7347:642;;;8111:69;8115:12;8128:1;8115:15;;;;;;;;:::i;:::-;;;;;;;8132:47;8137:16;8155:5;:23;;;8132:4;:47::i;8111:69::-;8083:25;::::0;::::1;:97:::0;8249:68:::1;8083:5:::0;8288:8;8298:11;8311:5;8249:31:::1;:68::i;:::-;8241:76;;6469:1863;;;;6417:1915;-1:-1:-1::0;8358:3:90::1;;6327:2047;;;;8503:296;8570:5;:15;;;8623:58;8628:5;:21;;;8657:5;:23;;;368:4:181;8651:29:90;;;;:::i;8623:58::-;8599:5;:21;;;:82;;;;:::i;:::-;8695:5;:21;;;8730:10;8754:12;:35;;;8503:53;:296::i;:::-;-1:-1:-1::0;8885:21:90::1;::::0;::::1;::::0;8867:15:::1;:39:::0;9032:21:::1;::::0;::::1;::::0;8987:67:::1;::::0;-1:-1:-1;;;8987:67:90;;-1:-1:-1;;;;;8987:3:90::1;:17;::::0;::::1;::::0;:67:::1;::::0;9005:10:::1;::::0;9025:4:::1;::::0;9032:21;8987:67:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;9154:25:90::1;::::0;;::::1;::::0;9139:10:::1;9134:16;::::0;;;:4:::1;:16;::::0;;;;:45;;9154:25;;-1:-1:-1;9134:16:90;;:45:::1;::::0;9154:25;;9134:45:::1;:::i;:::-;::::0;;;-1:-1:-1;;9303:20:90::1;::::0;::::1;::::0;:25;9299:145:::1;;9411:20;::::0;::::1;::::0;9396:36:::1;::::0;-1:-1:-1;;;9396:36:90;;::::1;::::0;::::1;1210:25:193::0;;;;9396:6:90::1;-1:-1:-1::0;;;;;9396:14:90::1;::::0;::::1;::::0;1183:18:193;;9396:36:90::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9299:145;5558:3892;;;;;;5449:4001:::0;;;:::o;3361:97:96:-;3406:16;;:::i;:::-;-1:-1:-1;3434:17:96;;;;;;;;3441:10;3434:17;;;;;;;-1:-1:-1;;;;;;;;3434:17:96;;;;;;;;-1:-1:-1;;;3434:17:96;;;;;;;;;;;;;;;;;;;;;;;;;;3361:97::o;33517:268:88:-;1239:19:47;:17;:19::i;:::-;1075:30:88::1;2631:16:31;2642:4;2631:10;:16::i;:::-;33672:5:88::2;33632:37:::0;;;:21:::2;:37;::::0;;;;:45;;-1:-1:-1;;33632:45:88::2;::::0;;33687:39:::2;:16;33654:14:::0;33687:23:::2;:39::i;:::-;33741:36;::::0;33762:14;;33741:36:::2;::::0;;;::::2;1268:1:47::1;33517:268:88::0;:::o;12837:235::-;12915:19;1239::47;:17;:19::i;:::-;12951:10:88::1;12946:16;::::0;;;:4:::1;:16;::::0;;;;:26;;12966:6;;12946:16;:26:::1;::::0;12966:6;;12946:26:::1;:::i;:::-;::::0;;;-1:-1:-1;12996:24:88::1;::::0;-1:-1:-1;13001:6:88;13009:10:::1;12996:4;:24::i;:::-;12982:38:::0;-1:-1:-1;13030:35:88::1;-1:-1:-1::0;;;;;13030:5:88::1;:18;13049:2:::0;12982:38;13030:18:::1;:35::i;7587:233:31:-:0;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:31;;;;;;;;;:36;;-1:-1:-1;;7708:36:31;7740:4;7708:36;;;7790:12;719:10:66;;640:96;7790:12:31;-1:-1:-1;;;;;7763:40:31;7781:7;-1:-1:-1;;;;;7763:40:31;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;3894:128:96:-;3964:22;;:10;:22;;;;;;;;;;;-1:-1:-1;;;;;3964:22:96;;;-1:-1:-1;;;3964:22:96;-1:-1:-1;;;;3964:22:96;;;-1:-1:-1;;;3964:22:96;-1:-1:-1;;;;;;3964:22:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4001:14;;;3964:22;;4001:14;3894:128;:::o;3063:290:180:-;3129:16;3148:14;;;;;;;;;;;;3129:33;;;;;;;;;;;;;;;;;;;3177:18;3148:4;3159:2;3177:8;:18::i;:::-;3172:47;;3204:15;;-1:-1:-1;;;3204:15:180;;;;;;;;;;;3172:47;3258:9;;;;;;3240;;3229:10;:21;;;;;;;;;;;:26;;;;:38;;;;3306:9;;3288;;3277:21;;;;;:38;3332:14;;;;;3325:21;;;;;3063:290::o;21596:1736:88:-;21893:26;;:::i;:::-;21921:30;;:::i;:::-;21953:21;22003:14;:12;:14::i;:::-;21991:26;;22041:21;22056:5;22041:14;:21::i;:::-;22027:35;;22300:22;22325:59;22351:9;22362:21;22325:25;:59::i;:::-;22300:84;;22430:71;22454:11;22467:15;22484:16;22430:23;:71::i;:::-;-1:-1:-1;;;;;22402:99:88;:25;;;:99;-1:-1:-1;;;;;22511:53:88;;;22629:143;22511:35;22665:19;;22664:53;;22716:1;22664:53;;;22696:16;22697:15;22696:16;:::i;:::-;22719;22737:11;:25;;;22629:21;:143::i;:::-;-1:-1:-1;;;;;22584:188:88;22600:25;;;22584:188;;-1:-1:-1;22783:23:88;22847:283;22913:5;22932:9;22600:11;22980:21;23015:16;23045:15;22584:188;23101:19;22847:52;:283::i;:::-;22816:314;;-1:-1:-1;22816:314:88;-1:-1:-1;23141:184:88;22816:314;;23236:43;23240:21;23263:15;23236:3;:43::i;:::-;23281:10;23293:22;23141:53;:184::i;:::-;;21981:1351;21596:1736;;;;;;;;;;;:::o;3915:473:180:-;3999:18;4008:4;4014:2;3999:8;:18::i;:::-;3995:43;;;4026:12;;-1:-1:-1;;;4026:12:180;;;;;;;;;;;3995:43;4052:9;;;;;:34;;;4066:20;4075:4;4081;4066:8;:20::i;:::-;4065:21;4052:34;4048:62;;;4095:15;;-1:-1:-1;;;4095:15:180;;;;;;;;;;;4048:62;4120:12;4135:16;;;;;;;;;;:21;;4166:26;;;;4206:9;;:39;;;;-1:-1:-1;4219:10:180;:16;;;;;;;;;;:21;;;:26;4206:39;4202:71;;;4247:10;:16;;;;;;;;;;:21;;:26;;;4202:71;4283:10;:16;;;;;;;;;;;;:21;;;;:26;;;4319:14;;;;;;:26;;;4355:19;;:26;3915:473::o;3460:103:31:-;3526:30;3537:4;719:10:66;3526::31;:30::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:31;;;;;;;;;;:37;;-1:-1:-1;;8112:37:31;;;8168:40;719:10:66;;8112:12:31;;8168:40;;8144:5;8168:40;7991:234;;:::o;2433:117:47:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:47::1;::::0;;2521:22:::1;719:10:66::0;2530:12:47::1;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;1767:106::-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:47;;14065:2:193;1828:38:47;;;14047:21:193;14104:2;14084:18;;;14077:30;-1:-1:-1;;;14123:18:193;;;14116:46;14179:18;;1828:38:47;13863:340:193;1828:38:47;1767:106::o;1355:203:62:-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1482:68:62;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:62;-1:-1:-1;;;;;;1482:68:62;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;4704:487:181:-;4754:9;4934:16;4928:23;;4946:3;4919:33;4912:41;4905:49;;4895:255;;5054:10;5048:4;5041:24;5135:4;5129;5122:18;4895:255;-1:-1:-1;5175:3:181;5168:11;;;;5164:19;;4704:487::o;4597:285:96:-;4669:1;4658:8;:12;;;:45;;;;-1:-1:-1;368:4:181;4674:29:96;;;;;4658:45;:72;;;-1:-1:-1;473:19:96;4707:23;;;;;4658:72;4654:145;;;4751:48;;-1:-1:-1;;;4751:48:96;;;;;;;;;;;4654:145;4809:10;:30;;-1:-1:-1;;4809:30:96;-1:-1:-1;;;;;4809:30:96;;;;;4854:21;;14379:1:193;14368:21;;;14350:40;;4854:21:96;;14338:2:193;14323:18;4854:21:96;;;;;;;4597:285;:::o;13796:2121:88:-;13922:6;13940:19;13993:1;13972:9;:18;;;:22;;;13969:1869;;;-1:-1:-1;;;;;14093:17:88;14053:58;;;;14183:2;14162:23;;;14125:61;;368:4:181;14200:58:88;14254:3;14233:24;;;14200:58;;14519:22;;;14326:3;14305:24;;;14272:58;;14602:22;;;14401:3;14380:24;;;;14344:61;;;14559:25;14053:30;14733:55;14760:9;14771:16;14733:26;:55::i;:::-;14706:82;;14824:19;14805:16;:38;14802:81;;;-1:-1:-1;14864:19:88;14802:81;15085:22;15065:16;:42;15061:695;;15166:148;15192:66;15197:36;15218:15;15197:18;:36;:::i;:::-;15235:22;15192:4;:66::i;:::-;15280:16;15166:4;:148::i;:::-;15148:166;;:15;:166;:::i;:::-;15126:189;;15061:695;;;15560:180;15586:72;15591:36;15609:18;15591:15;:36;:::i;:::-;15629:28;15635:22;368:4:181;15629:28:88;:::i;15586:72::-;15681:41;15700:22;15681:16;:41;:::i;15560:180::-;15539:201;;:18;:201;:::i;:::-;15517:224;;15061:695;13995:1771;;;;;;13969:1869;;;-1:-1:-1;15808:18:88;;13969:1869;15854:56;15886:9;15897:12;15854:31;:56::i;7766:1940:96:-;8108:31;;:::i;:::-;8141:23;8176:28;8207:43;8211:21;8234:15;8207:3;:43::i;:::-;8284:29;;;;8176:74;;-1:-1:-1;8328:20:96;;;;:63;;;8374:17;-1:-1:-1;;;;;8352:39:96;:18;-1:-1:-1;;;;;8352:39:96;;;8328:63;8324:327;;;8563:63;8568:17;-1:-1:-1;;;;;8563:63:96;8587:38;8591:16;8609:15;8587:3;:38::i;8563:63::-;8502:42;8507:18;-1:-1:-1;;;;;8502:42:96;8527:16;8502:4;:42::i;:::-;8454:15;:29;;;:90;;;;:::i;:::-;:172;;;;:::i;:::-;8407:233;;8324:327;8671:32;8707:26;;8706:263;;8741:228;8759:165;8781:57;8786:15;:29;;;8816:21;8781:4;:57::i;:::-;8879:15;:31;;;8856:20;:54;;;;:::i;:::-;-1:-1:-1;;;;;8759:165:96;:4;:165::i;:::-;8939:20;8741:4;:228::i;:::-;8706:263;;;8737:1;8706:263;8671:298;;8980:27;9075:13;-1:-1:-1;;;;;9010:78:96;9048:24;9010:15;:35;;;:62;;;;:::i;:::-;:78;;;;:::i;:::-;8980:108;;9115:266;;;;;;;;9149:15;:24;;;9115:266;;;;;;9261:15;-1:-1:-1;;;;;9115:266:96;;;;;9308:20;-1:-1:-1;;;;;9115:266:96;;;;;9357:13;9115:266;;;;9208:19;9115:266;;;9098:283;;8661:731;;9421:21;9446:1;9421:26;9420:279;;9455:244;9473:181;9501:57;9506:15;:29;;;9536:21;9501:4;:57::i;:::-;9495:63;;368:4:181;9495:63:96;:::i;:::-;9609:15;:31;;;9576:14;:30;;;:64;;;;:::i;9473:181::-;9668:21;9455:4;:244::i;:::-;9420:279;;;9451:1;9420:279;9402:297;;8166:1540;;7766:1940;;;;;;;;;;;:::o;6615:375::-;6760:21;6845:137;6863:85;6868:11;:24;;;-1:-1:-1;;;;;6863:85:96;6912:11;:35;;;6894:15;:53;;;;:::i;6863:85::-;6962:10;6845:4;:137::i;:::-;6809:11;:25;;;:174;;;;:::i;795:103:182:-;841:14;:12;:14::i;:::-;876:15;865:8;:26;795:103::o;42285:3599:88:-;42399:23;42424:27;42463:26;42492:14;:12;:14::i;:::-;42516:45;;;;;;;;42550:11;42516:45;-1:-1:-1;;;;;42516:45:88;;;;-1:-1:-1;;;;;;;;42516:45:88;;;;;;;;-1:-1:-1;;;42516:45:88;;;;;;;;;;;42463:43;;-1:-1:-1;42516:31:88;42592:11;:9;:11::i;:::-;42571:32;;42614:26;;:::i;:::-;42650:27;;;42711:15;;42687:21;;;:39;;;42754:22;;-1:-1:-1;;;;;42736:40:88;:15;;;:40;368:4:181;42786:23:88;;;:29;42650:15;;42851:59;;42668:9;;42851:25;:59::i;:::-;-1:-1:-1;;;;;;;;;;;1276:18:180;42987:22:88;43169:32;;;:16;1276:13:180;43169:32:88;;;;;;;1539:13:180;;;;;;;;:18;42826:84:88;;-1:-1:-1;1276:18:180;43222:1954:88;43253:16;43229:5;:21;;;:40;43222:1954;;;43383:19;;;:59;;;43423:19;43406:14;:36;43383:59;43444:5;43379:70;43543:37;;;;:21;:37;;;;;;;;43542:38;;:59;;-1:-1:-1;43584:17:88;;43542:59;43538:414;;;-1:-1:-1;1908:7:180;1934:14;;;43690:16:88;1934:14:180;;;;;;;;:19;;;43869:32:88;;;:16;:32;;;;;1539:13:180;;;;;;;;;:18;43929:8:88;;43538:414;44081:24;44108:32;;;:16;:32;;;;;;;;2335:14:180;;;;;;;;:19;44180:32:88;;;44176:43;;44214:5;;;44176:43;-1:-1:-1;;;;;44366:16:88;;44279:13;44366:16;;;:9;:16;;;;;;;;44339:43;;;;;;;;;;;;;;;;;;;;;44311:12;;44339:43;;44429:67;;44311:12;;44480:15;44429:22;:67::i;:::-;44396:100;;44533:32;44538:10;44550:14;44533:4;:32::i;:::-;44510:20;;;:55;44626:21;;;;44607:40;;:16;:40;:::i;:::-;44579:25;;;:68;44799:19;;;;44820:35;;44857:25;;;;44750:259;;44785:98;;44799:19;;-1:-1:-1;;;;;44785:98:88;:13;:98::i;:::-;44901:19;;44966:29;;;;44938:10;;-1:-1:-1;;;;;44750:259:88;:17;:259::i;:::-;44746:374;;;45037:68;45069:5;45076:8;45086:11;45099:5;45037:31;:68::i;:::-;45029:76;;44746:374;45149:16;45134:31;;43271:1905;;;;43222:1954;;;45305:235;45372:5;:15;;;45401:5;:21;;;45436:5;:21;;;45471:10;45495:12;:35;;;45305:53;:235::i;:::-;-1:-1:-1;45631:21:88;;;;45613:15;:39;45740:21;;;;45720:41;;45716:93;;45770:39;;-1:-1:-1;;;45770:39:88;;;;;;;;;;;45716:93;45828:5;:21;;;45851:5;:25;;;45820:57;;;;;;;;;;;42285:3599;;;;;:::o;3108:117:151:-;3164:6;3189:1;3185;:5;3182:18;;;-1:-1:-1;3199:1:151;3192:8;;3182:18;-1:-1:-1;3217:1:151;3108:117;-1:-1:-1;3108:117:151:o;3231:120::-;3287:6;3312:1;3308;:5;3305:18;;;-1:-1:-1;3322:1:151;3315:8;;2190:205:181;2294:9;;;2238;2320:5;;:14;;;;;2333:1;2329;:5;2320:14;2319:36;;;;2344:1;2340;:5;:14;;;;;2353:1;2349;:5;2340:14;2314:78;;;2365:27;;-1:-1:-1;;;2365:27:181;;;;;;;;;;;2963:139:151;3014:7;3039:56;3044:11;:9;:11::i;:::-;3065;:28;-1:-1:-1;;;3065:28:151;;-1:-1:-1;;;;;3065:28:151;3039:4;:56::i;3233:443:181:-;3283:9;3436:1;3432;3428:6;3424:14;3421:1;3418:21;3415:1;3411:29;3408:227;;;3539:10;3533:4;3526:24;3620:4;3614;3607:18;3408:227;-1:-1:-1;3664:3:181;3653:9;;3649:19;;3233:443::o;1466:197:88:-;1584:12;1647:13;1611:33;1616:10;1628:15;-1:-1:-1;;;;;1611:33:88;:4;:33::i;:::-;:49;;;;:::i;1940:373::-;2058:18;2097:43;2102:20;2109:13;2102:4;:20;:::i;:::-;2124:15;-1:-1:-1;;;;;2097:43:88;:4;:43::i;:::-;2084:56;;2262:4;2202:57;2216:10;2228:15;2245:13;2202;:57::i;:::-;:64;2198:113;;;2290:12;;1940:373;;;;;:::o;5812:457:96:-;5934:21;6008:13;6035:12;;;;;:25;;-1:-1:-1;6051:9:96;;;6035:25;6031:232;;;6202:4;6176:23;-1:-1:-1;;;;;6176:23:96;;:7;:23;:::i;:::-;:30;;;;:::i;:::-;6152:55;-1:-1:-1;6221:31:96;6152:55;6221:31;;:::i;:::-;;;6031:232;5812:457;;;;;;:::o;3678:121:181:-;3727:8;368:4;3767:9;3771:1;3774;3767:3;:9::i;:::-;:23;;;;;:::i;:::-;;;3678:121;-1:-1:-1;;;3678:121:181:o;10018:556:88:-;10248:4;10264:17;10284:69;10298:16;10316:15;10333:19;10284:13;:69::i;:::-;10264:89;-1:-1:-1;10380:14:88;;;;;:143;;;10500:22;-1:-1:-1;;;;;10492:31:88;10398:75;10450:10;10437;10404:5;-1:-1:-1;;;;;10404:15:88;;10428:4;10404:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;:56;;;;:::i;:::-;10463:9;10398:4;:75::i;:::-;:125;10380:143;10363:182;;;10541:4;10534:11;;;;;10363:182;10562:5;10555:12;;;10018:556;;;;;;;;:::o;23532:1034::-;-1:-1:-1;;;;;;;;;;;;;;;;;23900:19:88;;23896:41;;23921:15;23896:3;:41::i;:::-;23874:63;;23973:19;;;;23969:41;;23994:15;23969:3;:41::i;:::-;23947:19;;;:63;;;24097:24;;;;:188;;-1:-1:-1;24263:11:88;:21;24152:19;;;;24173:35;;24210:25;;;;-1:-1:-1;;;;;24263:21:88;;;;24138:98;;24152:19;24173:35;24138:98;:13;:98::i;:::-;:147;24097:188;24093:246;;;24303:36;;-1:-1:-1;;;24303:36:88;;;;;;;;;;;24093:246;-1:-1:-1;;;;;24391:16:88;;;;;;:9;:16;;;;;;;;:27;;;;;;;;;;;;;24434:95;24456:15;24473;24490:38;24494:16;24473:15;24490:3;:38::i;:::-;24434:95;;;5937:25:193;;;5993:2;5978:18;;5971:34;;;;6021:18;;;6014:34;5925:2;5910:18;24434:95:88;;;;;;;-1:-1:-1;24551:8:88;;23532:1034;-1:-1:-1;;;;;23532:1034:88:o;24659:226::-;24803:4;24873;24853:16;24827:23;24840:10;24827;:23;:::i;:::-;:42;;;;:::i;:::-;:50;;;24659:226;-1:-1:-1;;;;;24659:226:88:o;2511:205:181:-;2615:9;;;2559;2641:5;;:14;;;;;2654:1;2650;:5;2641:14;2640:36;;;;2665:1;2661;:5;:14;;;;;2674:1;2670;:5;2661:14;2635:78;;;2686:27;;-1:-1:-1;;;2686:27:181;;;;;;;;;;;13263:424:88;13390:24;13426:18;13447:89;13461:16;13479:9;:25;;;13506:9;:29;;;13447:13;:89::i;:::-;13426:110;-1:-1:-1;13566:15:88;;13565:115;;13601:79;13606:10;13663:16;;13631:3;-1:-1:-1;;;;;13631:14:88;;13654:4;13631:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13618:42;;:10;:42;:::i;:::-;:61;;;;:::i;13601:79::-;13565:115;;;13597:1;13546:134;13263:424;-1:-1:-1;;;;13263:424:88:o;777:132:181:-;820:6;-1:-1:-1;;;838:1:181;:12;834:50;;859:25;;-1:-1:-1;;;859:25:181;;;;;;;;;;;834:50;-1:-1:-1;904:1:181;777:132::o;2905:350:96:-;2986:18;;:::i;:::-;3020:35;;-1:-1:-1;;;;;3020:40:96;:35;:40;3016:205;;3103:1;3076:24;;;:28;;;368:4:181;3118:49:96;;3181:25;;;:29;-1:-1:-1;3237:11:96;2905:350::o;37898:378:88:-;38026:30;;:::i;:::-;38082:21;38097:5;38082:14;:21::i;:::-;38068:35;;38141:65;38165:11;38178:15;38195:10;38141:23;:65::i;:::-;-1:-1:-1;;;;;38113:93:88;:25;;;:93;-1:-1:-1;;;;;38216:53:88;;;;;38113:11;37898:378;-1:-1:-1;;37898:378:88:o;38370:3570::-;38544:20;;:::i;:::-;38657:24;38691:28;38729:23;38762:21;38803:12;38818:120;38845:8;:19;;;38866:11;:35;;;38903:11;:25;;;-1:-1:-1;;;;;38818:120:88;:13;:120::i;:::-;38803:135;;38948:23;38974:56;38979:5;:25;;;39006:5;:23;;;38974:4;:56::i;:::-;38948:82;;39173:479;39401:15;39394:4;:22;:66;;;;-1:-1:-1;39445:15:88;;;;39420:22;39427:15;39420:4;:22;:::i;:::-;:40;39394:66;39393:182;;39540:35;39545:4;39551:5;:23;;;39540:4;:35::i;:::-;39393:182;;;39484:53;39496:5;:15;;;39489:4;:22;;;;:::i;:::-;39513:5;:23;;;39484:4;:53::i;:::-;39593:49;39600:8;:19;;;39621:5;:20;;;39593:6;:49::i;39173:479::-;39750:25;;;;39040:612;;-1:-1:-1;;;;1473:9:181;;;1469:24;1462:32;39727:66:88;;39863:17;39883:47;39888:16;39906:5;:23;;;39883:4;:47::i;:::-;39863:67;;39986:65;40008:9;40019:4;40025:11;:25;;;39986:21;:65::i;:::-;-1:-1:-1;;;;;39941:110:88;;;39957:25;;;39941:110;40110:35;;39941:110;;-1:-1:-1;40079:82:88;;40099:9;;40079:82;;:19;:82::i;:::-;40061:100;;40263:44;40268:16;40286:5;:20;;;40263:4;:44::i;:::-;40344:19;;40240:67;;-1:-1:-1;40321:42:88;;40317:90;;;40388:19;;;-1:-1:-1;40317:90:88;40516:19;;40492:43;;:97;;;;;40574:15;40552:8;:19;;;:37;40492:97;40475:240;;;40637:16;40644:9;40637:4;:16;:::i;:::-;40613:5;:20;;:40;;;;;;;:::i;:::-;;;-1:-1:-1;40685:19:88;;;;;-1:-1:-1;40475:240:88;38793:1932;;;40760:24;40787:5;:21;;;40760:48;;40927:23;40997:280;41063:5;41082;:15;;;41111:11;41136:16;41166:8;:19;;;41200:25;41209:15;41200:8;:25::i;:::-;41199:26;;;:::i;:::-;41239:13;41266:1;40997:52;:280::i;:::-;40960:317;;;;-1:-1:-1;41374:206:88;41403:5;41422:8;41444:11;41470:30;41479:20;41470:8;:30::i;:::-;41469:31;;;:::i;:::-;41515:25;41524:15;41515:8;:25::i;:::-;41514:26;;;:::i;:::-;41554:16;41374:15;:206::i;:::-;;41735:15;41710:5;:21;;:40;;;;;;;:::i;:::-;;;-1:-1:-1;41760:25:88;;;:49;;41789:20;;41760:25;:49;;41789:20;;41760:49;:::i;:::-;;;-1:-1:-1;41819:21:88;;;:41;;41844:16;;41819:21;:41;;41844:16;;41819:41;:::i;:::-;;;-1:-1:-1;41870:21:88;;;:40;;41895:15;;41870:21;:40;;41895:15;;41870:40;:::i;:::-;;;-1:-1:-1;41928:5:88;;38370:3570;-1:-1:-1;;;;;;;;;;38370:3570:88:o;20349:691::-;20595:7;20663:201;20696:22;20732:10;20756:16;20786:9;:25;;;20825:9;:29;;;20663:19;:201::i;:::-;20913:24;20927:9;20913:13;:24::i;:::-;21015:18;21028:4;21015:12;:18::i;:::-;21008:25;20349:691;-1:-1:-1;;;;;;20349:691:88:o;941:175:62:-;1050:58;;-1:-1:-1;;;;;15685:32:193;;1050:58:62;;;15667:51:193;15734:18;;;15727:34;;;1023:86:62;;1043:5;;-1:-1:-1;;;1073:23:62;15640:18:193;;1050:58:62;15493:274:193;2601:224:180;2673:4;2693:2;2699:1;2693:7;2689:30;;2709:10;;-1:-1:-1;;;2709:10:180;;;;;;;;;;;2689:30;2737:10;:14;;;;;;;;;;:19;:24;;;:52;;-1:-1:-1;2765:10:180;:14;;;;;;;;;;:19;;;:24;;2737:52;:80;;;-1:-1:-1;;2793:10:180;:13;;;;;;;;;;;;:18;;;:24;;2601:224::o;18624:1359:88:-;18981:27;;:::i;:::-;19073:24;;;;;19010:23;19296:39;;;:11;:39;;;;;;;19226:260;;19276:5;;19349:38;19353:16;19371:15;19349:3;:38::i;:::-;-1:-1:-1;;;;;19402:24:88;;;19401:75;;19457:19;19226:16;:260::i;19401:75::-;19430:11;:24;;;19226:16;:260::i;:::-;-1:-1:-1;;;;;19199:287:88;:24;;;:287;19550:35;19566:5;19199:11;19550:15;:35::i;:::-;19684:292;19717:9;19740:11;:35;;;19789:21;19824:16;19854:15;19883:18;19915:11;:24;;;19953:13;19684:19;:292::i;:::-;19652:324;;;;-1:-1:-1;18624:1359:88;-1:-1:-1;;;;;;;;;;18624:1359:88:o;3844:479:31:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:31;;;;;;;;;;-1:-1:-1;;;3970:336:31;;;;;;;:::i;1945:106:47:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:47;;17447:2:193;2003:41:47;;;17429:21:193;17486:2;17466:18;;;17459:30;-1:-1:-1;;;17505:18:193;;;17498:50;17565:18;;2003:41:47;17245:344:193;5173:642:62;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:62;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:62;;18046:2:193;5697:111:62;;;18028:21:193;18085:2;18065:18;;;18058:30;18124:34;18104:18;;;18097:62;-1:-1:-1;;;18175:18:193;;;18168:40;18225:19;;5697:111:62;17844:406:193;5305:368:96;5422:22;5505:150;5527:9;:25;;;-1:-1:-1;;;;;5505:150:96;5570:71;5583:8;-1:-1:-1;;;;;5575:17:96;5613:9;:21;;;-1:-1:-1;;;;;5595:39:96;:15;:39;368:4:181;5570::96;:71::i;2186:115:47:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:14:::0;;-1:-1:-1;;2245:14:47::1;::::0;::::1;::::0;;2274:20:::1;719:10:66::0;2281:12:47::1;640:96:66::0;2832:207:181;2920:13;;;2880:8;2947:13;;;:47;;-1:-1:-1;2965:6:181;;;;;:28;;;2991:1;2979;2975;:5;;;;;:::i;:::-;;:18;;2965:28;2943:87;;;3003:27;;-1:-1:-1;;;3003:27:181;;;;;;;;;;;4001:509;4053:9;4230:1;4226;4222:6;4218:14;4215:1;4212:21;4209:1;4205:29;4202:225;;;4332:10;4326:4;4319:24;4412:4;4406;4399:18;4202:225;-1:-1:-1;4497:3:181;4486:9;;4459:19;;;4452:27;4445:35;4482:19;;;4441:61;;4001:509::o;509:133::-;552:6;-1:-1:-1;;;570:1:181;:13;566:51;;592:25;;-1:-1:-1;;;592:25:181;;;;;;;;;;;10770:422:88;11003:135;11038:22;11062:10;11074:16;11092:15;11109:19;11003:21;:135::i;:::-;10999:186;;;11147:38;;-1:-1:-1;;;11147:38:88;;;;;;;;;;;10999:186;10770:422;;;;;:::o;15977:166::-;16056:7;1239:19:47;:17;:19::i;:::-;16102:34:88::1;16107:15;16124:11;16102:4;:34::i;:::-;16082:16;;:54;;;;;;;:::i;:::-;;;;;;;16075:61;;1268:1:47;15977:166:88::0;;;:::o;36748:429::-;36941:19;36974:14;;;;;:46;;;37010:10;36992:15;;:28;36974:46;36970:201;;;37036:27;;;;:16;:27;;;;;:48;;37071:12;37036:34;:48::i;:::-;-1:-1:-1;;;37105:25:88;;;;-1:-1:-1;37105:11:88;:25;;;;;37098:32;;;37105:25;36748:429::o;4206:288:96:-;-1:-1:-1;;;;;4300:22:96;;;;;;:12;:22;;;;;;;;;:36;;;;;;;;;;;;-1:-1:-1;;;;;4300:36:96;;;-1:-1:-1;;;4300:36:96;;-1:-1:-1;;;;;4300:36:96;;;-1:-1:-1;;;4300:36:96;;-1:-1:-1;;;;;;4300:36:96;;;;;;;;;;;;;;;;;;;;;;;;;4351:136;;18492:34:193;;;18542:18;;;18535:60;;;;18611:18;;;18604:43;4351:136:96;;18443:2:193;18428:18;4351:136:96;;;;;;;4206:288;;:::o;2407:149:70:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:70;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:70;;1918:47;;-1:-1:-1;;;1975:6:70;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:70;;;;;;;;;-1:-1:-1;;;2000:6:70;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:70;;;;;;;;-1:-1:-1;2030:9:70;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:70;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:70;;;;;;;;-1:-1:-1;2141:1:70;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:70;;2162:55;;;;-1:-1:-1;;;2162:55:70;;19001:2:193;2162:55:70;;;18983:21:193;;;19020:18;;;19013:30;19079:34;19059:18;;;19052:62;19131:18;;2162:55:70;18799:356:193;4109:223:65;4242:12;4273:52;4295:6;4303:4;4309:1;4312:12;4273:21;:52::i;6052:1709:181:-;6127:9;6209:1;6223:45;;;;6314:1;6332:53;;;;6439:9;;;6469:61;;;;6590:1;6585:6;;6432:181;;6469:61;6507:1;6502:6;;6432:181;;6653:1;6650;6646:9;6735:1;6732;6728:9;6723:14;;6693:1018;6760:1;6693:1018;;;6868:1;6865;6861:9;6907:1;6902:3;6898:11;6895:83;;;6950:1;6947;6940:12;6895:83;7026:4;7022:2;7018:13;7071:2;7062:7;7059:15;7056:87;;;7115:1;7112;7105:12;7056:87;7173:15;;;;-1:-1:-1;;7216:9:181;;;7213:476;;;7273:1;7270;7266:9;7352:1;7348;7344:2;7340:10;7337:17;7330:25;7325:1;7318:9;7311:17;7307:49;7304:129;;;7401:1;7398;7391:12;7304:129;7485:4;7481:2;7477:13;7534:2;7525:7;7522:15;7519:95;;;7582:1;7579;7572:12;7519:95;7648:15;;;;-1:-1:-1;;7213:476:181;6800:1;6797;6793:9;6788:14;;6693:1018;;;6697:62;6307:1422;;6332:53;6366:1;6361:6;;6307:1422;;6202:1541;;6223:45;6253:1;6248:6;;6202:1541;;6052:1709;;;;;:::o;5166:446:65:-;5331:12;5388:5;5363:21;:30;;5355:81;;;;-1:-1:-1;;;5355:81:65;;19362:2:193;5355:81:65;;;19344:21:193;19401:2;19381:18;;;19374:30;19440:34;19420:18;;;19413:62;-1:-1:-1;;;19491:18:193;;;19484:36;19537:19;;5355:81:65;19160:402:193;5355:81:65;5447:12;5461:23;5488:6;-1:-1:-1;;;;;5488:11:65;5507:5;5514:4;5488:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:73;;;;5536:69;5563:6;5571:7;5580:10;5592:12;5536:26;:69::i;:::-;5529:76;5166:446;-1:-1:-1;;;;;;;5166:446:65:o;7672:628::-;7852:12;7880:7;7876:418;;;7907:10;:17;7928:1;7907:22;7903:286;;-1:-1:-1;;;;;1702:19:65;;;8114:60;;;;-1:-1:-1;;;8114:60:65;;20061:2:193;8114:60:65;;;20043:21:193;20100:2;20080:18;;;20073:30;20139:31;20119:18;;;20112:59;20188:18;;8114:60:65;19859:353:193;8114:60:65;-1:-1:-1;8209:10:65;8202:17;;7876:418;8250:33;8258:10;8270:12;8981:17;;:21;8977:379;;9209:10;9203:17;9265:15;9252:10;9248:2;9244:19;9237:44;8977:379;9332:12;9325:20;;-1:-1:-1;;;9325:20:65;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:193:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:193;;209:43;;199:71;;266:1;263;256:12;879:180;938:6;991:2;979:9;970:7;966:23;962:32;959:52;;;1007:1;1004;997:12;959:52;-1:-1:-1;1030:23:193;;879:180;-1:-1:-1;879:180:193:o;1246:173::-;1314:20;;-1:-1:-1;;;;;1363:31:193;;1353:42;;1343:70;;1409:1;1406;1399:12;1424:118;1510:5;1503:13;1496:21;1489:5;1486:32;1476:60;;1532:1;1529;1522:12;1547:315;1612:6;1620;1673:2;1661:9;1652:7;1648:23;1644:32;1641:52;;;1689:1;1686;1679:12;1641:52;1712:29;1731:9;1712:29;:::i;:::-;1702:39;;1791:2;1780:9;1776:18;1763:32;1804:28;1826:5;1804:28;:::i;:::-;1851:5;1841:15;;;1547:315;;;;;:::o;2052:248::-;2120:6;2128;2181:2;2169:9;2160:7;2156:23;2152:32;2149:52;;;2197:1;2194;2187:12;2149:52;-1:-1:-1;;2220:23:193;;;2290:2;2275:18;;;2262:32;;-1:-1:-1;2052:248:193:o;2487:254::-;2555:6;2563;2616:2;2604:9;2595:7;2591:23;2587:32;2584:52;;;2632:1;2629;2622:12;2584:52;2668:9;2655:23;2645:33;;2697:38;2731:2;2720:9;2716:18;2697:38;:::i;:::-;2687:48;;2487:254;;;;;:::o;2746:::-;2814:6;2822;2875:2;2863:9;2854:7;2850:23;2846:32;2843:52;;;2891:1;2888;2881:12;2843:52;2914:29;2933:9;2914:29;:::i;:::-;2904:39;2990:2;2975:18;;;;2962:32;;-1:-1:-1;;;2746:254:193:o;3268:186::-;3327:6;3380:2;3368:9;3359:7;3355:23;3351:32;3348:52;;;3396:1;3393;3386:12;3348:52;3419:29;3438:9;3419:29;:::i;4366:220::-;-1:-1:-1;;;;;4547:32:193;;;;4529:51;;4517:2;4502:18;;4366:220::o;4938:389::-;5012:6;5020;5028;5081:2;5069:9;5060:7;5056:23;5052:32;5049:52;;;5097:1;5094;5087:12;5049:52;5120:29;5139:9;5120:29;:::i;:::-;5110:39;;5168:38;5202:2;5191:9;5187:18;5168:38;:::i;:::-;5158:48;;5256:2;5245:9;5241:18;5228:32;5269:28;5291:5;5269:28;:::i;:::-;5316:5;5306:15;;;4938:389;;;;;:::o;5332:402::-;5417:6;5425;5433;5441;5494:3;5482:9;5473:7;5469:23;5465:33;5462:53;;;5511:1;5508;5501:12;5462:53;5534:29;5553:9;5534:29;:::i;:::-;5524:39;;5582:38;5616:2;5605:9;5601:18;5582:38;:::i;:::-;5572:48;;5639:38;5673:2;5662:9;5658:18;5639:38;:::i;:::-;5332:402;;;;-1:-1:-1;5629:48:193;;5724:2;5709:18;5696:32;;-1:-1:-1;;5332:402:193:o;6059:470::-;6152:6;6160;6168;6176;6184;6237:3;6225:9;6216:7;6212:23;6208:33;6205:53;;;6254:1;6251;6244:12;6205:53;6277:29;6296:9;6277:29;:::i;:::-;6267:39;;6325:38;6359:2;6348:9;6344:18;6325:38;:::i;:::-;6315:48;;6382:38;6416:2;6405:9;6401:18;6382:38;:::i;:::-;6059:470;;;;-1:-1:-1;6372:48:193;;6467:2;6452:18;;6439:32;;-1:-1:-1;6518:3:193;6503:19;6490:33;;6059:470;-1:-1:-1;;6059:470:193:o;6739:260::-;6807:6;6815;6868:2;6856:9;6847:7;6843:23;6839:32;6836:52;;;6884:1;6881;6874:12;6836:52;6907:29;6926:9;6907:29;:::i;:::-;6897:39;;6955:38;6989:2;6978:9;6974:18;6955:38;:::i;7460:127::-;7521:10;7516:3;7512:20;7509:1;7502:31;7552:4;7549:1;7542:15;7576:4;7573:1;7566:15;7592:1589;7712:6;7720;7728;7781:2;7769:9;7760:7;7756:23;7752:32;7749:52;;;7797:1;7794;7787:12;7749:52;7837:9;7824:23;-1:-1:-1;;;;;7907:2:193;7899:6;7896:14;7893:34;;;7923:1;7920;7913:12;7893:34;7961:6;7950:9;7946:22;7936:32;;8006:7;7999:4;7995:2;7991:13;7987:27;7977:55;;8028:1;8025;8018:12;7977:55;8068:2;8055:16;8094:2;8086:6;8083:14;8080:34;;;8110:1;8107;8100:12;8080:34;8133:4;8186:7;8181:2;8171:6;8168:1;8164:14;8160:2;8156:23;8152:32;8149:45;8146:65;;;8207:1;8204;8197:12;8146:65;8238:2;8234;8230:11;8220:21;;8260:6;8250:16;;8319:2;8308:9;8304:18;8291:32;8275:48;;8348:2;8338:8;8335:16;8332:36;;;8364:1;8361;8354:12;8332:36;8402:8;8391:9;8387:24;8377:34;;8449:7;8442:4;8438:2;8434:13;8430:27;8420:55;;8471:1;8468;8461:12;8420:55;8507:2;8494:16;8484:26;;8529:2;8525;8522:10;8519:36;;;8535:18;;:::i;:::-;8581:2;8578:1;8574:10;8613:2;8607:9;8676:2;8672:7;8667:2;8663;8659:11;8655:25;8647:6;8643:38;8731:6;8719:10;8716:22;8711:2;8699:10;8696:18;8693:46;8690:72;;;8742:18;;:::i;:::-;8778:2;8771:22;8828:18;;;8862:15;;;;-1:-1:-1;8904:11:193;;;8900:20;;;8932:19;;;8929:39;;;8964:1;8961;8954:12;8929:39;8988:11;;;;9008:142;9024:6;9019:3;9016:15;9008:142;;;9090:17;;9078:30;;9041:12;;;;9128;;;;9008:142;;;9169:6;9159:16;;;;;;;;7592:1589;;;;;:::o;11480:184::-;11550:6;11603:2;11591:9;11582:7;11578:23;11574:32;11571:52;;;11619:1;11616;11609:12;11571:52;-1:-1:-1;11642:16:193;;11480:184;-1:-1:-1;11480:184:193:o;11669:127::-;11730:10;11725:3;11721:20;11718:1;11711:31;11761:4;11758:1;11751:15;11785:4;11782:1;11775:15;11801:125;11866:9;;;11887:10;;;11884:36;;;11900:18;;:::i;11931:466::-;-1:-1:-1;;;;;12212:15:193;;;12194:34;;12264:15;;;12259:2;12244:18;;12237:43;12316:15;;12311:2;12296:18;;12289:43;12375:14;;12368:22;12363:2;12348:18;;12341:50;12143:3;12128:19;;11931:466::o;12402:136::-;12437:3;-1:-1:-1;;;12458:22:193;;12455:48;;12483:18;;:::i;:::-;-1:-1:-1;12523:1:193;12519:13;;12402:136::o;12543:128::-;12610:9;;;12631:11;;;12628:37;;;12645:18;;:::i;12676:200::-;12742:9;;;12715:4;12770:9;;12798:10;;12810:12;;;12794:29;12833:12;;;12825:21;;12791:56;12788:82;;;12850:18;;:::i;12881:216::-;12945:9;;;12973:11;;;12920:3;13003:9;;13031:10;;13027:19;;13056:10;;13048:19;;13024:44;13021:70;;;13071:18;;:::i;:::-;13021:70;;12881:216;;;;:::o;13102:375::-;-1:-1:-1;;;;;13360:15:193;;;13342:34;;13412:15;;;;13407:2;13392:18;;13385:43;13459:2;13444:18;;13437:34;;;;13292:2;13277:18;;13102:375::o;13731:127::-;13792:10;13787:3;13783:20;13780:1;13773:31;13823:4;13820:1;13813:15;13847:4;13844:1;13837:15;14401:183;-1:-1:-1;;;;;14520:10:193;;;14508;;;14504:27;;14543:12;;;14540:38;;;14558:18;;:::i;14589:182::-;-1:-1:-1;;;;;14696:10:193;;;14708;;;14692:27;;14731:11;;;14728:37;;;14745:18;;:::i;14776:168::-;14849:9;;;14880;;14897:15;;;14891:22;;14877:37;14867:71;;14918:18;;:::i;14949:127::-;15010:10;15005:3;15001:20;14998:1;14991:31;15041:4;15038:1;15031:15;15065:4;15062:1;15055:15;15081:217;15121:1;15147;15137:132;;15191:10;15186:3;15182:20;15179:1;15172:31;15226:4;15223:1;15216:15;15254:4;15251:1;15244:15;15137:132;-1:-1:-1;15283:9:193;;15081:217::o;15303:185::-;-1:-1:-1;;;;;15424:10:193;;;15412;;;15408:27;;15447:12;;;15444:38;;;15462:18;;:::i;15772:250::-;15857:1;15867:113;15881:6;15878:1;15875:13;15867:113;;;15957:11;;;15951:18;15938:11;;;15931:39;15903:2;15896:10;15867:113;;;-1:-1:-1;;16014:1:193;15996:16;;15989:27;15772:250::o;16027:812::-;-1:-1:-1;;;16433:3:193;16426:38;16408:3;16493:6;16487:13;16509:75;16577:6;16572:2;16567:3;16563:12;16556:4;16548:6;16544:17;16509:75;:::i;:::-;-1:-1:-1;;;16643:2:193;16603:16;;;16635:11;;;16628:40;16693:13;;16715:76;16693:13;16777:2;16769:11;;16762:4;16750:17;;16715:76;:::i;:::-;16811:17;16830:2;16807:26;;16027:812;-1:-1:-1;;;;16027:812:193:o;16844:396::-;16993:2;16982:9;16975:21;16956:4;17025:6;17019:13;17068:6;17063:2;17052:9;17048:18;17041:34;17084:79;17156:6;17151:2;17140:9;17136:18;17131:2;17123:6;17119:15;17084:79;:::i;:::-;17224:2;17203:15;-1:-1:-1;;17199:29:193;17184:45;;;;17231:2;17180:54;;16844:396;-1:-1:-1;;16844:396:193:o;17594:245::-;17661:6;17714:2;17702:9;17693:7;17689:23;17685:32;17682:52;;;17730:1;17727;17720:12;17682:52;17762:9;17756:16;17781:28;17803:5;17781:28;:::i;18658:136::-;18697:3;18725:5;18715:39;;18734:18;;:::i;:::-;-1:-1:-1;;;18770:18:193;;18658:136::o;19567:287::-;19696:3;19734:6;19728:13;19750:66;19809:6;19804:3;19797:4;19789:6;19785:17;19750:66;:::i;:::-;19832:16;;;;;19567:287;-1:-1:-1;;19567:287:193:o",
    "linkReferences": {},
    "immutableReferences": {
      "41561": [
        {
          "start": 1978,
          "length": 32
        },
        {
          "start": 5332,
          "length": 32
        },
        {
          "start": 5473,
          "length": 32
        },
        {
          "start": 5603,
          "length": 32
        },
        {
          "start": 5926,
          "length": 32
        },
        {
          "start": 6902,
          "length": 32
        },
        {
          "start": 7033,
          "length": 32
        },
        {
          "start": 7617,
          "length": 32
        },
        {
          "start": 7806,
          "length": 32
        },
        {
          "start": 9199,
          "length": 32
        },
        {
          "start": 13776,
          "length": 32
        }
      ],
      "41565": [
        {
          "start": 1372,
          "length": 32
        },
        {
          "start": 3275,
          "length": 32
        }
      ],
      "41569": [
        {
          "start": 2109,
          "length": 32
        },
        {
          "start": 7664,
          "length": 32
        },
        {
          "start": 9387,
          "length": 32
        }
      ],
      "41573": [
        {
          "start": 2186,
          "length": 32
        },
        {
          "start": 3320,
          "length": 32
        },
        {
          "start": 3824,
          "length": 32
        },
        {
          "start": 9838,
          "length": 32
        },
        {
          "start": 13173,
          "length": 32
        }
      ],
      "41576": [
        {
          "start": 1001,
          "length": 32
        },
        {
          "start": 3870,
          "length": 32
        },
        {
          "start": 9787,
          "length": 32
        },
        {
          "start": 13139,
          "length": 32
        }
      ],
      "41579": [
        {
          "start": 1648,
          "length": 32
        },
        {
          "start": 15758,
          "length": 32
        }
      ],
      "41582": [
        {
          "start": 7195,
          "length": 32
        },
        {
          "start": 11317,
          "length": 32
        }
      ],
      "41585": [
        {
          "start": 7405,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "activeLimitPriceTicks(uint256)": "683f81a1",
    "addLimitPriceTick(uint256,uint256)": "44a3c664",
    "buffer()": "edaafe20",
    "calculateRebateFactorForPriceTick(uint256)": "cb6238c8",
    "cancelLimitOrder()": "2202ce8c",
    "cash(address)": "b6dc16f6",
    "cdm()": "e2dfb317",
    "claimFees()": "d294f093",
    "createLimitOrder(uint256)": "2906f94e",
    "deposit(address,uint256)": "47e7ef24",
    "enterEmergencyMode()": "9844afd2",
    "exchange(uint256,uint256)": "d4b7eac3",
    "exchangePreview(uint256,uint256)": "88439aea",
    "getGlobalIRS()": "eb953449",
    "getLimitOrder(uint256,uint256)": "2af8992b",
    "getMaximumDebtForCollateral(address,address,address,int256)": "8f1e5f63",
    "getPositionIRS(address)": "dbe6b31c",
    "getPriceTick(uint256)": "51f813ec",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasPermission(address,address)": "cde68041",
    "hasRole(bytes32,address)": "91d14854",
    "limitOrderFloor()": "dc2ec249",
    "limitOrders(uint256)": "a3e2b495",
    "liquidatePositions(address[],uint256[])": "df10f687",
    "liquidationConfig()": "1c580ad5",
    "modifyCollateralAndDebt(address,address,address,int256,int256)": "c75a4b5e",
    "modifyPermission(address,address,bool)": "8309dbdd",
    "modifyPermission(address,bool)": "d9c70f57",
    "oracle()": "7dc0d1d0",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "pausedAt()": "2e55d0f2",
    "positions(address)": "55f57510",
    "protocolFee()": "b0e21e8a",
    "removeLimitPriceTick(uint256)": "ef0563fb",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setParameter(bytes32,uint256)": "723507be",
    "setPermissionAgent(address,bool)": "280c37ef",
    "setUp()": "0a9254e4",
    "spotPrice()": "398482d8",
    "supportsInterface(bytes4)": "01ffc9a7",
    "token()": "fc0c546a",
    "tokenScale()": "342c02b1",
    "totalAccruedFees()": "ba95534c",
    "totalNormalDebt()": "842c311e",
    "unpause()": "3f4ba83a",
    "vaultConfig()": "7cc34bb4",
    "virtualIRS(address)": "8051ba75",
    "withdraw(address,uint256)": "f3fef3a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CDPVault__addLimitPriceTick_invalidPriceTickOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__addLimitPriceTick_limitPriceTickOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__cancelLimitOrder_limitOrderDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__checkEmergencyMode_entered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitOrderAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitOrderFloor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__createLimitOrder_limitPriceTickNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__exchange_notEnoughExchanged\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__liquidatePosition_notUnsafe\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__liquidatePositions_argLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_maxUtilizationRatio\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_noPermission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyCollateralAndDebt_notSafe\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__modifyPosition_debtFloor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CDPVault__setParameter_unrecognizedParameter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InterestRateModel__setBaseRate_invalidBaseRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ItemInList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ItemNotInList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__add_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__mul_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__sub_overflow_signed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toInt256_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__toUint64_overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permission__modifyPermission_notPermitted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"AddLimitPriceTick\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"CancelLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"CreateLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRedeemed\",\"type\":\"uint256\"}],\"name\":\"Exchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRedeemed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"}],\"name\":\"ExecuteLimitOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralReleased\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"normalDebtRepaid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"}],\"name\":\"LiquidatePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"}],\"name\":\"ModifyCollateralAndDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"grant\",\"type\":\"bool\"}],\"name\":\"ModifyPermission\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalNormalDebt\",\"type\":\"uint256\"}],\"name\":\"ModifyPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"RemoveLimitPriceTick\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"baseRate\",\"type\":\"int64\"}],\"name\":\"SetBaseRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SetGlobalIRS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"SetParameter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"grant\",\"type\":\"bool\"}],\"name\":\"SetPermittedAgent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"snapshotRateAccumulator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accruedRebate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebateFactor\",\"type\":\"uint256\"}],\"name\":\"SetPositionIRS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"name\":\"activeLimitPriceTicks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextLimitPriceTick\",\"type\":\"uint256\"}],\"name\":\"addLimitPriceTick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buffer\",\"outputs\":[{\"internalType\":\"contract IBuffer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"name\":\"calculateRebateFactorForPriceTick\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"cash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cdm\",\"outputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feesClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"createLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cashAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterEmergencyMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"upperLimitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditToExchange\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralExchanged\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"upperLimitPriceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditToExchange\",\"type\":\"uint256\"}],\"name\":\"exchangePreview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditExchanged\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralExchanged\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalIRS\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"baseRate\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"lastUpdated\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"rateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"averageRebate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"globalAccruedRebate\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.GlobalIRS\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getLimitOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"deltaCollateral_\",\"type\":\"int256\"}],\"name\":\"getMaximumDebtForCollateral\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"creditNeeded\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"}],\"name\":\"getPositionIRS\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"snapshotRateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"rebateFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"accruedRebate\",\"type\":\"uint128\"}],\"internalType\":\"struct InterestRateModel.PositionIRS\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPriceTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitOrderFloor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitOrderId\",\"type\":\"uint256\"}],\"name\":\"limitOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceTick\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"repayAmounts\",\"type\":\"uint256[]\"}],\"name\":\"liquidatePositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationConfig\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"liquidationPenalty\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationDiscount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"targetHealthFactor\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"deltaNormalDebt\",\"type\":\"int256\"}],\"name\":\"modifyCollateralAndDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"modifyPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"modifyPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"normalDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitPriceTick\",\"type\":\"uint256\"}],\"name\":\"removeLimitPriceTick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"setParameter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"setPermissionAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spotPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAccruedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalNormalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultConfig\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"debtFloor\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"liquidationRatio\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"globalLiquidationRatio\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"}],\"name\":\"virtualIRS\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"rateAccumulator\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"accruedRebate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"globalAccruedRebate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addLimitPriceTick(uint256,uint256)\":{\"details\":\"Requires caller to have 'TICK_MANAGER_ROLE' role\",\"params\":{\"limitPriceTick\":\"The limit price tick to add [wad]\",\"nextLimitPriceTick\":\"The next (higher) limit price tick (0 if there's no higher price tick) [wad]\"}},\"calculateRebateFactorForPriceTick(uint256)\":{\"params\":{\"priceTick\":\"Price tick from which to derive the rebate factor from [wad]\"},\"returns\":{\"_0\":\"_ Rebate factor [wad]\"}},\"createLimitOrder(uint256)\":{\"params\":{\"limitPriceTick\":\"Limit price tick of the limit order (between 1.0 and 100) [wad]\"}},\"deposit(address,uint256)\":{\"details\":\"The caller needs to approve this contract to transfer tokens on their behalf\",\"params\":{\"amount\":\"Amount of tokens to deposit [tokenScale]\",\"to\":\"Address of the user to attribute the cash to\"},\"returns\":{\"cashAmount\":\"Amount of cash deposited [wad]\"}},\"enterEmergencyMode()\":{\"details\":\"This method will revert if the vault has already been paused\"},\"exchange(uint256,uint256)\":{\"params\":{\"creditToExchange\":\"Amount of credit to exchange for collateral [wad]\",\"upperLimitPriceTick\":\"Upper limit price tick (> 1.0) [wad]\"},\"returns\":{\"collateralExchanged\":\"Amount of collateral exchanged [wad]\",\"creditExchanged\":\"Amount of credit exchanged [wad]\"}},\"exchangePreview(uint256,uint256)\":{\"params\":{\"creditToExchange\":\"Amount of credit to exchange for collateral [wad]\",\"upperLimitPriceTick\":\"Upper limit price tick (> 1.0) [wad]\"},\"returns\":{\"collateralExchanged\":\"Amount of collateral exchanged [wad]\",\"creditExchanged\":\"Amount of credit exchanged [wad]\"}},\"getGlobalIRS()\":{\"returns\":{\"_0\":\"_ Global interest rate state\"}},\"getLimitOrder(uint256,uint256)\":{\"params\":{\"index\":\"Index of the limit order in the linked list\",\"priceTick\":\"Price tick of the limit order\"},\"returns\":{\"limitOrderId\":\"Limit order id\"}},\"getPositionIRS(address)\":{\"params\":{\"position\":\"Address of position (owner)\"},\"returns\":{\"_0\":\"_ Interest rate state of the position\"}},\"getPriceTick(uint256)\":{\"params\":{\"index\":\"Index of the price tick in the linked list\"},\"returns\":{\"isActive\":\"Whether the price tick is active\",\"priceTick\":\"Price tick [wad]\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasPermission(address,address)\":{\"params\":{\"caller\":\"Address of the caller\",\"owner\":\"Address of the owner\"},\"returns\":{\"_0\":\"_ whether `caller` has the permission\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"liquidatePositions(address[],uint256[])\":{\"details\":\"The liquidator has to approve the vault to transfer the sum of `repayAmounts`.\",\"params\":{\"owners\":\"Owners of the positions to liquidate\",\"repayAmounts\":\"Amounts the liquidator wants to repay for each position [wad]\"}},\"modifyCollateralAndDebt(address,address,address,int256,int256)\":{\"details\":\"Checks that the global debt ceiling and the vault's debt ceiling have not been exceeded via the CDM, - that the Position is still safe after the modification, - that the msg.sender has the permission of the owner to decrease the collateral-to-debt ratio, - that the msg.sender has the permission of the collateralizer to put up new collateral, - that the msg.sender has the permission of the creditor to settle debt with their credit, - that that the vault debt floor is exceeded - that the vault minimum collateralization ratio is met, otherwise it will transition into emergency mode\",\"params\":{\"collateralizer\":\"Address of who puts up or receives the collateral delta\",\"creditor\":\"Address of who provides or receives the credit delta for the debt delta\",\"deltaCollateral\":\"Amount of collateral to put up (+) or to remove (-) from the position [wad]\",\"deltaNormalDebt\":\"Amount of normalized debt (gross, before rate is applied) to generate (+) or to settle (-) on this position [wad]\",\"owner\":\"Address of the owner of the position\"}},\"modifyPermission(address,address,bool)\":{\"params\":{\"caller\":\"Address of the caller to grant or revoke permission for\",\"owner\":\"Address of the owner\",\"permitted\":\"Whether to grant or revoke permission\"}},\"modifyPermission(address,bool)\":{\"params\":{\"caller\":\"Address of the caller to grant or revoke permission for\",\"permitted\":\"Whether to grant or revoke permission\"}},\"pause()\":{\"details\":\"Sender has to be allowed to call this method\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeLimitPriceTick(uint256)\":{\"details\":\"Requires caller to have 'TICK_MANAGER_ROLE' role\",\"params\":{\"limitPriceTick\":\"limit price tick to remove [wad]\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setParameter(bytes32,uint256)\":{\"details\":\"Sender has to be allowed to call this method\",\"params\":{\"data\":\"New value to set for the variable [wad]\",\"parameter\":\"Name of the variable to set\"}},\"setPermissionAgent(address,bool)\":{\"params\":{\"agent\":\"Address of the agent to grant or revoke permission for\",\"permitted\":\"Whether to grant or revoke permission\"}},\"spotPrice()\":{\"returns\":{\"_0\":\"_ Current spot price of the collateral token [wad]\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unpause()\":{\"details\":\"Sender has to be allowed to call this method\"},\"virtualIRS(address)\":{\"params\":{\"position\":\"Address of the position to return the accrued rebate for\"},\"returns\":{\"accruedRebate\":\"The accrued rebate of a position [wad]\",\"globalAccruedRebate\":\"The global accrued rebate [wad]\",\"rateAccumulator\":\"Current global rate accumulator [wad]\"}},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"Amount of tokens to withdraw [wad]\",\"to\":\"Address of the user to withdraw tokens to\"},\"returns\":{\"tokenAmount\":\"Amount of tokens withdrawn [tokenScale]\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activeLimitPriceTicks(uint256)\":{\"notice\":\"Map specifying if a given price tick is active [wad]\"},\"addLimitPriceTick(uint256,uint256)\":{\"notice\":\"Adds a new price tick to the limit price tick linked list\"},\"buffer()\":{\"notice\":\"Global surplus and debt Buffer\"},\"calculateRebateFactorForPriceTick(uint256)\":{\"notice\":\"Calculates the rebate factor for a given price tick\"},\"cancelLimitOrder()\":{\"notice\":\"Cancels an existing limit order for a given position (user)\"},\"cash(address)\":{\"notice\":\"Map specifying the cash balances a user has [wad]\"},\"cdm()\":{\"notice\":\"CDM (Credit and Debt Manager)\"},\"claimFees()\":{\"notice\":\"Sends accrued protocol fees to the Buffer\"},\"createLimitOrder(uint256)\":{\"notice\":\"Creates a new limit order for a given position (user). The price tick represents a fee on the current oracle price of the collateral asset for which it can be redeemed for Stablecoin\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits collateral tokens into this contract and increases a users cash balance\"},\"enterEmergencyMode()\":{\"notice\":\"Triggers the emergency mode by pausing the vault if global collateralization ratio is below the emergency threshold\"},\"exchange(uint256,uint256)\":{\"notice\":\"Exchange credit for collateral\"},\"exchangePreview(uint256,uint256)\":{\"notice\":\"Preview exchanging credit for collateral\"},\"getGlobalIRS()\":{\"notice\":\"Returns the global interest rate state\"},\"getLimitOrder(uint256,uint256)\":{\"notice\":\"Returns a limit order id at an index in the limit order linked list (sorted from oldest to newest)\"},\"getPositionIRS(address)\":{\"notice\":\"Returns the interest rate state of a position\"},\"getPriceTick(uint256)\":{\"notice\":\"Returns a price tick at an index in the price tick linked list (sorted from lowest to highest)\"},\"hasPermission(address,address)\":{\"notice\":\"Checks if `caller` has the permission to perform an action on behalf of `owner`\"},\"limitOrderFloor()\":{\"notice\":\"Minimum principal amount of a limit order [wad]\"},\"limitOrders(uint256)\":{\"notice\":\"Map of limit order makers\"},\"liquidatePositions(address[],uint256[])\":{\"notice\":\"Liquidates multiple unsafe positions by selling as much collateral as required to cover the debt in order to make the positions safe again. The collateral can be bought at a discount (`liquidationDiscount`) to the current spot price. The liquidator has to provide the amount he wants repay or sell (`repayAmounts`) for each position. From that repay amount a penalty (`liquidationPenalty`) is subtracted to mitigate against profitable self liquidations. If the available collateral of a position is not sufficient to cover the debt the vault is able to apply for a bail out from the global Buffer.\"},\"liquidationConfig()\":{\"notice\":\"Liquidation configuration\"},\"modifyCollateralAndDebt(address,address,address,int256,int256)\":{\"notice\":\"Modifies a Position's collateral and debt balances\"},\"modifyPermission(address,address,bool)\":{\"notice\":\"Gives or revokes the permission for `caller` to perform an action on behalf of `owner`\"},\"modifyPermission(address,bool)\":{\"notice\":\"Gives or revokes the permission for `caller` to perform an action on behalf of `msg.sender`\"},\"oracle()\":{\"notice\":\"Oracle of the collateral token\"},\"pause()\":{\"notice\":\"Pauses the contract\"},\"positions(address)\":{\"notice\":\"Map of user positions\"},\"protocolFee()\":{\"notice\":\"Portion of interest that goes to the protocol [wad]\"},\"removeLimitPriceTick(uint256)\":{\"notice\":\"Removes limit price tick\"},\"setParameter(bytes32,uint256)\":{\"notice\":\"Sets various variables for this contract\"},\"setPermissionAgent(address,bool)\":{\"notice\":\"Gives or revokes the permission for the `agent` to modify the permissions of `msg.sender`\"},\"spotPrice()\":{\"notice\":\"Returns the current spot price of the collateral token\"},\"token()\":{\"notice\":\"collateral token\"},\"tokenScale()\":{\"notice\":\"Collateral token's decimals scale (10 ** decimals)\"},\"totalAccruedFees()\":{\"notice\":\"Total current amount of accrued protocol fees [wad]\"},\"totalNormalDebt()\":{\"notice\":\"Sum of backed normalized debt over all positions [wad]\"},\"unpause()\":{\"notice\":\"Unpauses the contract\"},\"vaultConfig()\":{\"notice\":\"CDPVault configuration\"},\"virtualIRS(address)\":{\"notice\":\"Returns the current global rate accumulator, global accrued rebate and the accrued rebate of a position\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws collateral tokens from this contract and decreases a users cash balance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/invariant/CDPVault_TypeAWrapper.sol\":\"CDPVault_TypeAWrapper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/CDM.sol\":{\"keccak256\":\"0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99\",\"dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L\"]},\"src/CDPVault.sol\":{\"keccak256\":\"0xf2f5dbf0b94224a4aed520fb1d1b09b377470827c6da8dba1760ac0ea4efa0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e97a36351d85c0c1c4ac44ec99e16b8b15e548db6272a1ef0ef1256800c38009\",\"dweb:/ipfs/QmNnxqR2xse22M741qAeXBDcsQkLbC5MzhmieLsan3Ehz5\"]},\"src/CDPVault_TypeA.sol\":{\"keccak256\":\"0xbd7cc837031c9d621e409b30d31604656b46c23c4abd6201f4b4bbab7f654a34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ca9024bb0b2402b5731f44bb525d6c739471dc6369a70e7c5ba286f5fd77fd2\",\"dweb:/ipfs/QmW6oRcRwL6GV7m77gnqpdPJtN9FgfHVtgteoEAzpsGGnE\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e\",\"dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT\"]},\"src/interfaces/IBuffer.sol\":{\"keccak256\":\"0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff\",\"dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/ICDPVault.sol\":{\"keccak256\":\"0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f\",\"dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE\"]},\"src/interfaces/ICDPVault_Deployer.sol\":{\"keccak256\":\"0xec43e73593b1c691da85967d506f84a4e17dfcc46b904aa163c695ec0dfff464\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e3207dedf3b31f8e2a89e54e622a93b0a720a1ffbf8f3cd8b9ec4ddbfc9025e2\",\"dweb:/ipfs/QmRPys9WUxo8iMqqYU3r7uTh57jX9Fth7dVBx2h6LaifAB\"]},\"src/interfaces/ICDPVault_FactoryBase.sol\":{\"keccak256\":\"0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e\",\"dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD\"]},\"src/interfaces/ICDPVault_TypeA.sol\":{\"keccak256\":\"0x67e73a065253428bf75f8541da4b1530e4bae6c57ffb17520aba4a48aa132b5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94911a895e5a455a2eb23eea973a36c847f27dd1a3ee7a34470bc226751f0aa6\",\"dweb:/ipfs/Qmcv7WBZnEnm6zjYBGZFikYeyjnMyPb65XEA8cBUkXZ9BR\"]},\"src/interfaces/IInterestRateModel.sol\":{\"keccak256\":\"0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599\",\"dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x23103163e03628c0e8291b368b27cf831c3e55ebe544745b833b6df9a9acada2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58cc66f58fca72fd73c240dca9501165e083d248ff085ee4dc6a7719c224926c\",\"dweb:/ipfs/QmWqhtXoXTfYTkAao3a3F34XVjFsyxVqPCf2StG6udS617\"]},\"src/interfaces/IPause.sol\":{\"keccak256\":\"0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec\",\"dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]},\"src/test/invariant/CDPVault_TypeAWrapper.sol\":{\"keccak256\":\"0x3d88de7b86782481b767ef7d6c6871d261887b67e9ac45bea6cfea9d6c7a0433\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://99396eb12d7c62af75c8ae7b38e315f64ce78bbcf57d962fca1a975fff4f548c\",\"dweb:/ipfs/QmQT6KasFvepK43FXkjX6sKWhvxDieiscqSNdPaoHHPSPV\"]},\"src/utils/DoubleLinkedList.sol\":{\"keccak256\":\"0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb\",\"dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/utils/Pause.sol\":{\"keccak256\":\"0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1\",\"dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL\"]},\"src/utils/Permission.sol\":{\"keccak256\":\"0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb\",\"dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__addLimitPriceTick_invalidPriceTickOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__addLimitPriceTick_limitPriceTickOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__cancelLimitOrder_limitOrderDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__checkEmergencyMode_entered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitOrderAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitOrderFloor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__createLimitOrder_limitPriceTickNotActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__exchange_notEnoughExchanged"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__liquidatePosition_notUnsafe"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__liquidatePositions_argLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_maxUtilizationRatio"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_noPermission"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyCollateralAndDebt_notSafe"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__modifyPosition_debtFloor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CDPVault__setParameter_unrecognizedParameter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IdIsZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InterestRateModel__setBaseRate_invalidBaseRate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ItemInList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ItemNotInList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__add_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__mul_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__sub_overflow_signed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toInt256_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Math__toUint64_overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Permission__modifyPermission_notPermitted"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddLimitPriceTick",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CancelLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CreateLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "redeemer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "collateralRedeemed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Exchange",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "collateralRedeemed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecuteLimitOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "collateralReleased",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "normalDebtRepaid",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LiquidatePosition",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyCollateralAndDebt",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authorizer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "grant",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyPermission",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalNormalDebt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyPosition",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemoveLimitPriceTick",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int64",
              "name": "baseRate",
              "type": "int64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetBaseRate",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "SetGlobalIRS",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "parameter",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "data",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetParameter",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "grant",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetPermittedAgent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "snapshotRateAccumulator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "accruedRebate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rebateFactor",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetPositionIRS",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "activeLimitPriceTicks",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextLimitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLimitPriceTick"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "buffer",
          "outputs": [
            {
              "internalType": "contract IBuffer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateRebateFactorForPriceTick",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelLimitOrder"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cdm",
          "outputs": [
            {
              "internalType": "contract ICDM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "feesClaimed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createLimitOrder"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cashAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enterEmergencyMode"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "upperLimitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditToExchange",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exchange",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralExchanged",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "upperLimitPriceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditToExchange",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exchangePreview",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creditExchanged",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralExchanged",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGlobalIRS",
          "outputs": [
            {
              "internalType": "struct InterestRateModel.GlobalIRS",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int64",
                  "name": "baseRate",
                  "type": "int64"
                },
                {
                  "internalType": "uint64",
                  "name": "lastUpdated",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "rateAccumulator",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "averageRebate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "globalAccruedRebate",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLimitOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral_",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaximumDebtForCollateral",
          "outputs": [
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "creditNeeded",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionIRS",
          "outputs": [
            {
              "internalType": "struct InterestRateModel.PositionIRS",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "snapshotRateAccumulator",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "rebateFactor",
                  "type": "uint64"
                },
                {
                  "internalType": "uint128",
                  "name": "accruedRebate",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriceTick",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasPermission",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "limitOrderFloor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitOrderId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "limitOrders",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "priceTick",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "repayAmounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidatePositions"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidationConfig",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "liquidationPenalty",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidationDiscount",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "targetHealthFactor",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralizer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creditor",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "deltaCollateral",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "deltaNormalDebt",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyCollateralAndDebt"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyPermission"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyPermission"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "contract IOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pausedAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "positions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "normalDebt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limitPriceTick",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLimitPriceTick"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "parameter",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "data",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setParameter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "permitted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPermissionAgent"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "spotPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAccruedFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalNormalDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultConfig",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "debtFloor",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "liquidationRatio",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "globalLiquidationRatio",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "position",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "virtualIRS",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "rateAccumulator",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "accruedRebate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "globalAccruedRebate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addLimitPriceTick(uint256,uint256)": {
            "details": "Requires caller to have 'TICK_MANAGER_ROLE' role",
            "params": {
              "limitPriceTick": "The limit price tick to add [wad]",
              "nextLimitPriceTick": "The next (higher) limit price tick (0 if there's no higher price tick) [wad]"
            }
          },
          "calculateRebateFactorForPriceTick(uint256)": {
            "params": {
              "priceTick": "Price tick from which to derive the rebate factor from [wad]"
            },
            "returns": {
              "_0": "_ Rebate factor [wad]"
            }
          },
          "createLimitOrder(uint256)": {
            "params": {
              "limitPriceTick": "Limit price tick of the limit order (between 1.0 and 100) [wad]"
            }
          },
          "deposit(address,uint256)": {
            "details": "The caller needs to approve this contract to transfer tokens on their behalf",
            "params": {
              "amount": "Amount of tokens to deposit [tokenScale]",
              "to": "Address of the user to attribute the cash to"
            },
            "returns": {
              "cashAmount": "Amount of cash deposited [wad]"
            }
          },
          "enterEmergencyMode()": {
            "details": "This method will revert if the vault has already been paused"
          },
          "exchange(uint256,uint256)": {
            "params": {
              "creditToExchange": "Amount of credit to exchange for collateral [wad]",
              "upperLimitPriceTick": "Upper limit price tick (> 1.0) [wad]"
            },
            "returns": {
              "collateralExchanged": "Amount of collateral exchanged [wad]",
              "creditExchanged": "Amount of credit exchanged [wad]"
            }
          },
          "exchangePreview(uint256,uint256)": {
            "params": {
              "creditToExchange": "Amount of credit to exchange for collateral [wad]",
              "upperLimitPriceTick": "Upper limit price tick (> 1.0) [wad]"
            },
            "returns": {
              "collateralExchanged": "Amount of collateral exchanged [wad]",
              "creditExchanged": "Amount of credit exchanged [wad]"
            }
          },
          "getGlobalIRS()": {
            "returns": {
              "_0": "_ Global interest rate state"
            }
          },
          "getLimitOrder(uint256,uint256)": {
            "params": {
              "index": "Index of the limit order in the linked list",
              "priceTick": "Price tick of the limit order"
            },
            "returns": {
              "limitOrderId": "Limit order id"
            }
          },
          "getPositionIRS(address)": {
            "params": {
              "position": "Address of position (owner)"
            },
            "returns": {
              "_0": "_ Interest rate state of the position"
            }
          },
          "getPriceTick(uint256)": {
            "params": {
              "index": "Index of the price tick in the linked list"
            },
            "returns": {
              "isActive": "Whether the price tick is active",
              "priceTick": "Price tick [wad]"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasPermission(address,address)": {
            "params": {
              "caller": "Address of the caller",
              "owner": "Address of the owner"
            },
            "returns": {
              "_0": "_ whether `caller` has the permission"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "liquidatePositions(address[],uint256[])": {
            "details": "The liquidator has to approve the vault to transfer the sum of `repayAmounts`.",
            "params": {
              "owners": "Owners of the positions to liquidate",
              "repayAmounts": "Amounts the liquidator wants to repay for each position [wad]"
            }
          },
          "modifyCollateralAndDebt(address,address,address,int256,int256)": {
            "details": "Checks that the global debt ceiling and the vault's debt ceiling have not been exceeded via the CDM, - that the Position is still safe after the modification, - that the msg.sender has the permission of the owner to decrease the collateral-to-debt ratio, - that the msg.sender has the permission of the collateralizer to put up new collateral, - that the msg.sender has the permission of the creditor to settle debt with their credit, - that that the vault debt floor is exceeded - that the vault minimum collateralization ratio is met, otherwise it will transition into emergency mode",
            "params": {
              "collateralizer": "Address of who puts up or receives the collateral delta",
              "creditor": "Address of who provides or receives the credit delta for the debt delta",
              "deltaCollateral": "Amount of collateral to put up (+) or to remove (-) from the position [wad]",
              "deltaNormalDebt": "Amount of normalized debt (gross, before rate is applied) to generate (+) or to settle (-) on this position [wad]",
              "owner": "Address of the owner of the position"
            }
          },
          "modifyPermission(address,address,bool)": {
            "params": {
              "caller": "Address of the caller to grant or revoke permission for",
              "owner": "Address of the owner",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "modifyPermission(address,bool)": {
            "params": {
              "caller": "Address of the caller to grant or revoke permission for",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "pause()": {
            "details": "Sender has to be allowed to call this method"
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "removeLimitPriceTick(uint256)": {
            "details": "Requires caller to have 'TICK_MANAGER_ROLE' role",
            "params": {
              "limitPriceTick": "limit price tick to remove [wad]"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "setParameter(bytes32,uint256)": {
            "details": "Sender has to be allowed to call this method",
            "params": {
              "data": "New value to set for the variable [wad]",
              "parameter": "Name of the variable to set"
            }
          },
          "setPermissionAgent(address,bool)": {
            "params": {
              "agent": "Address of the agent to grant or revoke permission for",
              "permitted": "Whether to grant or revoke permission"
            }
          },
          "spotPrice()": {
            "returns": {
              "_0": "_ Current spot price of the collateral token [wad]"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "unpause()": {
            "details": "Sender has to be allowed to call this method"
          },
          "virtualIRS(address)": {
            "params": {
              "position": "Address of the position to return the accrued rebate for"
            },
            "returns": {
              "accruedRebate": "The accrued rebate of a position [wad]",
              "globalAccruedRebate": "The global accrued rebate [wad]",
              "rateAccumulator": "Current global rate accumulator [wad]"
            }
          },
          "withdraw(address,uint256)": {
            "params": {
              "amount": "Amount of tokens to withdraw [wad]",
              "to": "Address of the user to withdraw tokens to"
            },
            "returns": {
              "tokenAmount": "Amount of tokens withdrawn [tokenScale]"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "activeLimitPriceTicks(uint256)": {
            "notice": "Map specifying if a given price tick is active [wad]"
          },
          "addLimitPriceTick(uint256,uint256)": {
            "notice": "Adds a new price tick to the limit price tick linked list"
          },
          "buffer()": {
            "notice": "Global surplus and debt Buffer"
          },
          "calculateRebateFactorForPriceTick(uint256)": {
            "notice": "Calculates the rebate factor for a given price tick"
          },
          "cancelLimitOrder()": {
            "notice": "Cancels an existing limit order for a given position (user)"
          },
          "cash(address)": {
            "notice": "Map specifying the cash balances a user has [wad]"
          },
          "cdm()": {
            "notice": "CDM (Credit and Debt Manager)"
          },
          "claimFees()": {
            "notice": "Sends accrued protocol fees to the Buffer"
          },
          "createLimitOrder(uint256)": {
            "notice": "Creates a new limit order for a given position (user). The price tick represents a fee on the current oracle price of the collateral asset for which it can be redeemed for Stablecoin"
          },
          "deposit(address,uint256)": {
            "notice": "Deposits collateral tokens into this contract and increases a users cash balance"
          },
          "enterEmergencyMode()": {
            "notice": "Triggers the emergency mode by pausing the vault if global collateralization ratio is below the emergency threshold"
          },
          "exchange(uint256,uint256)": {
            "notice": "Exchange credit for collateral"
          },
          "exchangePreview(uint256,uint256)": {
            "notice": "Preview exchanging credit for collateral"
          },
          "getGlobalIRS()": {
            "notice": "Returns the global interest rate state"
          },
          "getLimitOrder(uint256,uint256)": {
            "notice": "Returns a limit order id at an index in the limit order linked list (sorted from oldest to newest)"
          },
          "getPositionIRS(address)": {
            "notice": "Returns the interest rate state of a position"
          },
          "getPriceTick(uint256)": {
            "notice": "Returns a price tick at an index in the price tick linked list (sorted from lowest to highest)"
          },
          "hasPermission(address,address)": {
            "notice": "Checks if `caller` has the permission to perform an action on behalf of `owner`"
          },
          "limitOrderFloor()": {
            "notice": "Minimum principal amount of a limit order [wad]"
          },
          "limitOrders(uint256)": {
            "notice": "Map of limit order makers"
          },
          "liquidatePositions(address[],uint256[])": {
            "notice": "Liquidates multiple unsafe positions by selling as much collateral as required to cover the debt in order to make the positions safe again. The collateral can be bought at a discount (`liquidationDiscount`) to the current spot price. The liquidator has to provide the amount he wants repay or sell (`repayAmounts`) for each position. From that repay amount a penalty (`liquidationPenalty`) is subtracted to mitigate against profitable self liquidations. If the available collateral of a position is not sufficient to cover the debt the vault is able to apply for a bail out from the global Buffer."
          },
          "liquidationConfig()": {
            "notice": "Liquidation configuration"
          },
          "modifyCollateralAndDebt(address,address,address,int256,int256)": {
            "notice": "Modifies a Position's collateral and debt balances"
          },
          "modifyPermission(address,address,bool)": {
            "notice": "Gives or revokes the permission for `caller` to perform an action on behalf of `owner`"
          },
          "modifyPermission(address,bool)": {
            "notice": "Gives or revokes the permission for `caller` to perform an action on behalf of `msg.sender`"
          },
          "oracle()": {
            "notice": "Oracle of the collateral token"
          },
          "pause()": {
            "notice": "Pauses the contract"
          },
          "positions(address)": {
            "notice": "Map of user positions"
          },
          "protocolFee()": {
            "notice": "Portion of interest that goes to the protocol [wad]"
          },
          "removeLimitPriceTick(uint256)": {
            "notice": "Removes limit price tick"
          },
          "setParameter(bytes32,uint256)": {
            "notice": "Sets various variables for this contract"
          },
          "setPermissionAgent(address,bool)": {
            "notice": "Gives or revokes the permission for the `agent` to modify the permissions of `msg.sender`"
          },
          "spotPrice()": {
            "notice": "Returns the current spot price of the collateral token"
          },
          "token()": {
            "notice": "collateral token"
          },
          "tokenScale()": {
            "notice": "Collateral token's decimals scale (10 ** decimals)"
          },
          "totalAccruedFees()": {
            "notice": "Total current amount of accrued protocol fees [wad]"
          },
          "totalNormalDebt()": {
            "notice": "Sum of backed normalized debt over all positions [wad]"
          },
          "unpause()": {
            "notice": "Unpauses the contract"
          },
          "vaultConfig()": {
            "notice": "CDPVault configuration"
          },
          "virtualIRS(address)": {
            "notice": "Returns the current global rate accumulator, global accrued rebate and the accrued rebate of a position"
          },
          "withdraw(address,uint256)": {
            "notice": "Withdraws collateral tokens from this contract and decreases a users cash balance"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/invariant/CDPVault_TypeAWrapper.sol": "CDPVault_TypeAWrapper"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/CDM.sol": {
        "keccak256": "0x07513c5228418df1739ec9640434f93fd551d1c32bc79708fb7ed6654c3ab5f5",
        "urls": [
          "bzz-raw://f80bb2cc3701d50c544860e8875e8afd4d6d3d38a1dec47c259b30751bd78a99",
          "dweb:/ipfs/QmXH2CcqXFAFGiEYVy8B1PP1SbrG7WP2wGtw9CJCwTGz1L"
        ],
        "license": "MIT"
      },
      "src/CDPVault.sol": {
        "keccak256": "0xf2f5dbf0b94224a4aed520fb1d1b09b377470827c6da8dba1760ac0ea4efa0b4",
        "urls": [
          "bzz-raw://e97a36351d85c0c1c4ac44ec99e16b8b15e548db6272a1ef0ef1256800c38009",
          "dweb:/ipfs/QmNnxqR2xse22M741qAeXBDcsQkLbC5MzhmieLsan3Ehz5"
        ],
        "license": "MIT"
      },
      "src/CDPVault_TypeA.sol": {
        "keccak256": "0xbd7cc837031c9d621e409b30d31604656b46c23c4abd6201f4b4bbab7f654a34",
        "urls": [
          "bzz-raw://9ca9024bb0b2402b5731f44bb525d6c739471dc6369a70e7c5ba286f5fd77fd2",
          "dweb:/ipfs/QmW6oRcRwL6GV7m77gnqpdPJtN9FgfHVtgteoEAzpsGGnE"
        ],
        "license": "MIT"
      },
      "src/InterestRateModel.sol": {
        "keccak256": "0x30a5d8a5671a17055aaa6297d1a87990acd6be402f5f082cb8f9e08d372b76bb",
        "urls": [
          "bzz-raw://4102582b0f965750c188d9456885eed90cfb76e2a54ffc2629e5253b2a439e1e",
          "dweb:/ipfs/QmdhfEBWFbckKnwvKR5kDpymWM7LHzSWVf7eLySLqxpvZT"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBuffer.sol": {
        "keccak256": "0xca68bc0b0ad51d45574138eaab1d2597f95bae6b925206e4640dba7e8a7a766f",
        "urls": [
          "bzz-raw://f18316a82aecd4fbd85b697c4a6f447025ccea9648353d5d5f71c0adbfeffeff",
          "dweb:/ipfs/Qmf5TvffBBLh6w4phbNknX7zwBrDHY4VUQqoKTexSHKpyY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault.sol": {
        "keccak256": "0x5de8dfcabf0b00266443fc6c1b57a76c36b3c064380445095967d3695abf646d",
        "urls": [
          "bzz-raw://34978ad2c84abcfe46aa6b20532d24cd1e9260782ea520b4b2ae3b87dcd8502f",
          "dweb:/ipfs/QmXPPQYYPApEgumbwuJr5391X3eSiv6hyQuR3UEMH9oUpE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_Deployer.sol": {
        "keccak256": "0xec43e73593b1c691da85967d506f84a4e17dfcc46b904aa163c695ec0dfff464",
        "urls": [
          "bzz-raw://e3207dedf3b31f8e2a89e54e622a93b0a720a1ffbf8f3cd8b9ec4ddbfc9025e2",
          "dweb:/ipfs/QmRPys9WUxo8iMqqYU3r7uTh57jX9Fth7dVBx2h6LaifAB"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_FactoryBase.sol": {
        "keccak256": "0xd4a4114e171c74bc27716b9f5f46bea4bf50300c1f436a6ee49798ed2425a717",
        "urls": [
          "bzz-raw://8e11772f94badd87cd218ec4b5b2856672bfa3dbc9bb6e447846c16e0ca3859e",
          "dweb:/ipfs/QmPjzM9btKZUWdH7Shw1bRdrALbbNwaKaAQxSVscUdU1zD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICDPVault_TypeA.sol": {
        "keccak256": "0x67e73a065253428bf75f8541da4b1530e4bae6c57ffb17520aba4a48aa132b5b",
        "urls": [
          "bzz-raw://94911a895e5a455a2eb23eea973a36c847f27dd1a3ee7a34470bc226751f0aa6",
          "dweb:/ipfs/Qmcv7WBZnEnm6zjYBGZFikYeyjnMyPb65XEA8cBUkXZ9BR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IInterestRateModel.sol": {
        "keccak256": "0x5f94dae8fa9cd5fdedf8f2a889518070379acb5edaf0b2462cea8ae26fd65055",
        "urls": [
          "bzz-raw://cf9b13a14ef5668a3907434e656a514d6f62ff1da38db17ae0a513a1e93c6599",
          "dweb:/ipfs/QmZ6ZuBnJWGpJVgQmJ124GbQsZL1oj6BctW8QZMthYwFKA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x23103163e03628c0e8291b368b27cf831c3e55ebe544745b833b6df9a9acada2",
        "urls": [
          "bzz-raw://58cc66f58fca72fd73c240dca9501165e083d248ff085ee4dc6a7719c224926c",
          "dweb:/ipfs/QmWqhtXoXTfYTkAao3a3F34XVjFsyxVqPCf2StG6udS617"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPause.sol": {
        "keccak256": "0xc14fe3637170b61ac24b0a87174f8cb0bfdafb48985c038e0e9c893ced15dc4d",
        "urls": [
          "bzz-raw://8afd830df77edefb6b9817c08639661750f10d79a5f317c41dd720499feb43ec",
          "dweb:/ipfs/QmPBCyJgodRXqQ5XGAoRggDRg5XCfDMX9i32SRo34qTbix"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/test/invariant/CDPVault_TypeAWrapper.sol": {
        "keccak256": "0x3d88de7b86782481b767ef7d6c6871d261887b67e9ac45bea6cfea9d6c7a0433",
        "urls": [
          "bzz-raw://99396eb12d7c62af75c8ae7b38e315f64ce78bbcf57d962fca1a975fff4f548c",
          "dweb:/ipfs/QmQT6KasFvepK43FXkjX6sKWhvxDieiscqSNdPaoHHPSPV"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/DoubleLinkedList.sol": {
        "keccak256": "0xb9ab1eb6864f624f7d652c58386335f104a450a75b6dd19179b9fa1ad8637691",
        "urls": [
          "bzz-raw://4a0d6e4ddf26a4af573bd782ffdb99801557ef16ad64372ef0486d0dd6b832cb",
          "dweb:/ipfs/QmcMgm9QS5qeLnVKLshEuFoyicuqLaJ5imphpfbPK3J7EC"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/utils/Pause.sol": {
        "keccak256": "0xa7b2329fafbfcf9cc35f459c4756a73cd7b36708542cb7919dabf05b98dbbc19",
        "urls": [
          "bzz-raw://dbcbb85049eb31dc7609dd72884f3eb5511b5e05d4180fed7f4572f5ad4cd6a1",
          "dweb:/ipfs/Qme5eFH4b4sdpGjCsWraP5441MrVXjxAoCRdvaA4tDrYrL"
        ],
        "license": "MIT"
      },
      "src/utils/Permission.sol": {
        "keccak256": "0x1e7c3aa37a4acb7783e85c7d292c7ef4c561b4024e011970cc5da2ed3bc228c1",
        "urls": [
          "bzz-raw://58b785fcc15ce8d2f58bff13c023061caa19ff0c14f74d8bc27299a78e575fbb",
          "dweb:/ipfs/QmXr2JRVjTaW34zEAAu7FuXmwgP9AYgreraMrGEoJYj69p"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/invariant/CDPVault_TypeAWrapper.sol",
    "id": 98201,
    "exportedSymbols": {
      "CDM": [
        41425
      ],
      "CDPVault_TypeA": [
        45868
      ],
      "CDPVault_TypeAWrapper": [
        98179
      ],
      "CDPVault_TypeAWrapper_Deployer": [
        98200
      ],
      "ICDPVault_Deployer": [
        49645
      ],
      "add": [
        133535
      ],
      "calculateDebt": [
        41503
      ],
      "calculateNormalDebt": [
        41538
      ],
      "min": [
        133478,
        133490
      ],
      "mul": [
        133613
      ],
      "wdiv": [
        133672
      ],
      "wmul": [
        133625,
        133648
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3509:151",
    "nodes": [
      {
        "id": 97820,
        "nodeType": "PragmaDirective",
        "src": "39:24:151",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 97822,
        "nodeType": "ImportDirective",
        "src": "65:75:151",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDPVault_Deployer.sol",
        "file": "../../interfaces/ICDPVault_Deployer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98201,
        "sourceUnit": 49646,
        "symbolAliases": [
          {
            "foreign": {
              "id": 97821,
              "name": "ICDPVault_Deployer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49645,
              "src": "73:18:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 97828,
        "nodeType": "ImportDirective",
        "src": "142:63:151",
        "nodes": [],
        "absolutePath": "src/utils/Math.sol",
        "file": "../../utils/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98201,
        "sourceUnit": 133700,
        "symbolAliases": [
          {
            "foreign": {
              "id": 97823,
              "name": "wmul",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "150:4:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 97824,
              "name": "wdiv",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 133672,
              "src": "156:4:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 97825,
              "name": "min",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "162:3:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 97826,
              "name": "add",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 133535,
              "src": "167:3:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 97827,
              "name": "mul",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 133613,
              "src": "172:3:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 97830,
        "nodeType": "ImportDirective",
        "src": "207:34:151",
        "nodes": [],
        "absolutePath": "src/CDM.sol",
        "file": "../../CDM.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98201,
        "sourceUnit": 41426,
        "symbolAliases": [
          {
            "foreign": {
              "id": 97829,
              "name": "CDM",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41425,
              "src": "215:3:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 97833,
        "nodeType": "ImportDirective",
        "src": "242:70:151",
        "nodes": [],
        "absolutePath": "src/CDPVault.sol",
        "file": "../../CDPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98201,
        "sourceUnit": 43992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 97831,
              "name": "calculateDebt",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41503,
              "src": "250:13:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 97832,
              "name": "calculateNormalDebt",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41538,
              "src": "265:19:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 97835,
        "nodeType": "ImportDirective",
        "src": "313:56:151",
        "nodes": [],
        "absolutePath": "src/CDPVault_TypeA.sol",
        "file": "../../CDPVault_TypeA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98201,
        "sourceUnit": 45869,
        "symbolAliases": [
          {
            "foreign": {
              "id": 97834,
              "name": "CDPVault_TypeA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45868,
              "src": "321:14:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98179,
        "nodeType": "ContractDefinition",
        "src": "371:2982:151",
        "nodes": [
          {
            "id": 97846,
            "nodeType": "FunctionDefinition",
            "src": "431:55:151",
            "nodes": [],
            "body": {
              "id": 97845,
              "nodeType": "Block",
              "src": "484:2:151",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 97842,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 97839,
                    "src": "475:7:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 97843,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 97841,
                  "name": "CDPVault_TypeA",
                  "nameLocations": [
                    "460:14:151"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45868,
                  "src": "460:14:151"
                },
                "nodeType": "ModifierInvocation",
                "src": "460:23:151"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 97840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97839,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "451:7:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 97846,
                  "src": "443:15:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:151",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "442:17:151"
            },
            "returnParameters": {
              "id": 97844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:151"
            },
            "scope": 98179,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98126,
            "nodeType": "FunctionDefinition",
            "src": "492:2465:151",
            "nodes": [],
            "body": {
              "id": 98125,
              "nodeType": "Block",
              "src": "716:2241:151",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    97865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97865,
                      "mutability": "mutable",
                      "name": "position",
                      "nameLocation": "742:8:151",
                      "nodeType": "VariableDeclaration",
                      "scope": 98125,
                      "src": "726:24:151",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                        "typeString": "struct CDPVault.Position"
                      },
                      "typeName": {
                        "id": 97864,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97863,
                          "name": "Position",
                          "nameLocations": [
                            "726:8:151"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41615,
                          "src": "726:8:151"
                        },
                        "referencedDeclaration": 41615,
                        "src": "726:8:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Position_$41615_storage_ptr",
                          "typeString": "struct CDPVault.Position"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97869,
                  "initialValue": {
                    "baseExpression": {
                      "id": 97866,
                      "name": "positions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41621,
                      "src": "753:9:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$41615_storage_$",
                        "typeString": "mapping(address => struct CDPVault.Position storage ref)"
                      }
                    },
                    "id": 97868,
                    "indexExpression": {
                      "id": 97867,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97848,
                      "src": "763:5:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "753:16:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Position_$41615_storage",
                      "typeString": "struct CDPVault.Position storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "726:43:151"
                },
                {
                  "expression": {
                    "id": 97872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97870,
                      "name": "deltaCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97857,
                      "src": "780:15:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97871,
                      "name": "deltaCollateral_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97854,
                      "src": "798:16:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "780:34:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 97873,
                  "nodeType": "ExpressionStatement",
                  "src": "780:34:151"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 97876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 97874,
                      "name": "deltaCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97857,
                      "src": "829:15:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 97875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "847:1:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "829:19:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 97899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 97889,
                        "name": "deltaCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97857,
                        "src": "934:15:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 97891,
                            "name": "deltaCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97857,
                            "src": "957:15:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 97894,
                                  "name": "cash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41610,
                                  "src": "981:4:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 97896,
                                "indexExpression": {
                                  "id": 97895,
                                  "name": "collateralizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97850,
                                  "src": "986:14:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "981:20:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 97893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "974:6:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 97892,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "974:6:151",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 97897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "974:28:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 97890,
                          "name": "_min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98178,
                          "src": "952:4:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                            "typeString": "function (int256,int256) pure returns (int256)"
                          }
                        },
                        "id": 97898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "952:51:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "934:69:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 97900,
                    "nodeType": "ExpressionStatement",
                    "src": "934:69:151"
                  },
                  "id": 97901,
                  "nodeType": "IfStatement",
                  "src": "825:178:151",
                  "trueBody": {
                    "expression": {
                      "id": 97887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 97877,
                        "name": "deltaCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97857,
                        "src": "850:15:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 97879,
                            "name": "deltaCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97857,
                            "src": "873:15:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "id": 97885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "890:28:151",
                            "subExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 97882,
                                    "name": "position",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 97865,
                                    "src": "898:8:151",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                                      "typeString": "struct CDPVault.Position memory"
                                    }
                                  },
                                  "id": 97883,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "907:10:151",
                                  "memberName": "collateral",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 41612,
                                  "src": "898:19:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 97881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "891:6:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 97880,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "891:6:151",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 97884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "891:27:151",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 97878,
                          "name": "_max",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98160,
                          "src": "868:4:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                            "typeString": "function (int256,int256) pure returns (int256)"
                          }
                        },
                        "id": 97886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "868:51:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "850:69:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 97888,
                    "nodeType": "ExpressionStatement",
                    "src": "850:69:151"
                  }
                },
                {
                  "assignments": [
                    97903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97903,
                      "mutability": "mutable",
                      "name": "positionDebtCeiling",
                      "nameLocation": "1022:19:151",
                      "nodeType": "VariableDeclaration",
                      "scope": 98125,
                      "src": "1014:27:151",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97902,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1014:7:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97919,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 97906,
                              "name": "position",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97865,
                              "src": "1066:8:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                                "typeString": "struct CDPVault.Position memory"
                              }
                            },
                            "id": 97907,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1075:10:151",
                            "memberName": "collateral",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41612,
                            "src": "1066:19:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 97908,
                            "name": "deltaCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97857,
                            "src": "1087:15:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 97905,
                          "name": "add",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133535,
                          "src": "1062:3:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,int256) pure returns (uint256)"
                          }
                        },
                        "id": 97909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1062:41:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 97911,
                              "name": "liquidationPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98142,
                              "src": "1226:16:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 97912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1226:18:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "302e39",
                                "id": 97915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1254:9:151",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_900000000000000000_by_1",
                                  "typeString": "int_const 900000000000000000"
                                },
                                "value": "0.9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_900000000000000000_by_1",
                                  "typeString": "int_const 900000000000000000"
                                }
                              ],
                              "id": 97914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1246:7:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 97913,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1246:7:151",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 97916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1246:18:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 97910,
                          "name": "wmul",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            133625,
                            133648
                          ],
                          "referencedDeclaration": 133625,
                          "src": "1221:4:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 97917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1221:44:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 97904,
                      "name": "wmul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        133625,
                        133648
                      ],
                      "referencedDeclaration": 133625,
                      "src": "1044:4:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 97918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:231:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1014:261:151"
                },
                {
                  "assignments": [
                    97921,
                    97923,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97921,
                      "mutability": "mutable",
                      "name": "rateAccumulator",
                      "nameLocation": "1294:15:151",
                      "nodeType": "VariableDeclaration",
                      "scope": 98125,
                      "src": "1287:22:151",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 97920,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1287:6:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 97923,
                      "mutability": "mutable",
                      "name": "accruedRebate",
                      "nameLocation": "1319:13:151",
                      "nodeType": "VariableDeclaration",
                      "scope": 98125,
                      "src": "1311:21:151",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97922,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1311:7:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 97927,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97925,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97848,
                        "src": "1348:5:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 97924,
                      "name": "virtualIRS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42264,
                      "src": "1337:10:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint64_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint64,uint256,uint256)"
                      }
                    },
                    "id": 97926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:17:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint64_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint64,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1286:68:151"
                },
                {
                  "assignments": [
                    97929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97929,
                      "mutability": "mutable",
                      "name": "debt",
                      "nameLocation": "1372:4:151",
                      "nodeType": "VariableDeclaration",
                      "scope": 98125,
                      "src": "1364:12:151",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97928,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1364:7:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97936,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 97931,
                          "name": "position",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97865,
                          "src": "1393:8:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                            "typeString": "struct CDPVault.Position memory"
                          }
                        },
                        "id": 97932,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1402:10:151",
                        "memberName": "normalDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41614,
                        "src": "1393:19:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 97933,
                        "name": "rateAccumulator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97921,
                        "src": "1414:15:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 97934,
                        "name": "accruedRebate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97923,
                        "src": "1431:13:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 97930,
                      "name": "calculateDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41503,
                      "src": "1379:13:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint64_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint64,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 97935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1379:66:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1364:81:151"
                },
                {
                  "assignments": [
                    97938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97938,
                      "mutability": "mutable",
                      "name": "debtCapacity",
                      "nameLocation": "1462:12:151",
                      "nodeType": "VariableDeclaration",
                      "scope": 98125,
                      "src": "1455:19:151",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 97937,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1455:6:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97939,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1455:19:151"
                },
                {
                  "id": 98006,
                  "nodeType": "Block",
                  "src": "1517:495:151",
                  "statements": [
                    {
                      "expression": {
                        "id": 97971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 97940,
                          "name": "debtCapacity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97938,
                          "src": "1527:12:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 97949,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "1593:4:151",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_CDPVault_TypeAWrapper_$98179",
                                                "typeString": "contract CDPVault_TypeAWrapper"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_CDPVault_TypeAWrapper_$98179",
                                                "typeString": "contract CDPVault_TypeAWrapper"
                                              }
                                            ],
                                            "id": 97948,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1585:7:151",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 97947,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "1585:7:151",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 97950,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1585:13:151",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 97945,
                                          "name": "cdm",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 41561,
                                          "src": "1570:3:151",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ICDM_$49221",
                                            "typeString": "contract ICDM"
                                          }
                                        },
                                        "id": 97946,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1574:10:151",
                                        "memberName": "creditLine",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 49211,
                                        "src": "1570:14:151",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 97951,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1570:29:151",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 97958,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "id": 97952,
                                            "name": "cdm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41561,
                                            "src": "1601:3:151",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ICDM_$49221",
                                              "typeString": "contract ICDM"
                                            }
                                          },
                                          "id": 97953,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1605:17:151",
                                          "memberName": "globalDebtCeiling",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 49179,
                                          "src": "1601:21:151",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view external returns (uint256)"
                                          }
                                        },
                                        "id": 97954,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1601:23:151",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "id": 97955,
                                            "name": "cdm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41561,
                                            "src": "1627:3:151",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ICDM_$49221",
                                              "typeString": "contract ICDM"
                                            }
                                          },
                                          "id": 97956,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1631:10:151",
                                          "memberName": "globalDebt",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 49174,
                                          "src": "1627:14:151",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view external returns (uint256)"
                                          }
                                        },
                                        "id": 97957,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1627:16:151",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "1601:42:151",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 97944,
                                    "name": "min",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      133478,
                                      133490
                                    ],
                                    "referencedDeclaration": 133478,
                                    "src": "1566:3:151",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 97959,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1566:78:151",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 97943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1559:6:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 97942,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1559:6:151",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 97960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1559:86:151",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 97969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 97963,
                                    "name": "positionDebtCeiling",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 97903,
                                    "src": "1667:19:151",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 97962,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1660:6:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 97961,
                                    "name": "int256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1660:6:151",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 97964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1660:27:151",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 97967,
                                    "name": "debt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 97929,
                                    "src": "1697:4:151",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 97966,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1690:6:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 97965,
                                    "name": "int256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1690:6:151",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 97968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1690:12:151",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "1660:42:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 97941,
                            "name": "min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              133478,
                              133490
                            ],
                            "referencedDeclaration": 133490,
                            "src": "1542:3:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                              "typeString": "function (int256,int256) pure returns (int256)"
                            }
                          },
                          "id": 97970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1542:170:151",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "1527:185:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 97972,
                      "nodeType": "ExpressionStatement",
                      "src": "1527:185:151"
                    },
                    {
                      "assignments": [
                        97974
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 97974,
                          "mutability": "mutable",
                          "name": "absoluteDebtCapacity",
                          "nameLocation": "1739:20:151",
                          "nodeType": "VariableDeclaration",
                          "scope": 98006,
                          "src": "1731:28:151",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 97973,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1731:7:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 97985,
                      "initialValue": {
                        "arguments": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 97979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 97977,
                                "name": "debtCapacity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97938,
                                "src": "1770:12:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 97978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1785:1:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1770:16:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 97982,
                              "name": "debtCapacity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97938,
                              "src": "1805:12:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "id": 97983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "1770:47:151",
                            "trueExpression": {
                              "id": 97981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "1789:13:151",
                              "subExpression": {
                                "id": 97980,
                                "name": "debtCapacity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97938,
                                "src": "1790:12:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 97976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1762:7:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 97975,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1762:7:151",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1762:56:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1731:87:151"
                    },
                    {
                      "expression": {
                        "id": 97995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 97986,
                          "name": "deltaNormalDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97859,
                          "src": "1828:15:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 97990,
                                  "name": "absoluteDebtCapacity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97974,
                                  "src": "1873:20:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 97991,
                                  "name": "rateAccumulator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97921,
                                  "src": "1895:15:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                {
                                  "id": 97992,
                                  "name": "accruedRebate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97923,
                                  "src": "1912:13:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 97989,
                                "name": "calculateNormalDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41538,
                                "src": "1853:19:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint64_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint64,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 97993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1853:73:151",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 97988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1846:6:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 97987,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1846:6:151",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 97994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1846:81:151",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "1828:99:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 97996,
                      "nodeType": "ExpressionStatement",
                      "src": "1828:99:151"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 97999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97997,
                          "name": "debtCapacity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97938,
                          "src": "1949:12:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 97998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1964:1:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1949:16:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 98005,
                      "nodeType": "IfStatement",
                      "src": "1946:55:151",
                      "trueBody": {
                        "expression": {
                          "id": 98003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 98000,
                            "name": "deltaNormalDebt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97859,
                            "src": "1967:15:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 98002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "1985:16:151",
                            "subExpression": {
                              "id": 98001,
                              "name": "deltaNormalDebt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97859,
                              "src": "1986:15:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1967:34:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 98004,
                        "nodeType": "ExpressionStatement",
                        "src": "1967:34:151"
                      }
                    }
                  ]
                },
                {
                  "assignments": [
                    98008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98008,
                      "mutability": "mutable",
                      "name": "deltaDebt",
                      "nameLocation": "2029:9:151",
                      "nodeType": "VariableDeclaration",
                      "scope": 98125,
                      "src": "2022:16:151",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 98007,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2022:6:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98009,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2022:16:151"
                },
                {
                  "id": 98047,
                  "nodeType": "Block",
                  "src": "2080:285:151",
                  "statements": [
                    {
                      "assignments": [
                        98011,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 98011,
                          "mutability": "mutable",
                          "name": "claimedRebate",
                          "nameLocation": "2099:13:151",
                          "nodeType": "VariableDeclaration",
                          "scope": 98047,
                          "src": "2091:21:151",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "typeName": {
                            "id": 98010,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "2091:7:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "visibility": "internal"
                        },
                        null
                      ],
                      "id": 98031,
                      "initialValue": {
                        "arguments": [
                          {
                            "condition": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  "id": 98015,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 98013,
                                    "name": "deltaNormalDebt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 97859,
                                    "src": "2154:15:151",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 98014,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2172:1:151",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "2154:19:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 98016,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2153:21:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "hexValue": "30",
                              "id": 98022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2205:1:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "id": 98023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "2153:53:151",
                            "trueExpression": {
                              "arguments": [
                                {
                                  "id": 98020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "2185:16:151",
                                  "subExpression": {
                                    "id": 98019,
                                    "name": "deltaNormalDebt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 97859,
                                    "src": "2186:15:151",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 98018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2177:7:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 98017,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2177:7:151",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 98021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2177:25:151",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 98024,
                              "name": "position",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97865,
                              "src": "2208:8:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                                "typeString": "struct CDPVault.Position memory"
                              }
                            },
                            "id": 98025,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2217:10:151",
                            "memberName": "normalDebt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41614,
                            "src": "2208:19:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98028,
                                "name": "accruedRebate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97923,
                                "src": "2237:13:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 98027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2229:7:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 98026,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "2229:7:151",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2229:22:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 98012,
                          "name": "_calculateRebateClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48703,
                          "src": "2118:21:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint128_$returns$_t_uint128_$_t_uint128_$",
                            "typeString": "function (uint256,uint256,uint128) pure returns (uint128,uint128)"
                          }
                        },
                        "id": 98030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2118:143:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                          "typeString": "tuple(uint128,uint128)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2090:171:151"
                    },
                    {
                      "expression": {
                        "id": 98045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 98032,
                          "name": "deltaDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98008,
                          "src": "2271:9:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 98044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 98034,
                                "name": "rateAccumulator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97921,
                                "src": "2288:15:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              {
                                "id": 98035,
                                "name": "deltaNormalDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97859,
                                "src": "2305:15:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                },
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 98033,
                              "name": "wmul",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                133625,
                                133648
                              ],
                              "referencedDeclaration": 133648,
                              "src": "2283:4:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_int256_$",
                                "typeString": "function (uint256,int256) pure returns (int256)"
                              }
                            },
                            "id": 98036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2283:38:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 98041,
                                    "name": "claimedRebate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98011,
                                    "src": "2339:13:151",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "id": 98040,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2331:7:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 98039,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2331:7:151",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 98042,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2331:22:151",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 98038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2324:6:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 98037,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2324:6:151",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2324:30:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "2283:71:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "2271:83:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 98046,
                      "nodeType": "ExpressionStatement",
                      "src": "2271:83:151"
                    }
                  ]
                },
                {
                  "assignments": [
                    98049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98049,
                      "mutability": "mutable",
                      "name": "creditLine",
                      "nameLocation": "2382:10:151",
                      "nodeType": "VariableDeclaration",
                      "scope": 98125,
                      "src": "2375:17:151",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 98048,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2375:6:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98057,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98054,
                            "name": "creditor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97852,
                            "src": "2417:8:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98052,
                            "name": "cdm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41561,
                            "src": "2402:3:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICDM_$49221",
                              "typeString": "contract ICDM"
                            }
                          },
                          "id": 98053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2406:10:151",
                          "memberName": "creditLine",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49211,
                          "src": "2402:14:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 98055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2402:24:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2395:6:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 98050,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2395:6:151",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 98056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2395:32:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2375:52:151"
                },
                {
                  "expression": {
                    "id": 98080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98058,
                      "name": "creditNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97861,
                      "src": "2437:12:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 98066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 98061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 98059,
                                "name": "deltaDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98008,
                                "src": "2453:9:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 98060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2465:1:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2453:13:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 98065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 98062,
                                "name": "creditLine",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98049,
                                "src": "2470:10:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 98064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "2483:10:151",
                                "subExpression": {
                                  "id": 98063,
                                  "name": "deltaDebt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98008,
                                  "src": "2484:9:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "2470:23:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2453:40:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 98067,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2452:42:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 98077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "2518:10:151",
                              "subExpression": {
                                "id": 98074,
                                "name": "deltaDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98008,
                                "src": "2519:9:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 98076,
                              "name": "creditLine",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98049,
                              "src": "2531:10:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "2518:23:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 98073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2510:7:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 98072,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2510:7:151",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2510:32:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 98079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2452:90:151",
                      "trueExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 98070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2505:1:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 98069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2497:7:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 98068,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2497:7:151",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2497:10:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2437:105:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98081,
                  "nodeType": "ExpressionStatement",
                  "src": "2437:105:151"
                },
                {
                  "assignments": [
                    98083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98083,
                      "mutability": "mutable",
                      "name": "newPositionDebt",
                      "nameLocation": "2560:15:151",
                      "nodeType": "VariableDeclaration",
                      "scope": 98125,
                      "src": "2553:22:151",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 98082,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2553:6:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98091,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 98090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 98086,
                            "name": "position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97865,
                            "src": "2585:8:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Position_$41615_memory_ptr",
                              "typeString": "struct CDPVault.Position memory"
                            }
                          },
                          "id": 98087,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2594:10:151",
                          "memberName": "normalDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41614,
                          "src": "2585:19:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 98085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2578:6:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 98084,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2578:6:151",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 98088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2578:27:151",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 98089,
                      "name": "deltaNormalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97859,
                      "src": "2608:15:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "2578:45:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2553:70:151"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 98105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 98094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 98092,
                        "name": "newPositionDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98083,
                        "src": "2700:15:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 98093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2718:1:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2700:19:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 98104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 98095,
                        "name": "newPositionDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98083,
                        "src": "2723:15:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 98100,
                                  "name": "vaultConfig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41599,
                                  "src": "2755:11:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VaultConfig_$41595_storage",
                                    "typeString": "struct CDPVault.VaultConfig storage ref"
                                  }
                                },
                                "id": 98101,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2767:9:151",
                                "memberName": "debtFloor",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 41588,
                                "src": "2755:21:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "id": 98099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2748:6:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int128_$",
                                "typeString": "type(int128)"
                              },
                              "typeName": {
                                "id": 98098,
                                "name": "int128",
                                "nodeType": "ElementaryTypeName",
                                "src": "2748:6:151",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2748:29:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int128",
                              "typeString": "int128"
                            }
                          ],
                          "id": 98097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2741:6:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 98096,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2741:6:151",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2741:37:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "2723:55:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2700:78:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98119,
                  "nodeType": "IfStatement",
                  "src": "2697:189:151",
                  "trueBody": {
                    "id": 98118,
                    "nodeType": "Block",
                    "src": "2779:107:151",
                    "statements": [
                      {
                        "expression": {
                          "id": 98108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 98106,
                            "name": "deltaNormalDebt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97859,
                            "src": "2793:15:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 98107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2811:1:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2793:19:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 98109,
                        "nodeType": "ExpressionStatement",
                        "src": "2793:19:151"
                      },
                      {
                        "expression": {
                          "id": 98112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 98110,
                            "name": "deltaCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97857,
                            "src": "2826:15:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 98111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2844:1:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2826:19:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 98113,
                        "nodeType": "ExpressionStatement",
                        "src": "2826:19:151"
                      },
                      {
                        "expression": {
                          "id": 98116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 98114,
                            "name": "creditNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97861,
                            "src": "2859:12:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 98115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2874:1:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2859:16:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 98117,
                        "nodeType": "ExpressionStatement",
                        "src": "2859:16:151"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 98120,
                        "name": "deltaCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97857,
                        "src": "2903:15:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 98121,
                        "name": "deltaNormalDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97859,
                        "src": "2920:15:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 98122,
                        "name": "creditNeeded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97861,
                        "src": "2937:12:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 98123,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2902:48:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_uint256_$",
                      "typeString": "tuple(int256,int256,uint256)"
                    }
                  },
                  "functionReturnParameters": 97862,
                  "id": 98124,
                  "nodeType": "Return",
                  "src": "2895:55:151"
                }
              ]
            },
            "functionSelector": "8f1e5f63",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaximumDebtForCollateral",
            "nameLocation": "501:27:151",
            "parameters": {
              "id": 97855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97848,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "546:5:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98126,
                  "src": "538:13:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:151",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97850,
                  "mutability": "mutable",
                  "name": "collateralizer",
                  "nameLocation": "561:14:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98126,
                  "src": "553:22:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:151",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97852,
                  "mutability": "mutable",
                  "name": "creditor",
                  "nameLocation": "585:8:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98126,
                  "src": "577:16:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:151",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97854,
                  "mutability": "mutable",
                  "name": "deltaCollateral_",
                  "nameLocation": "602:16:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98126,
                  "src": "595:23:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 97853,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "528:96:151"
            },
            "returnParameters": {
              "id": 97862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97857,
                  "mutability": "mutable",
                  "name": "deltaCollateral",
                  "nameLocation": "653:15:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98126,
                  "src": "646:22:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 97856,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97859,
                  "mutability": "mutable",
                  "name": "deltaNormalDebt",
                  "nameLocation": "677:15:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98126,
                  "src": "670:22:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 97858,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97861,
                  "mutability": "mutable",
                  "name": "creditNeeded",
                  "nameLocation": "702:12:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98126,
                  "src": "694:20:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "645:70:151"
            },
            "scope": 98179,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98142,
            "nodeType": "FunctionDefinition",
            "src": "2963:139:151",
            "nodes": [],
            "body": {
              "id": 98141,
              "nodeType": "Block",
              "src": "3023:79:151",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 98132,
                          "name": "spotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42308,
                          "src": "3044:9:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 98133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3044:11:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 98136,
                              "name": "vaultConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41599,
                              "src": "3065:11:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultConfig_$41595_storage",
                                "typeString": "struct CDPVault.VaultConfig storage ref"
                              }
                            },
                            "id": 98137,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3077:16:151",
                            "memberName": "liquidationRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41591,
                            "src": "3065:28:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "id": 98135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3057:7:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 98134,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3057:7:151",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3057:37:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98131,
                      "name": "wdiv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133672,
                      "src": "3039:4:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 98139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3039:56:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 98130,
                  "id": 98140,
                  "nodeType": "Return",
                  "src": "3032:63:151"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidationPrice",
            "nameLocation": "2972:16:151",
            "parameters": {
              "id": 98127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2988:2:151"
            },
            "returnParameters": {
              "id": 98130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98142,
                  "src": "3014:7:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3014:7:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3013:9:151"
            },
            "scope": 98179,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 98160,
            "nodeType": "FunctionDefinition",
            "src": "3108:117:151",
            "nodes": [],
            "body": {
              "id": 98159,
              "nodeType": "Block",
              "src": "3172:53:151",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 98153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98151,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98144,
                      "src": "3185:1:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 98152,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98146,
                      "src": "3189:1:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "3185:5:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98156,
                  "nodeType": "IfStatement",
                  "src": "3182:18:151",
                  "trueBody": {
                    "expression": {
                      "id": 98154,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98144,
                      "src": "3199:1:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "functionReturnParameters": 98150,
                    "id": 98155,
                    "nodeType": "Return",
                    "src": "3192:8:151"
                  }
                },
                {
                  "expression": {
                    "id": 98157,
                    "name": "b",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 98146,
                    "src": "3217:1:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 98150,
                  "id": 98158,
                  "nodeType": "Return",
                  "src": "3210:8:151"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_max",
            "nameLocation": "3117:4:151",
            "parameters": {
              "id": 98147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98144,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "3129:1:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98160,
                  "src": "3122:8:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 98143,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3122:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98146,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "3139:1:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98160,
                  "src": "3132:8:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 98145,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3121:20:151"
            },
            "returnParameters": {
              "id": 98150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98160,
                  "src": "3164:6:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 98148,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3164:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3163:8:151"
            },
            "scope": 98179,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 98178,
            "nodeType": "FunctionDefinition",
            "src": "3231:120:151",
            "nodes": [],
            "body": {
              "id": 98177,
              "nodeType": "Block",
              "src": "3295:56:151",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 98171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98169,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98162,
                      "src": "3308:1:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 98170,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98164,
                      "src": "3312:1:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "3308:5:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98174,
                  "nodeType": "IfStatement",
                  "src": "3305:18:151",
                  "trueBody": {
                    "expression": {
                      "id": 98172,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98162,
                      "src": "3322:1:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "functionReturnParameters": 98168,
                    "id": 98173,
                    "nodeType": "Return",
                    "src": "3315:8:151"
                  }
                },
                {
                  "expression": {
                    "id": 98175,
                    "name": "b",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 98164,
                    "src": "3340:1:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 98168,
                  "id": 98176,
                  "nodeType": "Return",
                  "src": "3333:8:151"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_min",
            "nameLocation": "3240:4:151",
            "parameters": {
              "id": 98165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98162,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "3252:1:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98178,
                  "src": "3245:8:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 98161,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3245:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98164,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "3262:1:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98178,
                  "src": "3255:8:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 98163,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3255:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3244:20:151"
            },
            "returnParameters": {
              "id": 98168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98167,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98178,
                  "src": "3287:6:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 98166,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3287:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3286:8:151"
            },
            "scope": 98179,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 97836,
              "name": "CDPVault_TypeA",
              "nameLocations": [
                "405:14:151"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45868,
              "src": "405:14:151"
            },
            "id": 97837,
            "nodeType": "InheritanceSpecifier",
            "src": "405:14:151"
          }
        ],
        "canonicalName": "CDPVault_TypeAWrapper",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          98179,
          45868,
          49762,
          43991,
          49438,
          48879,
          133918,
          50279,
          133762,
          50251,
          33608,
          32230,
          37491,
          37503,
          32428,
          36317
        ],
        "name": "CDPVault_TypeAWrapper",
        "nameLocation": "380:21:151",
        "scope": 98201,
        "usedErrors": [
          41706,
          41708,
          41710,
          41712,
          41714,
          41716,
          41718,
          41720,
          41722,
          41724,
          41726,
          41728,
          45408,
          45410,
          45412,
          48479,
          133121,
          133123,
          133125,
          133395,
          133397,
          133399,
          133401,
          133403,
          133787
        ]
      },
      {
        "id": 98200,
        "nodeType": "ContractDefinition",
        "src": "3355:192:151",
        "nodes": [
          {
            "id": 98199,
            "nodeType": "FunctionDefinition",
            "src": "3423:122:151",
            "nodes": [],
            "body": {
              "id": 98198,
              "nodeType": "Block",
              "src": "3474:71:151",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 98196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98186,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98184,
                      "src": "3484:5:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 98192,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3526:3:151",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 98193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3530:6:151",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3526:10:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 98191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3500:25:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_CDPVault_TypeAWrapper_$98179_$",
                              "typeString": "function (address) returns (contract CDPVault_TypeAWrapper)"
                            },
                            "typeName": {
                              "id": 98190,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 98189,
                                "name": "CDPVault_TypeAWrapper",
                                "nameLocations": [
                                  "3504:21:151"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 98179,
                                "src": "3504:21:151"
                              },
                              "referencedDeclaration": 98179,
                              "src": "3504:21:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CDPVault_TypeAWrapper_$98179",
                                "typeString": "contract CDPVault_TypeAWrapper"
                              }
                            }
                          },
                          "id": 98194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3500:37:151",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CDPVault_TypeAWrapper_$98179",
                            "typeString": "contract CDPVault_TypeAWrapper"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CDPVault_TypeAWrapper_$98179",
                            "typeString": "contract CDPVault_TypeAWrapper"
                          }
                        ],
                        "id": 98188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3492:7:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 98187,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3492:7:151",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 98195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3492:46:151",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3484:54:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 98197,
                  "nodeType": "ExpressionStatement",
                  "src": "3484:54:151"
                }
              ]
            },
            "baseFunctions": [
              49644
            ],
            "functionSelector": "775c300c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nameLocation": "3432:6:151",
            "parameters": {
              "id": 98182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3438:2:151"
            },
            "returnParameters": {
              "id": 98185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98184,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "3467:5:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 98199,
                  "src": "3459:13:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3459:7:151",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3458:15:151"
            },
            "scope": 98200,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98180,
              "name": "ICDPVault_Deployer",
              "nameLocations": [
                "3398:18:151"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49645,
              "src": "3398:18:151"
            },
            "id": 98181,
            "nodeType": "InheritanceSpecifier",
            "src": "3398:18:151"
          }
        ],
        "canonicalName": "CDPVault_TypeAWrapper_Deployer",
        "contractDependencies": [
          98179
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          98200,
          49645
        ],
        "name": "CDPVault_TypeAWrapper_Deployer",
        "nameLocation": "3364:30:151",
        "scope": 98201,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 151
}