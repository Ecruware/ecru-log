{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ICDM",
          "name": "cdm",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "unwinderFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506040516101ad3803806101ad83398101604081905261002f91610113565b60405163d9c70f5760e01b81526001600160a01b0382811660048301526001602483015284169063d9c70f5790604401600060405180830381600087803b15801561007957600080fd5b505af115801561008d573d6000803e3d6000fd5b505060405163d9c70f5760e01b81526001600160a01b038581166004830152600160248301528616925063d9c70f579150604401600060405180830381600087803b1580156100db57600080fd5b505af11580156100ef573d6000803e3d6000fd5b50505050505050610160565b6001600160a01b038116811461011057600080fd5b50565b60008060006060848603121561012857600080fd5b8351610133816100fb565b6020850151909350610144816100fb565b6040850151909250610155816100fb565b809150509250925092565b603f8061016e6000396000f3fe6080604052600080fdfea2646970667358221220a2177fc2a03647acc3a41b3f4839574298d9c05e26150426d3264883a45c5f2264736f6c63430008130033",
    "sourceMap": "394:307:94:-:0;;;426:273;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;606:33;;-1:-1:-1;;;606:33:94;;-1:-1:-1;;;;;898:32:188;;;606:33:94;;;880:51:188;634:4:94;947:18:188;;;940:50;606:20:94;;;;;853:18:188;;606:33:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;649:43:94;;-1:-1:-1;;;649:43:94;;-1:-1:-1;;;;;898:32:188;;;649:43:94;;;880:51:188;687:4:94;947:18:188;;;940:50;649:20:94;;;-1:-1:-1;649:20:94;;-1:-1:-1;853:18:188;;649:43:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:273;;;394:307;;14:137:188;-1:-1:-1;;;;;95:31:188;;85:42;;75:70;;141:1;138;131:12;75:70;14:137;:::o;156:551::-;258:6;266;274;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;375:9;369:16;394:37;425:5;394:37;:::i;:::-;500:2;485:18;;479:25;450:5;;-1:-1:-1;513:39:188;479:25;513:39;:::i;:::-;623:2;608:18;;602:25;571:7;;-1:-1:-1;636:39:188;602:25;636:39;:::i;:::-;694:7;684:17;;;156:551;;;;;:::o;712:284::-;394:307:94;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600080fdfea2646970667358221220a2177fc2a03647acc3a41b3f4839574298d9c05e26150426d3264883a45c5f2264736f6c63430008130033",
    "sourceMap": "394:307:94:-:0;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ICDM\",\"name\":\"cdm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"unwinderFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"CreditWithholder\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Credit account for the vault. Used for: - temp. withholding an estimated amount of credit for epochs for which the exact credit claim hasn't been fixed yet - temp. storing the fixed credit claim for epochs until the (un)delegators withdraw it\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CreditWithholder.sol\":\"CreditWithholder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"src/CreditWithholder.sol\":{\"keccak256\":\"0x3a9c179889788e828956cb427188c8893f80504d5396bfb5641e3370204e2e62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa9ca7b65de3a772dff289367057b37033b331fc58fa414fb1ac08fc8d6d004f\",\"dweb:/ipfs/QmQjoeQEkuDxzHanuWYqJmazcvvZa8BxkoNdFLJ3PCehiQ\"]},\"src/interfaces/ICDM.sol\":{\"keccak256\":\"0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973\",\"dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63\"]},\"src/interfaces/IPermission.sol\":{\"keccak256\":\"0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf\",\"dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ICDM",
              "name": "cdm",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "unwinderFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/CreditWithholder.sol": "CreditWithholder"
      },
      "libraries": {}
    },
    "sources": {
      "src/CreditWithholder.sol": {
        "keccak256": "0x3a9c179889788e828956cb427188c8893f80504d5396bfb5641e3370204e2e62",
        "urls": [
          "bzz-raw://fa9ca7b65de3a772dff289367057b37033b331fc58fa414fb1ac08fc8d6d004f",
          "dweb:/ipfs/QmQjoeQEkuDxzHanuWYqJmazcvvZa8BxkoNdFLJ3PCehiQ"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICDM.sol": {
        "keccak256": "0x5a501346e83a397a842bc6a74de7c717df5adc9885efec3cc5493119808d67a9",
        "urls": [
          "bzz-raw://94ead2b55fb26eb76ce383d3983e289ab41065446796a66780c8b4ae8162e973",
          "dweb:/ipfs/QmZwRkzXKppqnaUoUkzMxMT9D1c2JDy8ttNjYjQ1eYAD63"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IPermission.sol": {
        "keccak256": "0xd9cf3a29c16e192f2f265396870cb93cf91c91bbe62cb9a1ed343c32b4052f48",
        "urls": [
          "bzz-raw://48e25c7560455ffda43cbfb37ee47ed4da9c6bd38e46bcfd5fe4e982d5c34eaf",
          "dweb:/ipfs/Qmco16L9EdpXGFJXn7mdgkCpKErYRB4HFUzYB5m5yUnZcz"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/CreditWithholder.sol",
    "id": 48050,
    "exportedSymbols": {
      "CreditWithholder": [
        48049
      ],
      "ICDM": [
        49221
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:670:94",
    "nodes": [
      {
        "id": 48020,
        "nodeType": "PragmaDirective",
        "src": "32:24:94",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 48022,
        "nodeType": "ImportDirective",
        "src": "58:43:94",
        "nodes": [],
        "absolutePath": "src/interfaces/ICDM.sol",
        "file": "./interfaces/ICDM.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48050,
        "sourceUnit": 49222,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48021,
              "name": "ICDM",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49221,
              "src": "66:4:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48049,
        "nodeType": "ContractDefinition",
        "src": "394:307:94",
        "nodes": [
          {
            "id": 48048,
            "nodeType": "FunctionDefinition",
            "src": "426:273:94",
            "nodes": [],
            "body": {
              "id": 48047,
              "nodeType": "Block",
              "src": "488:211:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48036,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48030,
                        "src": "627:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 48037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "634:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 48033,
                        "name": "cdm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48026,
                        "src": "606:3:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDM_$49221",
                          "typeString": "contract ICDM"
                        }
                      },
                      "id": 48035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "610:16:94",
                      "memberName": "modifyPermission",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50269,
                      "src": "606:20:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 48038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:33:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48039,
                  "nodeType": "ExpressionStatement",
                  "src": "606:33:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48043,
                        "name": "unwinderFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48028,
                        "src": "670:15:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 48044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "687:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 48040,
                        "name": "cdm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48026,
                        "src": "649:3:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICDM_$49221",
                          "typeString": "contract ICDM"
                        }
                      },
                      "id": 48042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "653:16:94",
                      "memberName": "modifyPermission",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50269,
                      "src": "649:20:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 48045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "649:43:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48046,
                  "nodeType": "ExpressionStatement",
                  "src": "649:43:94"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 48031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48026,
                  "mutability": "mutable",
                  "name": "cdm",
                  "nameLocation": "443:3:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 48048,
                  "src": "438:8:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICDM_$49221",
                    "typeString": "contract ICDM"
                  },
                  "typeName": {
                    "id": 48025,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48024,
                      "name": "ICDM",
                      "nameLocations": [
                        "438:4:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49221,
                      "src": "438:4:94"
                    },
                    "referencedDeclaration": 49221,
                    "src": "438:4:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICDM_$49221",
                      "typeString": "contract ICDM"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48028,
                  "mutability": "mutable",
                  "name": "unwinderFactory",
                  "nameLocation": "456:15:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 48048,
                  "src": "448:23:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48030,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "481:5:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 48048,
                  "src": "473:13:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "437:50:94"
            },
            "returnParameters": {
              "id": 48032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:0:94"
            },
            "scope": 48049,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CreditWithholder",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 48023,
          "nodeType": "StructuredDocumentation",
          "src": "103:291:94",
          "text": "@title CreditWithholder\n @notice Credit account for the vault. Used for:\n - temp. withholding an estimated amount of credit for epochs for which the exact credit claim hasn't been fixed yet\n - temp. storing the fixed credit claim for epochs until the (un)delegators withdraw it"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48049
        ],
        "name": "CreditWithholder",
        "nameLocation": "403:16:94",
        "scope": 48050,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 94
}