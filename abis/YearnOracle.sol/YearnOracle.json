{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IYearnLensOracle",
          "name": "oracle_",
          "type": "address"
        },
        {
          "internalType": "contract IYVault",
          "name": "yearnVault_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "YearnOracle__authorizeUpgrade_validStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "YearnOracle__isV1Vault_invalidYearnVault",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "YearnOracle__spot_invalidValue",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isV1Vault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IYearnLensOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "spot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract IYVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultTokenScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x610140604052306080523480156200001657600080fd5b5060405162001c7838038062001c7883398101604081905262000039916200037c565b600054610100900460ff16158080156200005a5750600054600160ff909116105b80620000765750303b15801562000076575060005460ff166001145b620000de5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff19166001179055801562000102576000805461ff0019166101001790555b6001600160a01b0380841660a052821660c081905260408051637e062a3560e11b8152905163fc0c546a916004808201926020929091908290030181865afa15801562000153573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001799190620003bb565b6001600160a01b031660e0526200018f62000274565b1515610100819052620002165760e0516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002039190620003e2565b6200021090600a6200051c565b62000220565b670de0b6b3a76400005b6101205280156200026b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505062000547565b600060c0516001600160a01b03166377c7b8fc6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015620002d5575060408051601f3d908101601f19168201909252620002d2918101906200052d565b60015b6200035b5760c0516001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562000339575060408051601f3d908101601f1916820190925262000336918101906200052d565b60015b6200035757604051632dbc8ea560e11b815260040160405180910390fd5b5090565b600191505090565b6001600160a01b03811681146200037957600080fd5b50565b600080604083850312156200039057600080fd5b82516200039d8162000363565b6020840151909250620003b08162000363565b809150509250929050565b600060208284031215620003ce57600080fd5b8151620003db8162000363565b9392505050565b600060208284031215620003f557600080fd5b815160ff81168114620003db57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200045e57816000190482111562000442576200044262000407565b808516156200045057918102915b93841c939080029062000422565b509250929050565b600082620004775750600162000516565b81620004865750600062000516565b81600181146200049f5760028114620004aa57620004ca565b600191505062000516565b60ff841115620004be57620004be62000407565b50506001821b62000516565b5060208310610133831016604e8410600b8410161715620004ef575081810a62000516565b620004fb83836200041d565b806000190482111562000512576200051262000407565b0290505b92915050565b6000620003db60ff84168362000466565b6000602082840312156200054057600080fd5b5051919050565b60805160a05160c05160e051610100516101205161169b620005dd6000396000818161029101526109590152600081816101350152610cf301526000818161036601526108b601526000818161039a01528181610d190152610d9d0152600081816102c501526108e10152600081816104e601528181610526015281816106f50152818161073501526107ad015261169b6000f3fe6080604052600436106100e95760003560e01c80634f1ef286116100855780634f1ef2861461025757806352d1902d1461026a5780635551e0901461027f5780637dc0d1d0146102b357806391d14854146102ff578063a217fddf1461031f578063d547741f14610334578063df72f01714610354578063fbfa77cf1461038857600080fd5b806301ffc9a7146100ee578063063ab2ca14610123578063248a9ca3146101575780632cbf04c1146101955780632f2ff15d146101b557806330ccebb5146101d757806336568abe146101f75780633659cfe614610217578063485cc95514610237575b600080fd5b3480156100fa57600080fd5b5061010e610109366004611259565b6103bc565b60405190151581526020015b60405180910390f35b34801561012f57600080fd5b5061010e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561016357600080fd5b50610187610172366004611283565b60009081526065602052604090206001015490565b60405190815260200161011a565b3480156101a157600080fd5b506101876101b03660046112b3565b6103f3565b3480156101c157600080fd5b506101d56101d03660046112ce565b610425565b005b3480156101e357600080fd5b5061010e6101f23660046112b3565b61044f565b34801561020357600080fd5b506101d56102123660046112ce565b610459565b34801561022357600080fd5b506101d56102323660046112b3565b6104dc565b34801561024357600080fd5b506101d56102523660046112fa565b6105a4565b6101d561026536600461133a565b6106eb565b34801561027657600080fd5b506101876107a0565b34801561028b57600080fd5b506101877f000000000000000000000000000000000000000000000000000000000000000081565b3480156102bf57600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161011a565b34801561030b57600080fd5b5061010e61031a3660046112ce565b61084f565b34801561032b57600080fd5b50610187600081565b34801561034057600080fd5b506101d561034f3660046112ce565b61087a565b34801561036057600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561039457600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216637965db0b60e01b14806103ed57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006103fd61089f565b90508060000361042057604051637227decd60e11b815260040160405180910390fd5b919050565b600082815260656020526040902060010154610440816109a3565b61044a83836109ad565b505050565b60006103ed610a33565b6001600160a01b03811633146104ce5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6104d88282610a44565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105245760405162461bcd60e51b81526004016104c5906113fc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610556610aab565b6001600160a01b03161461057c5760405162461bcd60e51b81526004016104c590611448565b61058581610ac7565b604080516000808252602082019092526105a191839190610b17565b50565b600054610100900460ff16158080156105c45750600054600160ff909116105b806105de5750303b1580156105de575060005460ff166001145b6106415760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104c5565b6000805460ff191660011790558015610664576000805461ff0019166101001790555b61066c610c82565b6106776000846109ad565b6106a17f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08836109ad565b801561044a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107335760405162461bcd60e51b81526004016104c5906113fc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610765610aab565b6001600160a01b03161461078b5760405162461bcd60e51b81526004016104c590611448565b61079482610ac7565b6104d882826001610b17565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461083b5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b60648201526084016104c5565b5060008051602061161f8339815191525b90565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600082815260656020526040902060010154610895816109a3565b61044a8383610a44565b604051632415d18360e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063482ba30690602401602060405180830381865afa925050508015610946575060408051601f3d908101601f1916820190925261094391810190611494565b60015b1561084c576000610955610cef565b90507f000000000000000000000000000000000000000000000000000000000000000064e8d4a5100061098883856114c3565b61099291906114c3565b61099c91906114da565b9250505090565b6105a18133610e12565b6109b7828261084f565b6104d85760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556109ef3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610a3d61089f565b1515919050565b610a4e828261084f565b156104d85760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008051602061161f833981519152546001600160a01b031690565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610af1816109a3565b610af9610a33565b156104d857604051637c0fefb360e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610b4a5761044a83610e6b565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ba4575060408051601f3d908101601f19168201909252610ba191810190611494565b60015b610c075760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104c5565b60008051602061161f8339815191528114610c765760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104c5565b5061044a838383610f07565b600054610100900460ff16610ced5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016104c5565b565b60007f000000000000000000000000000000000000000000000000000000000000000015610d9b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166377c7b8fc6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d91575060408051601f3d908101601f19168201909252610d8e91810190611494565b60015b1561084c57905090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d91575060408051601f3d908101601f19168201909252610d8e91810190611494565b610e1c828261084f565b6104d857610e2981610f32565b610e34836020610f44565b604051602001610e45929190611520565b60408051601f198184030181529082905262461bcd60e51b82526104c59160040161158f565b6001600160a01b0381163b610ed85760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104c5565b60008051602061161f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610f10836110e7565b600082511180610f1d5750805b1561044a57610f2c8383611127565b50505050565b60606103ed6001600160a01b03831660145b60606000610f538360026114c3565b610f5e9060026115c2565b67ffffffffffffffff811115610f7657610f76611324565b6040519080825280601f01601f191660200182016040528015610fa0576020820181803683370190505b509050600360fc1b81600081518110610fbb57610fbb6115d5565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610fea57610fea6115d5565b60200101906001600160f81b031916908160001a905350600061100e8460026114c3565b6110199060016115c2565b90505b6001811115611091576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061104d5761104d6115d5565b1a60f81b828281518110611063576110636115d5565b60200101906001600160f81b031916908160001a90535060049490941c9361108a816115eb565b905061101c565b5083156110e05760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104c5565b9392505050565b6110f081610e6b565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61118f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104c5565b600080846001600160a01b0316846040516111aa9190611602565b600060405180830381855af49150503d80600081146111e5576040519150601f19603f3d011682016040523d82523d6000602084013e6111ea565b606091505b5091509150611212828260405180606001604052806027815260200161163f6027913961121b565b95945050505050565b6060831561122a5750816110e0565b6110e0838381511561123f5781518083602001fd5b8060405162461bcd60e51b81526004016104c5919061158f565b60006020828403121561126b57600080fd5b81356001600160e01b0319811681146110e057600080fd5b60006020828403121561129557600080fd5b5035919050565b80356001600160a01b038116811461042057600080fd5b6000602082840312156112c557600080fd5b6110e08261129c565b600080604083850312156112e157600080fd5b823591506112f16020840161129c565b90509250929050565b6000806040838503121561130d57600080fd5b6113168361129c565b91506112f16020840161129c565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561134d57600080fd5b6113568361129c565b9150602083013567ffffffffffffffff8082111561137357600080fd5b818501915085601f83011261138757600080fd5b81358181111561139957611399611324565b604051601f8201601f19908116603f011681019083821181831017156113c1576113c1611324565b816040528281528860208487010111156113da57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000602082840312156114a657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103ed576103ed6114ad565b6000826114f757634e487b7160e01b600052601260045260246000fd5b500490565b60005b838110156115175781810151838201526020016114ff565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516115528160178501602088016114fc565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516115838160288401602088016114fc565b01602801949350505050565b60208152600082518060208401526115ae8160408501602087016114fc565b601f01601f19169190910160400192915050565b808201808211156103ed576103ed6114ad565b634e487b7160e01b600052603260045260246000fd5b6000816115fa576115fa6114ad565b506000190190565b600082516116148184602087016114fc565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f052985be39cb735a39fd6928cd8acdd9e11f193cf52813d97071b0cceb4919964736f6c63430008130033",
    "sourceMap": "703:6249:119:-:0;;;1332:4:23;1289:48;;2534:317:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3268:19:22;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:22;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:22;1476:19:24;:23;;;3376:66:22;;-1:-1:-1;3425:12:22;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:22;;841:2:188;3314:201:22;;;823:21:188;880:2;860:18;;;853:30;919:34;899:18;;;892:62;-1:-1:-1;;;970:18:188;;;963:44;1024:19;;3314:201:22;;;;;;;;3525:12;:16;;-1:-1:-1;;3525:16:22;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:22;;;;;3551:65;-1:-1:-1;;;;;2615:16:119;;::::1;;::::0;2641:19;::::1;;::::0;;;2690:13:::1;::::0;;-1:-1:-1;;;2690:13:119;;;;:11:::1;::::0;:13:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;2641:19;2690:13:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2670:33:119::1;;::::0;2725:12:::1;:10;:12::i;:::-;2713:24;;;::::0;;;2765:79:::1;;2814:17;;-1:-1:-1::0;;;;;2799:42:119::1;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2794:50;::::0;:2:::1;:50;:::i;:::-;2765:79;;;1050:4;2765:79;2747:97;::::0;3636:99:22;;;;3686:5;3670:21;;-1:-1:-1;;3670:21:22;;;3710:14;;-1:-1:-1;3273:36:188;;3710:14:22;;3261:2:188;3246:18;3710:14:22;;;;;;;3636:99;3258:483;2534:317:119;;703:6249;;6511:439;6555:15;6586:5;;-1:-1:-1;;;;;6586:26:119;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6586:28:119;;;;;;;;-1:-1:-1;;6586:28:119;;;;;;;;;;;;:::i;:::-;;;6582:362;;6718:5;;-1:-1:-1;;;;;6718:19:119;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6718:21:119;;;;;;;;-1:-1:-1;;6718:21:119;;;;;;;;;;;;:::i;:::-;;;6714:220;;6877:42;;-1:-1:-1;;;6877:42:119;;;;;;;;;;;6714:220;6740:105;6511:439;:::o;6582:362::-;6678:4;6665:17;;6615:78;6511:439;:::o;14:149:188:-;-1:-1:-1;;;;;107:31:188;;97:42;;87:70;;153:1;150;143:12;87:70;14:149;:::o;168:466::-;292:6;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;401:9;395:16;420:49;463:5;420:49;:::i;:::-;538:2;523:18;;517:25;488:5;;-1:-1:-1;551:51:188;517:25;551:51;:::i;:::-;621:7;611:17;;;168:466;;;;;:::o;1054:269::-;1124:6;1177:2;1165:9;1156:7;1152:23;1148:32;1145:52;;;1193:1;1190;1183:12;1145:52;1225:9;1219:16;1244:49;1287:5;1244:49;:::i;:::-;1312:5;1054:269;-1:-1:-1;;;1054:269:188:o;1328:273::-;1396:6;1449:2;1437:9;1428:7;1424:23;1420:32;1417:52;;;1465:1;1462;1455:12;1417:52;1497:9;1491:16;1547:4;1540:5;1536:16;1529:5;1526:27;1516:55;;1567:1;1564;1557:12;1606:127;1667:10;1662:3;1658:20;1655:1;1648:31;1698:4;1695:1;1688:15;1722:4;1719:1;1712:15;1738:422;1827:1;1870:5;1827:1;1884:270;1905:7;1895:8;1892:21;1884:270;;;1964:4;1960:1;1956:6;1952:17;1946:4;1943:27;1940:53;;;1973:18;;:::i;:::-;2023:7;2013:8;2009:22;2006:55;;;2043:16;;;;2006:55;2122:22;;;;2082:15;;;;1884:270;;;1888:3;1738:422;;;;;:::o;2165:806::-;2214:5;2244:8;2234:80;;-1:-1:-1;2285:1:188;2299:5;;2234:80;2333:4;2323:76;;-1:-1:-1;2370:1:188;2384:5;;2323:76;2415:4;2433:1;2428:59;;;;2501:1;2496:130;;;;2408:218;;2428:59;2458:1;2449:10;;2472:5;;;2496:130;2533:3;2523:8;2520:17;2517:43;;;2540:18;;:::i;:::-;-1:-1:-1;;2596:1:188;2582:16;;2611:5;;2408:218;;2710:2;2700:8;2697:16;2691:3;2685:4;2682:13;2678:36;2672:2;2662:8;2659:16;2654:2;2648:4;2645:12;2641:35;2638:77;2635:159;;;-1:-1:-1;2747:19:188;;;2779:5;;2635:159;2826:34;2851:8;2845:4;2826:34;:::i;:::-;2896:6;2892:1;2888:6;2884:19;2875:7;2872:32;2869:58;;;2907:18;;:::i;:::-;2945:20;;-1:-1:-1;2165:806:188;;;;;:::o;2976:140::-;3034:5;3063:47;3104:4;3094:8;3090:19;3084:4;3063:47;:::i;3320:184::-;3390:6;3443:2;3431:9;3422:7;3418:23;3414:32;3411:52;;;3459:1;3456;3449:12;3411:52;-1:-1:-1;3482:16:188;;3320:184;-1:-1:-1;3320:184:188:o;:::-;703:6249:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100e95760003560e01c80634f1ef286116100855780634f1ef2861461025757806352d1902d1461026a5780635551e0901461027f5780637dc0d1d0146102b357806391d14854146102ff578063a217fddf1461031f578063d547741f14610334578063df72f01714610354578063fbfa77cf1461038857600080fd5b806301ffc9a7146100ee578063063ab2ca14610123578063248a9ca3146101575780632cbf04c1146101955780632f2ff15d146101b557806330ccebb5146101d757806336568abe146101f75780633659cfe614610217578063485cc95514610237575b600080fd5b3480156100fa57600080fd5b5061010e610109366004611259565b6103bc565b60405190151581526020015b60405180910390f35b34801561012f57600080fd5b5061010e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561016357600080fd5b50610187610172366004611283565b60009081526065602052604090206001015490565b60405190815260200161011a565b3480156101a157600080fd5b506101876101b03660046112b3565b6103f3565b3480156101c157600080fd5b506101d56101d03660046112ce565b610425565b005b3480156101e357600080fd5b5061010e6101f23660046112b3565b61044f565b34801561020357600080fd5b506101d56102123660046112ce565b610459565b34801561022357600080fd5b506101d56102323660046112b3565b6104dc565b34801561024357600080fd5b506101d56102523660046112fa565b6105a4565b6101d561026536600461133a565b6106eb565b34801561027657600080fd5b506101876107a0565b34801561028b57600080fd5b506101877f000000000000000000000000000000000000000000000000000000000000000081565b3480156102bf57600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161011a565b34801561030b57600080fd5b5061010e61031a3660046112ce565b61084f565b34801561032b57600080fd5b50610187600081565b34801561034057600080fd5b506101d561034f3660046112ce565b61087a565b34801561036057600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561039457600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216637965db0b60e01b14806103ed57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006103fd61089f565b90508060000361042057604051637227decd60e11b815260040160405180910390fd5b919050565b600082815260656020526040902060010154610440816109a3565b61044a83836109ad565b505050565b60006103ed610a33565b6001600160a01b03811633146104ce5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6104d88282610a44565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105245760405162461bcd60e51b81526004016104c5906113fc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610556610aab565b6001600160a01b03161461057c5760405162461bcd60e51b81526004016104c590611448565b61058581610ac7565b604080516000808252602082019092526105a191839190610b17565b50565b600054610100900460ff16158080156105c45750600054600160ff909116105b806105de5750303b1580156105de575060005460ff166001145b6106415760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104c5565b6000805460ff191660011790558015610664576000805461ff0019166101001790555b61066c610c82565b6106776000846109ad565b6106a17f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08836109ad565b801561044a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107335760405162461bcd60e51b81526004016104c5906113fc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610765610aab565b6001600160a01b03161461078b5760405162461bcd60e51b81526004016104c590611448565b61079482610ac7565b6104d882826001610b17565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461083b5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b60648201526084016104c5565b5060008051602061161f8339815191525b90565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600082815260656020526040902060010154610895816109a3565b61044a8383610a44565b604051632415d18360e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063482ba30690602401602060405180830381865afa925050508015610946575060408051601f3d908101601f1916820190925261094391810190611494565b60015b1561084c576000610955610cef565b90507f000000000000000000000000000000000000000000000000000000000000000064e8d4a5100061098883856114c3565b61099291906114c3565b61099c91906114da565b9250505090565b6105a18133610e12565b6109b7828261084f565b6104d85760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556109ef3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610a3d61089f565b1515919050565b610a4e828261084f565b156104d85760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008051602061161f833981519152546001600160a01b031690565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610af1816109a3565b610af9610a33565b156104d857604051637c0fefb360e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610b4a5761044a83610e6b565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ba4575060408051601f3d908101601f19168201909252610ba191810190611494565b60015b610c075760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104c5565b60008051602061161f8339815191528114610c765760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104c5565b5061044a838383610f07565b600054610100900460ff16610ced5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016104c5565b565b60007f000000000000000000000000000000000000000000000000000000000000000015610d9b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166377c7b8fc6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d91575060408051601f3d908101601f19168201909252610d8e91810190611494565b60015b1561084c57905090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d91575060408051601f3d908101601f19168201909252610d8e91810190611494565b610e1c828261084f565b6104d857610e2981610f32565b610e34836020610f44565b604051602001610e45929190611520565b60408051601f198184030181529082905262461bcd60e51b82526104c59160040161158f565b6001600160a01b0381163b610ed85760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104c5565b60008051602061161f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610f10836110e7565b600082511180610f1d5750805b1561044a57610f2c8383611127565b50505050565b60606103ed6001600160a01b03831660145b60606000610f538360026114c3565b610f5e9060026115c2565b67ffffffffffffffff811115610f7657610f76611324565b6040519080825280601f01601f191660200182016040528015610fa0576020820181803683370190505b509050600360fc1b81600081518110610fbb57610fbb6115d5565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610fea57610fea6115d5565b60200101906001600160f81b031916908160001a905350600061100e8460026114c3565b6110199060016115c2565b90505b6001811115611091576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061104d5761104d6115d5565b1a60f81b828281518110611063576110636115d5565b60200101906001600160f81b031916908160001a90535060049490941c9361108a816115eb565b905061101c565b5083156110e05760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104c5565b9392505050565b6110f081610e6b565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61118f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104c5565b600080846001600160a01b0316846040516111aa9190611602565b600060405180830381855af49150503d80600081146111e5576040519150601f19603f3d011682016040523d82523d6000602084013e6111ea565b606091505b5091509150611212828260405180606001604052806027815260200161163f6027913961121b565b95945050505050565b6060831561122a5750816110e0565b6110e0838381511561123f5781518083602001fd5b8060405162461bcd60e51b81526004016104c5919061158f565b60006020828403121561126b57600080fd5b81356001600160e01b0319811681146110e057600080fd5b60006020828403121561129557600080fd5b5035919050565b80356001600160a01b038116811461042057600080fd5b6000602082840312156112c557600080fd5b6110e08261129c565b600080604083850312156112e157600080fd5b823591506112f16020840161129c565b90509250929050565b6000806040838503121561130d57600080fd5b6113168361129c565b91506112f16020840161129c565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561134d57600080fd5b6113568361129c565b9150602083013567ffffffffffffffff8082111561137357600080fd5b818501915085601f83011261138757600080fd5b81358181111561139957611399611324565b604051601f8201601f19908116603f011681019083821181831017156113c1576113c1611324565b816040528281528860208487010111156113da57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000602082840312156114a657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103ed576103ed6114ad565b6000826114f757634e487b7160e01b600052601260045260246000fd5b500490565b60005b838110156115175781810151838201526020016114ff565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516115528160178501602088016114fc565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516115838160288401602088016114fc565b01602801949350505050565b60208152600082518060208401526115ae8160408501602087016114fc565b601f01601f19169190910160400192915050565b808201808211156103ed576103ed6114ad565b634e487b7160e01b600052603260045260246000fd5b6000816115fa576115fa6114ad565b506000190190565b600082516116148184602087016114fc565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f052985be39cb735a39fd6928cd8acdd9e11f193cf52813d97071b0cceb4919964736f6c63430008130033",
    "sourceMap": "703:6249:119:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2903:213:17;;;;;;;;;;-1:-1:-1;2903:213:17;;;;;:::i;:::-;;:::i;:::-;;;470:14:188;;463:22;445:41;;433:2;418:18;2903:213:17;;;;;;;;1481:31:119;;;;;;;;;;;;;;;4708:129:17;;;;;;;;;;-1:-1:-1;4708:129:17;;;;;:::i;:::-;4782:7;4808:12;;;:6;:12;;;;;:22;;;;4708:129;;;;828:25:188;;;816:2;801:18;4708:129:17;682:177:188;4226:190:119;;;;;;;;;;-1:-1:-1;4226:190:119;;;;;:::i;:::-;;:::i;5133:145:17:-;;;;;;;;;;-1:-1:-1;5133:145:17;;;;;:::i;:::-;;:::i;:::-;;4594:124:119;;;;;;;;;;-1:-1:-1;4594:124:119;;;;;:::i;:::-;;:::i;6242:214:17:-;;;;;;;;;;-1:-1:-1;6242:214:17;;;;;:::i;:::-;;:::i;3317:197:23:-;;;;;;;;;;-1:-1:-1;3317:197:23;;;;;:::i;:::-;;:::i;3226:282:119:-;;;;;;;;;;-1:-1:-1;3226:282:119;;;;;:::i;:::-;;:::i;3763:222:23:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;1559:40:119:-;;;;;;;;;;;;;;;1206;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3262:32:188;;;3244:51;;3232:2;3217:18;1206:40:119;3071:230:188;3203:145:17;;;;;;;;;;-1:-1:-1;3203:145:17;;;;;:::i;:::-;;:::i;2324:49::-;;;;;;;;;;-1:-1:-1;2324:49:17;2369:4;2324:49;;5558:147;;;;;;;;;;-1:-1:-1;5558:147:17;;;;;:::i;:::-;;:::i;1360:42:119:-;;;;;;;;;;;;;;;1288:30;;;;;;;;;;;;;;;2903:213:17;2988:4;-1:-1:-1;;;;;;3011:58:17;;-1:-1:-1;;;3011:58:17;;:98;;-1:-1:-1;;;;;;;;;;1168:51:28;;;3073:36:17;3004:105;2903:213;-1:-1:-1;;2903:213:17:o;4226:190:119:-;4299:13;4331:14;:12;:14::i;:::-;4324:21;;4358:5;4367:1;4358:10;4355:54;;4377:32;;-1:-1:-1;;;4377:32:119;;;;;;;;;;;4355:54;4226:190;;;:::o;5133:145:17:-;4782:7;4808:12;;;:6;:12;;;;;:22;;;2802:16;2813:4;2802:10;:16::i;:::-;5246:25:::1;5257:4;5263:7;5246:10;:25::i;:::-;5133:145:::0;;;:::o;4594:124:119:-;4670:11;4699:12;:10;:12::i;6242:214:17:-;-1:-1:-1;;;;;6337:23:17;;929:10:25;6337:23:17;6329:83;;;;-1:-1:-1;;;6329:83:17;;3942:2:188;6329:83:17;;;3924:21:188;3981:2;3961:18;;;3954:30;4020:34;4000:18;;;3993:62;-1:-1:-1;;;4071:18:188;;;4064:45;4126:19;;6329:83:17;;;;;;;;;6423:26;6435:4;6441:7;6423:11;:26::i;:::-;6242:214;;:::o;3317:197:23:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;3226:282:119:-;3268:19:22;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:22;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:22;1476:19:24;:23;;;3376:66:22;;-1:-1:-1;3425:12:22;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:22;;5184:2:188;3314:201:22;;;5166:21:188;5223:2;5203:18;;;5196:30;5262:34;5242:18;;;5235:62;-1:-1:-1;;;5313:18:188;;;5306:44;5367:19;;3314:201:22;4982:410:188;3314:201:22;3525:12;:16;;-1:-1:-1;;3525:16:22;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:22;;;;;3551:65;3341:22:119::1;:20;:22::i;:::-;3395:37;2369:4:17;3426:5:119::0;3395:10:::1;:37::i;:::-;3468:33;616:25;3493:7;3468:10;:33::i;:::-;3640:14:22::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:22;;;3710:14;;-1:-1:-1;5549:36:188;;3710:14:22;;5537:2:188;5522:18;3710:14:22;;;;;;;3258:483;3226:282:119;;:::o;3763:222:23:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;3006:131::-:0;3084:7;2324:4;-1:-1:-1;;;;;2333:6:23;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:23;;5798:2:188;2308:92:23;;;5780:21:188;5837:2;5817:18;;;5810:30;5876:34;5856:18;;;5849:62;-1:-1:-1;;;5927:18:188;;;5920:54;5991:19;;2308:92:23;5596:420:188;2308:92:23;-1:-1:-1;;;;;;;;;;;;2410:1:23::1;3006:131:::0;:::o;3203:145:17:-;3289:4;3312:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3312:29:17;;;;;;;;;;;;;;;3203:145::o;5558:147::-;4782:7;4808:12;;;:6;:12;;;;;:22;;;2802:16;2813:4;2802:10;:16::i;:::-;5672:26:::1;5684:4;5690:7;5672:11;:26::i;4908:334:119:-:0;4984:49;;-1:-1:-1;;;4984:49:119;;-1:-1:-1;;;;;5015:17:119;3262:32:188;;4984:49:119;;;3244:51:188;-1:-1:-1;;4984:6:119;:30;;;;;;3217:18:188;;4984:49:119;;;;;;;;;;;;;;;;;;-1:-1:-1;4984:49:119;;;;;;;;-1:-1:-1;;4984:49:119;;;;;;;;;;;;:::i;:::-;;;4980:256;;;5087:18;5108:19;:17;:19::i;:::-;5087:40;-1:-1:-1;5200:15:119;1147:4;5150:33;5087:40;5150:20;:33;:::i;:::-;:46;;;;:::i;:::-;5149:66;;;;:::i;:::-;5141:74;;5073:153;5034:192;4908:334;:::o;3642:103:17:-;3708:30;3719:4;929:10:25;3708::17;:30::i;7791:233::-;7874:22;7882:4;7888:7;7874;:22::i;:::-;7869:149;;7912:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7912:29:17;;;;;;;;;:36;;-1:-1:-1;;7912:36:17;7944:4;7912:36;;;7994:12;929:10:25;;850:96;7994:12:17;-1:-1:-1;;;;;7967:40:17;7985:7;-1:-1:-1;;;;;7967:40:17;7979:4;7967:40;;;;;;;;;;7791:233;;:::o;5407:99:119:-;5451:11;5480:14;:12;:14::i;:::-;:19;;;5407:99;-1:-1:-1;5407:99:119:o;8195:234:17:-;8278:22;8286:4;8292:7;8278;:22::i;:::-;8274:149;;;8348:5;8316:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8316:29:17;;;;;;;;;;:37;;-1:-1:-1;;8316:37:17;;;8372:40;929:10:25;;8316:12:17;;8372:40;;8348:5;8372:40;8195:234;;:::o;1563:151:20:-;-1:-1:-1;;;;;;;;;;;1642:65:20;-1:-1:-1;;;;;1642:65:20;;1563:151::o;3708:187:119:-;616:25;2802:16:17;2813:4;2802:10;:16::i;:::-;3824:12:119::1;:10;:12::i;:::-;3821:67;;;3845:43;;-1:-1:-1::0;;;3845:43:119::1;;;;;;;;;;;2938:974:20::0;951:66;3384:59;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;3380:526::-;3560:17;-1:-1:-1;;;;;3531:61:20;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3531:63:20;;;;;;;;-1:-1:-1;;3531:63:20;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;-1:-1:-1;;;3758:56:20;;7128:2:188;3758:56:20;;;7110:21:188;7167:2;7147:18;;;7140:30;7206:34;7186:18;;;7179:62;-1:-1:-1;;;7257:18:188;;;7250:44;7311:19;;3758:56:20;6926:410:188;3527:302:20;-1:-1:-1;;;;;;;;;;;3644:28:20;;3636:82;;;;-1:-1:-1;;;3636:82:20;;7543:2:188;3636:82:20;;;7525:21:188;7582:2;7562:18;;;7555:30;7621:34;7601:18;;;7594:62;-1:-1:-1;;;7672:18:188;;;7665:39;7721:19;;3636:82:20;7341:405:188;3636:82:20;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;2025:65:17:-;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;7953:2:188;5355:69:22;;;7935:21:188;7992:2;7972:18;;;7965:30;8031:34;8011:18;;;8004:62;-1:-1:-1;;;8082:18:188;;;8075:41;8133:19;;5355:69:22;7751:407:188;5355:69:22;2025:65:17:o;5882:432:119:-;5933:21;5969:9;5966:342;;;5997:5;-1:-1:-1;;;;;5997:26:119;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5997:28:119;;;;;;;;-1:-1:-1;;5997:28:119;;;;;;;;;;;;:::i;:::-;;;5993:139;5966:342;5993:139;6093:14;-1:-1:-1;3006:131:23;:::o;5966:342:119:-;6170:5;-1:-1:-1;;;;;6170:19:119;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6170:21:119;;;;;;;;-1:-1:-1;;6170:21:119;;;;;;;;;;;;:::i;4026:501:17:-;4114:22;4122:4;4128:7;4114;:22::i;:::-;4109:412;;4297:39;4328:7;4297:30;:39::i;:::-;4407:49;4446:4;4453:2;4407:30;:49::i;:::-;4204:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4204:274:17;;;;;;;;;;-1:-1:-1;;;4152:358:17;;;;;;;:::i;1805:281:20:-;-1:-1:-1;;;;;1476:19:24;;;1878:106:20;;;;-1:-1:-1;;;1878:106:20;;9838:2:188;1878:106:20;;;9820:21:188;9877:2;9857:18;;;9850:30;9916:34;9896:18;;;9889:62;-1:-1:-1;;;9967:18:188;;;9960:43;10020:19;;1878:106:20;9636:409:188;1878:106:20;-1:-1:-1;;;;;;;;;;;1994:85:20;;-1:-1:-1;;;;;;1994:85:20;-1:-1:-1;;;;;1994:85:20;;;;;;;;;;1805:281::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;:::-;;2478:288;;;:::o;2146:149:27:-;2204:13;2236:52;-1:-1:-1;;;;;2248:22:27;;333:2;1557:437;1632:13;1657:19;1689:10;1693:6;1689:1;:10;:::i;:::-;:14;;1702:1;1689:14;:::i;:::-;1679:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1679:25:27;;1657:47;;-1:-1:-1;;;1714:6:27;1721:1;1714:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1714:15:27;;;;;;;;;-1:-1:-1;;;1739:6:27;1746:1;1739:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1739:15:27;;;;;;;;-1:-1:-1;1769:9:27;1781:10;1785:6;1781:1;:10;:::i;:::-;:14;;1794:1;1781:14;:::i;:::-;1769:26;;1764:128;1801:1;1797;:5;1764:128;;;-1:-1:-1;;;1844:5:27;1852:3;1844:11;1835:21;;;;;;;:::i;:::-;;;;1823:6;1830:1;1823:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1823:33:27;;;;;;;;-1:-1:-1;1880:1:27;1870:11;;;;;1804:3;;;:::i;:::-;;;1764:128;;;-1:-1:-1;1909:10:27;;1901:55;;;;-1:-1:-1;;;1901:55:27;;10655:2:188;1901:55:27;;;10637:21:188;;;10674:18;;;10667:30;10733:34;10713:18;;;10706:62;10785:18;;1901:55:27;10453:356:188;1901:55:27;1980:6;1557:437;-1:-1:-1;;;1557:437:27:o;2192:152:20:-;2258:37;2277:17;2258:18;:37::i;:::-;2310:27;;-1:-1:-1;;;;;2310:27:20;;;;;;;;2192:152;:::o;7088:455::-;7171:12;-1:-1:-1;;;;;1476:19:24;;;7195:88:20;;;;-1:-1:-1;;;7195:88:20;;11016:2:188;7195:88:20;;;10998:21:188;11055:2;11035:18;;;11028:30;11094:34;11074:18;;;11067:62;-1:-1:-1;;;11145:18:188;;;11138:36;11191:19;;7195:88:20;10814:402:188;7195:88:20;7354:12;7368:23;7395:6;-1:-1:-1;;;;;7395:19:20;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;7088:455;-1:-1:-1;;;;;7088:455:20:o;7438:295:24:-;7584:12;7612:7;7608:119;;;-1:-1:-1;7642:10:24;7635:17;;7608:119;7683:33;7691:10;7703:12;7898:17;;:21;7894:379;;8126:10;8120:17;8182:15;8169:10;8165:2;8161:19;8154:44;7894:379;8249:12;8242:20;;-1:-1:-1;;;8242:20:24;;;;;;;;:::i;14:286:188:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:188;;209:43;;199:71;;266:1;263;256:12;497:180;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:188;;497:180;-1:-1:-1;497:180:188:o;864:173::-;932:20;;-1:-1:-1;;;;;981:31:188;;971:42;;961:70;;1027:1;1024;1017:12;1042:186;1101:6;1154:2;1142:9;1133:7;1129:23;1125:32;1122:52;;;1170:1;1167;1160:12;1122:52;1193:29;1212:9;1193:29;:::i;1415:254::-;1483:6;1491;1544:2;1532:9;1523:7;1519:23;1515:32;1512:52;;;1560:1;1557;1550:12;1512:52;1596:9;1583:23;1573:33;;1625:38;1659:2;1648:9;1644:18;1625:38;:::i;:::-;1615:48;;1415:254;;;;;:::o;1674:260::-;1742:6;1750;1803:2;1791:9;1782:7;1778:23;1774:32;1771:52;;;1819:1;1816;1809:12;1771:52;1842:29;1861:9;1842:29;:::i;:::-;1832:39;;1890:38;1924:2;1913:9;1909:18;1890:38;:::i;1939:127::-;2000:10;1995:3;1991:20;1988:1;1981:31;2031:4;2028:1;2021:15;2055:4;2052:1;2045:15;2071:995;2148:6;2156;2209:2;2197:9;2188:7;2184:23;2180:32;2177:52;;;2225:1;2222;2215:12;2177:52;2248:29;2267:9;2248:29;:::i;:::-;2238:39;;2328:2;2317:9;2313:18;2300:32;2351:18;2392:2;2384:6;2381:14;2378:34;;;2408:1;2405;2398:12;2378:34;2446:6;2435:9;2431:22;2421:32;;2491:7;2484:4;2480:2;2476:13;2472:27;2462:55;;2513:1;2510;2503:12;2462:55;2549:2;2536:16;2571:2;2567;2564:10;2561:36;;;2577:18;;:::i;:::-;2652:2;2646:9;2620:2;2706:13;;-1:-1:-1;;2702:22:188;;;2726:2;2698:31;2694:40;2682:53;;;2750:18;;;2770:22;;;2747:46;2744:72;;;2796:18;;:::i;:::-;2836:10;2832:2;2825:22;2871:2;2863:6;2856:18;2911:7;2906:2;2901;2897;2893:11;2889:20;2886:33;2883:53;;;2932:1;2929;2922:12;2883:53;2988:2;2983;2979;2975:11;2970:2;2962:6;2958:15;2945:46;3033:1;3028:2;3023;3015:6;3011:15;3007:24;3000:35;3054:6;3044:16;;;;;;;2071:995;;;;;:::o;4156:408::-;4358:2;4340:21;;;4397:2;4377:18;;;4370:30;4436:34;4431:2;4416:18;;4409:62;-1:-1:-1;;;4502:2:188;4487:18;;4480:42;4554:3;4539:19;;4156:408::o;4569:::-;4771:2;4753:21;;;4810:2;4790:18;;;4783:30;4849:34;4844:2;4829:18;;4822:62;-1:-1:-1;;;4915:2:188;4900:18;;4893:42;4967:3;4952:19;;4569:408::o;6021:184::-;6091:6;6144:2;6132:9;6123:7;6119:23;6115:32;6112:52;;;6160:1;6157;6150:12;6112:52;-1:-1:-1;6183:16:188;;6021:184;-1:-1:-1;6021:184:188:o;6210:127::-;6271:10;6266:3;6262:20;6259:1;6252:31;6302:4;6299:1;6292:15;6326:4;6323:1;6316:15;6342:168;6415:9;;;6446;;6463:15;;;6457:22;;6443:37;6433:71;;6484:18;;:::i;6515:217::-;6555:1;6581;6571:132;;6625:10;6620:3;6616:20;6613:1;6606:31;6660:4;6657:1;6650:15;6688:4;6685:1;6678:15;6571:132;-1:-1:-1;6717:9:188;;6515:217::o;8163:250::-;8248:1;8258:113;8272:6;8269:1;8266:13;8258:113;;;8348:11;;;8342:18;8329:11;;;8322:39;8294:2;8287:10;8258:113;;;-1:-1:-1;;8405:1:188;8387:16;;8380:27;8163:250::o;8418:812::-;-1:-1:-1;;;8824:3:188;8817:38;8799:3;8884:6;8878:13;8900:75;8968:6;8963:2;8958:3;8954:12;8947:4;8939:6;8935:17;8900:75;:::i;:::-;-1:-1:-1;;;9034:2:188;8994:16;;;9026:11;;;9019:40;9084:13;;9106:76;9084:13;9168:2;9160:11;;9153:4;9141:17;;9106:76;:::i;:::-;9202:17;9221:2;9198:26;;8418:812;-1:-1:-1;;;;8418:812:188:o;9235:396::-;9384:2;9373:9;9366:21;9347:4;9416:6;9410:13;9459:6;9454:2;9443:9;9439:18;9432:34;9475:79;9547:6;9542:2;9531:9;9527:18;9522:2;9514:6;9510:15;9475:79;:::i;:::-;9615:2;9594:15;-1:-1:-1;;9590:29:188;9575:45;;;;9622:2;9571:54;;9235:396;-1:-1:-1;;9235:396:188:o;10050:125::-;10115:9;;;10136:10;;;10133:36;;;10149:18;;:::i;10180:127::-;10241:10;10236:3;10232:20;10229:1;10222:31;10272:4;10269:1;10262:15;10296:4;10293:1;10286:15;10312:136;10351:3;10379:5;10369:39;;10388:18;;:::i;:::-;-1:-1:-1;;;10424:18:188;;10312:136::o;11221:287::-;11350:3;11388:6;11382:13;11404:66;11463:6;11458:3;11451:4;11443:6;11439:17;11404:66;:::i;:::-;11486:16;;;;;11221:287;-1:-1:-1;;11221:287:188:o",
    "linkReferences": {},
    "immutableReferences": {
      "30327": [
        {
          "start": 1254,
          "length": 32
        },
        {
          "start": 1318,
          "length": 32
        },
        {
          "start": 1781,
          "length": 32
        },
        {
          "start": 1845,
          "length": 32
        },
        {
          "start": 1965,
          "length": 32
        }
      ],
      "50960": [
        {
          "start": 709,
          "length": 32
        },
        {
          "start": 2273,
          "length": 32
        }
      ],
      "50964": [
        {
          "start": 922,
          "length": 32
        },
        {
          "start": 3353,
          "length": 32
        },
        {
          "start": 3485,
          "length": 32
        }
      ],
      "50967": [
        {
          "start": 870,
          "length": 32
        },
        {
          "start": 2230,
          "length": 32
        }
      ],
      "50970": [
        {
          "start": 309,
          "length": 32
        },
        {
          "start": 3315,
          "length": 32
        }
      ],
      "50973": [
        {
          "start": 657,
          "length": 32
        },
        {
          "start": 2393,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getStatus(address)": "30ccebb5",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,address)": "485cc955",
    "isV1Vault()": "063ab2ca",
    "oracle()": "7dc0d1d0",
    "proxiableUUID()": "52d1902d",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "spot(address)": "2cbf04c1",
    "supportsInterface(bytes4)": "01ffc9a7",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "vault()": "fbfa77cf",
    "vaultTokenAddress()": "df72f017",
    "vaultTokenScale()": "5551e090"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IYearnLensOracle\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"contract IYVault\",\"name\":\"yearnVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"YearnOracle__authorizeUpgrade_validStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"YearnOracle__isV1Vault_invalidYearnVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"YearnOracle__spot_invalidValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isV1Vault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IYearnLensOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"spot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IYVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultTokenScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"details\":\"Reverts if `yearnVault_` is not a valid yearn vault or invalid decimals\",\"params\":{\"oracle_\":\"Yearn underlying asset oracle address\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getStatus(address)\":{\"details\":\"The status is valid if the price is validated\",\"params\":{\"\":\"/*token*/ Token address, ignored for this oracle\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address)\":{\"params\":{\"admin\":\"The address of the admin\",\"manager\":\"The address of the manager who can authorize upgrades\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"spot(address)\":{\"params\":{\"\":\"/*token*/ Token address\"},\"returns\":{\"price\":\"Asset price [WAD]\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"YearnOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStatus(address)\":{\"notice\":\"Returns the status of the oracle\"},\"initialize(address,address)\":{\"notice\":\"Initialize method called by the proxy contract\"},\"isV1Vault()\":{\"notice\":\"Yearn vault type, true for v1 Vaults, false for v2 or v3\"},\"oracle()\":{\"notice\":\"Underlying asset oracle address\"},\"spot(address)\":{\"notice\":\"Returns the latest price for the Yearn Vault [WAD]\"},\"vault()\":{\"notice\":\"Yearn vault address\"},\"vaultTokenAddress()\":{\"notice\":\"Vault token address\"},\"vaultTokenScale()\":{\"notice\":\"Vault token scale factor\"}},\"notice\":\"Oracle for yearn vaults\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/oracle/YearnOracle.sol\":\"YearnOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-proxy/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":prb-proxy/=lib/prb-proxy/src/\",\":prb-test/=lib/prb-proxy/lib/prb-test/src/\",\":solmate/=lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626\",\"dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0\",\"dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"src/interfaces/IOracle.sol\":{\"keccak256\":\"0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da\",\"dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF\"]},\"src/oracle/YearnOracle.sol\":{\"keccak256\":\"0x708499ccb7d25121f9d333faeccae4735b0efe2f229568acf16e57d98457b5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cd46a699b64fb114a30ed28b1f87b280cc7165a41564d63464e7d38ac79d282\",\"dweb:/ipfs/QmTLekxcMTZmz8T1xsgk8mMRGfcRDYMjK6r2NZGPpoXjQG\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8\",\"dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU\"]},\"src/vendor/IYVault.sol\":{\"keccak256\":\"0x79d3af9b4ec00cea17019c8a9016056c19149a9e6c7d5bfa79d96599a09936f1\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9e08e1a00c492b8b2fcbe42e4f600aab98c7c168b4bc98c1b0d6274e6f12abf9\",\"dweb:/ipfs/QmSny9sHWQ3CjbznC1g5KtRKAbZw3f9iwijnaeoogPD63p\"]},\"src/vendor/IYearnLensOracle.sol\":{\"keccak256\":\"0xa9e7c589d50e957fe936514714e1afeffcb7f46edbdcd6938f5d92189ab8903e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b26888f2a626100133089820370a3f3a5a41e07089c0e6e383d56ec4a5d09d3\",\"dweb:/ipfs/QmbLzDktLciBMsLrpKdBRQgq9K7XU28KGoogqFJYGWrehG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IYearnLensOracle",
              "name": "oracle_",
              "type": "address"
            },
            {
              "internalType": "contract IYVault",
              "name": "yearnVault_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "YearnOracle__authorizeUpgrade_validStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "YearnOracle__isV1Vault_invalidYearnVault"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "YearnOracle__spot_invalidValue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStatus",
          "outputs": [
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isV1Vault",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "contract IYearnLensOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "spot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vault",
          "outputs": [
            {
              "internalType": "contract IYVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultTokenAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultTokenScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor",
            "details": "Reverts if `yearnVault_` is not a valid yearn vault or invalid decimals",
            "params": {
              "oracle_": "Yearn underlying asset oracle address"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getStatus(address)": {
            "details": "The status is valid if the price is validated",
            "params": {
              "": "/*token*/ Token address, ignored for this oracle"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "initialize(address,address)": {
            "params": {
              "admin": "The address of the admin",
              "manager": "The address of the manager who can authorize upgrades"
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "spot(address)": {
            "params": {
              "": "/*token*/ Token address"
            },
            "returns": {
              "price": "Asset price [WAD]"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getStatus(address)": {
            "notice": "Returns the status of the oracle"
          },
          "initialize(address,address)": {
            "notice": "Initialize method called by the proxy contract"
          },
          "isV1Vault()": {
            "notice": "Yearn vault type, true for v1 Vaults, false for v2 or v3"
          },
          "oracle()": {
            "notice": "Underlying asset oracle address"
          },
          "spot(address)": {
            "notice": "Returns the latest price for the Yearn Vault [WAD]"
          },
          "vault()": {
            "notice": "Yearn vault address"
          },
          "vaultTokenAddress()": {
            "notice": "Vault token address"
          },
          "vaultTokenScale()": {
            "notice": "Vault token scale factor"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/prb-proxy/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/src/",
        "prb-proxy/=lib/prb-proxy/src/",
        "prb-test/=lib/prb-proxy/lib/prb-test/src/",
        "solmate/=lib/permit2/lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/oracle/YearnOracle.sol": "YearnOracle"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a",
        "urls": [
          "bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626",
          "dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823",
        "urls": [
          "bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2",
          "dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778",
        "urls": [
          "bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1",
          "dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
        "urls": [
          "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
          "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da",
        "urls": [
          "bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8",
          "dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a",
        "urls": [
          "bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4",
          "dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516",
        "urls": [
          "bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0",
          "dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "src/interfaces/IOracle.sol": {
        "keccak256": "0x9269d961b833e8efa72ba58b324fcae69d7d6200034aab32f16c8a6ea45fd417",
        "urls": [
          "bzz-raw://fa1ab8fd4ba70144d9bc48e61cdb5f85cc250760a3c4850369b328c98a6d73da",
          "dweb:/ipfs/QmQqBe67B94u3vwLZBM4DBYgK5piBKXaYEaiAkRM81wGFF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/oracle/YearnOracle.sol": {
        "keccak256": "0x708499ccb7d25121f9d333faeccae4735b0efe2f229568acf16e57d98457b5e9",
        "urls": [
          "bzz-raw://7cd46a699b64fb114a30ed28b1f87b280cc7165a41564d63464e7d38ac79d282",
          "dweb:/ipfs/QmTLekxcMTZmz8T1xsgk8mMRGfcRDYMjK6r2NZGPpoXjQG"
        ],
        "license": "MIT"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xe05013f20310c9cefa762bcbb06e8850abb43aaa54dce955e90c20943b70dd3a",
        "urls": [
          "bzz-raw://bb9355c6aa4b5fa1f26b381e49c3cc61e12e7c3e3b3476485a32e06cede4bcf8",
          "dweb:/ipfs/QmQPEfrYSub7Y4U1XHXi5YPq2zuCZjWcRX1AeG7dCHGsfU"
        ],
        "license": "MIT"
      },
      "src/vendor/IYVault.sol": {
        "keccak256": "0x79d3af9b4ec00cea17019c8a9016056c19149a9e6c7d5bfa79d96599a09936f1",
        "urls": [
          "bzz-raw://9e08e1a00c492b8b2fcbe42e4f600aab98c7c168b4bc98c1b0d6274e6f12abf9",
          "dweb:/ipfs/QmSny9sHWQ3CjbznC1g5KtRKAbZw3f9iwijnaeoogPD63p"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/vendor/IYearnLensOracle.sol": {
        "keccak256": "0xa9e7c589d50e957fe936514714e1afeffcb7f46edbdcd6938f5d92189ab8903e",
        "urls": [
          "bzz-raw://8b26888f2a626100133089820370a3f3a5a41e07089c0e6e383d56ec4a5d09d3",
          "dweb:/ipfs/QmbLzDktLciBMsLrpKdBRQgq9K7XU28KGoogqFJYGWrehG"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/oracle/YearnOracle.sol",
    "id": 51232,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        29665
      ],
      "IERC20Metadata": [
        35369
      ],
      "IOracle": [
        50237
      ],
      "IYVault": [
        129866
      ],
      "IYearnLensOracle": [
        129877
      ],
      "MANAGER_ROLE": [
        50941
      ],
      "UUPSUpgradeable": [
        30432
      ],
      "WAD": [
        129076
      ],
      "YearnOracle": [
        51231
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6921:119",
    "nodes": [
      {
        "id": 50922,
        "nodeType": "PragmaDirective",
        "src": "32:24:119",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 50924,
        "nodeType": "ImportDirective",
        "src": "58:84:119",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol",
        "file": "openzeppelin/contracts/interfaces/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51232,
        "sourceUnit": 32573,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50923,
              "name": "IERC20Metadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35369,
              "src": "66:14:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50926,
        "nodeType": "ImportDirective",
        "src": "143:99:119",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51232,
        "sourceUnit": 30433,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50925,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30432,
              "src": "151:15:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50928,
        "nodeType": "ImportDirective",
        "src": "243:112:119",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "file": "openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51232,
        "sourceUnit": 29666,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50927,
              "name": "AccessControlUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29665,
              "src": "251:24:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50930,
        "nodeType": "ImportDirective",
        "src": "357:50:119",
        "nodes": [],
        "absolutePath": "src/interfaces/IOracle.sol",
        "file": "../interfaces/IOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51232,
        "sourceUnit": 50238,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50929,
              "name": "IOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50237,
              "src": "365:7:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50932,
        "nodeType": "ImportDirective",
        "src": "409:46:119",
        "nodes": [],
        "absolutePath": "src/vendor/IYVault.sol",
        "file": "../vendor/IYVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51232,
        "sourceUnit": 129867,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50931,
              "name": "IYVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 129866,
              "src": "417:7:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50934,
        "nodeType": "ImportDirective",
        "src": "456:64:119",
        "nodes": [],
        "absolutePath": "src/vendor/IYearnLensOracle.sol",
        "file": "../vendor/IYearnLensOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51232,
        "sourceUnit": 129878,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50933,
              "name": "IYearnLensOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 129877,
              "src": "464:16:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50936,
        "nodeType": "ImportDirective",
        "src": "521:38:119",
        "nodes": [],
        "absolutePath": "src/utils/Math.sol",
        "file": "../utils/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51232,
        "sourceUnit": 129366,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50935,
              "name": "WAD",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 129076,
              "src": "529:3:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50941,
        "nodeType": "VariableDeclaration",
        "src": "584:57:119",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "MANAGER_ROLE",
        "nameLocation": "601:12:119",
        "scope": 51232,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 50937,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "584:7:119",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "4d414e414745525f524f4c45",
              "id": 50939,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "626:14:119",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08",
                "typeString": "literal_string \"MANAGER_ROLE\""
              },
              "value": "MANAGER_ROLE"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08",
                "typeString": "literal_string \"MANAGER_ROLE\""
              }
            ],
            "id": 50938,
            "name": "keccak256",
            "nodeType": "Identifier",
            "overloadedDeclarations": [],
            "referencedDeclaration": -8,
            "src": "616:9:119",
            "typeDescriptions": {
              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
              "typeString": "function (bytes memory) pure returns (bytes32)"
            }
          },
          "id": 50940,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "functionCall",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "616:25:119",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 51231,
        "nodeType": "ContractDefinition",
        "src": "703:6249:119",
        "nodes": [
          {
            "id": 50952,
            "nodeType": "VariableDeclaration",
            "src": "1009:45:119",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 50949,
              "nodeType": "StructuredDocumentation",
              "src": "965:39:119",
              "text": "@notice Yearn vault v1 scale factor"
            },
            "mutability": "constant",
            "name": "yearnV1Scale",
            "nameLocation": "1035:12:119",
            "scope": 51231,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50950,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1009:7:119",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 50951,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1050:4:119",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "internal"
          },
          {
            "id": 50956,
            "nodeType": "VariableDeclaration",
            "src": "1108:43:119",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 50953,
              "nodeType": "StructuredDocumentation",
              "src": "1060:43:119",
              "text": "@notice Scale factor for WAD conversion"
            },
            "mutability": "constant",
            "name": "toWADScale",
            "nameLocation": "1134:10:119",
            "scope": 51231,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50954,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1108:7:119",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653132",
              "id": 50955,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1147:4:119",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "value": "1e12"
            },
            "visibility": "internal"
          },
          {
            "id": 50960,
            "nodeType": "VariableDeclaration",
            "src": "1206:40:119",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50957,
              "nodeType": "StructuredDocumentation",
              "src": "1158:43:119",
              "text": "@notice Underlying asset oracle address"
            },
            "functionSelector": "7dc0d1d0",
            "mutability": "immutable",
            "name": "oracle",
            "nameLocation": "1240:6:119",
            "scope": 51231,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IYearnLensOracle_$129877",
              "typeString": "contract IYearnLensOracle"
            },
            "typeName": {
              "id": 50959,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50958,
                "name": "IYearnLensOracle",
                "nameLocations": [
                  "1206:16:119"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 129877,
                "src": "1206:16:119"
              },
              "referencedDeclaration": 129877,
              "src": "1206:16:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IYearnLensOracle_$129877",
                "typeString": "contract IYearnLensOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50964,
            "nodeType": "VariableDeclaration",
            "src": "1288:30:119",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50961,
              "nodeType": "StructuredDocumentation",
              "src": "1252:31:119",
              "text": "@notice Yearn vault address"
            },
            "functionSelector": "fbfa77cf",
            "mutability": "immutable",
            "name": "vault",
            "nameLocation": "1313:5:119",
            "scope": 51231,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IYVault_$129866",
              "typeString": "contract IYVault"
            },
            "typeName": {
              "id": 50963,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50962,
                "name": "IYVault",
                "nameLocations": [
                  "1288:7:119"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 129866,
                "src": "1288:7:119"
              },
              "referencedDeclaration": 129866,
              "src": "1288:7:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IYVault_$129866",
                "typeString": "contract IYVault"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50967,
            "nodeType": "VariableDeclaration",
            "src": "1360:42:119",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50965,
              "nodeType": "StructuredDocumentation",
              "src": "1324:31:119",
              "text": "@notice Vault token address"
            },
            "functionSelector": "df72f017",
            "mutability": "immutable",
            "name": "vaultTokenAddress",
            "nameLocation": "1385:17:119",
            "scope": 51231,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50966,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1360:7:119",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50970,
            "nodeType": "VariableDeclaration",
            "src": "1481:31:119",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50968,
              "nodeType": "StructuredDocumentation",
              "src": "1408:68:119",
              "text": "@notice Yearn vault type, true for v1 Vaults, false for v2 or v3"
            },
            "functionSelector": "063ab2ca",
            "mutability": "immutable",
            "name": "isV1Vault",
            "nameLocation": "1503:9:119",
            "scope": 51231,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 50969,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1481:4:119",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50973,
            "nodeType": "VariableDeclaration",
            "src": "1559:40:119",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50971,
              "nodeType": "StructuredDocumentation",
              "src": "1518:36:119",
              "text": "@notice Vault token scale factor"
            },
            "functionSelector": "5551e090",
            "mutability": "immutable",
            "name": "vaultTokenScale",
            "nameLocation": "1584:15:119",
            "scope": 51231,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50972,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1559:7:119",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50977,
            "nodeType": "VariableDeclaration",
            "src": "1787:25:119",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1807:5:119",
            "scope": 51231,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 50974,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1787:7:119",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 50976,
              "length": {
                "hexValue": "3530",
                "id": 50975,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1795:2:119",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1787:11:119",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 50979,
            "nodeType": "ErrorDefinition",
            "src": "1998:50:119",
            "nodes": [],
            "errorSelector": "7c0fefb3",
            "name": "YearnOracle__authorizeUpgrade_validStatus",
            "nameLocation": "2004:41:119",
            "parameters": {
              "id": 50978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2045:2:119"
            }
          },
          {
            "id": 50981,
            "nodeType": "ErrorDefinition",
            "src": "2053:39:119",
            "nodes": [],
            "errorSelector": "e44fbd9a",
            "name": "YearnOracle__spot_invalidValue",
            "nameLocation": "2059:30:119",
            "parameters": {
              "id": 50980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:2:119"
            }
          },
          {
            "id": 50983,
            "nodeType": "ErrorDefinition",
            "src": "2097:49:119",
            "nodes": [],
            "errorSelector": "5b791d4a",
            "name": "YearnOracle__isV1Vault_invalidYearnVault",
            "nameLocation": "2103:40:119",
            "parameters": {
              "id": 50982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2143:2:119"
            }
          },
          {
            "id": 51030,
            "nodeType": "FunctionDefinition",
            "src": "2534:317:119",
            "nodes": [],
            "body": {
              "id": 51029,
              "nodeType": "Block",
              "src": "2605:246:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50995,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50960,
                      "src": "2615:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IYearnLensOracle_$129877",
                        "typeString": "contract IYearnLensOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50996,
                      "name": "oracle_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50987,
                      "src": "2624:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IYearnLensOracle_$129877",
                        "typeString": "contract IYearnLensOracle"
                      }
                    },
                    "src": "2615:16:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IYearnLensOracle_$129877",
                      "typeString": "contract IYearnLensOracle"
                    }
                  },
                  "id": 50998,
                  "nodeType": "ExpressionStatement",
                  "src": "2615:16:119"
                },
                {
                  "expression": {
                    "id": 51001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50999,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50964,
                      "src": "2641:5:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IYVault_$129866",
                        "typeString": "contract IYVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51000,
                      "name": "yearnVault_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50990,
                      "src": "2649:11:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IYVault_$129866",
                        "typeString": "contract IYVault"
                      }
                    },
                    "src": "2641:19:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IYVault_$129866",
                      "typeString": "contract IYVault"
                    }
                  },
                  "id": 51002,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:19:119"
                },
                {
                  "expression": {
                    "id": 51007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51003,
                      "name": "vaultTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50967,
                      "src": "2670:17:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 51004,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50964,
                          "src": "2690:5:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IYVault_$129866",
                            "typeString": "contract IYVault"
                          }
                        },
                        "id": 51005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2696:5:119",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 129825,
                        "src": "2690:11:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 51006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2690:13:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2670:33:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51008,
                  "nodeType": "ExpressionStatement",
                  "src": "2670:33:119"
                },
                {
                  "expression": {
                    "id": 51012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51009,
                      "name": "isV1Vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50970,
                      "src": "2713:9:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 51010,
                        "name": "_isV1Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51230,
                        "src": "2725:10:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 51011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2725:12:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2713:24:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51013,
                  "nodeType": "ExpressionStatement",
                  "src": "2713:24:119"
                },
                {
                  "expression": {
                    "id": 51027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51014,
                      "name": "vaultTokenScale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50973,
                      "src": "2747:15:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "id": 51015,
                            "name": "isV1Vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50970,
                            "src": "2766:9:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 51016,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2765:11:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 51018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2794:2:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "components": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 51020,
                                      "name": "vaultTokenAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50967,
                                      "src": "2814:17:119",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 51019,
                                    "name": "IERC20Metadata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35369,
                                    "src": "2799:14:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$35369_$",
                                      "typeString": "type(contract IERC20Metadata)"
                                    }
                                  },
                                  "id": 51021,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2799:33:119",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Metadata_$35369",
                                    "typeString": "contract IERC20Metadata"
                                  }
                                },
                                "id": 51022,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2833:8:119",
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35368,
                                "src": "2799:42:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 51023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2799:44:119",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "id": 51024,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2798:46:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2794:50:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 51026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2765:79:119",
                      "trueExpression": {
                        "id": 51017,
                        "name": "yearnV1Scale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50952,
                        "src": "2779:12:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2747:97:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51028,
                  "nodeType": "ExpressionStatement",
                  "src": "2747:97:119"
                }
              ]
            },
            "documentation": {
              "id": 50984,
              "nodeType": "StructuredDocumentation",
              "src": "2335:194:119",
              "text": "@custom:oz-upgrades-unsafe-allow constructor\n @param oracle_ Yearn underlying asset oracle address\n @dev Reverts if `yearnVault_` is not a valid yearn vault or invalid decimals"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 50993,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50992,
                  "name": "initializer",
                  "nameLocations": [
                    "2593:11:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30198,
                  "src": "2593:11:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "2593:11:119"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50987,
                  "mutability": "mutable",
                  "name": "oracle_",
                  "nameLocation": "2563:7:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 51030,
                  "src": "2546:24:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IYearnLensOracle_$129877",
                    "typeString": "contract IYearnLensOracle"
                  },
                  "typeName": {
                    "id": 50986,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50985,
                      "name": "IYearnLensOracle",
                      "nameLocations": [
                        "2546:16:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 129877,
                      "src": "2546:16:119"
                    },
                    "referencedDeclaration": 129877,
                    "src": "2546:16:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IYearnLensOracle_$129877",
                      "typeString": "contract IYearnLensOracle"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50990,
                  "mutability": "mutable",
                  "name": "yearnVault_",
                  "nameLocation": "2580:11:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 51030,
                  "src": "2572:19:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IYVault_$129866",
                    "typeString": "contract IYVault"
                  },
                  "typeName": {
                    "id": 50989,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50988,
                      "name": "IYVault",
                      "nameLocations": [
                        "2572:7:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 129866,
                      "src": "2572:7:119"
                    },
                    "referencedDeclaration": 129866,
                    "src": "2572:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IYVault_$129866",
                      "typeString": "contract IYVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2545:47:119"
            },
            "returnParameters": {
              "id": 50994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2605:0:119"
            },
            "scope": 51231,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51054,
            "nodeType": "FunctionDefinition",
            "src": "3226:282:119",
            "nodes": [],
            "body": {
              "id": 51053,
              "nodeType": "Block",
              "src": "3299:209:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 51040,
                      "name": "__AccessControl_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29351,
                      "src": "3341:20:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 51041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3341:22:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51042,
                  "nodeType": "ExpressionStatement",
                  "src": "3341:22:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51044,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29372,
                        "src": "3406:18:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 51045,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51033,
                        "src": "3426:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51043,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29628,
                      "src": "3395:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 51046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:37:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51047,
                  "nodeType": "ExpressionStatement",
                  "src": "3395:37:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51049,
                        "name": "MANAGER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50941,
                        "src": "3479:12:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 51050,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51035,
                        "src": "3493:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51048,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29628,
                      "src": "3468:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 51051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3468:33:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51052,
                  "nodeType": "ExpressionStatement",
                  "src": "3468:33:119"
                }
              ]
            },
            "documentation": {
              "id": 51031,
              "nodeType": "StructuredDocumentation",
              "src": "3040:181:119",
              "text": "@notice Initialize method called by the proxy contract\n @param admin The address of the admin\n @param manager The address of the manager who can authorize upgrades"
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 51038,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51037,
                  "name": "initializer",
                  "nameLocations": [
                    "3287:11:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30198,
                  "src": "3287:11:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "3287:11:119"
              }
            ],
            "name": "initialize",
            "nameLocation": "3235:10:119",
            "parameters": {
              "id": 51036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51033,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "3254:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 51054,
                  "src": "3246:13:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3246:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51035,
                  "mutability": "mutable",
                  "name": "manager",
                  "nameLocation": "3269:7:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 51054,
                  "src": "3261:15:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3261:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3245:32:119"
            },
            "returnParameters": {
              "id": 51039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3299:0:119"
            },
            "scope": 51231,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51071,
            "nodeType": "FunctionDefinition",
            "src": "3708:187:119",
            "nodes": [],
            "body": {
              "id": 51070,
              "nodeType": "Block",
              "src": "3811:84:119",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 51064,
                      "name": "_getStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51153,
                      "src": "3824:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 51065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3824:12:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51069,
                  "nodeType": "IfStatement",
                  "src": "3821:67:119",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 51066,
                        "name": "YearnOracle__authorizeUpgrade_validStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50979,
                        "src": "3845:41:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 51067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3845:43:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 51068,
                    "nodeType": "RevertStatement",
                    "src": "3838:50:119"
                  }
                }
              ]
            },
            "baseFunctions": [
              30426
            ],
            "documentation": {
              "id": 51055,
              "nodeType": "StructuredDocumentation",
              "src": "3514:189:119",
              "text": "@notice Authorizes an upgrade\n @param /*implementation*/ The address of the new implementation\n @dev reverts if the caller is not a manager or if the status check succeeds"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 51061,
                    "name": "MANAGER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50941,
                    "src": "3798:12:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 51062,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51060,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3789:8:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29383,
                  "src": "3789:8:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "3789:22:119"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "3717:17:119",
            "overrides": {
              "id": 51059,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3772:8:119"
            },
            "parameters": {
              "id": 51058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51057,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51071,
                  "src": "3735:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3735:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3734:28:119"
            },
            "returnParameters": {
              "id": 51063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3811:0:119"
            },
            "scope": 51231,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 51093,
            "nodeType": "FunctionDefinition",
            "src": "4226:190:119",
            "nodes": [],
            "body": {
              "id": 51092,
              "nodeType": "Block",
              "src": "4314:102:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 51083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51080,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51078,
                      "src": "4324:5:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 51081,
                        "name": "_computeSpot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51141,
                        "src": "4331:12:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 51082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4331:14:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4324:21:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51084,
                  "nodeType": "ExpressionStatement",
                  "src": "4324:21:119"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51085,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51078,
                      "src": "4358:5:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4367:1:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4358:10:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51091,
                  "nodeType": "IfStatement",
                  "src": "4355:54:119",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 51088,
                        "name": "YearnOracle__spot_invalidValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50981,
                        "src": "4377:30:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 51089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4377:32:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 51090,
                    "nodeType": "RevertStatement",
                    "src": "4370:39:119"
                  }
                }
              ]
            },
            "baseFunctions": [
              50229
            ],
            "documentation": {
              "id": 51072,
              "nodeType": "StructuredDocumentation",
              "src": "4080:141:119",
              "text": "@notice Returns the latest price for the Yearn Vault [WAD]\n @param /*token*/ Token address\n @return price Asset price [WAD]"
            },
            "functionSelector": "2cbf04c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "spot",
            "nameLocation": "4235:4:119",
            "overrides": {
              "id": 51076,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4281:8:119"
            },
            "parameters": {
              "id": 51075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51074,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51093,
                  "src": "4240:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4240:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4239:19:119"
            },
            "returnParameters": {
              "id": 51079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51078,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "4307:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 51093,
                  "src": "4299:13:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4299:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4298:15:119"
            },
            "scope": 51231,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 51106,
            "nodeType": "FunctionDefinition",
            "src": "4594:124:119",
            "nodes": [],
            "body": {
              "id": 51105,
              "nodeType": "Block",
              "src": "4682:36:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 51102,
                      "name": "_getStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51153,
                      "src": "4699:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 51103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4699:12:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 51101,
                  "id": 51104,
                  "nodeType": "Return",
                  "src": "4692:19:119"
                }
              ]
            },
            "baseFunctions": [
              50236
            ],
            "documentation": {
              "id": 51094,
              "nodeType": "StructuredDocumentation",
              "src": "4422:167:119",
              "text": "@notice Returns the status of the oracle\n @param /*token*/ Token address, ignored for this oracle\n @dev The status is valid if the price is validated"
            },
            "functionSelector": "30ccebb5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatus",
            "nameLocation": "4603:9:119",
            "overrides": {
              "id": 51098,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4639:8:119"
            },
            "parameters": {
              "id": 51097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51096,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "4613:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4613:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4612:19:119"
            },
            "returnParameters": {
              "id": 51101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51100,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "4675:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "4670:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4670:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4669:13:119"
            },
            "scope": 51231,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 51141,
            "nodeType": "FunctionDefinition",
            "src": "4908:334:119",
            "nodes": [],
            "body": {
              "id": 51140,
              "nodeType": "Block",
              "src": "4970:272:119",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 51135,
                        "nodeType": "Block",
                        "src": "5073:153:119",
                        "statements": [
                          {
                            "assignments": [
                              51120
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 51120,
                                "mutability": "mutable",
                                "name": "sharePrice",
                                "nameLocation": "5095:10:119",
                                "nodeType": "VariableDeclaration",
                                "scope": 51135,
                                "src": "5087:18:119",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 51119,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5087:7:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 51123,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 51121,
                                "name": "_getPricePerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51194,
                                "src": "5108:17:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 51122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5108:19:119",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "5087:40:119"
                          },
                          {
                            "expression": {
                              "id": 51133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 51124,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51110,
                                "src": "5141:5:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 51132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 51129,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 51127,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 51125,
                                          "name": "underlyingTokenPrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 51117,
                                          "src": "5150:20:119",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 51126,
                                          "name": "sharePrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 51120,
                                          "src": "5173:10:119",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5150:33:119",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 51128,
                                        "name": "toWADScale",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50956,
                                        "src": "5186:10:119",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5150:46:119",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 51130,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5149:48:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 51131,
                                  "name": "vaultTokenScale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50973,
                                  "src": "5200:15:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5149:66:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5141:74:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 51134,
                            "nodeType": "ExpressionStatement",
                            "src": "5141:74:119"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 51136,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 51118,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 51117,
                            "mutability": "mutable",
                            "name": "underlyingTokenPrice",
                            "nameLocation": "5051:20:119",
                            "nodeType": "VariableDeclaration",
                            "scope": 51136,
                            "src": "5043:28:119",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 51116,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5043:7:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5042:30:119"
                      },
                      "src": "5034:192:119"
                    },
                    {
                      "block": {
                        "id": 51137,
                        "nodeType": "Block",
                        "src": "5233:3:119",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 51138,
                      "nodeType": "TryCatchClause",
                      "src": "5227:9:119"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 51114,
                        "name": "vaultTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50967,
                        "src": "5015:17:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 51112,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50960,
                        "src": "4984:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IYearnLensOracle_$129877",
                          "typeString": "contract IYearnLensOracle"
                        }
                      },
                      "id": 51113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4991:23:119",
                      "memberName": "getPriceUsdcRecommended",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 129876,
                      "src": "4984:30:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 51115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4984:49:119",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51139,
                  "nodeType": "TryStatement",
                  "src": "4980:256:119"
                }
              ]
            },
            "documentation": {
              "id": 51107,
              "nodeType": "StructuredDocumentation",
              "src": "4724:179:119",
              "text": "@notice Computes the latest spot price for the Yearn Vault [WAD]\n @return price Asset price [WAD]\n @dev returns 0 if the price is not valid or cannot be computed"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_computeSpot",
            "nameLocation": "4917:12:119",
            "parameters": {
              "id": 51108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4929:2:119"
            },
            "returnParameters": {
              "id": 51111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51110,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "4963:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 51141,
                  "src": "4955:13:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4955:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4954:15:119"
            },
            "scope": 51231,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51153,
            "nodeType": "FunctionDefinition",
            "src": "5407:99:119",
            "nodes": [],
            "body": {
              "id": 51152,
              "nodeType": "Block",
              "src": "5463:43:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 51147,
                        "name": "_computeSpot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51141,
                        "src": "5480:12:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 51148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5480:14:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5498:1:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5480:19:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 51146,
                  "id": 51151,
                  "nodeType": "Return",
                  "src": "5473:26:119"
                }
              ]
            },
            "documentation": {
              "id": 51142,
              "nodeType": "StructuredDocumentation",
              "src": "5248:154:119",
              "text": "@notice Returns the status of the oracle\n @return status Whether the oracle is valid\n @dev The status is valid if the price is validated"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getStatus",
            "nameLocation": "5416:10:119",
            "parameters": {
              "id": 51143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5426:2:119"
            },
            "returnParameters": {
              "id": 51146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51145,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "5456:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 51153,
                  "src": "5451:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51144,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5451:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5450:13:119"
            },
            "scope": 51231,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 51194,
            "nodeType": "FunctionDefinition",
            "src": "5882:432:119",
            "nodes": [],
            "body": {
              "id": 51193,
              "nodeType": "Block",
              "src": "5956:358:119",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 51159,
                    "name": "isV1Vault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50970,
                    "src": "5969:9:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 51191,
                    "nodeType": "Block",
                    "src": "6152:156:119",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 51186,
                              "nodeType": "Block",
                              "src": "6225:63:119",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 51184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 51182,
                                      "name": "pricePerShare",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51157,
                                      "src": "6243:13:119",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 51183,
                                      "name": "pricePerShare_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51180,
                                      "src": "6259:14:119",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6243:30:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 51185,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6243:30:119"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 51187,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 51181,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 51180,
                                  "mutability": "mutable",
                                  "name": "pricePerShare_",
                                  "nameLocation": "6209:14:119",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 51187,
                                  "src": "6201:22:119",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 51179,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6201:7:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "6200:24:119"
                            },
                            "src": "6192:96:119"
                          },
                          {
                            "block": {
                              "id": 51188,
                              "nodeType": "Block",
                              "src": "6295:3:119",
                              "statements": []
                            },
                            "errorName": "",
                            "id": 51189,
                            "nodeType": "TryCatchClause",
                            "src": "6289:9:119"
                          }
                        ],
                        "externalCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 51176,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50964,
                              "src": "6170:5:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IYVault_$129866",
                                "typeString": "contract IYVault"
                              }
                            },
                            "id": 51177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6176:13:119",
                            "memberName": "pricePerShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 129835,
                            "src": "6170:19:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 51178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6170:21:119",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51190,
                        "nodeType": "TryStatement",
                        "src": "6166:132:119"
                      }
                    ]
                  },
                  "id": 51192,
                  "nodeType": "IfStatement",
                  "src": "5966:342:119",
                  "trueBody": {
                    "id": 51175,
                    "nodeType": "Block",
                    "src": "5979:167:119",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 51170,
                              "nodeType": "Block",
                              "src": "6059:63:119",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 51168,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 51166,
                                      "name": "pricePerShare",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51157,
                                      "src": "6077:13:119",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 51167,
                                      "name": "pricePerShare_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51164,
                                      "src": "6093:14:119",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6077:30:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 51169,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6077:30:119"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 51171,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 51165,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 51164,
                                  "mutability": "mutable",
                                  "name": "pricePerShare_",
                                  "nameLocation": "6043:14:119",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 51171,
                                  "src": "6035:22:119",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 51163,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6035:7:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "6034:24:119"
                            },
                            "src": "6026:96:119"
                          },
                          {
                            "block": {
                              "id": 51172,
                              "nodeType": "Block",
                              "src": "6129:3:119",
                              "statements": []
                            },
                            "errorName": "",
                            "id": 51173,
                            "nodeType": "TryCatchClause",
                            "src": "6123:9:119"
                          }
                        ],
                        "externalCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 51160,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50964,
                              "src": "5997:5:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IYVault_$129866",
                                "typeString": "contract IYVault"
                              }
                            },
                            "id": 51161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6003:20:119",
                            "memberName": "getPricePerFullShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 129830,
                            "src": "5997:26:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 51162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5997:28:119",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51174,
                        "nodeType": "TryStatement",
                        "src": "5993:139:119"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 51154,
              "nodeType": "StructuredDocumentation",
              "src": "5691:186:119",
              "text": "@notice Return the share price from a yearn vault based on the type\n @return pricePerShare share price of the vault\n @dev returns 0 if the share price cannot be fetched"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getPricePerShare",
            "nameLocation": "5891:17:119",
            "parameters": {
              "id": 51155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5908:2:119"
            },
            "returnParameters": {
              "id": 51158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51157,
                  "mutability": "mutable",
                  "name": "pricePerShare",
                  "nameLocation": "5941:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 51194,
                  "src": "5933:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5933:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5932:23:119"
            },
            "scope": 51231,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 51230,
            "nodeType": "FunctionDefinition",
            "src": "6511:439:119",
            "nodes": [],
            "body": {
              "id": 51229,
              "nodeType": "Block",
              "src": "6572:378:119",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 51210,
                        "nodeType": "Block",
                        "src": "6651:42:119",
                        "statements": [
                          {
                            "expression": {
                              "id": 51208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 51206,
                                "name": "isV1Vault_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51198,
                                "src": "6665:10:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 51207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6678:4:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "6665:17:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 51209,
                            "nodeType": "ExpressionStatement",
                            "src": "6665:17:119"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 51211,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 51205,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 51204,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 51211,
                            "src": "6624:7:119",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 51203,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6624:7:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "6623:27:119"
                      },
                      "src": "6615:78:119"
                    },
                    {
                      "block": {
                        "id": 51226,
                        "nodeType": "Block",
                        "src": "6700:244:119",
                        "statements": [
                          {
                            "clauses": [
                              {
                                "block": {
                                  "id": 51218,
                                  "nodeType": "Block",
                                  "src": "6776:69:119",
                                  "statements": []
                                },
                                "errorName": "",
                                "id": 51219,
                                "nodeType": "TryCatchClause",
                                "parameters": {
                                  "id": 51217,
                                  "nodeType": "ParameterList",
                                  "parameters": [
                                    {
                                      "constant": false,
                                      "id": 51216,
                                      "mutability": "mutable",
                                      "name": "",
                                      "nameLocation": "-1:-1:-1",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 51219,
                                      "src": "6749:7:119",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "typeName": {
                                        "id": 51215,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6749:7:119",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "src": "6748:27:119"
                                },
                                "src": "6740:105:119"
                              },
                              {
                                "block": {
                                  "id": 51223,
                                  "nodeType": "Block",
                                  "src": "6852:82:119",
                                  "statements": [
                                    {
                                      "errorCall": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 51220,
                                          "name": "YearnOracle__isV1Vault_invalidYearnVault",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 50983,
                                          "src": "6877:40:119",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                            "typeString": "function () pure"
                                          }
                                        },
                                        "id": 51221,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6877:42:119",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 51222,
                                      "nodeType": "RevertStatement",
                                      "src": "6870:49:119"
                                    }
                                  ]
                                },
                                "errorName": "",
                                "id": 51224,
                                "nodeType": "TryCatchClause",
                                "src": "6846:88:119"
                              }
                            ],
                            "externalCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 51212,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50964,
                                  "src": "6718:5:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IYVault_$129866",
                                    "typeString": "contract IYVault"
                                  }
                                },
                                "id": 51213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6724:13:119",
                                "memberName": "pricePerShare",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 129835,
                                "src": "6718:19:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 51214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6718:21:119",
                              "tryCall": true,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 51225,
                            "nodeType": "TryStatement",
                            "src": "6714:220:119"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 51227,
                      "nodeType": "TryCatchClause",
                      "src": "6694:250:119"
                    }
                  ],
                  "externalCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 51200,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50964,
                        "src": "6586:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IYVault_$129866",
                          "typeString": "contract IYVault"
                        }
                      },
                      "id": 51201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6592:20:119",
                      "memberName": "getPricePerFullShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 129830,
                      "src": "6586:26:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 51202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6586:28:119",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51228,
                  "nodeType": "TryStatement",
                  "src": "6582:362:119"
                }
              ]
            },
            "documentation": {
              "id": 51195,
              "nodeType": "StructuredDocumentation",
              "src": "6320:186:119",
              "text": "@notice Return if the Vault is a V1 Vault or not\n @return isV1Vault_ returns `true` if the vault is a V1 vault\n @dev Reverts if `yearnVault_` is not a valid yearn vault"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isV1Vault",
            "nameLocation": "6520:10:119",
            "parameters": {
              "id": 51196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6530:2:119"
            },
            "returnParameters": {
              "id": 51199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51198,
                  "mutability": "mutable",
                  "name": "isV1Vault_",
                  "nameLocation": "6560:10:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 51230,
                  "src": "6555:15:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51197,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6555:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6554:17:119"
            },
            "scope": 51231,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50943,
              "name": "IOracle",
              "nameLocations": [
                "727:7:119"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50237,
              "src": "727:7:119"
            },
            "id": 50944,
            "nodeType": "InheritanceSpecifier",
            "src": "727:7:119"
          },
          {
            "baseName": {
              "id": 50945,
              "name": "AccessControlUpgradeable",
              "nameLocations": [
                "736:24:119"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29665,
              "src": "736:24:119"
            },
            "id": 50946,
            "nodeType": "InheritanceSpecifier",
            "src": "736:24:119"
          },
          {
            "baseName": {
              "id": 50947,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "762:15:119"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30432,
              "src": "762:15:119"
            },
            "id": 50948,
            "nodeType": "InheritanceSpecifier",
            "src": "762:15:119"
          }
        ],
        "canonicalName": "YearnOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 50942,
          "nodeType": "StructuredDocumentation",
          "src": "644:59:119",
          "text": "@title YearnOracle\n @notice Oracle for yearn vaults"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          51231,
          30432,
          30117,
          29748,
          29665,
          31037,
          31049,
          29738,
          30758,
          30296,
          50237
        ],
        "name": "YearnOracle",
        "nameLocation": "712:11:119",
        "scope": 51232,
        "usedErrors": [
          50979,
          50981,
          50983
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 119
}